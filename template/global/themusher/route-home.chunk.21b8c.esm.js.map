{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///./components/story/commentAdd.js","webpack:///./components/workout/status.js","webpack:///./components/story/add.js","webpack:///./components/story/commentReply.js","webpack:///./components/story/comments.js","webpack:///./components/team/publicFeed.js","webpack:///./components/user/updateSettings.js","webpack:///./components/workout/table.js","webpack:///./components/story/publicFeed.js","webpack:///./components/races/index.js","webpack:///./components/notifications/index.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","SUB_MENU_MARGIN_TOP","subMenuMarginTop","initialState","isLoading","submenu","viewmenu","Home","observer","Component","constructor","props","super","loadTeamInfo","async","loadWorkoutSummary","loadWorkoutPlans","year","currentMonth","Date","getMonth","currentYear","util","getYear","seasonStart","parseInt","workoutPlanStore","workoutStore","userStore","stores","team","currentTeam","id","load","query","seasonYear","seasonMonth","workoutPlans","workoutPlanCurrent","prepareWeekGraphs","updateItem","resetGraphPlanWeekDistanceCurrent","loadDogs","dogStore","addData","setViewMenu","e","menu","target","closest","dataset","this","setState","chooseSubmenu","parentElement","state","appState","getFingerprint","getInfo","getNotifications","Promise","all","loadTeams","teamStore","skipMusherWorkoutSummary","getFeed","getWorkoutSummary","componentDidMount","loadAll","render","stravaActivityStore","garminActivityDetailsStore","workoutPlan","darkmode","viewmode","workouts","teams","tracks","isAdmin","dogs","totalTeams","length","totalDogs","totalTracks","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","currentTeamObject","findTeam","workoutSummary","workoutSummary2019","findWorkoutSummary","findWorkoutSummaryTotal","workoutSummary2020","user","stravaActivities","garminActivityDetails","class","style","href","role","secToHms","format","indexOf","url","onClick","data-menu","key","distancekm","currentSeason","prevSeason","callback","showHeader","strava","map","act","activity","garmin","fields","total","name","workout","StoryAdd","commentStory","inputRefObject","story","storyStore","comment","response","status","resizeTextarea","inputRef","displayNameShort","firstname","ucfirst","lastname","email","userImage","image","images","undefined","s3SmallLink","for","type","placeholder","onInput","linkState","onKeyUp","value","ref","WorkoutStatus","language","MONTHS","getMonths","months","monthRange","lastPlanMonth","month","planMonth","sumWorkoutPlanMonth","percCompleted","findWorkoutSummaryMonth","height","aria-valuenow","aria-valuemin","aria-valuemax","title","body","public","showAddImage","addStory","insert","loadPublicFeed","data","addImages","push","addImage","handleImageErrored","onerror","setTimeout","src","col","offset","c","teamId","checked","data-id","img","onError","removeImage","data-name","object","updateField","StoryCommentReply","commentId","commentReplyStory","showAddComment","showAllComments","showAllReplies","StoryComments","likeComment","likeStoryComment","likeReply","replyId","likeStoryCommentReply","replyComment","focus","toggleComments","toggleReplies","compact","currentUser","max_comments","filteredComments","totalComments","diplayedComments","comments","slice","Math","max","reverse","displayName","hasLikedComment","likes","findIndex","filteredReplises","totalReplies","diplayedReplies","markdown","replaceImages","markdownOpts","getMarkdownOptions","formatDistance","createdDate","locale","reply","hasLikedReply","data-comment","more","displayDistance","distanceKm","TeamPublicFeed","toggleDate","stopPropagation","preventDefault","showDate","likeWorkout","workoutId","addLikeToFeed","addCommentToFeed","console","log","addLikeToComment","addLikeToCommentReply","addCommentToWorkoutComment","addCommentToWorkout","addLikeToWorkout","toggleAddComment","loadTeamsPublicFeed","publicTeamsFeed","feed","findPublicTeam","hasLikedWorkout","totalFollowers","followers","isYourTeam","members","isFollowing","hasRequestedFollow","followRequests","toJS","gpxInfo","svgMap","svg","stroke","svgElevation","date","formatDate","hour12","hour","minute","equipment","findEquipment","elevation","speedAvg","track","dogsLeft","dogsRight","sledWeight","kcalBurnedTotal","kcalMeatGramsTotal","kcalSalmonGramsTotal","kcalFatGramsTotal","duration","idx","ratio","dimensions","width","viewBox","d","s3LargeLink","buttonOnly","toggleSetting","field","settings","updateSetting","hideSettings","forceShow","summaryEmails","infoEmails","partnerEmails","WorkoutTable","withText","week","distance","ascend","plan","seasonMonths","prevSeasonMonths","xTicksAll","weekRange","wo","partSize","floor","xTicks","i","l","m","scope","StoryPublicFeed","likeStory","storyId","loadStoriesPublicFeed","publicFeed","hasLikedStory","line","isString","text","match","RegExp","exec","parsedLanguageText","replace","p1","p2","isObject","s3XXLargeLink","MARKDOWN_OPTIONS","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","Races","raceStore","loadRace","componentWillReceiveProps","nextProps","newsStore","notifications","races","newsList","sort","a","b","startDate","race","today","endDate","signupStartDate","signupEndDate","active","s3MediumLink","ingress","classes","currentClass","profile","main","searchText","Notifications","unread","filter","read"],"mappings":"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","file":"route-home.chunk.21b8c.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport Workout from '../../components/workout';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutTable from '../../components/workout/table';\n// import DogStatus from '../../components/dog/status';\nimport InviteFriend from '../../components/user/invite';\nimport UserUpdate from '../../components/user/updateSettings';\nimport Install from '../../components/install';\nimport Races from '../../components/races';\nimport Notifications from '../../components/notifications';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport Strava from '../../components/strava';\nimport Garmin from '../../components/garmin';\nimport Teams from '../../components/team/teams';\nimport TeamPublicFeed from '../../components/team/publicFeed';\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\nimport Ad from '../../components/ad/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'lastWorkouts',\n\tviewmenu: 'wall',\n};\n\n@observer\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { appState, userStore, workoutStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        await appState.getFingerprint();\n        await userStore.getInfo();\n\t\tawait userStore.getNotifications();\n\t\t// await this.loadFeed();\n\t\tawait this.loadWorkoutSummary();\n\t\t// await this.loadDogs();\n\t\tawait Promise.all([\n\t\t\tthis.loadWorkoutPlans(),\n\t\t\tthis.loadTeams(),\n\t\t]);\n\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tloadTeamInfo = async () => {\n\t\tawait this.loadWorkoutSummary();\n\t\tawait this.loadWorkoutPlans();\n\t\t// await this.loadTeams();\n\t}\n\n\tasync loadTeams(props = this.props) {\n\t\tconst { teamStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true }, addData: ['workoutSummary'] });\n\t}\n\n\tasync loadFeed() {\n\t\tconst { userStore } = this.props.stores;\n        await userStore.getFeed({});\n    }\n\n\tasync loadWorkoutSummary() {\n\t\tconst { userStore, workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\t// await workoutStore.load({ query: { team: currentTeam } });\n        await userStore.getWorkoutSummary({ team: currentTeam });\n    }\n\n\tloadWorkoutPlans = async (props = this.props) => {\n\t\tconst { year } = props;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst seasonStart = parseInt(year || (currentMonth < 6 ? currentYear - 1 : currentYear), 10);\n\t\tconst { workoutPlanStore, workoutStore, userStore } = props.stores;\n\t\tconst { team } = userStore;\n\t\tconst { currentTeam = team.id } = workoutStore;\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t\tseasonMonth: 6,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year });\n\t\t\t}\n\t\t} else {\n\t\t\tworkoutPlanStore.updateItem('workoutPlans', []);\n\t\t\tworkoutPlanStore.updateItem('workoutPlan', {});\n\t\t\tworkoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\t\t}\n\t}\n\n\tloadDogs = async () => {\n\t\tconst { dogStore } = this.props.stores;\n\t\tconst { currentTeam } = dogStore;\n\n\t\tawait dogStore.load({ query: { team: currentTeam }, addData: ['workoutSummary'] });\n\t}\n\n\tsetViewMenu = (e) => {\n\t\tconst menu = e.target.closest('a').dataset.menu;\n\t\tthis.setState({ viewmenu: menu });\n\t}\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n\trender() {\n\t\tconst { isLoading, submenu, viewmenu } = this.state;\n\t\tconst { userStore, dogStore, appState, workoutPlanStore, teamStore, workoutStore,\n\t\t\tstravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n\t\tconst { workoutPlan, workoutPlans } = workoutPlanStore;\n\t\tconst { darkmode, viewmode } = appState;\n\t\tconst {\n\t\t\tworkouts,\n\t\t\tteams, tracks, isAdmin, dogs,\n\t\t} = userStore;\n\t\t// const { dogs } = dogStore;\n\t\t// const dogsInjured = dogStore.findDogsByStatus(2);\n\t\t// const dogsPregnant = dogStore.findDogsByStatus(4);\n\t\t// const dogsMedication = dogStore.findDogsByStatus(8);\n\t\t// const dogsSick = dogStore.findDogsByStatus(9);\n\t\t// const dogsWithStatus = dogStore.findDogsByStatus([2, 4, 8, 9]);\n\t\t// const dogsWithNeeds = dogStore.findDogsWithNeeds();\n\n\t\tconst totalTeams = teams.length;\n\t\tconst totalDogs = dogs.length;\n\t\tconst totalTracks = tracks.length;\n\n\t\tconst { currentTeam, cordovaActiveTrackingParams, isRunning, totalDistance, currentSpeed, totalTime } = workoutStore;\n\n\t\tconst currentTeamObject = userStore.findTeam(currentTeam, true);\n\t\tconst { workoutSummary } = teamStore;\n\t\tconst workoutSummary2019 = (currentTeam ? teamStore.findWorkoutSummary(currentTeam, 2019) : teamStore.findWorkoutSummaryTotal(2019)) || {};\n        const workoutSummary2020 = (currentTeam ? teamStore.findWorkoutSummary(currentTeam, 2020) : teamStore.findWorkoutSummaryTotal(2020)) || {};\n\n\t\tconst { user } = userStore;\n\t\tconst { stravaActivities } = stravaActivityStore;\n\t\tconst { garminActivityDetails } = garminActivityDetailsStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row mb-4 fixed-top' style={`margin-top: ${SUB_MENU_MARGIN_TOP}; background-color: ${darkmode ? '#191d21' : '#f8f9fa'};`}>\n\t\t\t\t\t{isAdmin && <div class={`col text-center subtopmenu`}>\n\t\t\t\t\t\t<a href='/admin' class='text-secondary stretched-link'><nobr><i class='fas fa-user-shield' /> <Text id='home.admin'>Admin</Text></nobr></a>\n\t\t\t\t\t</div>}\n\t\t\t\t\t<div class={`col text-center subtopmenu border-bottom border-primary`}>\n\t\t\t\t\t\t<a href='/' class='text-primary stretched-link'><nobr><i class='fas fa-chart-line' /> <Text id='home.dashboard'>Dashboard</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class={`col text-center subtopmenu`}>\n\t\t\t\t\t\t<a href='/feed' class='text-secondary stretched-link'><nobr><i class='fas fa-rss' /> <Text id='home.feed'>Feed</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class={`col text-center subtopmenu`}>\n\t\t\t\t\t\t<a href='/todo' class='text-secondary stretched-link'><nobr><i class='fas fa-list' /> <Text id='home.todo'>Todo</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(currentSpeed * 3.6, 1)} km/t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(totalDistance / 1000, 2)} km</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t\t{/* {JSON.stringify(cordovaActiveTrackingParams)}\n\t\t\t\t\t\t\t{JSON.stringify(isRunning)} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t{['beta'].indexOf(viewmode) > -1 ? <>\n\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} />\n\t\t\t\t\t<StoryAdd stores={this.props.stores} />\n\n\t\t\t\t\t<small>\n\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t<ul class='nav nav-sm nav-tabs'>\n\t\t\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t\t\t<a class={`nav-link ${viewmenu === 'wall' ? 'active' : ''}`} href='#' onClick={this.setViewMenu} data-menu='wall'><Text id='home.wall'>Veggen</Text></a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t\t\t<a class={`nav-link ${viewmenu === 'workout' ? 'active' : ''}`} href='#' onClick={this.setViewMenu} data-menu='workout'><Text id='home.workouts'>Treninger</Text></a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t\t\t<a class={`nav-link ${viewmenu === 'totals' ? 'active' : ''}`} href='#' onClick={this.setViewMenu} data-menu='totals'><Text id='home.totals'>Totaler</Text></a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</small>\n\t\t\t\t\t</small>\n\t\t\t\t\t{viewmenu === 'wall' && <>\t\t\t\t\n\t\t\t\t\t\t<StoryPublicFeed stores={this.props.stores} />\n\t\t\t\t\t</>}\n\t\t\t\t\t{viewmenu === 'workout' && <>\t\t\t\t\n\t\t\t\t\t\t<TeamPublicFeed stores={this.props.stores} />\n\t\t\t\t\t</>}\n\t\t\t\t\t{viewmenu === 'totals' && <>\t\t\t\t\n\t\t\t\t\t\t<WorkoutTotals stores={this.props.stores} key={`totals-${workoutSummary2020.distancekm}`} currentSeason={workoutSummary2020} prevSeason={workoutSummary2019} />\n\t\t\t\t\t\t<WorkoutStatus stores={this.props.stores} key={`status-${workoutSummary2020.distancekm}`} currentSeason={workoutSummary2020} prevSeason={workoutSummary2019} />\n\t\t\t\t\t</>}\n\t\t\t\t</> : <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadTeamInfo} key={`teams-${currentTeam}`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t{/* {isLoading && <div class='text-center mt-5 mb-5'>\n\t\t\t\t\t\t\t\t<div class='spinner-border text-primary' role='status'>\n\t\t\t\t\t\t\t\t\t<span class='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>} */}\n\n\t\t\t\t\t\t\t{!isLoading && workoutSummary && workoutSummary.length === 0 && (\n\t\t\t\t\t\t\t\t<div class='mb-5 py-3 border-top border-bottom'>\n\t\t\t\t\t\t\t\t\t<div class='text-center'>\n\t\t\t\t\t\t\t\t\t\t<div class='display-4'>\n\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-paw' />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-title'>Velkommen til The Musher.</Text>\n\t\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-body-1'>The Musher er en app som er kontinuerlig under utvikling.\n\t\t\t\t\t\t\t\t\t\t\tAlle ideer/innspill/kommentarer mottas med stor takk på Facebooksiden vår 😃</Text>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-body-2'>Fokus til appen er enkel registrering av hunder, team, treninger og hendelser rundt hundene.\n\t\t\t\t\t\t\t\t\t\t\tNår man har mange hunder så er det ofte vanskelig å holde styr på løpetid, vaksiner, treninger,\n\t\t\t\t\t\t\t\t\t\t\tskader, vetrinærbesøk, chiplister, osv.</Text>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-body-3'>Alle data lagres sentralt i skyen hos AWS (Amazon Web Services) og det vil derfor være mulig å bruke appen fra flere telefoner\n\t\t\t\t\t\t\t\t\t\t\tog datamaskiner samtidig. Dette kan være fint dersom det er flere som trener og følger opp hundene.</Text>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t\t<Text id='home.howto-title'>Slik kommer du i gang:</Text>\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t\t{totalTeams < 1 && <li><a class='btn btn-info mt-3' href='/teams/'><Text id='home.howto-step-1'>Legg inn teamene dine.</Text></a></li>}\n\t\t\t\t\t\t\t\t\t\t{totalDogs < 1 && <li><a class='btn btn-info mt-3' href='/dogs/'><Text id='home.howto-step-2'>Legg inn hundene dine.</Text></a></li>}\n\t\t\t\t\t\t\t\t\t\t{totalTracks < 1 && <li><a class='btn btn-info mt-3' href='/tracks/'><Text id='home.howto-step-3'>Legg inn rundene dine.</Text></a></li>}\n\t\t\t\t\t\t\t\t\t\t<li><a class='btn btn-info mt-3' href='/workouts/'><Text id='home.howto-step-4'>Begynn å registrere treningene.</Text></a></li>\n\t\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<WorkoutGraph stores={this.props.stores} isLoading={isLoading} key={`graph-${workoutPlan.id}-${workoutPlans.length}`} />\n\t\t\t\t\t\t\t{['beta', 'advanced'].indexOf(viewmode) > -1 && <>\n\t\t\t\t\t\t\t\t<WorkoutTable\n\t\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\tkey={`workout-table-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t\t\tshowHeader={false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\t\t\t\t\n\n\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} />\n\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n\t\t\t\t\t\t\t<div class='row'>\n\n\t\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'races' ? 'btn-danger' : 'btn-outline-danger'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='races'\n\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t><i class='fas fa-dog' /> <Text id='home.races'>Løp</Text></button>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'lastWorkouts' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='lastWorkouts'\n\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t><i class='fas fa-running' /> <Text id='home.workouts'>Treninger</Text></button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t><i class='fas fa-equals' /> <Text id='home.totals'>Totaler</Text></button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'workoutplanStatus' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='workoutplanStatus'\n\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t><i class='fas fa-chart-line' /> <Text id='home.status'>Status</Text></button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{submenu === 'races' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<Races stores={this.props.stores} />\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t{submenu === 'lastWorkouts' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<Install />\n\t\t\t\t\t\t\t<InviteFriend stores={this.props.stores} />\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t{submenu === 'totals' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTotals stores={this.props.stores} key={`totals-${workoutSummary2020.distancekm}`} currentSeason={workoutSummary2020} prevSeason={workoutSummary2019} />\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t{submenu === 'workoutplanStatus' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutStatus stores={this.props.stores} key={`status-${workoutSummary2020.distancekm}`} currentSeason={workoutSummary2020} prevSeason={workoutSummary2019} />\n\t\t\t\t\t\t</div>}\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Notifications stores={this.props.stores} />\n\n\t\t\t\t\t{submenu === 'lastWorkouts' && <div class='row'>\n\n\t\t\t\t\t\t{user && user.strava && stravaActivities && stravaActivities.length > 0 && (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2 overflow-auto'\n\t\t\t\t\t\t\t\tstyle='max-height: 30vh;'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<h5><Text id='workout.index.strava-workouts'>Strava workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t\t{stravaActivities && stravaActivities.map(act =>\n\t\t\t\t\t\t\t\t\t<Strava stores={this.props.stores} activity={act} key={`strava-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{user && user.garmin && garminActivityDetails && garminActivityDetails.length > 0 && (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2 overflow-auto'\n\t\t\t\t\t\t\t\tstyle='max-height: 30vh;'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<h5><Text id='workout.index.garmin-workouts'>Garmin workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t\t{garminActivityDetails && garminActivityDetails.map(act =>\n\t\t\t\t\t\t\t\t\t<Garmin stores={this.props.stores} activity={act} key={`garmin-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{workouts && workouts.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4'>\t\t\n\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t<Text id='home.last-workouts' fields={{ total: workouts.length }}>Siste treningsturer - {workouts.length} stk</Text>\n\t\t\t\t\t\t\t\t\t{currentTeamObject && currentTeamObject.name && <div>\n\t\t\t\t\t\t\t\t\t\t<small class='font-weight-lighter'>(<Text id='workout.index.filtered-by'>Filtered by</Text>: {currentTeamObject.name})</small>\n\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{workouts && workouts.map(workout => (\n\t\t\t\t\t\t\t\t<Workout stores={this.props.stores} workout={workout} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t</div>}\n\n\t\t\t\t</>}\n\n\t\t\t\t{/* {!isLoading && <UserUpdate stores={this.props.stores} />} */}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryAdd extends Component {\n    commentStory = async () => {\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n\t\tconst response = await storyStore.commentStory({ id: story.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[story.id]);\n            });\n            callback({ story, response });\n\t\t}\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <Localizer>\n                                    <textarea\n                                        class='form-control rounded rounded-lg'\n                                        type='text'\n                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                        onInput={linkState(this, 'comment')}\n                                        onKeyUp={mu.resizeTextarea}\n                                        style='height: 2.3em;'\n                                        value={comment}\n                                        ref={inputRef}\n                                    />\n                                </Localizer>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-primary mb-2'\n                                    onClick={this.commentStory}\n                                ><Text id='comments.add-comment'>Send</Text></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutStatus extends Component {\n    render() {\n\t\tconst { currentSeason, prevSeason } = this.props;\n        const { userStore, workoutPlanStore, teamStore } = this.props.stores;\n        const { user } = userStore;\n        const { language = 'no' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n\t\tconst { team } = teamStore;\n\n        const { year } = this.props;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = year || util.getYear();\n\t\tconst seasonStart = parseInt(currentMonth < 6 ? currentYear - 1 : currentYear, 10);\n        const months = util.monthRange(`${seasonStart}-06-01`, `${seasonStart + 1}-05-31`);\n        let lastPlanMonth;\n\n        return (\n            <div class='container-fluid mb-2'>\n                <div class='row mt-2'>\n                    <div class='col-12'>\n                        <h5>\n                            <Text id='workout.totals.title'>Treningsplanstatus</Text>\n                        </h5>\n                    </div>\n                </div>\n                <div class='row mt-2 border-bottom pb-2'>\n                    {months && months.map((month) => {\n                        if (month.year > currentYear || (month.year === currentYear && month.month >= currentMonth)) {\n                            return '';\n                        }\n                        const planMonth = workoutPlanStore.sumWorkoutPlanMonth(month.year, month.month + 1);\n                        if (!planMonth) {\n                            return '';\n                        }\n                        lastPlanMonth = planMonth;\n                        const summaryMonth = userStore.findWorkoutSummaryMonth(month.year, month.month + 1);\n                        const percCompleted = summaryMonth / planMonth * 100;\n                        const height = percCompleted > 100 ? 100 : util.format(percCompleted, 0);\n                        return (\n                            <div class='col-3 text-center'>\n                                {/* <div class='w-100 mt-1'>\n                                    <small class='text-muted'>\n                                        {planMonth}km\n                                    </small>\n                                    <small class='text-info'>\n                                        {summaryMonth}km\n                                    </small>\n                                </div> */}\n                                <div class='px-auto w-100 clearfix'>\n                                    <div class={`progress ${style['progress-bar-vertical']}`}\n                                        style={' margin-left: calc(50% - 20px);'}\n                                    >\n                                        <div class='progress-bar progress-bar-striped bg-success' role='progressbar'\n                                            style={`height: ${height}%; width: 40px;`}\n                                            aria-valuenow={height} aria-valuemin='0' aria-valuemax='100'\n                                        >\n                                            {util.format(percCompleted, 0)}%\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class='w-100 mt-1'>\n                                    {MONTHS[month.month]} {month.year}\n                                </div>\n                            </div>\n                        );\n                    })}\n                    {!lastPlanMonth && <div class='col-12 text-center'>\n                        <h3>\n                            <Text id='workout.plan.no-workout-plan-found' fields={{ name: team.name }}>Ingen treningsplaner funnet for team {team.name}.</Text>\n                        </h3>\n                    </div>}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default WorkoutStatus;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n\nconst initialState = {\n\tstory: {\n        title: '',\n        body: '',\n        images: [],\n        public: false,\n    },\n    showAddImage: false,\n};\n\n@observer\nclass StoryAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    addStory = async () => {\n        const { callback = () => {} } = this.props;\n        const { story = {} } = this.state;\n\t\tconst { storyStore } = this.props.stores;\n\t\tconst response = await storyStore.insert({\n            title: story.title,\n            body: story.body,\n            images: story.images,\n            public: story.public ? 1 : 0,\n            team: story.team,\n        });\n\t\tif (response && response.status === 201) {\n            await storyStore.loadPublicFeed();\n            callback(response.data);\n            this.setState({\n                story: {\n                    title: '',\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(this.inputRef['newStoryBody']);\n            });\n\t\t}\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { story } = this.state;\n        story.images.push(...value);\n        this.setState({ story });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { col = 12, offset = 0 } = this.props;\n        const { story, showAddImage } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100'>\n                <div class='row bg-light'>\n\n                    <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 rounded rounded-lg pt-3 pb-1 bg-${darkmode ? 'black' : 'white'} shadow-sm mb-3 mt-0`}>\n                        <div class='d-flex mb-0 position-relative w-100'>\n                            <div \n                                class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                            >\n                                {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                            </div>\n                            <div class='col pl-3' style='line-height: 1.2em;'>\n\n                                <div class='d-flex bd-highlight'>\n                                    <div class='p-0 w-100 bd-highlight'>\n                                        <label class='sr-only' for='inlineFormInput'><Text id='story.body'>Story</Text></label>\n                                        <Localizer>\n                                            <textarea\n                                                class='form-control rounded'\n                                                type='text'\n                                                placeholder={<Text id='story.write-body'>Hva tenker du på?..</Text>}\n                                                onInput={linkState(this, 'story.body')}\n                                                onKeyUp={mu.resizeTextarea}\n                                                style='height: 2.3em;'\n                                                value={story.body}\n                                                ref={c => this.inputRef['newStoryBody'] = c}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                        <button type='button' class='btn btn-primary mb-2'\n                                            onClick={this.addStory}\n                                        ><i class='fas fa-paper-plane' /></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class='row'>\n                                <div class='col-4 text-center'>\n                                    <div class='form-group'>\n                                        <small>\n                                            <select\n                                                class='custom-select custom-select-sm'\n                                                id='team'\n                                                onInput={linkState(this, 'story.team')}\n                                            >\n                                                {user.teams && user.teams.map((teamId) => {\n                                                    const team = userStore.findTeam(teamId, true);\n                                                    if (team && team.public) {\n                                                        return (<option value={team.id}>{team.name}</option>);\n                                                    }\n                                                    return '';\n                                                })}\n                                            </select>\n                                        </small>\n                                    </div>\n                                </div>\n                                <div class='col-4 text-center'>\n                                    <div class='form-group'>\n                                        <div class='custom-control custom-control-sm custom-switch text-overflow'>\n                                            <small>\n                                                <input\n                                                    type='checkbox'\n                                                    class='custom-control-input'\n                                                    id='public'\n                                                    onInput={linkState(this, 'story.public')}\n                                                    checked={story.public == 1}\n                                                />\n                                                <label class='custom-control-label' for='public'><Text id='story.public'>Is public</Text></label>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class='col-4 text-center'>\n                                    <small>\n                                        <button type='button' class={`btn btn-sm`}\n                                            data-id={story.id}\n                                            onClick={this.addImage}\n                                        >\n                                            <i class={`text-success fas fa-image`} /> <Text id='store.add-image'>Add image</Text>\n                                        </button>\n                                    </small>\n                                </div>\n                                <div class='col-12 text-center'>\n                                    {showAddImage && <>\n                                        <div class='container-fluid'>\n                                            <div class='row'>\n                                                {story.images && story.images.map(img => (\n                                                    <div class='col-3 p-1'>\n                                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                        <button class='btn btn-sm btn-link'\n                                                            onClick={this.removeImage}\n                                                            data-name={img.name}\n                                                        ><i class='fas fa-trash' /> Del</button>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                        <Images object={story} updateField={this.addImages} />\n                                    </>}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryCommentReply extends Component {\n    commentStory = async () => {\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n\t\tconst response = await storyStore.commentReplyStory({ id: story.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ story, response, commentId });\n\t\t}\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <Localizer>\n                                    <textarea\n                                        class='form-control form-control-sm rounded rounded-lg'\n                                        type='text'\n                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                        onInput={linkState(this, 'comment')}\n                                        onKeyUp={mu.resizeTextarea}\n                                        style='height: 2.3em;'\n                                        value={comment}\n                                        ref={inputRef}\n                                    />\n                                </Localizer>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-sm btn-primary mb-2'\n                                    onClick={this.commentStory}\n                                ><Text id='comments.add-comment'>Send</Text></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport StoryReplyComment from '../../components/story/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass StoryComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    likeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\t\tconst response = await storyStore.likeStoryComment({ id: story.id, commentId });\n\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', story, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n\n        const replyId = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const commentId = e.target.parentElement.dataset.comment || e.target.dataset.comment;\n\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\t\tconst response = await storyStore.likeStoryCommentReply({ id: story.id, replyId, commentId });\n\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', story, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies } = this.state;\n\t\tconst { story, callback = () => {}, compact = false } = this.props;\n        const { userStore } = this.props.stores;\n        const { user: currentUser, language = 'no' } = userStore;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (story.comments) {\n            totalComments = story.comments.length;\n            if (showAllComments) {\n                filteredComments = story.comments;\n            } else {\n                // filteredComments = story.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = story.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {story && filteredComments && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg'>\n                                        <span style='font-size: 0.95em;'>\n                                            <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                            <Markdown markdown={mu.replaceImages(comment.comment, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                        </span>\n                                    </div>\n                                    <small>\n                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.likeComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.like'>Lik</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && filteredReplises && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div \n                                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg'>\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                                            <Markdown markdown={mu.replaceImages(reply.comment, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                        >\n                                                            <Text id='comments.like'>Lik</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <StoryReplyComment stores={this.props.stores} story={story}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default StoryComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport ImageSlider from '../imageSlider';\nimport WorkoutComments from '../workout/comments';\nimport WorkoutAddComment from '../workout/commentAdd';\n\nimport PublicTeam from '../team/public';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distanceKm) {\n\tif (distanceKm < 5) {\n\t\treturn util.format(distanceKm, 2);\n\t}\n\tif (distanceKm < 10) {\n\t\treturn util.format(distanceKm, 1);\n\t}\n\treturn util.format(distanceKm, 1);\n}\n\nconst initialState = {\n\tshowAddComment: {},\n};\n\n@observer\nclass TeamPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\n\tlikeWorkout = async (e) => {\n        const workoutId = parseInt(e.target.closest('button').dataset.id, 10);\n\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst response = await workoutStore.likeWorkout({ id: workoutId });\n        if (response.status === 200) {\n            this.addLikeToFeed(workoutId, response.data);\n\t\t}\n\t}\n\n    addCommentToFeed = ({ type, workout, response, commentId, replyId }) => {\n        console.log('addCommentToFeed', { workout, response, commentId });\n        const { teamStore } = this.props.stores;\n        switch (type) {\n            case 'likeComment':\n                teamStore.addLikeToComment({ id: workout.id, data: response.data, commentId });\n                break;\n            case 'likeReply':\n                teamStore.addLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                break;\n        \n            default:\n                if (commentId) {\n                    teamStore.addCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                } else {\n                    teamStore.addCommentToWorkout({ id: workout.id, data: response.data });\n                }\n                break;\n        }\n    }\n\n    addLikeToFeed = (id, data) => {\n        const { teamStore } = this.props.stores;\n        teamStore.addLikeToWorkout({ id, data });\n    }\n\n\ttoggleAddComment = (e) => {\n\t\tconst workoutId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[workoutId]) {\n            delete showAddComment[workoutId];\n        } else {\n            showAddComment[workoutId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[workoutId]) {\n\t\t\t\tthis.inputRef[workoutId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    async loadTeamsPublicFeed(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n\t\tawait teamStore.loadPublicFeed();\n\t}\n\n    async loadAll() {\n\t\tawait this.loadTeamsPublicFeed();\n    }\n\n\tcomponentDidMount() {\n        this.loadAll();\n\t}\n\n    render() {\n        const { showAddComment, showDate } = this.state;\n        const { teamStore, userStore, appState } = this.props.stores;\n        const { user } = userStore;\n        const { language = 'no' } = user;\n        const { publicTeamsFeed } = teamStore;\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100'>\n                {publicTeamsFeed && publicTeamsFeed.map((feed) => {\n                    const team = teamStore.findPublicTeam(feed.team) || {};\n                    let image;\n                    if (team.image && team.image.s3SmallLink) {\n                        image = team.image;\n                    } else if (team.images && team.images[0] && team.images[0].s3SmallLink) {\n                        image = team.images[0];\n                    }\n                    const { likes, comments } = feed;\n                    const hasLikedWorkout = feed.likes && feed.likes.findIndex(e => e.user === user.id) > -1;\n                    const totalFollowers = team && team.followers ? team.followers.length : 0;\n\n                    const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n                    const isFollowing = team && team.followers && team.followers.indexOf(user.id) > -1;\n                    const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n                    const images = toJS(feed.images);\n                    if (feed.gpxInfo && feed.gpxInfo.svgMap) {\n                        images.push({\n                            svg: feed.gpxInfo.svgMap,\n                            stroke: '#0275d8',\n                        });\n                    }\n                    if (feed.gpxInfo && feed.gpxInfo.svgElevation) {\n                        images.push({\n                            svg: feed.gpxInfo.svgElevation,\n                            stroke: '#5cb85c',\n                        });\n                    }\n\n                    return (<>\n                        <div class='row pb-4 bg-light'>\n                            <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\n                                <div class='d-flex'>\n                                    <div class={`text-center border rounded-circle imageRounded imageRoundedSmall`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                        {!image && <i class='fas fa-users text-muted mt-2' style='font-size: 20px;' />}\n                                    </div>\n                                    <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                                        <h5 class='mb-1' style='line-height: 1.0em;'>{team.name}</h5>\n                                        <div>\n                                            {feed.date && <small class='text-muted' onClick={this.toggleDate}>\n                                                {showDate ? util.formatDate(feed.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(feed.date, new Date(), { locale: 'no-NB' })}\n                                            </small>}\n                                            {feed.public === 1 ? <>\n                                                <small class='ml-2 text-muted'>\n                                                    <i class='fas fa-globe-europe' />\n                                                </small>\n                                            </> : <>\n                                                <small class='ml-2 text-muted'>\n                                                    <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                                </small>\n                                            </>}\n                                            <small class='text-muted'>\n                                                {feed.equipment > 0 && <><i class='fas fa-tools' /> {userStore.findEquipment(feed.equipment) || feed.equipment}</>}\n                                                {feed.distanceKm > 0 && <><i class='fas fa-road ml-2' /> {displayDistance(feed.distanceKm)}km</>}\n                                                {feed.elevation > 0 && <><i class='fas fa-mountain ml-2' /> {util.format(feed.elevation, 0)}m</>}\n                                                {feed.speedAvg > 0 && <><i class='fas fa-tachometer-alt ml-2' /> {util.format(feed.speedAvg, 1)}km/t</>}\n                                                {feed.dogs > 0 && <><i class='fas fa-dog ml-2' /> {feed.dogs.length}</>}\n                                                {feed.track > 0 && <><i class={`fas fa-map-marked text-${feed.track > 0 ? 'success' : 'danger'} ml-2`} /></>}\n                                                {feed.dogsLeft > 0 && <><i class={`fas fa-crosshairs text-${feed.dogsLeft && feed.dogsRight ? 'success' : 'danger'} ml-2`} /></>}\n                                                {feed.sledWeight > 0 && <>\n                                                    <i class='fas fa-sleigh ml-2' /> {util.format(feed.sledWeight, 0)} kg\n                                                </>}\n                                                {feed.kcalBurnedTotal && <><i class='fas fa-balance-scale' /> {util.format(feed.kcalBurnedTotal)} kcal</>}\n                                                {feed.kcalMeatGramsTotal && <><i class='fas fa-drumstick-bite ml-2' /> {util.format(feed.kcalMeatGramsTotal / 1000, 1)} kg</>}\n                                                {feed.kcalSalmonGramsTotal && <><i class='fas fa-fish ml-2' /> {util.format(feed.kcalSalmonGramsTotal / 1000, 1)} kg</>}\n                                                {feed.kcalFatGramsTotal && <><i class='fas fa-piggy-bank ml-2' /> {util.format(feed.kcalFatGramsTotal / 1000, 1)} kg</>}\n                                            </small>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='row mt-2'>\n                                    <div class='clearfix col-12 font-weight-bold'>\n                                        <Markdown markdown={mu.replaceImages(feed.name, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </div>\n                                    <div class='clearfix col-12'>\n                                        <Markdown markdown={mu.replaceImages(feed.comment, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </div>\n                                </div>\n\n                                <div class='row mt-1'>\n                                    {feed.distanceKm > 0 && <div class='col'>\n                                        <div>\n                                            <small><Text id='workout.calendar.distance'>Distanse</Text></small>\n                                        </div>\n                                        <div class='text-overflow' style='font-size: 1.4em;'>\n                                            <i class='fas fa-road' /> {displayDistance(feed.distanceKm)}km\n                                        </div>\n                                    </div>}\n                                    {feed.elevation > 0 && <div class='col'>\n                                        <div>\n                                            <small><Text id='workout.calendar.ascend'>Høydemeter</Text></small>\n                                        </div>\n                                        <div class='text-overflow' style='font-size: 1.4em;'>\n                                            <i class='fas fa-mountain' /> {util.format(feed.elevation, 0)}m\n                                        </div>\n                                    </div>}\n                                    {feed.duration > 0 && <div class='col'>\n                                        <div>\n                                            <small><Text id='workout.calendar.duration'>Varighet</Text></small>\n                                        </div>\n                                        <div class='text-overflow' style='font-size: 1.4em;'>\n                                            <i class='fas fa-clock' /> {util.secToHms(feed.duration)}\n                                        </div>\n                                    </div>}\n                                </div>\n\n                                {/* <div class='row'>\n                                    <div class='row mb-3'>\n                                        {feed.gpxInfo && feed.gpxInfo.svgMap && <>\n                                            <div class='col-6 mt-auto text-center overflow-hidden'>\n                                                <svg viewBox='0 0 300 300' style='width: 150px; height: 150px;'>\n                                                    <path d={`${feed.gpxInfo.svgMap}`} style='fill: none; stroke: #0275d8; stroke-width: 5; opacity: 0.5;' />\n                                                </svg>\n                                                <small class='text-muted'>Track</small>\n                                            </div>\n                                        </>}\n                                        {feed.gpxInfo && feed.gpxInfo.svgElevation && <>\n                                            <div class='col-6 mt-auto text-center overflow-hidden'>\n                                                <svg viewBox='0 0 300 200' style='width: 150px; height: 100px;'>\n                                                    <path d={`${feed.gpxInfo.svgElevation}`} style='fill: none; stroke: #5cb85c; stroke-width: 5; opacity: 0.5;' />\n                                                </svg>\n                                                <small class='text-muted'>Elevation</small>\n                                            </div>\n                                        </>}\n                                    </div>\n                                </div> */}\n\n                                <div class='row mt-1'>\n                                    <div class='mx-0 px-0 clearfix row'>\n                                        {images && images.map((img, idx) => {\n                                            const width_first = 'col-12';\n                                            const width_second = 'col';\n\n                                            let ratio = 1;\n                                            if (img.dimensions) {\n                                                const { height, width } = img.dimensions;\n                                                ratio = height / width;\n                                            }\n                                            if (img.svg) {\n                                                return (<>\n                                                    <div class={`px-0 ${width_second} mt-auto`}>\n                                                        <svg viewBox='0 0 300 300' style='width: 150px; height: 150px;'>\n                                                            <path d={`${img.svg}`} style={`fill: none; stroke: ${img.stroke || '#0275d8'}; stroke-width: 5; opacity: 0.5;`} />\n                                                        </svg>\n                                                    </div>\n                                                </>);\n                                            }\n                                            return (<>\n                                                <div class={`px-0 ${idx === 0 ? width_first : width_second} overflow-hidden py-auto`} style={`max-height: 50vh;`}>\n                                                    <img class={`img-fluid ${idx > 0 ? 'border border-2' : ''}`} style='min-width: 100px;' src={img.s3LargeLink} />\n                                                </div>\n                                            </>);\n                                        })}\n                                    </div>\n                                </div>\n\n                                <div class='mt-2'>\n                                    {likes && likes.length > 0 && <small class='bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                        <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                                    </small>}\n                                    {comments && comments.length > 0 && <small class='float-right bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                        <i class='fas fa-comment text-primary' /> {comments.length}\n                                    </small>}\n                                </div>\n\n                                {!isYourTeam && !isFollowing && !hasRequestedFollow && <div class='clearfix mb-2'>\n                                    <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} />\n                                </div>}\n\n                                <div>\n                                    <div class='row'>\n                                        <div class='col-6 text-center'>\n                                            <button type='button' class={`btn btn-sm btn-outline-${hasLikedWorkout ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedWorkout ? 'text-primary' : ''}`}\n                                                data-id={feed.id}\n                                                onClick={this.likeWorkout}\n                                                // disabled={hasLikedWorkout}\n                                            >\n                                                <i class={`${hasLikedWorkout ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                                            </button>\n                                        </div>\n                                        <div class='col-6 text-center'>\n                                            <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block'\n                                                data-id={feed.id}\n                                                onClick={this.toggleAddComment}\n                                            >\n                                                <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='mt-2'>\n                                    {showAddComment[feed.id] && <WorkoutAddComment\n                                        stores={this.props.stores}\n                                        workout={feed}\n                                        inputRef={c => this.inputRef[feed.id] = c}\n                                        col='10'\n                                        offset='2'\n                                        callback={this.addCommentToFeed}\n                                    />}\n                                    <WorkoutComments\n                                        stores={this.props.stores}\n                                        workout={feed}\n                                        col='10'\n                                        offset='2'\n                                        compact={false}\n                                        callback={this.addCommentToFeed}\n                                    />\n                                </div>\n                            </div>\n\n                        </div>\n                    </>);\n                })}\n            </div>\n        );\n    }\n}\n\nexport default TeamPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\n@observer\nclass UserSettings extends Component {\n    toggleSetting= async (field) => {\n        const { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n        await userStore.updateSetting({ [`settings.${field}`]: settings[field] === 1 ? 0 : 1 });\n    }\n\n    hideSettings = async () => {\n        const { userStore } = this.props.stores;\n        await userStore.updateSetting({ 'settings.hideSettings': 1 });\n        this.setState({\n            hideSettings: true,\n        });\n    }\n\n    render() {\n        const { hideSettings } = this.state;\n\t\tconst { userStore } = this.props.stores;\n        const { forceShow } = this.props;\n        const { user } = userStore;\n        const { settings = {} } = user;\n        if (hideSettings || settings.hideSettings) {\n            return '';\n        }\n        if (!forceShow && settings.summaryEmails && settings.infoEmails && settings.partnerEmails) {\n            return '';\n        }\n        return (\n           <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-4 mb-4 pt-4 pb-4 border-bottom border-top'>\n                <h5><Text id='users.settings'>Brukerinnstillinger</Text></h5>\n\n                {!settings.summaryEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-summary-email'>Oppsummeringer</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsSummaryEmails' onInput={() => this.toggleSetting('summaryEmails')} checked={settings.summaryEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsSummaryEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-summary-email'>Motta oppsummeringer via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.infoEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-info-email'>Info</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsInfoEmails' onInput={() => this.toggleSetting('infoEmails')} checked={settings.infoEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsInfoEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-info-email'>Motta info via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.partnerEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-partner-email'>Partners</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsPartnerEmails' onInput={() => this.toggleSetting('partnerEmails')} checked={settings.partnerEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsPartnerEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-partner-email'>Motta tilbud fra våre partnere via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted'>\n                        <small>\n                            <a href='/users'>\n                                <i class='fas fa-sliders-h' /> <Text id='users.settings-text-info'>Innstillingene finner du inne på profilen din.</Text>\n                            </a>\n                        </small>\n                    </div>\n                </div>\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted text-right'>\n                        <small>\n                            <button type='button' class='btn btn-sm btn-link mb-2' onClick={this.hideSettings}>\n                                <i class='fas fa-eye-slash' /> <Text id='users.hide-settings'>Skjul innstillingene</Text>\n                            </button>\n                        </small>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserSettings;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass WorkoutTable extends Component {\n    render() {\n        const { userStore } = this.props.stores;\n        const { isLoading, year, month, showHeader = true } = this.props;\n        const {\n            user,\n\t\t} = userStore;\n        const { language = 'no' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n        const currentMonth = month || new Date().getMonth() + 1;\n\t\tconst currentYear = year || util.getYear();\n\t\tconst seasonStart = parseInt(currentMonth < 6 ? currentYear - 1 : currentYear, 10);\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonMonths = util.monthRange(`${seasonStart}-06-01`, `${seasonStart + 1}-05-31`);\n        const prevSeasonMonths = util.monthRange(`${seasonStart - 1}-06-01`, `${seasonStart}-05-31`);\n        const seasonWeeks = util.weekRange(`${seasonStart}-06-01`, `${seasonStart + 1}-05-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = xTicksAll.length % 6;\n        const partSize = Math.floor(xTicksAll.length / parts);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += partSize) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        return (\n            <>\n                {showHeader && <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5>}\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <small class='mb-4'><small>\n                        <table class='table table-sm font-weigth-lighter border-bottom'>\n                            <thead>\n                                <tr>\n                                    <th style='padding: .15rem;'><Text id='workout.graph.season'>Sesong</Text></th>\n                                    {seasonMonths.map(m => (\n                                        <th class='text-right' style='padding: .15rem;'><a href={`/workouts/month/${m.month}/${m.year}`}>{MONTHS[m.month - 1]}</a></th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart - 1} - {seasonStart}</th>\n                                    {prevSeasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    {/* <nobr>{summaryMonth.distance}</nobr><br /> */}\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart} - {seasonStart + 1}</th>\n                                    {seasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </small></small>\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WorkoutTable;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport ImageSlider from '../imageSlider';\nimport StoryComments from './comments';\nimport StoryAddComment from './commentAdd';\n\nimport PublicTeam from '../team/public';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n};\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeStory = async (e) => {\n        const storyId = parseInt(e.target.closest('button').dataset.id, 10);\n\n\t\tconst { storyStore } = this.props.stores;\n\t\tconst response = await storyStore.likeStory({ id: storyId });\n        if (response.status === 200) {\n            // this.addLikeToFeed(storyId, response.data);\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[storyId]) {\n            delete showAddComment[storyId];\n        } else {\n            showAddComment[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[storyId]) {\n\t\t\t\tthis.inputRef[storyId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    async loadStoriesPublicFeed(props = this.props) {\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed();\n\t}\n\n\tcomponentDidMount() {\n        this.loadStoriesPublicFeed();\n\t}\n\n    render() {\n        const { showAddComment, showDate } = this.state;\n        const { userStore, storyStore, appState } = this.props.stores;\n        const { user } = userStore;\n        const { publicFeed } = storyStore;\n\t\tconst { language = 'no' } = user;\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100'>\n                {publicFeed && publicFeed.map((story) => {\n                    const team = storyStore.findPublicTeam(story.team) || {};\n                    let image;\n                    if (team.image && team.image.s3SmallLink) {\n                        image = team.image;\n                    } else if (team.images && team.images[0] && team.images[0].s3SmallLink) {\n                        image = team.images[0];\n                    }\n                    const { likes, comments } = story;\n                    const hasLikedStory = story.likes && story.likes.findIndex(e => e.user === user.id) > -1;\n                    const totalFollowers = team && team.followers ? team.followers.length : 0;\n\n                    const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n                    const isFollowing = team && team.followers && team.followers.indexOf(user.id) > -1;\n                    const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n                    return (<>\n                        <div class='row pb-4 bg-light'>\n                            <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\n                                <div class='d-flex'>\n                                    <div class={`text-center border rounded-circle imageRounded imageRoundedSmall`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                        {!image && <i class='fas fa-users text-muted mt-2' style='font-size: 20px;' />}\n                                    </div>\n                                    <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                                        <h5 class='mb-1' style='line-height: 1.0em;'>{team.name}</h5>\n                                        <div class='mb-2'>\n                                            {story.date && <small class='text-muted' onClick={this.toggleDate}>\n                                                {showDate ? util.formatDate(story.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(story.date, new Date(), { locale: 'no-NB' })}\n                                            </small>}\n                                            {story.public === 1 ? <>\n                                                <small class='ml-2 text-muted'>\n                                                    <i class='fas fa-globe-europe' />\n                                                </small>\n                                            </> : <>\n                                                <small class='ml-2 text-muted'>\n                                                    <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                                </small>\n                                            </>}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class='row mt-2'>\n                                    <div class='clearfix col-12'>\n                                        <Markdown markdown={mu.replaceImages(story.body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </div>\n                                </div>\n                                <div class='row'>\n                                    <div class='mx-0 px-0 clearfix row'>\n                                        {story.images && story.images.map((img, idx) => {\n                                            const width_first = 'col-12';\n                                            const width_second = 'col';\n                                            return (<>\n                                                <div class={`px-0 ${idx === 0 ? width_first : width_second} overflow-hidden`} style={`max-height: 60vh;`}>\n                                                    <img class={`img-fluid ${idx > 0 ? 'border border-2' : ''}`} style='min-width: 100px;' src={img.s3LargeLink} />                                        \n                                                </div>\n                                            </>);\n                                        })}\n                                    </div>\n                                </div>\n                                <div class='mt-2'>\n                                    {likes && likes.length > 0 && <small class='bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                        <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                                    </small>}\n                                    {comments && comments.length > 0 && <small class='float-right bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                        <i class='fas fa-comment text-primary' /> {comments.length}\n                                    </small>}\n                                </div>\n\n                                {!isYourTeam && !isFollowing && !hasRequestedFollow && <div class='clearfix mb-2'>\n                                    <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} />\n                                </div>}\n\n                                <div>\n                                    <div class='row'>\n                                        <div class='col-6 text-center'>\n                                            <button type='button' class={`btn btn-sm btn-outline-${hasLikedStory ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedStory ? 'text-primary' : ''}`}\n                                                data-id={story.id}\n                                                onClick={this.likeStory}\n                                                // disabled={hasLikedStory}\n                                            >\n                                                <i class={`${hasLikedStory ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                                            </button>\n                                        </div>\n                                        <div class='col-6 text-center'>\n                                            <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block'\n                                                data-id={story.id}\n                                                onClick={this.toggleAddComment}\n                                            >\n                                                <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='mt-2'>\n                                    {showAddComment[story.id] && <StoryAddComment\n                                        stores={this.props.stores}\n                                        story={story}\n                                        inputRef={c => this.inputRef[story.id] = c}\n                                        inputRefObject={this.inputRef}\n                                        col='10'\n                                        offset='2'\n                                    />}\n                                    <StoryComments\n                                        stores={this.props.stores}\n                                        story={story}\n                                        col='10'\n                                        offset='2'\n                                        compact={false}\n                                    />\n                                </div>\n\n                            </div>\n\n                        </div>\n                    </>);\n                })}\n            </div>\n        );\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nconst MARKDOWN_OPTIONS = {\n\tpedantic: false,\n\tgfm: true,\n\tbreaks: true,\n\tsanitize: false,\n\tsmartLists: true,\n\tsmartypants: true,\n\txhtml: true,\n};\n\nimport mu from '../../lib/musher-util';\n\nfunction replaceImages(line = '', images, language = 'no') {\n    function imageReplacer(match, p1, p2, p3, offset, string) {\n        // console.log({ match, p1, p2, p3, offset, string })\n        if (util.isObject(images[p1])) {\n            return `<img src=${images[p1].s3XXLargeLink} class='img-fluid float-right' style='width: ${p2 || 40}%;' />`;\n        }\n        return '';\n    }\n\n    if (util.isString(line)) {\n\t\tlet text = line;\n        const regex = new RegExp(`<${language}>(.*?)</${language}>`, 's');\n\t\tconst match = regex.exec(text);\n\t\tif (match) {\n\t\t\tconst parsedLanguageText = match[0];\n\t\t\tif (parsedLanguageText) {\n\t\t\t\ttext = parsedLanguageText;\n\t\t\t}\n\t\t}\n        return text.replace(/\\{\\{img\\.(\\d+)\\s*(\\d*)\\}\\}/g, imageReplacer);\n    }\n    return line;\n}\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Races extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadRace(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore } = props.stores;\n\t\tconst query = {};\n\t\tawait raceStore.load({ query });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    componentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.loadRace(nextProps);\n\t}\n\n    render() {\n        const { appState, userStore, raceStore, newsStore } = this.props.stores;\n\t\tconst { allUsers, isAdmin, user, notifications = [] } = userStore;\n\t\tconst { races } = raceStore;\n\t\tconst { newsList } = newsStore;\n\t\tconst news = newsList && newsList[0] ? newsList[0] : null;\n\t\tconst { darkmode, language = 'no' } = appState;\n\t\tconst { showNews } = this.state;\n\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <h5><Text id='races.homerun'>Homerun races</Text></h5>\n                </div>\n\n                {(races || races.length === 0) && <div class='col-12 text-center py-5'>\n                    <h5>No upcoming races!</h5>\n                    Take a look at the previous races:<br />\n                    <a href='https://homerunrace.no/'>homerunrace.no</a>\n                </div>}\n\n                {races && races.sort((a, b) => a.startDate - b.startDate).reverse().map(race =>  {\n                    const today = new Date();\n                    let status = '';\n                    if (today >= new Date(race.startDate) && today <= new Date(race.endDate)) {\n                        status = 'race';\n                    } else if (today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate)) {\n                        status = 'signup';\n                    } else if (today > new Date(race.endDate)) {\n                        return (<></>);\n                    }\n\n                    return (<>\n                        <div class='col-12 col-sm-12 col-md-6 col-lg-6 mb-3'>\n\n                            <div class='card position-relative'>\n                                <h5 class='position-absolute' style='top: 10px; right: 10px;'>\n                                    {status === 'signup' && <>\n                                        <div class='spinner-grow text-primary' role='status' />\n                                    </>}\n                                    {status === 'race' && <>\n                                        <div class='spinner-grow text-danger' role='status' />\n                                    </>}\n                                    {status === 'done' && <>\n                                        <span><i class='fas fa-check text-success' /></span>\n                                    </>}\n                                </h5>\n                                <h5 class='card-header'>\n                                    {isAdmin && <i class={`fas fa-eye${race.active ? ' text-success' : '-slash text-danger'} float-right`} />}\n                                    {race.title}\n                                </h5>\n                                <div class='list-thumb d-flex align-items-center position-relative'>\n                                    <h5 class='position-absolute' style='top: 3px; right: 5px;'>\n                                        {status === 'signup' && <>\n                                            <span class='badge badge-primary border border-white ml-2'><Text id='races.signup-open'>Påmelding åpen</Text></span>\n                                        </>}\n                                        {status === 'race' && <>\n                                            <span class='badge badge-danger border border-white ml-2'><Text id='races.race-in-progress'>Løp pågår</Text></span>\n                                        </>}\n                                        {status === 'done' && <>\n                                            <span class='badge badge-success border border-white ml-2'><Text id='races.race-finished'>Løp avsluttet</Text></span>\n                                        </>}\n                                    </h5>\n                                    {(race.images && race.images[0]) ? <img src={race.images[0].s3MediumLink} class='card-img-top' /> : ''}\n                                </div>\n                                <div class='card-body'>\n                                    <p class='card-text'>\n                                        <Markdown markdown={replaceImages(race.ingress, race.images, language)} markdownOpts={MARKDOWN_OPTIONS} />\t\t\t\t\t\t\t\t\n                                    </p>\n                                    {race.classes && <>\n                                        <div class='mb-3'>\n                                            <small class='font-weight-lighter mr-2'><Text id='races.classes'>Klasser</Text>: </small><br />\n                                            {race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                <span class='badge badge-pill badge-light mr-2 font-weight-light'>\n                                                    {currentClass.title}\n                                                    {/* <span class='badge badge-info ml-2 font-weight-light'>{currentClass.contestants.length}</span> */}\n                                                </span>\n                                            </>)}\t\t\t\t\t\t\t\t\t\t\t\n                                        </div>\n                                    </>}\n                                    <a href={`/app-races/${race.id}`} class='btn btn-primary stretched-link'><Text id='races.read-more'>Les mer</Text></a>\n                                </div>\n                                <div class='card-footer'>\n                                    <small class='text-muted'>\n                                        <Text id='races.race-days'>Løpsdager</Text>: {race.startDate && <>{util.formatDate(race.startDate, { locale: language })}</>}\n                                        {race.endDate && <> - {util.formatDate(race.endDate, { locale: language })}</>}\n                                    </small>\n                                </div>\n                            </div>\n\n                        </div>\t\t\t\t\t\t\n                    </>);\n                })}\n\n\n            </div>\n        );\n    }\n}\n\nexport default Races;\n","import { h, Component } from 'preact';\nimport { Link } from 'preact-router/match';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\n\nconst initialState = {\n    menu: {\n\t\tprofile: false,\n\t\tmain: false,\n\t},\n\tsearchText: '',\n};\n\n@observer\nclass Notifications extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n\t\tconst { notifications = [] } = userStore;\n\t\tconst unreadNotificatins = notifications.filter(e => !e.read);\n\t\tconst unread = unreadNotificatins.length || 0;\n\n        if (unread < 3) {\n            return '';\n        }\n\n\t\treturn (\n            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-4 mb-4 clearfix px-0'>\n                <div class='alert alert-danger' role='alert'>\n                    <a href='/users/notifications' class='text-dark'>\n                        <i class='fas fa-bell mr-2 text-dark' />\n                        <span class='badge badge-pill badge-danger'>{unread}</span> <Text id='notifications.unread'>Uleste varslinger. Klikk her for å se alle...</Text>\n                    </a>\n                </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Notifications;\n"],"sourceRoot":""}