{"version":3,"sources":["webpack:///../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./components/util/scrollIntoView.js","webpack:///./components/form/links.js","webpack:///../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack:///../node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack:///./components/form/achievements.js","webpack:///../node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./components/form/files.js","webpack:///../node_modules/prop-types/index.js","webpack:///./routes/teams/edit.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","initialState","ScrollIntoView","observer","Component","constructor","props","super","this","state","container","componentDidMount","horizontal","vertical","behavior","inline","block","scrollIntoView","render","ref","c","Achievements","handleAdd","data","updateField","object","field","id","value","setState","name","url","removeLink","async","e","dogStore","stores","closest","dataset","linkId","showFiles","class","links","map","file","util","isoDate","createdDate","onClick","data-name","data-id","for","type","aria-describedby","onInput","linkstate","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","prototype","create","module","exports","REACT_STATICS","childContextTypes","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arguments","arity","defineProperty","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","concat","descriptor","description","removeAchievement","achievementId","achievements","date","emptyFunction","emptyFunctionWithReset","ReactPropTypesSecret","require","resetWarningCache","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","Files","handleAddImage","files","uploadStatus","before","after","autoOpen","apiUrl","style","height","width","MARGIN_TOP","mu","marginTop","MARGIN_TOP_BACK","marginTopBack","MARGIN_BOTTOM","marginBottom","newTeam","Ambitions","toggleType","typeId","isNew","toJS","userStore","teamAmbitions","user","language","saved","title","icon","help","harness","colorNonstop","lang","Types","teamTypes","Input","handleImageErrored","image","onerror","setTimeout","src","Date","removeImage","teamStore","team","parentElement","removeSponsorImage","removeMainImage","datalist","showImages","addToImages","rows","list","data-field","el","autocomplete","images","imagesSponsor","s3SmallLink","onError","img","checked","formatBytes","size","removeFile","TeamsEdit","insertTeam","insert","getInfo","resetDog","route","elementtype","updateFieldValue","parseInt","datatype","skipTimer","newValue","localObjectValue","Array","isArray","split","parseFloat","updateObjectKeyValue","doUpdateField","clearTimeout","updateTimer","updateDogTeam","singleValue","addTeam","addTeamLocal","dog","removeTeam","removeTeamLocal","back","history","goBack","chooseSubmenu","submenu","menu","createNew","load","addData","saveField","loadTeam","insertStatus","dogs","countries","linkState","role","data-menu","filter","dogFilter","showPositions"],"mappings":"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","file":"43.chunk.06ddb.esm.js","sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\n@observer\nclass Achievements extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n        };\n    }\n    \n    handleAdd = () => {\n        const { data } = this.state;\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: { ...data } });\n        this.setState({\n            data: {\n                name: '',\n                url: '',\n            }\n        });\n    };\n\n    removeLink = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { object } = this.props;\n        const { name, id } = e.target.closest('button').dataset;\n        dogStore.removeLink({\n            id: object.id,\n            name,\n            linkId: id,\n        });\n    }\n\n    render() {\n        const { showFiles = true, object = {} } = this.props;\n\n        return (\n            <div class='row'>\n                <div class='col-12 mt-3'>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!object.links || object.links.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-link' /></div>\n                                        <h3><Text id='dogs.no-links-title'>No links for this dog!</Text></h3>\n                                        <Text id='dogs.no-links-text'>You can add links to this dog. Ie. Links to Facebook page, Instagram page, blogg, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {object.links && object.links.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.createdDate, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='mr-2'>{file.url}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeLink}\n                                            data-name={file.name}\n                                            data-id={file.id}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                <div class='col-12 mt-3'>\n                    <details>\n                        <summary><Text id='dogs.link-add'>Add new link</Text></summary>\n                        <div class='form-group'>\n                            <label for='name'><Text id='dogs.link-name'>Name</Text></label>\n                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp' onInput={linkstate(this, 'data.name')} />\n                            <small id='nameHelp' class='form-text text-muted'><Text id='dogs.link-name-help'>Name of link</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='url'><Text id='dogs.link-url'>Url</Text></label>\n                            <input type='text' class='form-control' id='url' aria-describedby='urlHelp' onInput={linkstate(this, 'data.url')} />\n                            <small id='urlHelp' class='form-text text-muted'><Text id='dogs.link-url-help'>URL of link</Text></small>\n                        </div>\n                        <button class='btn btn-success' onClick={this.handleAdd}>\n                            <Text id='dogs.link-add'>Add link</Text>\n                        </button>\n                    </details>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Achievements;\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","'use strict';\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n    childContextTypes: true,\n    contextTypes: true,\n    defaultProps: true,\n    displayName: true,\n    getDefaultProps: true,\n    getDerivedStateFromProps: true,\n    mixins: true,\n    propTypes: true,\n    type: true\n};\n\nvar KNOWN_STATICS = {\n    name: true,\n    length: true,\n    prototype: true,\n    caller: true,\n    callee: true,\n    arguments: true,\n    arity: true\n};\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components\n\n        if (objectPrototype) {\n            var inheritedComponent = getPrototypeOf(sourceComponent);\n            if (inheritedComponent && inheritedComponent !== objectPrototype) {\n                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n            }\n        }\n\n        var keys = getOwnPropertyNames(sourceComponent);\n\n        if (getOwnPropertySymbols) {\n            keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n        }\n\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n                try { // Avoid failures from read-only properties\n                    defineProperty(targetComponent, key, descriptor);\n                } catch (e) {}\n            }\n        }\n\n        return targetComponent;\n    }\n\n    return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\n@observer\nclass Achievements extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n        };\n    }\n    \n    handleAdd = () => {\n        const { data } = this.state;\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: { ...data } });\n        this.setState({\n            data: {\n                name: '',\n                description: '',\n                url: '',\n            }\n        });\n    };\n\n\n    removeAchievement = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { object } = this.props;\n        const { name, id } = e.target.closest('button').dataset;\n        dogStore.removeAchievement({\n            id: object.id,\n            name,\n            achievementId: id,\n        });\n    }\n\n    render() {\n        const { data } = this.state;\n        const { showFiles = true, object = {} } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12 mt-3'>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!object.achievements || object.achievements.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-trophy' /></div>\n                                        <h3><Text id='dogs.no-achievements-title'>No achievements for this dog!</Text></h3>\n                                        <Text id='dogs.no-achievements-text'>You can add achievements to this dog. Ie. Memories, trips, tests, prices, races, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {object.achievements && object.achievements.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.date, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='mr-2'>{file.url}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeAchievement}\n                                            data-name={file.name}\n                                            data-id={file.id}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                <div class='col-12 mt-3'>\n                    <details>\n                        <summary><Text id='dogs.achievement-add'>Add new achievement</Text></summary>\n\n                        <div class='form-group'>\n                            <label for='name'><Text id='dogs.achievement-name'>Name</Text></label>\n                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp' onInput={linkstate(this, 'data.name')} value={data.name} />\n                            <small id='nameHelp' class='form-text text-muted'><Text id='dogs.achievement-name-help'>Name of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='date'><Text id='dogs.achievement-date'>Date</Text></label>\n                            <input type='date' class='form-control' id='date' aria-describedby='dateHelp' onInput={linkstate(this, 'data.date')} value={data.date} />\n                            <small id='dateHelp' class='form-text text-muted'><Text id='dogs.achievement-date-help'>Date of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='description'><Text id='dogs.achievement-description'>Description</Text></label>\n                            <input type='text' class='form-control' id='description' aria-describedby='descriptionHelp' onInput={linkstate(this, 'data.description')} value={data.description} />\n                            <small id='descriptionHelp' class='form-text text-muted'><Text id='dogs.achievement-description-help'>Description of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='url'><Text id='dogs.achievement-url'>Url</Text></label>\n                            <input type='text' class='form-control' id='url' aria-describedby='urlHelp' onInput={linkstate(this, 'data.url')} value={data.url} />\n                            <small id='urlHelp' class='form-text text-muted'><Text id='dogs.achievement-url-help'>URL of achievement</Text></small>\n                        </div>\n                        <button class='btn btn-success' onClick={this.handleAdd}>\n                            <Text id='dogs.achievement-add'>Add achievement</Text>\n                        </button>\n                    </details>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Achievements;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\nimport Dogs from '../../components/dog/dogs';\nimport Achievements from '../../components/form/achievements';\nimport Links from '../../components/form/links';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\nconst initialState = {\n    newTeam: {},\n};\n\n@observer\nclass Ambitions extends Component {\n    toggleType(typeId) {\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: object.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { teamAmbitions, user } = userStore;\n        const { language = 'en' } = user;\n\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        {teamAmbitions && teamAmbitions.map(harness => (\n                            <div class='col mb-2'>\n                                <div class={`border rounded p-2 ${value === harness.id ? 'bg-success' : ''}`}\n                                    style={`border-bottom: 3px solid ${harness.colorNonstop} !important;`}\n                                    onClick={() => this.toggleType(harness.id)}\n                                >\n                                    {language === 'no' ? harness.name : (harness.lang[language] || harness.name)}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Types extends Component {\n    toggleType(typeId) {\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: object.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { teamTypes, user } = userStore;\n        const { language = 'en' } = user;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        {teamTypes && teamTypes.map(harness => (\n                            <div class='col mb-2'>\n                                <div class={`border rounded p-2 ${value === harness.id ? 'bg-success' : ''}`}\n                                    style={`border-bottom: 3px solid ${harness.colorNonstop} !important;`}\n                                    onClick={() => this.toggleType(harness.id)}\n                                >\n                                    {language === 'no' ? harness.name : (harness.lang[language] || harness.name)}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { teamStore } = this.props.stores;\n        const { team } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        teamStore.removeImage({\n            id: team.id,\n            name: imageName,\n        });\n    }\n\n    removeSponsorImage = async (e) => {\n        const { teamStore } = this.props.stores;\n        const { team } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        teamStore.removeSponsorImage({\n            id: team.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { team, field, updateField } = this.props;\n        updateField({ id: team.id, field, value: {} });\n    }\n\n    render() {\n        const { saved, team, field, icon, title, type, help, onInput, updateField, datalist = [], showImages = true, showFiles = true, addToImages = true, rows = 10 } = this.props;\n        const value = team[field];\n        if (type === 'datalist') {\n            return (\n                <div class={`form-group  mb-5 pb-1 border-bottom ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <input list={`list-${field}`} class={`form-control ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={team.id}\n                        data-field={field}\n                        onInput={onInput}\n                    />\n                    <datalist id={`list-${field}`} >\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </datalist>\n                    {saved[`${field}.${team.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n\n        if (type === 'select') {\n            return (\n                <div class={`form-group  mb-5 pb-1 border-bottom ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    <select\n                        list={`list-${field}`}\n                        class={`form-control ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}\n                        id={`${field}Input`}\n                        aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={team.id}\n                        data-field={field}\n                        onInput={onInput}\n                        autocomplete='off'\n                    >\n                        <option value=''>-- <Text id='teams.choose-country'>Velg land</Text> --</option>\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </select>\n                    {saved[`${field}.${team.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n\n\n        if (type === 'image') {\n            const images = field === 'imagesSponsor' ? team.imagesSponsor : team.images;\n            return (\n                <div class={`form-group ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {team[field] && team[field].s3SmallLink && <div class='col-3 p-1'>\n                                <img src={team[field].s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                <button class='btn btn-sm btn-link'\n                                    onClick={this.removeMainImage}\n                                    data-name={team[field].name}\n                                ><i class='fas fa-trash' /> Del</button>\n                                <span class='badge badge-success'>Main</span>\n                            </div>}\n                            {showImages && <>                            \n                                {images && images.length > 0 && images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={field === 'imagesSponsor' ? this.removeSponsorImage : this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> Del</button>\n                                    </div>\n                                ))}\n                            </>}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={team} field={field} updateField={updateField} addToImages={addToImages} autoOpen={false} />\n                    {saved[`${field}.${team.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'toggle') {\n            return (\n                <div class={`form-group ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='custom-control custom-switch'>\n                        <input type='checkbox'\n                            class='custom-control-input'\n                            id={`${field}Input`}\n                            value={value === 1 ? 0 : 1}\n                            data-id={team.id}\n                            data-field={field}\n                            onInput={onInput}\n                            checked={value == 1 ? 'checked' : ''}\n                        />\n                        <label class='custom-control-label' for={`${field}Input`} />\n                    </div>\n                    {saved[`${field}.${team.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'textarea') {\n            return (\n                <div class={`form-group ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea type='text' class={`form-control ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={team.id}\n                        data-field={field}\n                        onInput={onInput}\n                        rows={rows}\n                    />\n                    {saved[`${field}.${team.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!team.files || team.files.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-file' /></div>\n                                        <h3><Text id='teams.no-files-title'>No files attached to this dog!</Text></h3>\n                                        <Text id='teams.no-files-text'>You can upload files to this dog inside edit. These files can be of any type. Ie: Certificates, test, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {team.files && team.files.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.createdDate, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='font-weight-lighter mr-2'>{util.formatBytes(file.size, 1)}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeFile}\n                                            data-name={file.name}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                    <Files saved={saved} object={team} field={field} updateField={updateField} />\n                    {saved[`${field}.${team.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }        \n        if (field === 'links') {\n            return (\n                <div class={`form-group ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Links saved={saved} stores={this.props.stores} object={team} field={field} updateField={updateField} />\n                    {saved[`${field}.${team.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (field === 'achievements') {\n            return (\n                <div class={`form-group ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Achievements saved={saved} stores={this.props.stores} object={team} field={field} updateField={updateField} />\n                    {saved[`${field}.${team.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        return (\n            <div class={`form-group ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type='text' class={`form-control ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    value={value}\n                    data-id={team.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${team.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass TeamsEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            submenu: 'info',\n        };\n        this.updateTimer = {};\n    }\n\n    async loadTeam() {\n\t\tconst { teamStore } = this.props.stores;\n        if (this.props.team === 'new') {\n            this.setState({ createNew: true });\n        } else {\n            await teamStore.load(this.props.team, false, { addData: ['dogs', 'users'] });\n        }\n    }\n\n\tresetDog() {\n\t\tthis.setState({\n            newTeam: {},\n            createNew: false,\n        });\n\t}\n\n\tinsertTeam = async () => {\n\t\tconst { newTeam } = this.state;\n\t\tconst { teamStore, userStore } = this.props.stores;\n\t\tawait teamStore.insert({ ...newTeam });\n        await userStore.getInfo();\n        this.resetDog();\n        route(`/teams/`);\n\t}\n\n    updateField = (e) => {\n        const { id, field, type, elementtype, isNew } = e.target.dataset;\n        const value = e.target.value;\n        this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const { teamStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { team } = teamStore;\n        if (field === 'images') {\n            if (Array.isArray(team.images) && Array.isArray(value)) {\n                localObjectValue = [...team.images, ...value];\n            }\n        }\n        if (field === 'imagesSponsor') {\n            if (Array.isArray(team.imagesSponsor)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...team.imagesSponsor, ...value];\n                } else {\n                    localObjectValue = [...team.imagesSponsor, { ...value }];\n                }\n            }\n        }\n        if (field === 'achievements') {\n            if (Array.isArray(team.achievements)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...team.achievements, ...value];\n                } else {\n                    localObjectValue = [...team.achievements, value];\n                }\n            }\n        }\n        if (field === 'links') {\n            if (Array.isArray(team.links)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...team.links, ...value];\n                } else {\n                    localObjectValue = [...team.links, value];\n                }\n            }\n        }\n        if (field === 'files') {\n            if (Array.isArray(team.files)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...team.files, ...value];\n                } else {\n                    localObjectValue = [...team.files, value];\n                }\n            }\n        }        \n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n        if (isNew) {\n            teamStore.updateObjectKeyValue('newTeam', field, value);\n        } else {\n            teamStore.updateField(id, field, localObjectValue);\n            if (skipTimer) {\n                this.doUpdateField(id, field, newValue);\n            } else {\n                clearTimeout(this.updateTimer[field]);\n                this.updateTimer[field] = setTimeout(async () => {\n                    this.doUpdateField(id, field, newValue);\n                }, 500);\n            }\n        }\n    }\n\n    updateDogTeam = async ({ value = [], singleValue, dog }) => {\n        const { dogStore, teamStore } = this.props.stores;\n        const { team } = teamStore;\n\n        if (value.indexOf(singleValue) > -1) {\n            dogStore.addTeam({ id: singleValue, team: team.id });\n            teamStore.addTeamLocal({ dog: { id: singleValue } });\n        } else if (singleValue) {\n            // console.log('removeTeam', { id: singleValue, team: team.id });\n            dogStore.removeTeam({ id: singleValue, team: team.id });\n            teamStore.removeTeamLocal({ dog: { id: singleValue } });\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { teamStore } = this.props.stores;\n        await teamStore.saveField(id, field, value);\n    }\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tcomponentDidMount() {\n        this.loadTeam();\n    }\n\n\trender() {\n        const { createNew, newTeam, submenu } = this.state;\n\t\tconst { teamStore, userStore } = this.props.stores;\n\t\tconst { insertStatus, saved, team, dogs } = teamStore;\n        const { countries } = userStore;\n        const { name } = team;\n\n        if (createNew) {\n            return (\n                <div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                    <button class='btn btn-link pl-0 fixed-top text-primary'\n                        style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                        onClick={this.back}>\n                        <i class='fas fa-arrow-circle-left' />\n                    </button>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\n                            <h5 style='padding-left: 35px;'><Text id='teams.add-new'>Legg til nytt team</Text></h5>\n                            <div class='form-group'>\n                                <label for='nameInput'><Text id='teams.name'>Teamnavn</Text></label>\n                                <input type='text' class='form-control' id='nameInput' aria-describedby='nameHelp'\n                                    onInput={linkState(this, 'newTeam.name')}\n                                    value={newTeam.name}\n                                />\n                                <small id='nameHelp' class='form-text text-muted'><Text id='teams.name-help'>Navn på teamet. A-laget, B-laget, gjengen på tur, etc.</Text></small>\n                            </div>\n                            <button type='button' class='btn btn-primary'\n                                onClick={this.insertTeam}\n                            >\n                                <Text id='teams.save-new'>Registrer nytt team</Text>\n                            </button>\n\n                            {insertStatus && <div class='alert alert-success mt-4 col-12' role='alert'>\n                                <Text id='teams.saved'>Teamet er lagret.</Text>\n                            </div>}\n\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link pl-0 fixed-top text-primary'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}>\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\t\t\t\t<div class='row'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <div class='clearfix'>\n                            <div class={`text-center border rounded-circle imageRounded float-right`} style={team.image ? `background-image: url(\"${team.image.s3SmallLink}\");` : ''}>\n                                {!team.image && <i class='fas fa-dog text-muted mt-3' style='font-size: 40px;' />}\n                            </div>\n                            <h5 style='padding-left: 35px;'><Text id='teams.edit'>Endre</Text>: {name}</h5>\n                        </div>\n                    </div>\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <div class='row'>\n                            <div class='col-12 my-3'>\n                                <div class='row'>\n                                    <div class='w-100 overflow-hidden'>\n                                        <div\n                                            class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                            style='overflow: auto; scroll-snap-type: x mandatory;'\n                                        >\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='info'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-info-circle' /> <Text id='teams.info'>Info</Text></button>\n                                                {submenu === 'info' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            {/* <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'status' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='status'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-thermometer' /> <Text id='teams.status'>Status</Text></button>\n                                                {submenu === 'status' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div> */}\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'internet' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='internet'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-hashtag' /> <Text id='teams.internet'>Sosialemedier</Text></button>\n                                                {submenu === 'internet' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'pictures' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='pictures'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-images' /> <Text id='teams.pictures'>Pictures</Text></button>\n                                                {submenu === 'pictures' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'dogs' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='dogs'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-users' /> <Text id='teams.dogs-menu'>Dogs</Text></button>\n                                                {submenu === 'dogs' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'achievements' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='achievements'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-clock' /> <Text id='teams.achievements'>Achievements</Text></button>\n                                                {submenu === 'achievements' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'links' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='links'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-link' /> <Text id='teams.links'>Links</Text></button>\n                                                {submenu === 'links' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'descriptionWorkoutplan' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='descriptionWorkoutplan'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-link' /> <Text id='teams.descriptionWorkoutplan'>Workoutplan</Text></button>\n                                                {submenu === 'descriptionWorkoutplan' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'sponsors' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='sponsors'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-link' /> <Text id='teams.sponsors'>Sponsors</Text></button>\n                                                {submenu === 'sponsors' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'advanced' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='advanced'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-cogs' /> <Text id='teams.log'>Advanced</Text></button>\n                                                {submenu === 'advanced' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\n                        {submenu === 'info' && <>\n                             <Localizer>\n                                <Input saved={saved} team={team} field='name' icon='fas fa-heading'\n                                    title={<Text id='teams.name'>Teamnavn</Text>}\n                                    help={<Text id='teams.name-help'>Navn på teamet. A-laget, B-laget, gjengen på tur, etc.</Text>}\n                                    onInput={this.updateField} />\n\n\n                                <Input saved={saved} team={team} field='description' icon='fas fa-paragraph' type='textarea'\n                                    title={<Text id='teams.description'>Beskrivelse</Text>}\n                                    help={<Text id='teams.description-help'>Beskrivelse av teamet.</Text>}\n                                    onInput={this.updateField} />\n\n                                <Input saved={saved} team={team} field='address' icon='fas fa-address-card'\n                                    title={<Text id='teams.address'>Adresse</Text>}\n                                    help={<Text id='teams.address-help'>Adressen til teamet.</Text>}\n                                    onInput={this.updateField} />\n                                <Input saved={saved} team={team} field='postalcode' icon='fas fa-address-card'\n                                    title={<Text id='teams.postalcode'>Postnr</Text>}\n                                    help={<Text id='teams.postalcode-help'>Postnummer til teamet.</Text>}\n                                    onInput={this.updateField} />\n                                <Input saved={saved} team={team} field='place' icon='fas fa-address-card'\n                                    title={<Text id='teams.place'>Sted</Text>}\n                                    help={<Text id='teams.place-help'>Stedet til teamet.</Text>}\n                                    onInput={this.updateField} />\n\n                                <Input saved={saved} team={team} field='country' icon='fas fa-address-card'\n                                    datalist={countries.map(e => [e.name, e.name])} type='select'\n                                    title={<Text id='teams.country'>Land</Text>}\n                                    help={<Text id='teams.country-help'>Hjemlandet til teamet.</Text>}\n                                    onInput={this.updateField} />\n\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'descriptionWorkoutplan' && <>\n                             <Localizer>\n                                <Input saved={saved} team={team} field='descriptionWorkoutplan' icon='fas fa-paragraph' type='textarea'\n                                    title={<Text id='teams.descriptionWorkoutplan'>Workoutplan description</Text>}\n                                    help={<Text id='teams.descriptionWorkoutplan-help'>Description of your workoutplan and philosophy.</Text>}\n                                    onInput={this.updateField}\n                                    rows={20}\n                                />\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'sponsors' && <>\n                             <Localizer>\n                                <Input saved={saved} team={team} field='sponsors' icon='fas fa-paragraph' type='textarea'\n                                    title={<Text id='teams.sponsors'>Sponsors</Text>}\n                                    help={<Text id='teams.sponsors-help'>List your sponsors.</Text>}\n                                    onInput={this.updateField}\n                                    rows={20}\n                                />\n\n                                <Input saved={saved} team={team} field='imagesSponsor' type='image' icon='fas fa-camera'\n                                    stores={this.props.stores}\n                                    title={<Text id='teams.sponsor-photo'>Sponsor logos</Text>} \n                                    help={<Text id='teams.sponsor-photo-help'>Logos from sponsors.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                    showImages={true}\n                                    addToImages={false}\n                                />\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'internet' && <>\n                            <Localizer>\n                                <Input saved={saved} team={team} field='url' icon='fas fa-link'\n                                    title={<Text id='teams.url'>Link til nettside</Text>}\n                                    help={<Text id='teams.url-help'>Link til nettside for teamet.</Text>}\n                                    onInput={this.updateField} />\n                                <Input saved={saved} team={team} field='facebook' icon='fab fa-facebook'\n                                    title={<Text id='teams.facebook'>Facebook</Text>}\n                                    help={<Text id='teams.facebook-help'>Link til Facebookside.</Text>}\n                                    onInput={this.updateField} />\n                                <Input saved={saved} team={team} field='instagram' icon='fab fa-instagram'\n                                    title={<Text id='teams.instagram'>Instagram</Text>}\n                                    help={<Text id='teams.instagram-help'>Instagram brukernavn.</Text>}\n                                    onInput={this.updateField} />\n                                <Input saved={saved} team={team} field='snapchat' icon='fab fa-snapchat'\n                                    title={<Text id='teams.snapchat'>Snapchat</Text>}\n                                    help={<Text id='teams.snapchat-help'>Snapchat bruker.</Text>}\n                                    onInput={this.updateField} />\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'status' && <>\n                            <Localizer>\n                                <Input stores={this.props.stores} saved={saved} team={team} field='public' icon='fas fa-eye' type='toggle'\n                                    title={<Text id='teams.public'>Synlig offentlig</Text>}\n                                    help={<Text id='teams.public-help'>Skal teamet være mulig å følge? Alle som vil følge må godkjennes av dere først.</Text>}\n                                    onInput={this.updateField} />\n\n                                <Ambitions stores={this.props.stores} saved={saved} object={team} type='number' field='ambitions' \n                                    title={<Text id='teams.ambitions'>Ambisjoner</Text>}\n                                    icon='fas fa-hand-rock'\n                                    help={<Text id='teams.ambitions-help'>Ambisjonsnivå til teamet.</Text>}\n                                    updateField={this.updateFieldValue} />\n\n                                <Types stores={this.props.stores} saved={saved} object={team} type='number' field='type' \n                                    title={<Text id='teams.type'>Type</Text>}\n                                    icon='fas fa-dog'\n                                    help={<Text id='teams.type-help'>Type team</Text>}\n                                    updateField={this.updateFieldValue} />\n                             </Localizer>\n                        </>}\n\n                        {submenu === 'pictures' && <>\n                            <Localizer>\n                                <Input saved={saved} team={team} field='imageHeader' type='image'\n                                    showImages={false}\n                                    addToImages={false}\n                                    stores={this.props.stores}\n                                    title={<Text id='teams.header-photo'>Toppbilde</Text>}\n                                    help={<Text id='teams.header-photo-help'>Bilde av teamet.</Text>}\n                                    onInput={this.updateField} updateField={this.updateFieldValue}\n                                />\n\n                                <Input saved={saved} team={team} field='imageOther' type='image' icon='fas fa-camera'\n                                    stores={this.props.stores}\n                                    title={<Text id='teams.photo'>Bilde</Text>} \n                                    help={<Text id='teams.photo-help'>Bilder av hunden.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                    showImages={true}\n                                />\n                                <Input saved={saved} team={team} field='image' type='image' icon='fas fa-portrait'\n                                    stores={this.props.stores}\n                                    title={<Text id='teams.profile-photo'>Profilbilde</Text>} \n                                    help={<Text id='teams.profile-photo-help'>Profilbilde av hunden.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                    showImages={false}\n                                />\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'dogs' && <>\n                            <Dogs stores={this.props.stores} type='array' elementtype='number' field='dogs' icon='fas fa-dog'\n                                saved={team.saved}\n                                object={{ dogs: dogs.map(e => e.id) }}\n                                title={<Text id='teams.dogs'>Hunder</Text>}\n                                help={<Text id='teams.dogs-help'>Hvilke hunder er med i teamet?</Text>}\n                                updateField={this.updateDogTeam} filter={this.dogFilter}\n                                showPositions={false}\n                            />\n                        </>}\n\n                        {submenu === 'achievements' && <>\n                            <Localizer>\n                                <Input saved={saved} team={team} field='achievements' type='text' icon='fas fa-clock'\n                                    stores={this.props.stores}\n                                    title={<Text id='teams.achievements'>Bragder</Text>}\n                                    help={<Text id='teams.achievements-help'>Bragder til denne hunden.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'links' && <>\n                            <Localizer>\n                                <Input saved={saved} team={team} field='links' type='text' icon='fas fa-link'\n                                    stores={this.props.stores}\n                                    title={<Text id='teams.links'>Linker</Text>}\n                                    help={<Text id='teams.links-help'>Linker til denne hunden.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'advanced' && <>\n                            <Localizer>\n                                <Input saved={saved} team={team} field='files' type='file' icon='fas fa-file'\n                                    stores={this.props.stores}\n                                    title={<Text id='teams.files'>Files</Text>}\n                                    help={<Text id='teams.files-help'>Filer til denne hunden.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </Localizer>\n                        </>}\n\n\n                        {/* <Input saved={saved} team={team} field='members' title='Medlemmer' help='Handlere, kjørere som er medlem av teamet.' onInput={this.updateField} /> */}\n                        {/* <Input saved={saved} team={team} field='dogs' title='Hunder' help='Hunder som er med i teamet.' onInput={this.updateField} /> */}\n                        {/* <Input saved={saved} team={team} field='tracks' title='Runder' help='Treningsrundene til teamet.' onInput={this.updateField} /> */}\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TeamsEdit;\n"],"sourceRoot":""}