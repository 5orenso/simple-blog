{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///./components/story/commentAdd.js","webpack:///./components/workout/status.js","webpack:///./components/story/add.js","webpack:///./components/story/commentReply.js","webpack:///./components/story/comments.js","webpack:///./components/team/publicFeed.js","webpack:///./components/user/updateSettings.js","webpack:///./components/workout/table.js","webpack:///./components/story/publicFeed.js","webpack:///./components/races/index.js","webpack:///./components/notifications/index.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","SUB_MENU_MARGIN_TOP","subMenuMarginTop","initialState","isLoading","submenu","Home","observer","Component","constructor","props","super","loadTeamInfo","async","loadWorkoutSummary","loadWorkoutPlans","year","currentMonth","Date","getMonth","currentYear","util","getYear","seasonStart","parseInt","workoutPlanStore","workoutStore","userStore","stores","team","currentTeam","id","load","query","seasonYear","seasonMonth","workoutPlans","workoutPlanCurrent","prepareWeekGraphs","updateItem","resetGraphPlanWeekDistanceCurrent","loadDogs","dogStore","addData","chooseSubmenu","e","this","setState","target","parentElement","dataset","menu","state","appState","getFingerprint","getInfo","getNotifications","Promise","all","loadTeams","teamStore","skipMusherWorkoutSummary","getFeed","getWorkoutSummary","componentDidMount","loadAll","render","stravaActivityStore","garminActivityDetailsStore","workoutPlan","darkmode","viewmode","workouts","teams","tracks","isAdmin","dogs","totalTeams","length","totalDogs","totalTracks","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","currentTeamObject","findTeam","workoutSummary","workoutSummary2019","findWorkoutSummary","findWorkoutSummaryTotal","workoutSummary2020","user","stravaActivities","garminActivityDetails","class","style","href","role","secToHms","format","indexOf","url","callback","key","showHeader","data-menu","onClick","distancekm","currentSeason","prevSeason","strava","map","act","activity","garmin","fields","total","name","workout","StoryAdd","commentStory","inputRefObject","story","storyStore","comment","response","status","resizeTextarea","inputRef","displayNameShort","firstname","ucfirst","lastname","email","userImage","image","images","undefined","s3SmallLink","for","type","placeholder","onInput","linkState","onKeyUp","value","ref","WorkoutStatus","language","MONTHS","getMonths","months","monthRange","lastPlanMonth","month","planMonth","sumWorkoutPlanMonth","percCompleted","findWorkoutSummaryMonth","height","aria-valuenow","aria-valuemin","aria-valuemax","title","body","public","showAddImage","addStory","insert","loadPublicFeed","data","addImages","push","addImage","handleImageErrored","onerror","setTimeout","src","col","offset","c","teamId","checked","data-id","img","onError","removeImage","data-name","object","updateField","StoryCommentReply","commentId","commentReplyStory","showAddComment","showAllComments","showAllReplies","StoryComments","likeComment","likeStoryComment","likeReply","replyId","likeStoryCommentReply","replyComment","focus","toggleComments","toggleReplies","compact","currentUser","max_comments","filteredComments","totalComments","diplayedComments","comments","slice","Math","max","reverse","displayName","hasLikedComment","likes","findIndex","filteredReplises","totalReplies","diplayedReplies","markdown","replaceImages","markdownOpts","getMarkdownOptions","formatDistance","createdDate","locale","reply","hasLikedReply","data-comment","more","TeamPublicFeed","toggleDate","stopPropagation","preventDefault","showDate","likeWorkout","workoutId","closest","addLikeToFeed","addCommentToFeed","console","log","addLikeToComment","addLikeToCommentReply","addCommentToWorkoutComment","addCommentToWorkout","addLikeToWorkout","toggleAddComment","loadTeamsPublicFeed","publicTeamsFeed","feed","findPublicTeam","hasLikedWorkout","totalFollowers","followers","isYourTeam","members","isFollowing","hasRequestedFollow","followRequests","date","formatDate","hour12","hour","minute","equipment","findEquipment","distanceKm","elevation","speedAvg","track","dogsLeft","dogsRight","sledWeight","kcalBurnedTotal","kcalMeatGramsTotal","kcalSalmonGramsTotal","kcalFatGramsTotal","gpxInfo","svgMap","viewBox","d","svgElevation","buttonOnly","toggleSetting","field","settings","updateSetting","hideSettings","forceShow","summaryEmails","infoEmails","partnerEmails","WorkoutTable","withText","week","distance","ascend","plan","seasonMonths","prevSeasonMonths","xTicksAll","weekRange","wo","partSize","floor","xTicks","i","l","m","scope","StoryPublicFeed","likeStory","storyId","loadStoriesPublicFeed","publicFeed","hasLikedStory","idx","s3LargeLink","line","isString","text","match","RegExp","exec","parsedLanguageText","replace","p1","p2","isObject","s3XXLargeLink","MARKDOWN_OPTIONS","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","Races","raceStore","loadRace","componentWillReceiveProps","nextProps","newsStore","notifications","races","newsList","sort","a","b","startDate","race","today","endDate","signupStartDate","signupEndDate","active","s3MediumLink","ingress","classes","currentClass","profile","main","searchText","Notifications","unread","filter","read"],"mappings":"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","file":"route-home.chunk.e47ba.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport Workout from '../../components/workout';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutTable from '../../components/workout/table';\n// import DogStatus from '../../components/dog/status';\nimport InviteFriend from '../../components/user/invite';\nimport UserUpdate from '../../components/user/updateSettings';\nimport Install from '../../components/install';\nimport Races from '../../components/races';\nimport Notifications from '../../components/notifications';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport Strava from '../../components/strava';\nimport Garmin from '../../components/garmin';\nimport Teams from '../../components/team/teams';\nimport TeamPublicFeed from '../../components/team/publicFeed';\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\nimport Ad from '../../components/ad/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'lastWorkouts',\n};\n\n@observer\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { appState, userStore, workoutStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        await appState.getFingerprint();\n        await userStore.getInfo();\n\t\tawait userStore.getNotifications();\n\t\t// await this.loadFeed();\n\t\tawait this.loadWorkoutSummary();\n\t\t// await this.loadDogs();\n\t\tawait Promise.all([\n\t\t\tthis.loadWorkoutPlans(),\n\t\t\tthis.loadTeams(),\n\t\t]);\n\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tloadTeamInfo = async () => {\n\t\tawait this.loadWorkoutSummary();\n\t\tawait this.loadWorkoutPlans();\n\t\t// await this.loadTeams();\n\t}\n\n\tasync loadTeams(props = this.props) {\n\t\tconst { teamStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true }, addData: ['workoutSummary'] });\n\t}\n\n\tasync loadFeed() {\n\t\tconst { userStore } = this.props.stores;\n        await userStore.getFeed({});\n    }\n\n\tasync loadWorkoutSummary() {\n\t\tconst { userStore, workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\t// await workoutStore.load({ query: { team: currentTeam } });\n        await userStore.getWorkoutSummary({ team: currentTeam });\n    }\n\n\tloadWorkoutPlans = async (props = this.props) => {\n\t\tconst { year } = props;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst seasonStart = parseInt(year || (currentMonth < 6 ? currentYear - 1 : currentYear), 10);\n\t\tconst { workoutPlanStore, workoutStore, userStore } = props.stores;\n\t\tconst { team } = userStore;\n\t\tconst { currentTeam = team.id } = workoutStore;\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t\tseasonMonth: 6,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year });\n\t\t\t}\n\t\t} else {\n\t\t\tworkoutPlanStore.updateItem('workoutPlans', []);\n\t\t\tworkoutPlanStore.updateItem('workoutPlan', {});\n\t\t\tworkoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\t\t}\n\t}\n\n\tloadDogs = async () => {\n\t\tconst { dogStore } = this.props.stores;\n\t\tconst { currentTeam } = dogStore;\n\n\t\tawait dogStore.load({ query: { team: currentTeam }, addData: ['workoutSummary'] });\n\t}\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n\trender() {\n\t\tconst { isLoading, submenu } = this.state;\n\t\tconst { userStore, dogStore, appState, workoutPlanStore, teamStore, workoutStore,\n\t\t\tstravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n\t\tconst { workoutPlan, workoutPlans } = workoutPlanStore;\n\t\tconst { darkmode, viewmode } = appState;\n\t\tconst {\n\t\t\tworkouts,\n\t\t\tteams, tracks, isAdmin, dogs,\n\t\t} = userStore;\n\t\t// const { dogs } = dogStore;\n\t\t// const dogsInjured = dogStore.findDogsByStatus(2);\n\t\t// const dogsPregnant = dogStore.findDogsByStatus(4);\n\t\t// const dogsMedication = dogStore.findDogsByStatus(8);\n\t\t// const dogsSick = dogStore.findDogsByStatus(9);\n\t\t// const dogsWithStatus = dogStore.findDogsByStatus([2, 4, 8, 9]);\n\t\t// const dogsWithNeeds = dogStore.findDogsWithNeeds();\n\n\t\tconst totalTeams = teams.length;\n\t\tconst totalDogs = dogs.length;\n\t\tconst totalTracks = tracks.length;\n\n\t\tconst { currentTeam, cordovaActiveTrackingParams, isRunning, totalDistance, currentSpeed, totalTime } = workoutStore;\n\n\t\tconst currentTeamObject = userStore.findTeam(currentTeam, true);\n\t\tconst { workoutSummary } = teamStore;\n\t\tconst workoutSummary2019 = (currentTeam ? teamStore.findWorkoutSummary(currentTeam, 2019) : teamStore.findWorkoutSummaryTotal(2019)) || {};\n        const workoutSummary2020 = (currentTeam ? teamStore.findWorkoutSummary(currentTeam, 2020) : teamStore.findWorkoutSummaryTotal(2020)) || {};\n\n\t\tconst { user } = userStore;\n\t\tconst { stravaActivities } = stravaActivityStore;\n\t\tconst { garminActivityDetails } = garminActivityDetailsStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row mb-4 fixed-top' style={`margin-top: ${SUB_MENU_MARGIN_TOP}; background-color: ${darkmode ? '#191d21' : '#f8f9fa'};`}>\n\t\t\t\t\t{isAdmin && <div class={`col text-center subtopmenu`}>\n\t\t\t\t\t\t<a href='/admin' class='text-secondary stretched-link'><nobr><i class='fas fa-user-shield' /> <Text id='home.admin'>Admin</Text></nobr></a>\n\t\t\t\t\t</div>}\n\t\t\t\t\t<div class={`col text-center subtopmenu border-bottom border-primary`}>\n\t\t\t\t\t\t<a href='/' class='text-primary stretched-link'><nobr><i class='fas fa-chart-line' /> <Text id='home.dashboard'>Dashboard</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class={`col text-center subtopmenu`}>\n\t\t\t\t\t\t<a href='/feed' class='text-secondary stretched-link'><nobr><i class='fas fa-rss' /> <Text id='home.feed'>Feed</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class={`col text-center subtopmenu`}>\n\t\t\t\t\t\t<a href='/todo' class='text-secondary stretched-link'><nobr><i class='fas fa-list' /> <Text id='home.todo'>Todo</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(currentSpeed * 3.6, 1)} km/t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(totalDistance / 1000, 2)} km</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t\t{/* {JSON.stringify(cordovaActiveTrackingParams)}\n\t\t\t\t\t\t\t{JSON.stringify(isRunning)} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t{['beta'].indexOf(viewmode) > -1 ? <>\n\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} />\n\t\t\t\t\t<StoryAdd stores={this.props.stores} />\n\t\t\t\t\t<StoryPublicFeed stores={this.props.stores} />\n\t\t\t\t\t<TeamPublicFeed stores={this.props.stores} />\n\t\t\t\t</> : <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadTeamInfo} key={`teams-${currentTeam}`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t{/* {isLoading && <div class='text-center mt-5 mb-5'>\n\t\t\t\t\t\t\t\t<div class='spinner-border text-primary' role='status'>\n\t\t\t\t\t\t\t\t\t<span class='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>} */}\n\n\t\t\t\t\t\t\t{!isLoading && workoutSummary && workoutSummary.length === 0 && (\n\t\t\t\t\t\t\t\t<div class='mb-5 py-3 border-top border-bottom'>\n\t\t\t\t\t\t\t\t\t<div class='text-center'>\n\t\t\t\t\t\t\t\t\t\t<div class='display-4'>\n\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-paw' />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-title'>Velkommen til The Musher.</Text>\n\t\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-body-1'>The Musher er en app som er kontinuerlig under utvikling.\n\t\t\t\t\t\t\t\t\t\t\tAlle ideer/innspill/kommentarer mottas med stor takk på Facebooksiden vår 😃</Text>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-body-2'>Fokus til appen er enkel registrering av hunder, team, treninger og hendelser rundt hundene.\n\t\t\t\t\t\t\t\t\t\t\tNår man har mange hunder så er det ofte vanskelig å holde styr på løpetid, vaksiner, treninger,\n\t\t\t\t\t\t\t\t\t\t\tskader, vetrinærbesøk, chiplister, osv.</Text>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-body-3'>Alle data lagres sentralt i skyen hos AWS (Amazon Web Services) og det vil derfor være mulig å bruke appen fra flere telefoner\n\t\t\t\t\t\t\t\t\t\t\tog datamaskiner samtidig. Dette kan være fint dersom det er flere som trener og følger opp hundene.</Text>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t\t<Text id='home.howto-title'>Slik kommer du i gang:</Text>\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t\t{totalTeams < 1 && <li><a class='btn btn-info mt-3' href='/teams/'><Text id='home.howto-step-1'>Legg inn teamene dine.</Text></a></li>}\n\t\t\t\t\t\t\t\t\t\t{totalDogs < 1 && <li><a class='btn btn-info mt-3' href='/dogs/'><Text id='home.howto-step-2'>Legg inn hundene dine.</Text></a></li>}\n\t\t\t\t\t\t\t\t\t\t{totalTracks < 1 && <li><a class='btn btn-info mt-3' href='/tracks/'><Text id='home.howto-step-3'>Legg inn rundene dine.</Text></a></li>}\n\t\t\t\t\t\t\t\t\t\t<li><a class='btn btn-info mt-3' href='/workouts/'><Text id='home.howto-step-4'>Begynn å registrere treningene.</Text></a></li>\n\t\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<WorkoutGraph stores={this.props.stores} isLoading={isLoading} key={`graph-${workoutPlan.id}-${workoutPlans.length}`} />\n\t\t\t\t\t\t\t{['beta', 'advanced'].indexOf(viewmode) > -1 && <>\n\t\t\t\t\t\t\t\t<WorkoutTable\n\t\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\tkey={`workout-table-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t\t\tshowHeader={false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\t\t\t\t\n\n\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} />\n\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n\t\t\t\t\t\t\t<div class='row'>\n\n\t\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'races' ? 'btn-danger' : 'btn-outline-danger'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='races'\n\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t><i class='fas fa-dog' /> <Text id='home.races'>Løp</Text></button>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'lastWorkouts' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='lastWorkouts'\n\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t><i class='fas fa-running' /> <Text id='home.workouts'>Treninger</Text></button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t><i class='fas fa-equals' /> <Text id='home.totals'>Totaler</Text></button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'workoutplanStatus' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='workoutplanStatus'\n\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t><i class='fas fa-chart-line' /> <Text id='home.status'>Status</Text></button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{submenu === 'races' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<Races stores={this.props.stores} />\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t{submenu === 'lastWorkouts' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<Install />\n\t\t\t\t\t\t\t<InviteFriend stores={this.props.stores} />\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t{submenu === 'totals' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTotals stores={this.props.stores} key={`totals-${workoutSummary2020.distancekm}`} currentSeason={workoutSummary2020} prevSeason={workoutSummary2019} />\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t{submenu === 'workoutplanStatus' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutStatus stores={this.props.stores} key={`status-${workoutSummary2020.distancekm}`} currentSeason={workoutSummary2020} prevSeason={workoutSummary2019} />\n\t\t\t\t\t\t</div>}\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Notifications stores={this.props.stores} />\n\n\t\t\t\t\t{submenu === 'lastWorkouts' && <div class='row'>\n\n\t\t\t\t\t\t{user && user.strava && stravaActivities && stravaActivities.length > 0 && (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2 overflow-auto'\n\t\t\t\t\t\t\t\tstyle='max-height: 30vh;'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<h5><Text id='workout.index.strava-workouts'>Strava workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t\t{stravaActivities && stravaActivities.map(act =>\n\t\t\t\t\t\t\t\t\t<Strava stores={this.props.stores} activity={act} key={`strava-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{user && user.garmin && garminActivityDetails && garminActivityDetails.length > 0 && (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2 overflow-auto'\n\t\t\t\t\t\t\t\tstyle='max-height: 30vh;'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<h5><Text id='workout.index.garmin-workouts'>Garmin workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t\t{garminActivityDetails && garminActivityDetails.map(act =>\n\t\t\t\t\t\t\t\t\t<Garmin stores={this.props.stores} activity={act} key={`garmin-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{workouts && workouts.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4'>\t\t\n\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t<Text id='home.last-workouts' fields={{ total: workouts.length }}>Siste treningsturer - {workouts.length} stk</Text>\n\t\t\t\t\t\t\t\t\t{currentTeamObject && currentTeamObject.name && <div>\n\t\t\t\t\t\t\t\t\t\t<small class='font-weight-lighter'>(<Text id='workout.index.filtered-by'>Filtered by</Text>: {currentTeamObject.name})</small>\n\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{workouts && workouts.map(workout => (\n\t\t\t\t\t\t\t\t<Workout stores={this.props.stores} workout={workout} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t</div>}\n\n\t\t\t\t</>}\n\n\t\t\t\t{/* {!isLoading && <UserUpdate stores={this.props.stores} />} */}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryAdd extends Component {\n    commentStory = async () => {\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n\t\tconst response = await storyStore.commentStory({ id: story.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[story.id]);\n            });\n            callback({ story, response });\n\t\t}\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <Localizer>\n                                    <textarea\n                                        class='form-control rounded rounded-lg'\n                                        type='text'\n                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                        onInput={linkState(this, 'comment')}\n                                        onKeyUp={mu.resizeTextarea}\n                                        style='height: 2.3em;'\n                                        value={comment}\n                                        ref={inputRef}\n                                    />\n                                </Localizer>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-primary mb-2'\n                                    onClick={this.commentStory}\n                                ><Text id='comments.add-comment'>Send</Text></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutStatus extends Component {\n    render() {\n\t\tconst { currentSeason, prevSeason } = this.props;\n        const { userStore, workoutPlanStore, teamStore } = this.props.stores;\n        const { user } = userStore;\n        const { language = 'no' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n\t\tconst { team } = teamStore;\n\n        const { year } = this.props;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = year || util.getYear();\n\t\tconst seasonStart = parseInt(currentMonth < 6 ? currentYear - 1 : currentYear, 10);\n        const months = util.monthRange(`${seasonStart}-06-01`, `${seasonStart + 1}-05-31`);\n        let lastPlanMonth;\n\n        return (\n            <div class='container-fluid mb-2'>\n                <div class='row mt-2'>\n                    <div class='col-12'>\n                        <h5>\n                            <Text id='workout.totals.title'>Treningsplanstatus</Text>\n                        </h5>\n                    </div>\n                </div>\n                <div class='row mt-2 border-bottom pb-2'>\n                    {months && months.map((month) => {\n                        if (month.year > currentYear || (month.year === currentYear && month.month >= currentMonth)) {\n                            return '';\n                        }\n                        const planMonth = workoutPlanStore.sumWorkoutPlanMonth(month.year, month.month + 1);\n                        if (!planMonth) {\n                            return '';\n                        }\n                        lastPlanMonth = planMonth;\n                        const summaryMonth = userStore.findWorkoutSummaryMonth(month.year, month.month + 1);\n                        const percCompleted = summaryMonth / planMonth * 100;\n                        const height = percCompleted > 100 ? 100 : util.format(percCompleted, 0);\n                        return (\n                            <div class='col-3 text-center'>\n                                {/* <div class='w-100 mt-1'>\n                                    <small class='text-muted'>\n                                        {planMonth}km\n                                    </small>\n                                    <small class='text-info'>\n                                        {summaryMonth}km\n                                    </small>\n                                </div> */}\n                                <div class='px-auto w-100 clearfix'>\n                                    <div class={`progress ${style['progress-bar-vertical']}`}\n                                        style={' margin-left: calc(50% - 20px);'}\n                                    >\n                                        <div class='progress-bar progress-bar-striped bg-success' role='progressbar'\n                                            style={`height: ${height}%; width: 40px;`}\n                                            aria-valuenow={height} aria-valuemin='0' aria-valuemax='100'\n                                        >\n                                            {util.format(percCompleted, 0)}%\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class='w-100 mt-1'>\n                                    {MONTHS[month.month]} {month.year}\n                                </div>\n                            </div>\n                        );\n                    })}\n                    {!lastPlanMonth && <div class='col-12 text-center'>\n                        <h3>\n                            <Text id='workout.plan.no-workout-plan-found' fields={{ name: team.name }}>Ingen treningsplaner funnet for team {team.name}.</Text>\n                        </h3>\n                    </div>}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default WorkoutStatus;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n\nconst initialState = {\n\tstory: {\n        title: '',\n        body: '',\n        images: [],\n        public: false,\n    },\n    showAddImage: false,\n};\n\n@observer\nclass StoryAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    addStory = async () => {\n        const { callback = () => {} } = this.props;\n        const { story = {} } = this.state;\n\t\tconst { storyStore } = this.props.stores;\n\t\tconst response = await storyStore.insert({\n            title: story.title,\n            body: story.body,\n            images: story.images,\n            public: story.public ? 1 : 0,\n            team: story.team,\n        });\n\t\tif (response && response.status === 201) {\n            await storyStore.loadPublicFeed();\n            callback(response.data);\n            this.setState({\n                story: {\n                    title: '',\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(this.inputRef['newStoryBody']);\n            });\n\t\t}\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { story } = this.state;\n        story.images.push(...value);\n        this.setState({ story });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { col = 12, offset = 0 } = this.props;\n        const { story, showAddImage } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100'>\n                <div class='row bg-light'>\n\n                    <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm mb-3 mt-3`}>\n                        <div class='d-flex mb-0 position-relative w-100'>\n                            <div \n                                class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                            >\n                                {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                            </div>\n                            <div class='col pl-3' style='line-height: 1.2em;'>\n\n                                <div class='d-flex bd-highlight'>\n                                    <div class='p-0 w-100 bd-highlight'>\n                                        <label class='sr-only' for='inlineFormInput'><Text id='story.body'>Story</Text></label>\n                                        <Localizer>\n                                            <textarea\n                                                class='form-control rounded'\n                                                type='text'\n                                                placeholder={<Text id='story.write-body'>Hva tenker du på?..</Text>}\n                                                onInput={linkState(this, 'story.body')}\n                                                onKeyUp={mu.resizeTextarea}\n                                                style='height: 2.3em;'\n                                                value={story.body}\n                                                ref={c => this.inputRef['newStoryBody'] = c}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                        <button type='button' class='btn btn-primary mb-2'\n                                            onClick={this.addStory}\n                                        ><Text id='comments.add-comment'>Send</Text></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class='row'>\n                                <div class='col-4 text-center'>\n                                    <div class='form-group'>\n                                        <select\n                                            class='custom-select custom-select-sm'\n                                            id='team'\n                                            onInput={linkState(this, 'story.team')}\n                                        >\n                                            {user.teams && user.teams.map((teamId) => {\n                                                const team = userStore.findTeam(teamId, true);\n                                                if (team && team.public) {\n                                                    return (<option value={team.id}>{team.name}</option>);\n                                                }\n                                                return '';\n                                            })}\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class='col-4 text-center'>\n                                    <div class='form-group'>\n                                        <div class='custom-control custom-control-sm custom-switch'>\n                                            <input\n                                                type='checkbox'\n                                                class='custom-control-input'\n                                                id='public'\n                                                onInput={linkState(this, 'story.public')}\n                                                checked={story.public == 1}\n                                            />\n                                            <label class='custom-control-label' for='public'><Text id='story.public'>Is public</Text></label>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='col-4 text-center'>\n                                    {!showAddImage && <button type='button' class={`btn btn-sm`}\n                                        data-id={story.id}\n                                        onClick={this.addImage}\n                                    >\n                                        <i class={`text-success fas fa-image`} /> <Text id='store.add-image'>Add image</Text>\n                                    </button>}\n\n                                    {showAddImage && <>\n                                        <div class='container-fluid'>\n                                            <div class='row'>\n                                                {story.images && story.images.map(img => (\n                                                    <div class='col-3 p-1'>\n                                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                        <button class='btn btn-sm btn-link'\n                                                            onClick={this.removeImage}\n                                                            data-name={img.name}\n                                                        ><i class='fas fa-trash' /> Del</button>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                        <Images object={story} updateField={this.addImages} />\n                                    </>}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryCommentReply extends Component {\n    commentStory = async () => {\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n\t\tconst response = await storyStore.commentReplyStory({ id: story.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ story, response, commentId });\n\t\t}\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <Localizer>\n                                    <textarea\n                                        class='form-control form-control-sm rounded rounded-lg'\n                                        type='text'\n                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                        onInput={linkState(this, 'comment')}\n                                        onKeyUp={mu.resizeTextarea}\n                                        style='height: 2.3em;'\n                                        value={comment}\n                                        ref={inputRef}\n                                    />\n                                </Localizer>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-sm btn-primary mb-2'\n                                    onClick={this.commentStory}\n                                ><Text id='comments.add-comment'>Send</Text></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport StoryReplyComment from '../../components/story/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass StoryComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    likeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\t\tconst response = await storyStore.likeStoryComment({ id: story.id, commentId });\n\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', story, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n\n        const replyId = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const commentId = e.target.parentElement.dataset.comment || e.target.dataset.comment;\n\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\t\tconst response = await storyStore.likeStoryCommentReply({ id: story.id, replyId, commentId });\n\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', story, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies } = this.state;\n\t\tconst { story, callback = () => {}, compact = false } = this.props;\n        const { userStore } = this.props.stores;\n        const { user: currentUser, language = 'no' } = userStore;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (story.comments) {\n            totalComments = story.comments.length;\n            if (showAllComments) {\n                filteredComments = story.comments;\n            } else {\n                // filteredComments = story.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = story.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {story && filteredComments && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg'>\n                                        <span style='font-size: 0.95em;'>\n                                            <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                            <Markdown markdown={mu.replaceImages(comment.comment, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                        </span>\n                                    </div>\n                                    <small>\n                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.likeComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.like'>Lik</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && filteredReplises && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div \n                                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg'>\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                                            <Markdown markdown={mu.replaceImages(reply.comment, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                        >\n                                                            <Text id='comments.like'>Lik</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <StoryReplyComment stores={this.props.stores} story={story}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default StoryComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport ImageSlider from '../imageSlider';\nimport WorkoutComments from '../workout/comments';\nimport WorkoutAddComment from '../workout/commentAdd';\n\nimport PublicTeam from '../team/public';\n\nfunction displayDistance(distanceKm) {\n\tif (distanceKm < 5) {\n\t\treturn util.format(distanceKm, 2);\n\t}\n\tif (distanceKm < 10) {\n\t\treturn util.format(distanceKm, 1);\n\t}\n\treturn util.format(distanceKm, 1);\n}\n\nconst initialState = {\n\tshowAddComment: {},\n};\n\n@observer\nclass TeamPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\n\tlikeWorkout = async (e) => {\n        const workoutId = parseInt(e.target.closest('button').dataset.id, 10);\n\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst response = await workoutStore.likeWorkout({ id: workoutId });\n        if (response.status === 200) {\n            this.addLikeToFeed(workoutId, response.data);\n\t\t}\n\t}\n\n    addCommentToFeed = ({ type, workout, response, commentId, replyId }) => {\n        console.log('addCommentToFeed', { workout, response, commentId });\n        const { teamStore } = this.props.stores;\n        switch (type) {\n            case 'likeComment':\n                teamStore.addLikeToComment({ id: workout.id, data: response.data, commentId });\n                break;\n            case 'likeReply':\n                teamStore.addLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                break;\n        \n            default:\n                if (commentId) {\n                    teamStore.addCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                } else {\n                    teamStore.addCommentToWorkout({ id: workout.id, data: response.data });\n                }\n                break;\n        }\n    }\n\n    addLikeToFeed = (id, data) => {\n        const { teamStore } = this.props.stores;\n        teamStore.addLikeToWorkout({ id, data });\n    }\n\n\ttoggleAddComment = (e) => {\n\t\tconst workoutId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[workoutId]) {\n            delete showAddComment[workoutId];\n        } else {\n            showAddComment[workoutId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[workoutId]) {\n\t\t\t\tthis.inputRef[workoutId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    async loadTeamsPublicFeed(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n\t\tawait teamStore.loadPublicFeed();\n\t}\n\n    async loadAll() {\n\t\tawait this.loadTeamsPublicFeed();\n    }\n\n\tcomponentDidMount() {\n        this.loadAll();\n\t}\n\n    render() {\n        const { showAddComment, showDate } = this.state;\n        const { teamStore, userStore, appState } = this.props.stores;\n        const { user } = userStore;\n        const { publicTeamsFeed } = teamStore;\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100'>\n                {publicTeamsFeed && publicTeamsFeed.map((feed) => {\n                    const team = teamStore.findPublicTeam(feed.team) || {};\n                    let image;\n                    if (team.image && team.image.s3SmallLink) {\n                        image = team.image;\n                    } else if (team.images && team.images[0] && team.images[0].s3SmallLink) {\n                        image = team.images[0];\n                    }\n                    const { likes, comments } = feed;\n                    const hasLikedWorkout = feed.likes && feed.likes.findIndex(e => e.user === user.id) > -1;\n                    const totalFollowers = team && team.followers ? team.followers.length : 0;\n\n                    const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n                    const isFollowing = team && team.followers && team.followers.indexOf(user.id) > -1;\n                    const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n                    return (<>\n                        <div class='row pb-4 bg-light'>\n                            <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\n                                <div class='d-flex'>\n                                    <div class={`text-center border rounded-circle imageRounded`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                        {!image && <i class='fas fa-users text-muted mt-3' style='font-size: 40px;' />}\n                                    </div>\n                                    <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                                        <h5 class='mb-1' style='line-height: 1.0em;'>{team.name}</h5>\n                                        <div>\n                                            {feed.date && <small class='text-muted' onClick={this.toggleDate}>\n                                                {showDate ? util.formatDate(feed.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(feed.date, new Date(), { locale: 'no-NB' })}\n                                            </small>}\n                                            {feed.public === 1 ? <>\n                                                <small class='ml-2 text-muted'>\n                                                    <i class='fas fa-globe-europe' />\n                                                </small>\n                                            </> : <>\n                                                <small class='ml-2 text-muted'>\n                                                    <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                                </small>\n                                            </>}\n                                            <small class='text-muted'>\n                                                {feed.equipment > 0 && <><i class='fas fa-tools' /> {userStore.findEquipment(feed.equipment) || feed.equipment}</>}\n                                                {feed.distanceKm > 0 && <><i class='fas fa-road ml-2' /> {displayDistance(feed.distanceKm)}km</>}\n                                                {feed.elevation > 0 && <><i class='fas fa-mountain ml-2' /> {util.format(feed.elevation, 0)}m</>}\n                                                {feed.speedAvg > 0 && <><i class='fas fa-tachometer-alt ml-2' /> {util.format(feed.speedAvg, 1)}km/t</>}\n                                                {feed.dogs > 0 && <><i class='fas fa-dog ml-2' /> {feed.dogs.length}</>}\n                                                {feed.track > 0 && <><i class={`fas fa-map-marked text-${feed.track > 0 ? 'success' : 'danger'} ml-2`} /></>}\n                                                {feed.dogsLeft > 0 && <><i class={`fas fa-crosshairs text-${feed.dogsLeft && feed.dogsRight ? 'success' : 'danger'} ml-2`} /></>}\n                                                {feed.sledWeight > 0 && <>\n                                                    <i class='fas fa-sleigh ml-2' /> {util.format(feed.sledWeight, 0)} kg\n                                                </>}\n                                                {feed.kcalBurnedTotal && <><i class='fas fa-balance-scale' /> {util.format(feed.kcalBurnedTotal)} kcal</>}\n                                                {feed.kcalMeatGramsTotal && <><i class='fas fa-drumstick-bite ml-2' /> {util.format(feed.kcalMeatGramsTotal / 1000, 1)} kg</>}\n                                                {feed.kcalSalmonGramsTotal && <><i class='fas fa-fish ml-2' /> {util.format(feed.kcalSalmonGramsTotal / 1000, 1)} kg</>}\n                                                {feed.kcalFatGramsTotal && <><i class='fas fa-piggy-bank ml-2' /> {util.format(feed.kcalFatGramsTotal / 1000, 1)} kg</>}\n                                            </small>\n                                        </div>\n\n                                        {feed.name}\n\n                                        <div class='row mb-3'>\n                                            {feed.gpxInfo && feed.gpxInfo.svgMap && <>\n                                                <div class='col-6 mt-auto text-center overflow-hidden'>\n                                                    <svg viewBox='0 0 300 300' style='width: 150px; height: 150px;'>\n                                                        <path d={`${feed.gpxInfo.svgMap}`} style='fill: none; stroke: #0275d8; stroke-width: 5; opacity: 0.5;' />\n                                                    </svg>\n                                                    <small class='text-muted'>Track</small>\n                                                </div>\n                                            </>}\n                                            {feed.gpxInfo && feed.gpxInfo.svgElevation && <>\n                                                <div class='col-6 mt-auto text-center overflow-hidden'>\n                                                    <svg viewBox='0 0 300 200' style='width: 150px; height: 100px;'>\n                                                        <path d={`${feed.gpxInfo.svgElevation}`} style='fill: none; stroke: #5cb85c; stroke-width: 5; opacity: 0.5;' />\n                                                    </svg>\n                                                    <small class='text-muted'>Elevation</small>\n                                                </div>\n                                            </>}\n                                        </div>\n\n                                    </div>\n                                </div>\n\n                                <div class='d-flex mx-0'>\n                                    {feed.images && <ImageSlider images={feed.images} />}\n                                </div>\n\n                                <div class='mt-2'>\n                                    {likes && likes.length > 0 && <small class='bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                        <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                                    </small>}\n                                    {comments && comments.length > 0 && <small class='float-right bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                        <i class='fas fa-comment text-primary' /> {comments.length}\n                                    </small>}\n                                </div>\n\n                                {!isYourTeam && !isFollowing && !hasRequestedFollow && <div class='clearfix mb-2'>\n                                    <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} />\n                                </div>}\n\n                                <div>\n                                    <div class='row'>\n                                        <div class='col-6 text-center'>\n                                            <button type='button' class={`btn btn-sm btn-outline-${hasLikedWorkout ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedWorkout ? 'text-primary' : ''}`}\n                                                data-id={feed.id}\n                                                onClick={this.likeWorkout}\n                                                // disabled={hasLikedWorkout}\n                                            >\n                                                <i class={`${hasLikedWorkout ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                                            </button>\n                                        </div>\n                                        <div class='col-6 text-center'>\n                                            <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block'\n                                                data-id={feed.id}\n                                                onClick={this.toggleAddComment}\n                                            >\n                                                <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='mt-2'>\n                                    {showAddComment[feed.id] && <WorkoutAddComment\n                                        stores={this.props.stores}\n                                        workout={feed}\n                                        inputRef={c => this.inputRef[feed.id] = c}\n                                        col='10'\n                                        offset='2'\n                                        callback={this.addCommentToFeed}\n                                    />}\n                                    <WorkoutComments\n                                        stores={this.props.stores}\n                                        workout={feed}\n                                        col='10'\n                                        offset='2'\n                                        compact={false}\n                                        callback={this.addCommentToFeed}\n                                    />\n                                </div>\n                            </div>\n\n                        </div>\n                    </>);\n                })}\n            </div>\n        );\n    }\n}\n\nexport default TeamPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\n@observer\nclass UserSettings extends Component {\n    toggleSetting= async (field) => {\n        const { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n        await userStore.updateSetting({ [`settings.${field}`]: settings[field] === 1 ? 0 : 1 });\n    }\n\n    hideSettings = async () => {\n        const { userStore } = this.props.stores;\n        await userStore.updateSetting({ 'settings.hideSettings': 1 });\n        this.setState({\n            hideSettings: true,\n        });\n    }\n\n    render() {\n        const { hideSettings } = this.state;\n\t\tconst { userStore } = this.props.stores;\n        const { forceShow } = this.props;\n        const { user } = userStore;\n        const { settings = {} } = user;\n        if (hideSettings || settings.hideSettings) {\n            return '';\n        }\n        if (!forceShow && settings.summaryEmails && settings.infoEmails && settings.partnerEmails) {\n            return '';\n        }\n        return (\n           <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-4 mb-4 pt-4 pb-4 border-bottom border-top'>\n                <h5><Text id='users.settings'>Brukerinnstillinger</Text></h5>\n\n                {!settings.summaryEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-summary-email'>Oppsummeringer</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsSummaryEmails' onInput={() => this.toggleSetting('summaryEmails')} checked={settings.summaryEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsSummaryEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-summary-email'>Motta oppsummeringer via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.infoEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-info-email'>Info</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsInfoEmails' onInput={() => this.toggleSetting('infoEmails')} checked={settings.infoEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsInfoEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-info-email'>Motta info via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.partnerEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-partner-email'>Partners</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsPartnerEmails' onInput={() => this.toggleSetting('partnerEmails')} checked={settings.partnerEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsPartnerEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-partner-email'>Motta tilbud fra våre partnere via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted'>\n                        <small>\n                            <a href='/users'>\n                                <i class='fas fa-sliders-h' /> <Text id='users.settings-text-info'>Innstillingene finner du inne på profilen din.</Text>\n                            </a>\n                        </small>\n                    </div>\n                </div>\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted text-right'>\n                        <small>\n                            <button type='button' class='btn btn-sm btn-link mb-2' onClick={this.hideSettings}>\n                                <i class='fas fa-eye-slash' /> <Text id='users.hide-settings'>Skjul innstillingene</Text>\n                            </button>\n                        </small>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserSettings;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass WorkoutTable extends Component {\n    render() {\n        const { userStore } = this.props.stores;\n        const { isLoading, year, month, showHeader = true } = this.props;\n        const {\n            user,\n\t\t} = userStore;\n        const { language = 'no' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n        const currentMonth = month || new Date().getMonth() + 1;\n\t\tconst currentYear = year || util.getYear();\n\t\tconst seasonStart = parseInt(currentMonth < 6 ? currentYear - 1 : currentYear, 10);\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonMonths = util.monthRange(`${seasonStart}-06-01`, `${seasonStart + 1}-05-31`);\n        const prevSeasonMonths = util.monthRange(`${seasonStart - 1}-06-01`, `${seasonStart}-05-31`);\n        const seasonWeeks = util.weekRange(`${seasonStart}-06-01`, `${seasonStart + 1}-05-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = xTicksAll.length % 6;\n        const partSize = Math.floor(xTicksAll.length / parts);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += partSize) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        return (\n            <>\n                {showHeader && <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5>}\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <small class='mb-4'><small>\n                        <table class='table table-sm font-weigth-lighter border-bottom'>\n                            <thead>\n                                <tr>\n                                    <th style='padding: .15rem;'><Text id='workout.graph.season'>Sesong</Text></th>\n                                    {seasonMonths.map(m => (\n                                        <th class='text-right' style='padding: .15rem;'><a href={`/workouts/month/${m.month}/${m.year}`}>{MONTHS[m.month - 1]}</a></th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart - 1} - {seasonStart}</th>\n                                    {prevSeasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    {/* <nobr>{summaryMonth.distance}</nobr><br /> */}\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart} - {seasonStart + 1}</th>\n                                    {seasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </small></small>\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WorkoutTable;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport ImageSlider from '../imageSlider';\nimport StoryComments from './comments';\nimport StoryAddComment from './commentAdd';\n\nimport PublicTeam from '../team/public';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n};\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeStory = async (e) => {\n        const storyId = parseInt(e.target.closest('button').dataset.id, 10);\n\n\t\tconst { storyStore } = this.props.stores;\n\t\tconst response = await storyStore.likeStory({ id: storyId });\n        if (response.status === 200) {\n            // this.addLikeToFeed(storyId, response.data);\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[storyId]) {\n            delete showAddComment[storyId];\n        } else {\n            showAddComment[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[storyId]) {\n\t\t\t\tthis.inputRef[storyId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    async loadStoriesPublicFeed(props = this.props) {\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed();\n\t}\n\n\tcomponentDidMount() {\n        this.loadStoriesPublicFeed();\n\t}\n\n    render() {\n        const { showAddComment, showDate } = this.state;\n        const { userStore, storyStore, appState } = this.props.stores;\n        const { user } = userStore;\n        const { publicFeed } = storyStore;\n\t\tconst { language = 'no' } = user;\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100'>\n                {publicFeed && publicFeed.map((story) => {\n                    const team = storyStore.findPublicTeam(story.team) || {};\n                    let image;\n                    if (team.image && team.image.s3SmallLink) {\n                        image = team.image;\n                    } else if (team.images && team.images[0] && team.images[0].s3SmallLink) {\n                        image = team.images[0];\n                    }\n                    const { likes, comments } = story;\n                    const hasLikedStory = story.likes && story.likes.findIndex(e => e.user === user.id) > -1;\n                    const totalFollowers = team && team.followers ? team.followers.length : 0;\n\n                    const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n                    const isFollowing = team && team.followers && team.followers.indexOf(user.id) > -1;\n                    const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n                    return (<>\n                        <div class='row pb-4 bg-light'>\n                            <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\n                                <div class='d-flex'>\n                                    <div class={`text-center border rounded-circle imageRounded`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                        {!image && <i class='fas fa-users text-muted mt-3' style='font-size: 40px;' />}\n                                    </div>\n                                    <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                                        <h5 class='mb-1' style='line-height: 1.0em;'>{team.name}</h5>\n                                        <div class='mb-2'>\n                                            {story.date && <small class='text-muted' onClick={this.toggleDate}>\n                                                {showDate ? util.formatDate(story.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(story.date, new Date(), { locale: 'no-NB' })}\n                                            </small>}\n                                            {story.public === 1 ? <>\n                                                <small class='ml-2 text-muted'>\n                                                    <i class='fas fa-globe-europe' />\n                                                </small>\n                                            </> : <>\n                                                <small class='ml-2 text-muted'>\n                                                    <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                                </small>\n                                            </>}\n                                        </div>\n\n                                        <Markdown markdown={mu.replaceImages(story.body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </div>\n                                </div>\n                                <div class='row'>\n                                    <div class='mx-0 px-0 clearfix row'>\n                                        {story.images && story.images.map((img, idx) => {\n                                            const width_first = 'col-12';\n                                            const width_second = 'col';\n                                            return (<>\n                                                <div class={`px-0 ${idx === 0 ? width_first : width_second}`}>\n                                                    <img class={`img-fluid ${idx > 0 ? 'border border-2' : ''}`} style='min-width: 100px;' src={img.s3LargeLink} />                                        \n                                                </div>\n                                            </>);\n                                        })}\n                                    </div>\n                                </div>\n                                <div class='mt-2'>\n                                    {likes && likes.length > 0 && <small class='bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                        <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                                    </small>}\n                                    {comments && comments.length > 0 && <small class='float-right bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                        <i class='fas fa-comment text-primary' /> {comments.length}\n                                    </small>}\n                                </div>\n\n                                {!isYourTeam && !isFollowing && !hasRequestedFollow && <div class='clearfix mb-2'>\n                                    <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} />\n                                </div>}\n\n                                <div>\n                                    <div class='row'>\n                                        <div class='col-6 text-center'>\n                                            <button type='button' class={`btn btn-sm btn-outline-${hasLikedStory ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedStory ? 'text-primary' : ''}`}\n                                                data-id={story.id}\n                                                onClick={this.likeStory}\n                                                // disabled={hasLikedStory}\n                                            >\n                                                <i class={`${hasLikedStory ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                                            </button>\n                                        </div>\n                                        <div class='col-6 text-center'>\n                                            <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block'\n                                                data-id={story.id}\n                                                onClick={this.toggleAddComment}\n                                            >\n                                                <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='mt-2'>\n                                    {showAddComment[story.id] && <StoryAddComment\n                                        stores={this.props.stores}\n                                        story={story}\n                                        inputRef={c => this.inputRef[story.id] = c}\n                                        inputRefObject={this.inputRef}\n                                        col='10'\n                                        offset='2'\n                                    />}\n                                    <StoryComments\n                                        stores={this.props.stores}\n                                        story={story}\n                                        col='10'\n                                        offset='2'\n                                        compact={false}\n                                    />\n                                </div>\n\n                            </div>\n\n                        </div>\n                    </>);\n                })}\n            </div>\n        );\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nconst MARKDOWN_OPTIONS = {\n\tpedantic: false,\n\tgfm: true,\n\tbreaks: true,\n\tsanitize: false,\n\tsmartLists: true,\n\tsmartypants: true,\n\txhtml: true,\n};\n\nimport mu from '../../lib/musher-util';\n\nfunction replaceImages(line = '', images, language = 'no') {\n    function imageReplacer(match, p1, p2, p3, offset, string) {\n        // console.log({ match, p1, p2, p3, offset, string })\n        if (util.isObject(images[p1])) {\n            return `<img src=${images[p1].s3XXLargeLink} class='img-fluid float-right' style='width: ${p2 || 40}%;' />`;\n        }\n        return '';\n    }\n\n    if (util.isString(line)) {\n\t\tlet text = line;\n        const regex = new RegExp(`<${language}>(.*?)</${language}>`, 's');\n\t\tconst match = regex.exec(text);\n\t\tif (match) {\n\t\t\tconst parsedLanguageText = match[0];\n\t\t\tif (parsedLanguageText) {\n\t\t\t\ttext = parsedLanguageText;\n\t\t\t}\n\t\t}\n        return text.replace(/\\{\\{img\\.(\\d+)\\s*(\\d*)\\}\\}/g, imageReplacer);\n    }\n    return line;\n}\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Races extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadRace(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore } = props.stores;\n\t\tconst query = {};\n\t\tawait raceStore.load({ query });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    componentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.loadRace(nextProps);\n\t}\n\n    render() {\n        const { appState, userStore, raceStore, newsStore } = this.props.stores;\n\t\tconst { allUsers, isAdmin, user, notifications = [] } = userStore;\n\t\tconst { races } = raceStore;\n\t\tconst { newsList } = newsStore;\n\t\tconst news = newsList && newsList[0] ? newsList[0] : null;\n\t\tconst { darkmode, language = 'no' } = appState;\n\t\tconst { showNews } = this.state;\n\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <h5><Text id='races.homerun'>Homerun races</Text></h5>\n                </div>\n\n                {(races || races.length === 0) && <div class='col-12 text-center py-5'>\n                    <h5>No upcoming races!</h5>\n                    Take a look at the previous races:<br />\n                    <a href='https://homerunrace.no/'>homerunrace.no</a>\n                </div>}\n\n                {races && races.sort((a, b) => a.startDate - b.startDate).reverse().map(race =>  {\n                    const today = new Date();\n                    let status = '';\n                    if (today >= new Date(race.startDate) && today <= new Date(race.endDate)) {\n                        status = 'race';\n                    } else if (today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate)) {\n                        status = 'signup';\n                    } else if (today > new Date(race.endDate)) {\n                        return (<></>);\n                    }\n\n                    return (<>\n                        <div class='col-12 col-sm-12 col-md-6 col-lg-6 mb-3'>\n\n                            <div class='card position-relative'>\n                                <h5 class='position-absolute' style='top: 10px; right: 10px;'>\n                                    {status === 'signup' && <>\n                                        <div class='spinner-grow text-primary' role='status' />\n                                    </>}\n                                    {status === 'race' && <>\n                                        <div class='spinner-grow text-danger' role='status' />\n                                    </>}\n                                    {status === 'done' && <>\n                                        <span><i class='fas fa-check text-success' /></span>\n                                    </>}\n                                </h5>\n                                <h5 class='card-header'>\n                                    {isAdmin && <i class={`fas fa-eye${race.active ? ' text-success' : '-slash text-danger'} float-right`} />}\n                                    {race.title}\n                                </h5>\n                                <div class='list-thumb d-flex align-items-center position-relative'>\n                                    <h5 class='position-absolute' style='top: 3px; right: 5px;'>\n                                        {status === 'signup' && <>\n                                            <span class='badge badge-primary border border-white ml-2'><Text id='races.signup-open'>Påmelding åpen</Text></span>\n                                        </>}\n                                        {status === 'race' && <>\n                                            <span class='badge badge-danger border border-white ml-2'><Text id='races.race-in-progress'>Løp pågår</Text></span>\n                                        </>}\n                                        {status === 'done' && <>\n                                            <span class='badge badge-success border border-white ml-2'><Text id='races.race-finished'>Løp avsluttet</Text></span>\n                                        </>}\n                                    </h5>\n                                    {(race.images && race.images[0]) ? <img src={race.images[0].s3MediumLink} class='card-img-top' /> : ''}\n                                </div>\n                                <div class='card-body'>\n                                    <p class='card-text'>\n                                        <Markdown markdown={replaceImages(race.ingress, race.images, language)} markdownOpts={MARKDOWN_OPTIONS} />\t\t\t\t\t\t\t\t\n                                    </p>\n                                    {race.classes && <>\n                                        <div class='mb-3'>\n                                            <small class='font-weight-lighter mr-2'><Text id='races.classes'>Klasser</Text>: </small><br />\n                                            {race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                <span class='badge badge-pill badge-light mr-2 font-weight-light'>\n                                                    {currentClass.title}\n                                                    {/* <span class='badge badge-info ml-2 font-weight-light'>{currentClass.contestants.length}</span> */}\n                                                </span>\n                                            </>)}\t\t\t\t\t\t\t\t\t\t\t\n                                        </div>\n                                    </>}\n                                    <a href={`/app-races/${race.id}`} class='btn btn-primary stretched-link'><Text id='races.read-more'>Les mer</Text></a>\n                                </div>\n                                <div class='card-footer'>\n                                    <small class='text-muted'>\n                                        <Text id='races.race-days'>Løpsdager</Text>: {race.startDate && <>{util.formatDate(race.startDate, { locale: language })}</>}\n                                        {race.endDate && <> - {util.formatDate(race.endDate, { locale: language })}</>}\n                                    </small>\n                                </div>\n                            </div>\n\n                        </div>\t\t\t\t\t\t\n                    </>);\n                })}\n\n\n            </div>\n        );\n    }\n}\n\nexport default Races;\n","import { h, Component } from 'preact';\nimport { Link } from 'preact-router/match';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\n\nconst initialState = {\n    menu: {\n\t\tprofile: false,\n\t\tmain: false,\n\t},\n\tsearchText: '',\n};\n\n@observer\nclass Notifications extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n\t\tconst { notifications = [] } = userStore;\n\t\tconst unreadNotificatins = notifications.filter(e => !e.read);\n\t\tconst unread = unreadNotificatins.length || 0;\n\n        if (unread < 3) {\n            return '';\n        }\n\n\t\treturn (\n            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-4 mb-4 clearfix px-0'>\n                <div class='alert alert-danger' role='alert'>\n                    <a href='/users/notifications' class='text-dark'>\n                        <i class='fas fa-bell mr-2 text-dark' />\n                        <span class='badge badge-pill badge-danger'>{unread}</span> <Text id='notifications.unread'>Uleste varslinger. Klikk her for å se alle...</Text>\n                    </a>\n                </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Notifications;\n"],"sourceRoot":""}