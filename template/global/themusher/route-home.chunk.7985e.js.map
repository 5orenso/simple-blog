{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///./components/util/scrollIntoView.js","webpack:///./components/workout/totals.js","webpack:///./components/workout/status.js","webpack:///./components/story/add.js","webpack:///../node_modules/preact-pwa-install/src/util.js","webpack:///../node_modules/preact-pwa-install/src/index.js","webpack:///./components/install/index.js","webpack:///./components/team/publicFeed.js","webpack:///./components/user/invite.js","webpack:///./components/dog/scroller.js","webpack:///./components/user/updateSettings.js","webpack:///./components/story/publicFeed.js","webpack:///./components/team/teams.js","webpack:///./components/races/index.js","webpack:///./components/yrweather/index.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","initialState","subMenuMarginTop","isLoading","submenu","Home","observer","props","chooseSubmenu","e","setState","target","parentElement","dataset","menu","addNavigation","viewmenu","appState","stores","setSwipeRight","setSwipeLeft","route","destroyLog","workoutStore","cordovaDestroyLog","state","loadAll","this","userStore","messageStore","getFingerprint","getInfo","getNotifications","getUnReadMessages","componentDidMount","componentWillUnmount","componentWillReceiveProps","render","path","teamid","user","currentTeam","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","class","style","role","util","secToHms","format","href","id","data-menu","Component","ScrollIntoView","container","horizontal","vertical","behavior","inline","block","scrollIntoView","ref","c","WorkoutTotals","loadTeams","currentMonth","currentYear","teamStore","Date","getMonth","getFullYear","month","year","load","query","team","skipMusherWorkoutSummary","addData","nextProps","currentSeasonSummary","currentSeason","prevSeasonSummary","prevSeason","seasonStart","parseInt","findWorkoutSummary","findWorkoutSummaryTotal","value","distanceKm","smallUnit","elevation","duration","speedAvg","WorkoutStatus","loadWorkoutPlans","workoutPlanCurrent","workoutPlanStore","seasonYear","seasonMonth","workoutPlans","loadWorkoutSummary","getWorkoutSummary","dog","lastPlanMonth","workoutPlan","language","MONTHS","getMonths","findTeam","months","monthRange","map","planMonth","sumWorkoutPlanMonth","percCompleted","findWorkoutSummaryMonth","height","aria-valuenow","aria-valuemin","aria-valuemax","fields","name","showAddImage","showTeamChange","showChangeVisibility","showChangeType","sendButtonEnabled","StoryAdd","beforeImagesUploaded","afterImagesUploaded","addStory","body","response","story","callback","hashTags","postfix","topic","storyStore","length","tag","join","insert","type","title","pinned","images","public","urlText","url","currency","price","code","country","region","startDate","endDate","status","loadPublicFeed","hashtags","resizeTextarea","inputRef","addImage","data","addImages","push","removeImage","imageName","isArray","idx","findIndex","splice","changeVisibility","changePinned","changeType","toggleTeamChange","handleImageErrored","image","onerror","setTimeout","src","setPublicTeam","publicTeams","findPublicTeams","setFocus","hasFocus","removeFocus","col","offset","isAdmin","displayNameShort","firstname","ucfirst","lastname","email","userImage","undefined","teamId","darkmode","s3SmallLink","onClick","for","placeholder","onInput","linkState","onKeyUp","onFocus","data-id","disabled","onChange","teams","selected","checked","img","onError","data-name","object","updateField","before","after","autoOpen","getWindow","window","isStandalone","matchMedia","matches","navigator","standalone","dispatchToOnPrompt","CACHE","onPrompts","forEach","onPrompt","prompt","awaitInstallPrompt","installPromptListener","preventDefault","installPrompt","Promise","resolve","appInstalledListener","addEventListener","userChoice","then","choiceResult","outcome","success","removeEventListener","func","filter","reset","useInstaller","useState","setInstallPrompt","useEffect","cancel","installed","InstallButton","onclick","showAddComment","likeWorkout","idxSuggestion","idxAd","limit","hasFollowSugguestions","hasAd","sessionid","getTime","dataFields","TeamPublicFeed","setLoadMore","loadTeamsPublicFeed","unsetLoadMore","insertTopRanked","publicTeamsFeed","topRankedRandomized","shuffleArray","topRankedWorkouts","feed","i","randomPlace","randomInt","isObject","localUpdateField","insertAds","wrapperClassNames","contentClassNames","insertTeamConfirm","idxConfirm","insertTeamSuggestions","onTeamClick","stopPropagation","showTeam","hideTeam","onUserClick","onDogClick","dogid","dogs","showDog","hideDog","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","setInterval","postScrollview","getIntersectionObserverHistory","renderContent","obj","sort","componentWillMount","clearInterval","shortname","findPublicTeamByUuidv4","getImage","displayName","back","uuidv4","dataValues","Invite","inviteKennel","friendEmail","inviteSent","inviteNew","hideInvite","updateSetting","forceShow","settings","DogScroller","scrollImages","imageIdx","scrollLeft","clientWidth","nearestInt","Math","round","diff","abs","Number","isInteger","sortByName","a","b","allDogs","dogA","find","dogB","size","onScroll","dogId","onTouchstart","onTouchend","onTouchmove","d","indexOf","className","showName","showPosition","toggleSetting","field","hideSettings","summaryEmails","infoEmails","partnerEmails","loading","StoryPublicFeed","reloadStories","loadStoriesPublicFeed","appContainerScrollTop","setCheckForNewStories","checkForNewStoriesTimer","checkForNewStories","clearCheckForNewStories","publicFeed","topRankedStories","startPosition","now","date","parseInputDate","floor","endPosition","hashtag","holdingStore","key","hasNewStories","publicDogs","Teams","toggleTeam","unsetTeamIfSelected","dogStore","setCurrentTeam","isDefined","showAllTeams","highlight","showAll","classNames","MARKDOWN_OPTIONS","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","Races","toggleRaces","hideRaces","toggleFeature","racesFrontpage","setToggleFeature","scrollRaces","raceIdx","loadRace","raceStore","relevant","races","today","race","signupStartDate","signupEndDate","liveRace","s3LargeLink","active","markdown","replaceImages","ingress","markdownOpts","classes","distance","currentClass","formatDate","locale","YrWeather","toggleyrWeather","showWeather","loadWeather","currentLocationInfo","coords","getWeatherUser","lat","latitude","lon","longitude","altitude","formatWeather","yrWeather","yrWeatherKeys","yrWeatherFormatted","currentLocationGeocode","place","formatted_address","captureEvents","getNestedValue","night","morning","day","evening","getTemperatureColor","getWindSpeedColor","slice","w","isoTime","time","windDirection"],"mappings":"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","file":"route-home.chunk.7985e.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport InviteFriend from '../../components/user/invite';\nimport UserUpdate from '../../components/user/updateSettings';\nimport Install from '../../components/install';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport Teams from '../../components/team/teams';\nimport TeamPublicFeed from '../../components/team/publicFeed';\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\nimport YrWeather from '../../components/yrweather/';\nimport Races from '../../components/races/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'lastWorkouts',\n};\n\n@observer\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { appState, userStore, messageStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        await appState.getFingerprint();\n        await userStore.getInfo();\n\t\tawait userStore.getNotifications();\n\t\tawait messageStore.getUnReadMessages();\n\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tcomponentDidMount() {\n\t\t// this.addNavigation();\n\t\tthis.loadAll();\n\t}\n\n\t// Swipe navigation\n\taddNavigation = (props = this.props) => {\n        const { viewmenu } = props;\n        const { appState } = this.props.stores;\n\t\tif (viewmenu === 'wall') {\n\t\t\tappState.setSwipeRight();\n\t\t\tappState.setSwipeLeft(() => {\n\t\t\t\tappState.setSwipeLeft();\n\t\t\t\troute(`/home-workout`);\n\t\t\t});\n\t\t}\n\t\tif (viewmenu === 'workout') {\n\t\t\tappState.setSwipeLeft();\n\t\t\tappState.setSwipeRight(() => {\n\t\t\t\tappState.setSwipeRight();\n\t\t\t\troute(`/`);\n\t\t\t});\n\t\t}\n\t}\n\n\t// getState = async () => {\n\t// \tconst { workoutStore } = this.props.stores;\n\t// \tawait workoutStore.cordovaGetState();\n\t// \tawait workoutStore.cordovaProviderState();\n\t// \tawait workoutStore.cordovaIsPowerSaveMode();\n\t// \tawait workoutStore.cordovaGetLog();\n\t// }\n\n\tdestroyLog = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n\t\tworkoutStore.cordovaDestroyLog();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconst { appState } = this.props.stores;\n\t\tappState.setSwipeRight();\n\t\tappState.setSwipeLeft();\n\t}\n\t// /Swipe navigation\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps.viewmenu, this.props.viewmenu);\n        if (nextProps.viewmenu !== this.props.viewmenu) {\n            // this.addNavigation(nextProps);\n        }\n    }\n\n\trender() {\n\t\tconst { isLoading, submenu, showDrawerProfile } = this.state;\n\t\tconst { viewmenu, path, teamid, scrollToTop } = this.props;\n\t\tconst { userStore, appState, workoutStore } = this.props.stores;\n\t\t// const { workoutPlan, workoutPlans } = workoutPlanStore;\n\t\tconst { darkmode, viewmode, apiServer } = appState;\n\t\tconst { isAdmin, user } = userStore;\n\t\tconst { currentLocationGeocode = {}, yrWeatherKeys = [] } = user;\n\t\tconst { formatted_address: place } = currentLocationGeocode;\n\n\t\tconst { currentTeam, cordovaActiveTrackingParams, cordovaAuthorizationStatus, powerSaveStatus,\n\t\t\tproviderState, log, isRunning, totalDistance, geoLocationState, bgGeo, currentSpeed, totalTime, workouts } = workoutStore;\n\n\t\treturn (<>\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\n{/* <button class='btn btn-block btn-primary' onClick={this.openDrawer}>Open drawer</button> */}\n\n{/* <xmp>bgGeo: {JSON.stringify(bgGeo, null, 4)}</xmp> */}\n\n{/* <button class='btn btn-success btn-block' onClick={this.getState}>Get State</button>\n<button class='btn btn-success btn-block' onClick={this.destroyLog}>Destroy log</button>\n<xmp>cordovaAuthorizationStatus: {JSON.stringify(cordovaAuthorizationStatus, null, 4)}</xmp>\n<xmp>cordovaActiveTrackingParams: {JSON.stringify(cordovaActiveTrackingParams, null, 4)}</xmp>\n<xmp>geoLocationState: {JSON.stringify(geoLocationState, null, 4)}</xmp>\n<xmp>powerSaveStatus: {JSON.stringify(powerSaveStatus, null, 4)}</xmp>\n<xmp>providerState: {JSON.stringify(providerState, null, 4)}</xmp>\n<xmp>isRunning: {JSON.stringify(isRunning, null, 4)}</xmp>\n<xmp>totalDistance: {JSON.stringify(totalDistance, null, 4)}</xmp>\n<xmp>currentSpeed: {JSON.stringify(currentSpeed, null, 4)}</xmp>\n<xmp>totalTime: {JSON.stringify(totalTime, null, 4)}</xmp>\n<xmp>workoutStore.workouts: {JSON.stringify(workouts.length, null, 4)}</xmp> */}\n\n{/* {log && <>{JSON.stringify(log.split('\\n').map(e => `${e}\\n`), null, 4)}</>} */}\n\n\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(currentSpeed * 3.6, 1)} km/t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(totalDistance / 1000, 2)} km</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t{/* <xmp>{JSON.stringify(window.cordova, null, 4)}</xmp> */}\n\t\t\t\t{/* <div class=''>\n\t\t\t\t\t{user.id && <YrWeather stores={this.props.stores} place={place} yrWeather={yrWeatherKeys.join(',')} />}\n\t\t\t\t</div> */}\n\n\t\t\t\t{user.id && <StoryAdd stores={this.props.stores} />}\n\n\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='w-100 overflow-hidden'>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass='d-flex flex-row flex-nowrap pb-2 px-1'\n\t\t\t\t\t\t\t\tstyle='overflow: auto; scroll-snap-type: x mandatory;'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-pill-left rounded-none ${viewmenu === 'wall' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='wall'\n\t\t\t\t\t\t\t\t\t\thref='/'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-comments' /> <Text id='home.wall'>Veggen</Text>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-pill-right rounded-none ${viewmenu === 'workout' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='workout'\n\t\t\t\t\t\t\t\t\t\thref='/home-workout'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-running' />  <Text id='home.feed'>Feed</Text>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/* <div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${viewmenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\t\thref='/home-totals'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-tachometer-alt' /> <Text id='home.totals'>Totaler</Text>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\n\t\t\t\t{viewmenu === 'wall' && <>\n\t\t\t\t\t<Races stores={this.props.stores} />\n\t\t\t\t\t<StoryPublicFeed stores={this.props.stores} path={path} />\n\t\t\t\t</>}\n\t\t\t\t{viewmenu === 'workout' && <>\n\t\t\t\t\t<TeamPublicFeed stores={this.props.stores} teamid={teamid} />\n\t\t\t\t</>}\n\t\t\t\t{viewmenu === 'totals' && <>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} />\n\t\t\t\t\t\t<WorkoutTotals stores={this.props.stores} currentTeam={currentTeam} />\n\t\t\t\t\t\t<WorkoutStatus stores={this.props.stores} currentTeam={currentTeam} />\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t</div>\n\t\t</>);\n\t}\n}\n\nexport default Home;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\n@observer\nclass WorkoutTotals extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    async loadAll(props = this.props) {\n        await this.loadTeams(props);\n        // await Promise.all([\n        //     this.loadTeams(props),\n        // ]);\n    }\n\n    async loadTeams(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear, currentTeam } = props;\n\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true, year, month }, addData: ['workoutSummary'] });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.year !== this.props.year || nextProps.currentTeam !== this.props.currentTeam) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    render() {\n        const { teamStore } = this.props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear, currentTeam, currentSeason: currentSeasonSummary, prevSeason: prevSeasonSummary } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        const { workoutSummary } = teamStore;\n        const prevSeason = prevSeasonSummary || ((currentTeam ? teamStore.findWorkoutSummary(currentTeam, seasonStart - 1) : teamStore.findWorkoutSummaryTotal(seasonStart - 1)) || {});\n        const currentSeason = currentSeasonSummary || ((currentTeam ? teamStore.findWorkoutSummary(currentTeam, seasonStart) : teamStore.findWorkoutSummaryTotal(seasonStart)) || {});\n\n        return (\n            <div class='container-fluid mb-2'>\n                <div class='row mt-2 border-top'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-road' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            <Distance stores={this.props.stores} value={currentSeason.distanceKm || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-road' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            <Distance stores={this.props.stores} value={prevSeason.distanceKm || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                </div>\n                <div class='row mt-2'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-mountain' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            <Elevation stores={this.props.stores} value={currentSeason.elevation || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-mountain' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            <Elevation stores={this.props.stores} value={prevSeason.elevation || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                </div>\n                <div class='row mt-2'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-clock' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            {util.secToHms(currentSeason.duration || 0)}\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-clock' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            {util.secToHms(prevSeason.duration || 0)}\n                        </h3>\n                    </div>\n                </div>\n                <div class='row mt-2 border-bottom'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-tachometer-alt' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            <Speed stores={this.props.stores} value={currentSeason.speedAvg || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-tachometer-alt' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            <Speed stores={this.props.stores} value={prevSeason.speedAvg || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default WorkoutTotals;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutStatus extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    async loadAll(props = this.props) {\n        // await Promise.all([\n        //     this.loadTeams(props),\n        //     this.loadWorkoutPlans(props),\n        //     this.loadWorkoutSummary(props),\n        // ]);\n    }\n\n    async loadTeams(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear, currentTeam } = props;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true, year, month }, addData: ['workoutSummary'] });\n\t}\n\n    loadWorkoutPlans = async (props = this.props) => {\n\t\tconst { workoutPlanStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { year = currentYear, month = currentMonth, currentTeam } = props;\n\t\tconst seasonStart = parseInt(year || (month < 8 ? year - 1 : year), 10);\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t\tseasonMonth: 6,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t}\n\t\t}\n\t}\n\n    async loadWorkoutSummary(props = this.props) {\n        const { year, currentTeam, dog } = props;\n\t\tconst { userStore } = props.stores;\n        await userStore.getWorkoutSummary({ team: currentTeam, year, dog });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.year !== this.props.year || nextProps.currentTeam !== this.props.currentTeam) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    render() {\n\t\tconst { currentSeason, prevSeason, currentTeam } = this.props;\n\n        const { userStore, workoutPlanStore, teamStore } = this.props.stores;\n        const { workoutPlan } = workoutPlanStore;\n        const { user, workoutSummaryTeam } = userStore;\n        const { language = 'en' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n\t\tconst team = teamStore.findTeam(currentTeam) || {};\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n        const { year = currentYear, month = currentMonth } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n        const months = util.monthRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        let lastPlanMonth;\n\n        return (\n            <div class='container-fluid mb-2'>\n                <div class='row mt-2'>\n                    <div class='col-12'>\n                        <h5>\n                            <span style='display: none;'>{workoutPlan.id}</span>\n                            <Text id='workout.totals.title'>Treningsplanstatus</Text>\n                        </h5>\n                    </div>\n                </div>\n                <div class='row mt-2 border-bottom pb-2'>\n                    {months && months.map((month) => {\n                        if (month.year > year || (month.year === year && month.month >= month)) {\n                            return '';\n                        }\n                        const planMonth = workoutPlanStore.sumWorkoutPlanMonth(month.year, month.month + 1);\n                        if (!planMonth) {\n                            return '';\n                        }\n                        lastPlanMonth = planMonth;\n                        const summaryMonth = userStore.findWorkoutSummaryMonth(month.year, month.month + 1);\n                        const percCompleted = summaryMonth / planMonth * 100;\n                        const height = percCompleted > 100 ? 100 : util.format(percCompleted, 0);\n                        return (\n                            <div class='col-3 text-center'>\n                                {/* <div class='w-100 mt-1'>\n                                    <small class='text-muted'>\n                                        {planMonth}km\n                                    </small>\n                                    <small class='text-info'>\n                                        {summaryMonth}km\n                                    </small>\n                                </div> */}\n                                <div class='px-auto w-100 clearfix'>\n                                    <div class={`progress ${style['progress-bar-vertical']}`}\n                                        style={' margin-left: calc(50% - 20px);'}\n                                    >\n                                        <div class='progress-bar progress-bar-striped bg-success' role='progressbar'\n                                            style={`height: ${height}%; width: 40px;`}\n                                            aria-valuenow={height} aria-valuemin='0' aria-valuemax='100'\n                                        >\n                                            {util.format(percCompleted, 0)}%\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class='w-100 mt-1'>\n                                    {MONTHS[month.month]} {month.year}\n                                </div>\n                            </div>\n                        );\n                    })}\n                    {!lastPlanMonth && <div class='col-12 text-center text-muted mb-5'>\n                        <div class='display-1'>\n                            <i class='far fa-sad-tear' />\n                        </div>\n                        <h3 class='font-weight-lighter'>\n                            <Text id='workout.plan.no-workout-plan-found' fields={{ name: team.name }}>Ingen treningsplaner funnet for team {team.name}.</Text>\n                        </h3>\n                        <a class='btn btn-success btn-lg mt-3' href='/workouts/plan'><i class='fas fa-calendar-alt' /> <Text id='workout.plan.new'>New workoutplan</Text></a>\n                    </div>}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default WorkoutStatus;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddImage: false,\n    showTeamChange: false,\n    showChangeVisibility: false,\n    showChangeType: false,\n    sendButtonEnabled: true,\n};\n\n@observer\nclass StoryAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            story: {\n                type: 1,\n                title: '',\n                body: '',\n                images: [],\n                public: 1,\n                urlText: '',\n                url: '',\n                currency: '',\n                price: 0,\n                code: '',\n                country: '',\n                region: '',\n                startDate: '',\n                endDate: '',\n            },\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    addStory = async () => {\n        const { story = {}, showAddImage, sendButtonEnabled } = this.state;\n        const { callback = () => {}, hashTags = [], postfix, topic = `team-${story.team}` } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        if (!sendButtonEnabled) {\n            return false;\n        }\n\n        if (!story.body) {\n            return false;\n        }\n        this.setState({ sendButtonEnabled: false });\n\n        let body = story.body;\n        if (postfix) {\n            body += `\\n\\n${postfix}`;\n        }\n        if (hashTags && hashTags.length > 0) {\n            body += `\\n\\n${hashTags.map(tag => `#${tag}`).join(' ')}`;\n        }\n\n\t\tconst response = await storyStore.insert({\n            type: story.type,\n            title: story.title,\n            body,\n            pinned: story.pinned,\n            images: story.images,\n            public: story.public ? 1 : 0,\n            team: story.team,\n            urlText: story.urlText,\n            url: story.url,\n            currency: story.currency,\n            price: story.price,\n            code: story.code,\n            country: story.country,\n            region: story.region,\n            startDate: story.startDate,\n            endDate: story.endDate,\n            topic,\n        });\n\t\tif (response && response.status === 201) {\n            await storyStore.loadPublicFeed({ hashtags: hashTags });\n            this.setState({\n                story: {\n                    type: 1,\n                    title: '',\n                    body: '',\n                    pinned: null,\n                    images: [],\n                    public: 1,\n                    urlText: '',\n                    url: '',\n                    currency: '',\n                    price: null,\n                    code: '',\n                    country: '',\n                    region: '',\n                    startDate: null,\n                    endDate: null,\n                },\n            }, () => {\n                mu.resizeTextarea(this.inputRef['newStoryBody']);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback(response.data);\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { story } = this.state;\n        story.images.push(...value);\n        this.setState({ story });\n    }\n\n    removeImage = async (e) => {\n        const { story } = this.state;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        if (util.isArray(story.images)) {\n            const idx = story.images.findIndex(e => e.name === imageName);\n            if (idx > -1) {\n                story.images.splice(idx, 1);\n            }\n        }\n        this.setState({ story });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    changeVisibility = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changePinned = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changeType = () => {\n        const { showChangeType } = this.state;\n        this.setState({\n            showChangeType: !showChangeType,\n        });\n    }\n\n    toggleTeamChange = () => {\n        const { showTeamChange } = this.state;\n        this.setState({\n            showTeamChange: !showTeamChange,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    setPublicTeam = () => {\n        const { userStore } = this.props.stores;\n        const publicTeams = userStore.findPublicTeams();\n        if (util.isArray(publicTeams) && publicTeams.length > 0) {\n            const { story } = this.state;\n            story.team = publicTeams[0].id;\n            this.setState({ story });\n        }\n    }\n\n    setFocus = (e) => {\n        this.setState({ hasFocus: true });\n        mu.resizeTextarea(e.target);\n    }\n\n    removeFocus = (e) => {\n        this.setState({ hasFocus: false });\n    }\n\n    componentDidMount() {\n        this.setPublicTeam();\n\t}\n\n    render() {\n        const { col = 12, offset = 0, hashTags = [] } = this.props;\n        const { story = {}, showAddImage, showTeamChange, showChangeVisibility, showChangeType, sendButtonEnabled, hasFocus } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { user = {}, isAdmin } = userStore;\n        // const team = userStore.findTeam(story.team || user.team, true) || {};\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        let userImage = user.image || (user.images ? user.images[0] : undefined);\n        if (story.team) {\n            const teamId = parseInt(story.team, 10);\n            const team = userStore.findTeam(teamId, true);\n            userImage = team.image || (team.images ? team.images[0] : undefined);\n        }\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100 px-0'>\n                <div class='row'>\n\n                    <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 rounded rounded-lg pt-3 pb-1 bg-${darkmode ? 'black' : 'white'} shadow-sm mb-1`}>\n                        <div class='d-flex mb-0 position-relative w-100'>\n                            <div class='position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall pointerCursor`}\n                                    style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                                    onClick={this.toggleTeamChange}\n                                >\n                                    {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='position-absolute' style='top: 16px; right: 0px;'>\n                                    <small class='text-white' style='font-size: 1.5em;'>\n                                        <i class='fas fa-caret-down pointerCursor' onClick={this.toggleTeamChange} />\n                                    </small>\n                                </div>\n                            </div>\n                            <div class='col pl-3 pr-0' style='line-height: 1.2em;'>\n                                <div class='d-flex bd-highlight'>\n                                    <div class='p-0 w-100 bd-highlight'>\n                                        <label class='sr-only' for='inlineFormInput'><Text id='story.body'>Story</Text></label>\n                                        <div class='border rounded rounded-lg position-relative'>\n                                            <Localizer>\n                                                <textarea\n                                                    class='form-control-plaintext px-2'\n                                                    type='text'\n                                                    placeholder={<Text id='story.write-body'>Hva tenker du på?..</Text>}\n                                                    onInput={linkState(this, 'story.body')}\n                                                    onKeyUp={mu.resizeTextarea}\n                                                    onFocus={this.setFocus}\n                                                    style='height: 2.3em;'\n                                                    value={story.body}\n                                                    ref={c => this.inputRef['newStoryBody'] = c}\n                                                />\n                                            </Localizer>\n                                            {hasFocus && <div class='position-absolute' style='bottom: 8px; right: 10px; font-size: 1.2em;'>\n                                                <i class='fas fa-image pointerCursor'\n                                                    data-id={story.id}\n                                                    onClick={this.addImage}\n                                                />\n                                                <i class={`fas fa-${story.public === 1 ? 'globe-europe' : 'users'} pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeVisibility}\n                                                />\n                                                {isAdmin && <i class={`fas fa-cog pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeType}\n                                                />}\n                                            </div>}\n                                        </div>\n                                        {hashTags && hashTags.length > 0 && <>\n                                            {hashTags.map(tag => <>\n                                                <span class='badge badge-secondary mr-2 my-1'>\n                                                    <a href={`/stories/tag/${tag}`} class='text-white'>#{tag}</a>\n                                                </span>\n                                            </>)}\n                                        </>}\n                                    </div>\n                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight pt-auto'>\n                                        <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} ml-1`} disabled={!sendButtonEnabled}\n                                            onClick={this.addStory}\n                                        ><i class='fas fa-paper-plane' /></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class='row'>\n                                {showTeamChange && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.team')}\n                                                    onChange={this.toggleTeamChange}\n                                                >\n                                                    <option value=''>-- <Text id='story.team-choose'>Velg team</Text> --</option>\n                                                    {util.isArray(user.teams) && user.teams.map((teamId) => {\n                                                        const team = userStore.findTeam(teamId, true);\n                                                        if (team && team.public) {\n                                                            return (<option value={team.id} selected={story.team == team.id ? 'selected' : ''}>{team.name}</option>);\n                                                        }\n                                                        return '';\n                                                    })}\n                                                    \n                                                    {!user.teams && <>\n                                                        <option value=''>No public teams</option>\n                                                    </>}\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeVisibility && <>\n                                    {isAdmin && <>\n                                        <div class='col-12 text-center mt-2'>\n                                            <div class='form-group'>\n                                                <small>\n                                                    <label for='pinned'>Pinned to top:</label><input id='pinned' type='checkbox' onInput={linkState(this, 'story.pinned')} value={1} checked={story.pinned ? 1 : 0} />\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </>}\n\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.public')}\n                                                    value={story.public}\n                                                    onChange={this.changeVisibility}\n                                                >\n                                                    <option value={0} selected={story.public == 0 ? 'selected' : ''}>👥 <Text id='story.visibility-followers'>Kun synlig for de som følger deg.</Text></option>\n                                                    <option value={1} selected={story.public == 1 ? 'selected' : ''}>🌍 <Text id='story.visibility-public'>Synlig for alle som bruker appen.</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeType && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.type')}\n                                                    value={story.type}\n                                                    onChange={this.changeType}\n                                                >\n                                                <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                                    <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                                    <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                                    <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showAddImage && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='container-fluid'>\n                                            <div class='row'>\n                                                {util.isArray(story.images) && story.images.map(img => (\n                                                    <div class='col-3 p-1'>\n                                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                        <button class='btn btn-sm btn-link'\n                                                            onClick={this.removeImage}\n                                                            data-name={img.name}\n                                                        ><i class='fas fa-trash' /> Del</button>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                        <Images object={story} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                                    </div>\n                                </>}\n\n                                {story.type > 1 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url-text'>URL text</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='urlText'\n                                                    onInput={linkState(this, 'story.urlText')}\n                                                    value={story.urlText}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url'>URL</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='url'\n                                                    onInput={linkState(this, 'story.url')}\n                                                    value={story.url}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n\n                                {story.type == 2 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.code'>Code</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='code'\n                                                    onInput={linkState(this, 'story.code')}\n                                                    value={story.code}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.region'>Region</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='region'\n                                                    onInput={linkState(this, 'story.region')}\n                                                    value={story.region}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.country'>Country</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='country'\n                                                    onInput={linkState(this, 'story.country')}\n                                                    value={story.country}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-4'>\n                                        <label><Text id='story.currency'>Currency</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='currency'\n                                                    onInput={linkState(this, 'story.currency')}\n                                                    value={story.currency}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-8'>\n                                        <label><Text id='story.price'>Price</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='price'\n                                                    onInput={linkState(this, 'story.price')}\n                                                    value={story.price}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","/** Object.assign ponyfill (note: used by Rollup)\n *\t@private\n */\nexport function assign(obj) {\n\tfor (let i=1; i<arguments.length; i++) {\n\t\t// eslint-disable-next-line guard-for-in, prefer-rest-params\n\t\tfor (let p in arguments[i]) obj[p] = arguments[i][p];\n\t}\n\treturn obj;\n}\n\n\nexport function getWindow() {\n\ttry {\n\t\tif (window) return window;\n\t}\n\tcatch (e) {\n\t\treturn;\n\t}\n}\n\n","import { h, Component } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\nimport { assign, getWindow } from './util'; // eslint-disable-line no-unused-vars\n\n/**\n * Returns true if the application is running as an installed PWA.\n *\n * @example\n * let isStandalone = isStandAlone();\n *\n */\nexport function isStandalone() {\n\tlet window = getWindow();\n\tif (!window) return false;\n\n\treturn window.matchMedia && window.matchMedia('(display-mode: standalone)').matches && true ||\n            window.navigator && window.navigator.standalone === true || false;\n}\n\nconst CACHE = {\n\tprompt: null,\n\tinstallPromptListener: null,\n\tappInstalledListener: null,\n\tonPrompts: []\n};\n\n/**\n * Any window listeners and cached prompts that have been captured by awaitInstallPrompt() are removed.\n */\nexport function reset() {\n\tlet window = getWindow();\n\tif (CACHE.installPromptListener) {\n\t\twindow && window.removeEventListener && window.removeEventListener('beforeinstallprompt', CACHE.installPromptListener);\n\t\tCACHE.installPromptListener = null;\n\t}\n\tif (CACHE.appInstalledListener) {\n\t\twindow && window.removeEventListener && window.removeEventListener('appinstalled', CACHE.appInstalledListener);\n\t\tCACHE.appInstalledListener = null;\n\t}\n\tCACHE.prompt = null;\n\tCACHE.onPrompts = [];\n}\n\nfunction removeOnPrompt(func) {\n\tCACHE.onPrompts = CACHE.onPrompts.filter(onPrompt => onPrompt !== func);\n}\n\nfunction dispatchToOnPrompt() {\n\tCACHE.onPrompts.forEach(onPrompt => onPrompt(CACHE.prompt));\n}\n\n/**\n * This function allows you to listen to the browser for the install prompt\n * that allows you to install the application standalone.\n *\n * Different browsers have different criteria for when this prompt is made available.\n * Currently Chrome requires that  the user \"interact\" with the content on your domain\n * for at least 30 seconds.\n *\n * More info can be found here:\n * https://developers.google.com/web/fundamentals/app-install-banners/\n *\n * awaitInstallPrompt offers the following capabilities:\n * * Listen to the browser for an install prompt.\n * * Stop listening at any time.\n * * Trigger the prompt to request app installation.\n *\n * @param {Function} onPrompt (prompt, cancel) => {} A function that will be called when\n * the browser delivers a prompt that we can present. The first argument prompt is a function\n * you can call at any time the triggers the install process. cancel is another function\n * that allows you to stop listening for prompts.\n *\n * @returns {Function} An function that when called, will stop listening for incoming prompts from the browser.\n *\n * @example\n * let cancel = awaitInstallPrompt((prompt) => {\n *      prompt().then(\n *          success => console.log(\n *              success && 'Successfully installed app as PWA.'\n *                      || 'User abandoned install.'\n *          )\n *      )\n * })\n */\nexport function awaitInstallPrompt(onPrompt) {\n\tif (!CACHE.installPromptListener) {\n\t\tlet window = getWindow();\n\t\tif (!window || isStandalone()) return null;\n\t\tCACHE.installPromptListener = e => {\n\t\t\te.preventDefault();\n\t\t\tlet installPrompt = e;\n\t\t\tCACHE.prompt = () =>  new Promise(resolve => {\n\t\t\t\tCACHE.appInstalledListener = () => {\n\t\t\t\t\tresolve(true);\n\t\t\t\t};\n\t\t\t\twindow.addEventListener('appinstalled', CACHE.appInstalledListener);\n\t\t\t\tinstallPrompt.prompt();\n\t\t\t\tinstallPrompt.userChoice.then(choiceResult => {\n\t\t\t\t\tchoiceResult.outcome !== 'accepted' && resolve(false);\n\t\t\t\t});\n\t\t\t}).then(success => {\n\t\t\t\tinstallPrompt = null;\n\t\t\t\tCACHE.appInstalledListener && window.removeEventListener('appinstalled', CACHE.appInstalledListener);\n\t\t\t\tif (success) {\n\t\t\t\t\tCACHE.prompt = null;\n\t\t\t\t\tdispatchToOnPrompt();\n\t\t\t\t}\n\t\t\t\treturn success;\n\t\t\t});\n\t\t\tdispatchToOnPrompt();\n\t\t};\n\t\twindow.addEventListener('beforeinstallprompt', CACHE.installPromptListener);\n\t}\n\tif (onPrompt) {\n\t\tCACHE.onPrompts.push(onPrompt);\n\t\tCACHE.prompt && onPrompt(CACHE.prompt);\n\t\treturn () => removeOnPrompt(onPrompt);\n\t}\n\treturn () => reset();\n}\n\n/**\n * A Higher Order Component that implements the awaitInstallPrompt() lifecycle and provides\n * the wrapped component with only the meaning full artifacts as props:\n *\n * Props:\n * * isStandalone - true if the app is running in standalone mode.\n * * installPrompt - the prompt function that you call at any time.\n *\n * @example\n * export installer()(\n *      function({isStandalone, installPrompt}){\n *          return (\n *              isStandalone && <p>Running as Standalone</p> ||\n *              installPrompt && <a href=\"#\" onclick={installPrompt}>Install App</a>\n *          );\n *      }\n * );\n */\nexport function installer() {\n\treturn Child => {\n\t\tclass Installer extends Component {\n\n\t\t\tstatic getDerivedStateFromProps(props, state) {\n\t\t\t\treturn state.isStandalone === undefined && { isStandalone: isStandalone() };\n\t\t\t}\n\n\t\t\tcancel() {\n\t\t\t\tthis.setState({ prompt: null });\n\t\t\t\tthis.canceltoken && this.canceltoken();\n\t\t\t}\n        \n\t\t\tcomponentDidMount() {\n\t\t\t\tif (this.state.isStandalone === false) {\n\t\t\t\t\tthis.canceltoken = awaitInstallPrompt(prompt => {\n\t\t\t\t\t\tthis.setState({ prompt });\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tcomponentWillUnmount() {\n\t\t\t\tthis.cancel();\n\t\t\t}\n        \n\t\t\trender(props, { isStandalone, prompt }) {\n\t\t\t\treturn h(Child, { ...props, isStandalone, installPrompt: prompt } );\n\t\t\t}\n\t\t}\n\t\treturn Installer;\n\t};\n}\n\n/**\n * A Hook that implements the awaitInstallPrompt() lifecycle and returns\n * an object that contains the isStandalone and installPrompt props:\n *\n * @returns {Object}\n * * isStandalone - true if the app is running in standalone mode.\n * * installPrompt - the prompt function that you call at any time.\n */\nexport function useInstaller() {\n\tconst [standalone] = useState(isStandalone());\n\tconst [installPrompt, setInstallPrompt] = useState(null);\n\tuseEffect(() => awaitInstallPrompt((prompt, cancel) => {\n\t\tsetInstallPrompt({ prompt: () =>\n\t\t\tprompt().then(installed => {\n\t\t\t\tinstalled && cancel();\n\t\t\t\treturn installed;\n\t\t\t})\n\t\t});\n\t}));\n\treturn ({ isStandalone: standalone, installPrompt: installPrompt && installPrompt.prompt });\n}\n\nexport default useInstaller;\n","import { h } from 'preact';\nimport { useInstaller } from 'preact-pwa-install';\nimport { Text } from 'preact-i18n';\n\nexport default function InstallButton() {\n\tconst { installPrompt, isStandalone } = useInstaller();\n\treturn installPrompt && (\n        <div class='text-center'>\n            <a class='btn btn-success' href=\"#\" onclick={installPrompt}>\n                <Text id='install.install-app'>Install The Musher</Text>\n            </a>\n        </div>\n    ) || isStandalone && '';\n}\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport TeamConnectBoxes from './connect-boxes';\nimport TeamConnectConfirm from './connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from './fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\n\nimport TeamPublicFeedLine from './publicFeedLine';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n    // viewImageIdx: {},\n    likeWorkout: {},\n    idxSuggestion: 0,\n    idxAd: 4,\n    limit: 10,\n    offset: 0,\n    hasFollowSugguestions: false, \n    hasAd: false,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n@observer\nclass TeamPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeamsPublicFeed({ props = this.props, limit, offset }) {\n\t\tconst { teamStore } = props.stores;\n        const { teamid } = props;\n\t\tawait teamStore.loadPublicFeed({ limit, offset, sort: '-createdDate', teamid });\n\t}\n\n    setLoadMore = () => {\n        const { teamStore } = this.props.stores;\n        teamStore.setLoadMore(() => {\n            const { teamid } = this.props;\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadTeamsPublicFeed({ limit, offset, teamid });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { teamStore } = this.props.stores;\n        teamStore.setLoadMore(() => {});\n    }\n\n    async loadAll(props = this.props) {\n        const { limit } = this.state;\n        const { teamid } = props;\n\t\tawait this.loadTeamsPublicFeed({ props, limit, offset: 0, teamid });\n        // this.insertTopRanked();\n        // this.insertAds();\n        // this.insertTeamConfirm();\n        // this.insertTeamSuggestions();\n    }\n\n    insertTopRanked = () => {\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed, topRankedWorkouts } = teamStore;\n        const topRankedRandomized = util.shuffleArray(topRankedWorkouts);\n        const feed = [...publicTeamsFeed];\n        for (let i = 0, l = 3; i < l; i += 1) {\n            const randomPlace = mu.randomInt(0, 7);\n            if (util.isObject(topRankedRandomized[i])) {\n                feed.splice(randomPlace, 0, topRankedRandomized[i]);\n            }\n        }\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const feed = [...publicTeamsFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: '', contentClassNames: '' });\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const feed = [...publicTeamsFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: '', contentClassNames: '' });\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const feed = [...publicTeamsFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: '', contentClassNames: '' });\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { teamStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => teamStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { teamStore } = this.props.stores;\n        teamStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        // teamStore.cleanupMemory();\n    }\n\n\tcomponentDidMount() {\n        this.loadAll();\n        this.setLoadMore();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps.viewmenu, this.props.viewmenu);\n        if (nextProps.teamid !== this.props.teamid) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        return (<>\n            <TeamPublicFeedLine\n                stores={this.props.stores}\n                feed={obj}\n                idx={idx}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n                onDogClick={this.onDogClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { showTeam, showDog, handleIntersection, sessionid, dogs } = this.state;\n        const { teamStore, appState } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const { path, darkmode } = appState;\n        const { teamid } = this.props;\n        const team = teamStore.findPublicTeamByUuidv4(teamid);\n        \n        const image = mu.getImage({ team });\n        let shortname;\n        let name;\n        let username;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n        }\n\n\n        return (<>\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} hideTeam={this.hideTeam} />\n            </Overlay>}\n\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={dogs} />\n            </Overlay>}\n\n            <div class='w-100'>\n                {team ? <>\n                    <div class='row pb-3 pt-3'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n                            <div class='row'>\n                                <h3>\n                                    <div class='d-flex position-relative'>\n                                        <div\n                                            class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                            style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                                        >\n                                            {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                                        </div>\n                                        <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                                            <h3 class='mb-1'>\n                                                {team.public ? <>\n                                                    <a href={`/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a>\n                                                </> : <>\n                                                    {name}\n                                                </>}\n                                            </h3>\n                                        </div>\n                                    </div>\n                                </h3>\n                            </div>\n                        </div>\n                    </div>\n                </> : <>\n                    <TeamConnectConfirm stores={this.props.stores} />\n                </>}\n\n                {(!publicTeamsFeed || publicTeamsFeed.length === 0) && <>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-chart-area' /></div>\n                            <h3><Text id='search.no-workouts-found'>No workouts found.</Text></h3>\n                            <Text id='teams.no-public-workouts-text'>Please follow more teams to see their workout activity on this page. This is a great way to get updates from all your favorite mushers.</Text>\n                        </div>\n                        <div class='text-center mt-3'>\n                            <a href='/teams/connect' class='btn btn-primary'>\n                                <i class='fas fa-users' /> <Text id='header.connect-team'>Follow teams</Text>\n                            </a>\n                        </div>\n                    </div>\n                </>}\n\n                <FastList\n                    data={publicTeamsFeed}\n                    wrapperClassNames={'row pb-1'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    dataValues={{ type: '10' }}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n            </div>\n        </>);\n    }\n}\n\nexport default TeamPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\n@observer\nclass Invite extends Component {\n    inviteKennel = async () => {\n        const { friendEmail: email } = this.state;\n\t\tconst { userStore } = this.props.stores;\n        const response = await userStore.inviteKennel({ email });\n        this.setState({\n            response,\n            inviteSent: true,\n        });\n    }\n\n    inviteNew = () => {\n        this.setState({\n            inviteSent: false,\n        });\n    }\n\n    hideInvite = async () => {\n        const { userStore } = this.props.stores;\n        await userStore.updateSetting({ 'settings.hideInvite': 1 });\n        this.setState({\n            hideInvite: true,\n        });\n    }\n\n    render() {\n        const { inviteSent, hideInvite } = this.state;\n\t\tconst { userStore } = this.props.stores;\n        const { forceShow } = this.props;\n        const { user } = userStore;\n        const { settings = {} } = user;\n        if (!forceShow && settings.hideInvite || hideInvite) {\n            return '';\n        }\n        if (inviteSent) {\n            return (\n                <div class='col-12'>\n                    <Text id='users.invite.thanks'>Takk for at du hjelper oss til å bli flere 😃</Text>\n                    <button type='button' class='btn btn-sm btn-link mb-2' onClick={this.inviteNew}>\n                        <Text id='users.invite.more'>Invitere flere</Text>\n                    </button>\n                </div>\n            );\n        }\n        return (\n            <div class='col-12 pb-4 clearfix'>\n                <h5><Text id='users.invite.title'>Inviter ny kennel til The Musher</Text></h5>\n                <p>\n                    <Text id='users.invite.text'>Jeg håper du vil hjelpe oss til å bli flere. Appen vil bli lansert veldig snart og det er påtide å invitere inn flere brukere.</Text>\n                </p>\n                <div>\n                    <div class='form-row align-items-center'>\n                        <div class='col-auto'>\n                            <label class='sr-only' for='inlineFormInput'><Text id='users.invite.email'>E-post</Text></label>\n                            <Localizer>\n                                <input type='text' class='form-control form-control-sm mb-2' id='inlineFormInput'\n                                    placeholder={<Text id='users.invite.email-placeholder'>E-post til ny kennel</Text>}\n                                    onInput={linkState(this, 'friendEmail')}\n                                />\n                            </Localizer>\n                        </div>\n                        <div class='col-auto'>\n                            <button type='button' class='btn btn-sm btn-primary mb-2' onClick={this.inviteKennel}>\n                                <Text id='users.invite.send'>Send invitasjon</Text>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                {!forceShow && <button type='button' class='btn btn-sm btn-link mb-2 float-left' onClick={this.hideInvite}>\n                    <i class='fas fa-eye-slash' /> <Text id='users.invite.hide'>Skjul</Text>\n                </button>}\n            </div>\n        );\n    }\n}\n\nexport default Invite;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DogSimplePublic from './simplePublic';\n\n@observer\nclass DogScroller extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageIdx: 0,\n        };\n    }\n\n    scrollImages = (e) => {\n        const { dogs } = this.props;\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const imageStep = clientWidth;\n        const imageIdx = scrollLeft / imageStep;\n        // console.log({ e, imageStep, imageIdx, scrollLeft, scrollWidth, clientWidth });\n\n        const nearestInt = Math.round(imageIdx);\n        const diff = Math.abs(nearestInt - imageIdx);\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(imageIdx) || diff < 0.1) {\n            this.setState({\n                imageIdx: nearestInt,\n            });\n        }\n    }\n\n    sortByName = (a, b) => {\n        const { allDogs = [] } = this.props;\n        const dogA = allDogs.find(e => e.id === a);\n        const dogB = allDogs.find(e => e.id === b);\n        if (dogA && dogB) {\n            if (dogA.name > dogB.name) {\n                return 1;\n            }\n        }\n        return -1;\n    }\n\n    render() {\n        const { imageIdx } = this.state;\n        const { dogs, allDogs = [], size = 'medium', onDogClick = () => {} } = this.props;\n\n        return (\n            <div class='w-100'>\n                <div\n                    class='d-flex flex-row flex-nowrap no-scrollbar'\n                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                    onScroll={this.scrollImages}\n                >\n                    {dogs && dogs.sort(this.sortByName).map((dogId, idx) => {\n                        const dog = allDogs.find(e => e.id === dogId);\n                        if (!dog) {\n                            return '';\n                        }\n                        return (\n                            <div class='col clearfix position-relative p-0 mx-2'>\n                                <div\n                                    class={`w-100 h-100 text-center rounded-lg imageContainer d-flex justify-content-center align-items-center`}\n                                    style={`\n                                        flex-wrap: wrap;\n                                        overflow-y: hidden;\n                                    `}\n                                    onTouchstart={(e) => { e.stopPropagation(); }}\n                                    onTouchend={(e) => { e.stopPropagation(); }}\n                                    onTouchmove={(e) => { e.stopPropagation(); }}\n                                >\n                                    <DogSimplePublic\n                                        stores={this.props.stores}\n                                        dog={dog}\n                                        dogs={allDogs.filter(d => dogs.indexOf(d.id) > -1).sort((a, b) => a.name > b.name ? 1 : -1)}\n                                        className='mx-auto'\n                                        showName={true}\n                                        showPosition={false}\n                                        size={size}\n                                        onDogClick={onDogClick} \n                                    />\n                                    {/* <xmp>{JSON.stringify(img, null, 4)}</xmp> */}\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DogScroller;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\n@observer\nclass UserSettings extends Component {\n    toggleSetting= async (field) => {\n        const { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n        await userStore.updateSetting({ [`settings.${field}`]: settings[field] === 1 ? 0 : 1 });\n    }\n\n    hideSettings = async () => {\n        const { userStore } = this.props.stores;\n        await userStore.updateSetting({ 'settings.hideSettings': 1 });\n        this.setState({\n            hideSettings: true,\n        });\n    }\n\n    render() {\n        const { hideSettings } = this.state;\n\t\tconst { userStore } = this.props.stores;\n        const { forceShow } = this.props;\n        const { user } = userStore;\n        const { settings = {} } = user;\n        if (hideSettings || settings.hideSettings) {\n            return '';\n        }\n        if (!forceShow && settings.summaryEmails && settings.infoEmails && settings.partnerEmails) {\n            return '';\n        }\n        return (\n           <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-4 mb-4 pt-4 pb-4 border-bottom border-top'>\n                <h5><Text id='users.settings'>Brukerinnstillinger</Text></h5>\n\n                {!settings.summaryEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-summary-email'>Oppsummeringer</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsSummaryEmails' onInput={() => this.toggleSetting('summaryEmails')} checked={settings.summaryEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsSummaryEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-summary-email'>Motta oppsummeringer via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.infoEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-info-email'>Info</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsInfoEmails' onInput={() => this.toggleSetting('infoEmails')} checked={settings.infoEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsInfoEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-info-email'>Motta info via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.partnerEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-partner-email'>Partners</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsPartnerEmails' onInput={() => this.toggleSetting('partnerEmails')} checked={settings.partnerEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsPartnerEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-partner-email'>Motta tilbud fra våre partnere via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted'>\n                        <small>\n                            <a href='/users'>\n                                <i class='fas fa-sliders-h' /> <Text id='users.settings-text-info'>Innstillingene finner du inne på profilen din.</Text>\n                            </a>\n                        </small>\n                    </div>\n                </div>\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted text-right'>\n                        <small>\n                            <button type='button' class='btn btn-sm btn-link mb-2' onClick={this.hideSettings}>\n                                <i class='fas fa-eye-slash' /> <Text id='users.hide-settings'>Skjul innstillingene</Text>\n                            </button>\n                        </small>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserSettings;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Story from './publicStory';\n\nimport TeamConnectBoxes from '../team/connect-boxes';\nimport TeamConnectConfirm from '../team/connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from '../team/fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\n\nimport TeamPublicFeedLine from '../team/publicFeedLine';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\n\nconst initialState = {\n    loading: false,\n    limit: 10,\n    offset: 0,\n    idxConfirm: 0,\n    idxSuggestion: 1,\n    idxAd: 5,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n// const fieldSorter = (fields) => (a, b) => fields.map(o => {\n//     let dir = 1;\n//     if (o[0] === '-') { dir = -1; o=o.substring(1); }\n//     return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n// }).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n\t\tthis.ref = {};\n    }\n\n    async loadStoriesPublicFeed({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n        let sort;\n        // if (path.match(/\\/home-wall/)) {\n        //     sort = 'statistics.ranking';\n        // }\n\t\tawait storyStore.loadPublicFeed({ hashtag, hashtags, teamid, limit, offset, sort });\n        if (!offset) {\n            // this.insertWorkouts();\n            this.insertTopRanked();\n            // this.insertAds();\n            this.insertTeamConfirm();\n            // this.insertTeamSuggestions();\n        }\n\t}\n\n    reloadStories = async () => {\n        const { appState } = this.props.stores;\n        let { limit, offset } = this.state;\n        offset = 0;\n        this.setState({ offset });\n        await this.loadStoriesPublicFeed({ props: this.props, limit, offset })\n        appState.appContainerScrollTop();\n    }\n\n    async checkForNewStories({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.checkForNewStories({ hashtag, hashtags, teamid });\n    }\n\n    setCheckForNewStories = (props = this.props) => {\n        this.checkForNewStoriesTimer = setInterval(() => this.checkForNewStories({ props }), 60 * 1000);\n    }\n\n    clearCheckForNewStories = () => {\n        clearInterval(this.checkForNewStoriesTimer);\n    }\n\n    // insertWorkouts = () => {\n    //     const { storyStore } = this.props.stores;\n    //     const { publicWorkouts, publicFeed } = storyStore;\n    //     if (publicWorkouts.length) {\n    //         const finalArray = publicFeed.concat(publicWorkouts).sort(fieldSorter(['-date']));\n    //         storyStore.localUpdateField('publicFeed', finalArray);\n    //     }\n    // }\n\n    insertTopRanked = () => {\n        const { storyStore } = this.props.stores;\n        const { publicFeed, topRankedStories } = storyStore;\n        const topRankedRandomized = util.shuffleArray(topRankedStories);\n        const feed = [...publicFeed];\n\n        const totalInserts = 3;\n        const pinToTopDiff = 86400;\n        let startPosition = 0;\n        const now = new Date();\n        feed.forEach((e, idx) => {\n            const date = util.parseInputDate(e.date);\n            const deltaSec = Math.floor((now.getTime() - date.getTime()) / 1000);\n            if (deltaSec < pinToTopDiff) {\n                startPosition = idx + 1;\n            }\n        });\n        const endPosition = feed.length;\n\n        if (endPosition > startPosition + totalInserts) {\n            for (let i = 0, l = totalInserts; i < l; i += 1) {\n                const randomPlace = mu.randomInt(startPosition, endPosition);\n                if (util.isObject(topRankedRandomized[i])) {\n                    feed.splice(randomPlace, 0, topRankedRandomized[i]);\n                }\n            }\n            storyStore.localUpdateField('publicFeed', feed);\n        }\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    setLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadStoriesPublicFeed({ limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {});\n    }\n\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { storyStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => storyStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentDidMount() {\n        const { limit } = this.state;\n        this.loadStoriesPublicFeed({ limit, offset: 0 });\n        this.setLoadMore();\n        this.setCheckForNewStories()\n\t}\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { storyStore } = this.props.stores;\n        storyStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        // storyStore.cleanupMemory();\n        this.clearCheckForNewStories();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.hashtag !== this.props.hashtag || nextProps.path !== this.props.path) {\n            const { limit } = this.state;\n            this.loadStoriesPublicFeed({ props: nextProps, limit, offset: 0 });\n        }\n    }\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'workout') {\n            return (<>\n                <TeamPublicFeedLine\n                    stores={this.props.stores}\n                    feed={obj}\n                    idx={idx}\n                    onTeamClick={this.onTeamClick}\n                    onUserClick={this.onUserClick}\n                    onDogClick={this.onDogClick}\n                    holdingStore={'story'}\n                />\n            </>);\n        }\n        return (<>\n            <Story\n                stores={this.props.stores}\n                story={obj}\n                hashtag={hashtag}\n                key={`story-detail-${obj.id}`}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { loading, handleIntersection, sessionid, showTeam, showDog } = this.state;\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed, publicTags, hasNewStories, publicDogs } = storyStore;\n        const { darkmode } = appState;\n\n        return (<>\n            {/* <div class='row bg-light pt-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative`}>\n                    <div class='bg-light d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                        {util.isArray(publicTags) && publicTags.length > 0 && publicTags.slice(0, 20).map((tag) => {\n                            const tagLinkReady = tag.tag.replace(/^#/, '');\n                            return (<>\n                                <span class='badge badge-pill badge-secondary mr-2 mb-1'>\n                                    <a href={`/stories/tag/${tagLinkReady}`} class='text-white'>\n                                        {tag.tag}\n                                    </a>\n                                </span>\n                            </>);\n                        })}\n                    </div>\n                </div>\n            </div> */}\n\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} />\n            </Overlay>}\n\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={publicDogs} />\n            </Overlay>}\n\n            <div class='w-100'>\n                {hasNewStories && <>\n                    <div\n                        class={`col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 d-flex justify-content-center fixed-top`}\n                        style={`margin-top: ${MARGIN_TOP};`}\n                    >\n                        <button\n                            class='btn btn-sm btn-primary rounded-pill'\n                            onClick={this.reloadStories}\n                        >\n                            New stories\n                        </button>\n                    </div>\n                </>}\n                <FastList\n                    data={publicFeed}\n                    wrapperClassNames={'row pb-1'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n                {loading && <div class='d-flex justify-content-center'>\n                    <div class='spinner-border text-primary' role='status'>\n                        <span class='sr-only'>Loading...</span>\n                    </div>\n                </div>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\n@observer\nclass Teams extends Component {\n    toggleTeam = (team) => {\n\t\tconst { callback, unsetTeamIfSelected = true } = this.props;\n        const { dogStore, workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = dogStore;\n\t\tif (unsetTeamIfSelected && team === currentTeam) {\n\t\t\tdogStore.setCurrentTeam(undefined);\n\t\t\tworkoutStore.setCurrentTeam(undefined);\n\t\t} else {\n\t\t\tdogStore.setCurrentTeam(team);\n\t\t\tworkoutStore.setCurrentTeam(team);\n\t\t}\n\t\tif (util.isDefined(callback)) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n    showAllTeams = () => {\n\t\tconst { callback } = this.props;\n        const { dogStore, workoutStore } = this.props.stores;\n\t\tdogStore.setCurrentTeam(undefined);\n\t\tworkoutStore.setCurrentTeam(undefined);\n\t\tif (util.isDefined(callback)) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t// componentDidMount() {\n\t// \tif (this.container) {\n\t// \t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'center' });\n\t// \t}\n\t// }\n\n    render() {\n        const { userStore, dogStore } = this.props.stores;\n        const { teams } = userStore;\n\t\tconst { currentTeam } = dogStore;\n\t\tconst { highlight, showAll = true } = this.props;\n        return (\n\t\t\t<div class='row mt-2'>\n\t\t\t\t<div class='w-100 overflow-hidden'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='d-flex flex-row flex-nowrap pb-2 px-1 no-scrollbar'\n\t\t\t\t\t\tstyle='overflow: auto; scroll-snap-type: x mandatory;'\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* <xmp><br /><br /><br /><br />{JSON.stringify(teams, null, 4)}</xmp> */}\n\t\t\t\t\t\t{teams && teams.map((team, idx) => {\n\t\t\t\t\t\t\tlet classNames;\n\t\t\t\t\t\t\tif (teams.length === 1) {\n\t\t\t\t\t\t\t\tclassNames = 'rounded-pill-both';\n\t\t\t\t\t\t\t} else if (idx === 0) {\n\t\t\t\t\t\t\t\tclassNames = 'rounded-pill-left';\n\t\t\t\t\t\t\t} else if (idx + 1 === teams.length) {\n\t\t\t\t\t\t\t\tclassNames = 'rounded-pill-right';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div class='col mb-0 px-0 clearfix' key={team.id}>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-sm btn-block \n\t\t\t\t\t\t\t\t\t\t\trounded-none ${classNames}\n\t\t\t\t\t\t\t\t\t\t\t${currentTeam === team.id ? 'btn-success' : 'btn-outline-success'}\n\t\t\t\t\t\t\t\t\t\t\ttext-nowrap clearfix`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tonClick={() => this.toggleTeam(team.id)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-users' /> {team.name}\n\n\t\t\t\t\t\t\t\t\t\t{highlight && highlight.indexOf(team.id) > -1 && <>\n\t\t\t\t\t\t\t\t\t\t\t{currentTeam === team.id ? <>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-check float-right' />\n\t\t\t\t\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='spinner-grow text-warning float-right' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />   \n\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t{/* {currentTeam === team.id && <ScrollIntoView horizontal={'center'} vertical={'end'} />} */}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t\t{showAll && <div class='row'>\n\t\t\t\t\t\t<div class='col-12 mb-1 px-1 d-flex justify-content-center'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass={`btn btn-sm rounded-lg btn-link text-nowrap clearfix`}\n\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\tonClick={this.showAllTeams}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-users' /> <Text id='teams.show-all'>Show all</Text>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\t\t\t</div>\n        );\n    }\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nconst MARKDOWN_OPTIONS = {\n\tpedantic: false,\n\tgfm: true,\n\tbreaks: true,\n\tsanitize: false,\n\tsmartLists: true,\n\tsmartypants: true,\n\txhtml: true,\n};\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Races extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            raceIdx: 0,\n        };\n    }\n\n    async loadRace(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore } = props.stores;\n\t\tconst query = {\n            relevant: 1,\n        };\n\t\tawait raceStore.load({ query });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    toggleRaces = async () => {\n\t\tconst { userStore } = this.props.stores;\n        const { user } = userStore;\n        const { toggleFeature = {} } = user;\n        const value = toggleFeature.racesFrontpage ? 0 : 1;\n        this.setState({ hideRaces: value });\n        await userStore.setToggleFeature({\n            field: 'toggleFeature.racesFrontpage',\n            value,\n        });\n    }\n\n    scrollRaces = (e) => {\n        // scrollHeight: 705\n        // scrollLeft: 564\n        // scrollTop: 0\n        // scrollWidth: 1692\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const step = clientWidth;\n        const raceIdx = scrollLeft / step;\n\n        const nearestInt = Math.round(raceIdx);\n        const diff = Math.abs(nearestInt - raceIdx);\n        // console.log({ e, step, raceIdx, scrollLeft, scrollWidth, clientWidth, nearestInt, diff });\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(raceIdx) || diff < 0.5) {\n            this.setState({\n                raceIdx: nearestInt,\n            });\n        }\n    }\n\n    componentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n\t// componentWillReceiveProps(nextProps) {\n    //     if (this.props.)\n\t// \tthis.loadRace(nextProps);\n\t// }\n\n    render() {\n        const { appState, userStore, raceStore, newsStore } = this.props.stores;\n\t\tconst { allUsers, isAdmin, user, notifications = [] } = userStore;\n\t\tconst { races = [] } = raceStore;\n\t\tconst { newsList } = newsStore;\n\t\tconst news = newsList && newsList[0] ? newsList[0] : null;\n\t\tconst { darkmode } = appState;\n\t\tconst { showNews, hideRaces, raceIdx } = this.state;\n        const { toggleFeature = {}, language = 'en' } = user;\n\n        const today = new Date();\n\n        if (!races || races.length === 0) {\n            return '';\n        }\n\n        return (\n            <div class='row'>\n                {hideRaces || toggleFeature.racesFrontpage ? <>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-1'>\n                        <div class='row'>\n                            <div class={`col-12 bg-${darkmode ? 'black' : 'white'} rounded-lg position-relative px-0`}>\n                                <div class='w-100 d-flex justify-content-center'>\n                                    <button class='btn btn-lg btn-block btn-link' onClick={this.toggleRaces}>\n                                        <i class='fas fa-flag-checkered' /> <Text id='races.show-races'>Show Races</Text> {races.length > 1 && <>- {races.length}</>}\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </> : <>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-1'>\n                        <div class='row'>\n\n                            <div class='w-100 position-relative'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap bg-light border-top border-bottom'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                    onScroll={this.scrollRaces}\n                                >\n                                    {races && races.map((race, idx) =>  {\n                                        let status = '';\n                                        if (today >= new Date(race.startDate) && today <= new Date(race.endDate)) {\n                                            status = 'race';\n                                        } else if (today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate)) {\n                                            status = 'signup';\n                                        } else if (today > new Date(race.endDate)) {\n                                            status = 'done';\n                                        }\n                                        return (<>\n                                            <div\n                                                class={`col-${races.length === 1 ? '12' : '8 ml-4'} ${races.length === idx + 1 ? 'mr-5' : ''} mb-0 bg-${darkmode ? 'black' : 'white'} rounded-lg position-relative`}\n                                                style={`\n                                                    scroll-snap-align: center;\n                                                    flex-wrap: wrap;\n                                                    overflow-y: hidden;\n                                                `}\n                                                onTouchstart={(e) => { e.stopPropagation(); }}\n                                                onTouchend={(e) => { e.stopPropagation(); }}\n                                                onTouchmove={(e) => { e.stopPropagation(); }}\n                                            >\n                                                <div class='row d-flex align-items-center position-relative'>\n                                                    <h5 class='position-absolute' style='top: 3px; right: 5px;'>\n                                                        {status === 'signup' && !race.liveRace && <>\n                                                            <span class='badge badge-primary border border-white ml-2'><Text id='races.signup-open'>Påmelding åpen</Text></span>\n                                                        </>}\n                                                        {status === 'race' && <>\n                                                            <span class='badge badge-danger border border-white ml-2'><Text id='races.race-in-progress'>Løp pågår</Text></span>\n                                                        </>}\n                                                        {status === 'done' && <>\n                                                            <span class='badge badge-success border border-white ml-2'><Text id='races.race-finished'>Løp avsluttet</Text></span>\n                                                        </>}\n                                                    </h5>\n                                                    {(race.images && race.images[0]) && <>\n                                                        <div\n                                                            class={`w-100`}\n                                                            style={`background-image: url(\"${race.images[0].s3LargeLink}\"); background-size: cover; height: 100px; background-repeat: no-repeat; background-position: 50% 50%;`}\n                                                            onClick={() => route(`/app-races/${race.id}`)}\n                                                        />\n                                                    </>}\n                                                </div>\n                                                <div class='position-relative'>\n                                                    <h5 class='position-absolute' style='top: 10px; right: 10px;'>\n                                                        {status === 'signup' && <>\n                                                            <div class='spinner-grow text-primary' role='status' />\n                                                        </>}\n                                                        {status === 'race' && <>\n                                                            <div class='spinner-grow text-danger' role='status' />\n                                                        </>}\n                                                        {status === 'done' && <>\n                                                            <span><i class='fas fa-check text-success' /></span>\n                                                        </>}\n                                                    </h5>\n                                                    <h5 class='pt-2'>\n                                                        {isAdmin && <i class={`fas fa-eye${race.active ? ' text-success' : '-slash text-danger'} float-right`} />}\n                                                        <a href={`/app-races/${race.id}`}> \n                                                            {race.title}\n                                                        </a>\n                                                    </h5>\n                                                </div>\n                                                <div class='w-100'>\n                                                    <Markdown markdown={mu.replaceImages(race.ingress, race.images, language)} markdownOpts={MARKDOWN_OPTIONS} />\n                                                </div>\n                                                <div class='w-100'>\n                                                    {race.classes && <>\n                                                        <div class='mb-3'>\n                                                            <small class='font-weight-lighter mr-2'><Text id='races.classes'>Klasser</Text>: </small><br />\n\n                                                            <div class='w-100 position-relative'>\n                                                                <div\n                                                                    class='d-flex flex-row flex-nowrap'\n                                                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                                                >\n                                                                    {race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                                        <span class='badge badge-pill badge-light mr-2 font-weight-light'>\n                                                                            {currentClass.title}\n                                                                            {/* <span class='badge badge-info ml-2 font-weight-light'>{currentClass.contestants.length}</span> */}\n                                                                        </span>\n                                                                    </>)}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </>}\n                                                </div>\n                                                <div class='w-100 d-flex justify-content-between'>\n                                                    <a href={`/app-races/${race.id}/tracking`} class='btn btn-primary'>\n                                                        <Text id='races.tracking'>Tracking</Text>\n                                                        <i class='fas fa-map-marked ml-2' />\n                                                    </a>\n                                                    <a href={`/app-races/${race.id}`} class='btn btn-primary'>\n                                                        <Text id='races.read-more'>Les mer</Text>\n                                                        <i class='fas fa-angle-double-right ml-2' />\n                                                    </a>\n                                                </div>\n                                                <div class='w-100 d-flex justify-content-center'>\n                                                    <small class='text-muted'>\n                                                        <Text id='races.race-days'>Løpsdager</Text>: {race.startDate && <>{util.formatDate(race.startDate, { locale: language })}</>}\n                                                        {race.endDate && <> - {util.formatDate(race.endDate, { locale: language })}</>}\n                                                    </small>\n                                                </div>\n                                            </div>\n                                        </>);\n                                    })}\n                                </div>\n                            </div>\n\n                            {races && races.length > 1 && <>\n                                <div class='w-100 text-center'>\n                                    <small>\n                                        <small>\n                                            {races && races.map((img, idx) => <>\n                                                <i class={`${idx === raceIdx ? 'fas' : 'far'} fa-circle mr-1`} />\n                                            </>)}\n                                        </small>\n                                    </small>\n                                </div>\n                                <div\n                                    class='position-absolute text-white font-weight-lighter px-1 py-1 rounded-lg'\n                                    style='top: 10px; right: 10px; background-color: rgba(0, 0, 0, 0.3); line-height: 1.0em;'\n                                >\n                                    <small>{raceIdx + 1} / {races.length}</small>\n                                </div>\n                            </>}\n\n                            <div class={`col-12 mb-1 bg-${darkmode ? 'black' : 'white'} rounded-lg position-relative`}>\n                                <div class='w-100 d-flex justify-content-center'>\n                                    <button class='btn btn-link' onClick={this.toggleRaces}>\n                                        <i class='fas fa-angle-up' /> <Text id='races.hide'>Hide Races</Text>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default Races;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass YrWeather extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\t\tthis.inputRef = {};\n    }\n\n    toggleyrWeather = () => {\n        const { showWeather } = this.state;\n        this.setState({\n            showWeather: !showWeather,\n        });\n    }\n\n    async loadWeather() {\n\t\tconst { userStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        const { user } = userStore;\n\t\tif (user.currentLocationInfo && user.currentLocationInfo.coords) {\n\t\t\tconst { latitude: lat, longitude: lon, altitude } = user.currentLocationInfo.coords;\n\t\t\tuserStore.getWeatherUser({ lat, lon, altitude });\n            userStore.formatWeather();\n\t\t}\n    }\n\n\tcomponentDidMount() {\n        this.loadWeather();\n\t}\n\n    render() {\n        const { showWeather } = this.state;\n        const { place } = this.props;\n        const { userStore } = this.props.stores;\n        const { yrWeather, yrWeatherKeys, yrWeatherFormatted, user } = userStore;\n        const { currentLocationGeocode } = user;\n\n        if (!yrWeather || !place) {\n            return '';\n        }\n        if (showWeather) {\n            return (\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mb-4'>\n                    {currentLocationGeocode && currentLocationGeocode.formatted_address && <h5>{currentLocationGeocode.formatted_address}</h5>}\n                    <div class='table-responsive'\n                        onTouchstart={mu.captureEvents}\n                        onTouchend={mu.captureEvents}\n                        onTouchmove={mu.captureEvents}\n                        onScroll={mu.captureEvents}\n                    >\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th class='text-center'>&nbsp;</th>\n                                    <th class='text-center'><Text id='weather.night'>Night</Text></th>\n                                    <th class='text-center'><Text id='weather.morning'>Morning</Text></th>\n                                    <th class='text-center'><Text id='weather.afternoon'>Afternoon</Text></th>\n                                    <th class='text-center'><Text id='weather.evening'>Evening</Text></th>\n                                    <th class='text-center'><Text id='weather.temp'>Temp</Text></th>\n                                    <th class='text-center'><Text id='weather.rainfall'>Rainfall</Text></th>\n                                    <th class='text-center'><Text id='weather.wind'>Wind</Text></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {yrWeatherKeys && yrWeatherKeys.map(date => <>\n                                    <tr>\n                                        <td class='text-center'><nobr>{date}</nobr></td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-temperature-low text-muted ml-1 mr-2' />\n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min')} />\n                                                </span> \n                                                <span class='text-muted font-weight-lighter mx-1'>-</span> \n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max')} />\n                                                </span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.format(util.getNestedValue(yrWeatherFormatted[date], 'precipitation_amount'), 1)} <span class='text-muted font-weight-lighter'>mm</span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-wind text-muted ml-1' /> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'), 1)}</span> <span class='text-muted font-weight-lighter'>-</span> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'), 1)}</span> <span class='text-muted font-weight-lighter'>m/s</span>\n                                            </nobr>\n                                        </td>\n                                    </tr>\n                                </>)}\n                            </tbody>\n                        </table>\n                    </div>\n                    <button type='button' class='btn btn-block btn-primary btn-sm' onClick={this.toggleyrWeather}>\n                        <i class='fas fa-times-circle' /> <Text id='weather.close'>Close</Text>\n                    </button>\n                </div>\n            );\n        }\n        return (\n            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                {yrWeather && yrWeather.length > 0 && <div class='container-fluid px-0'>\n                    <div class='row' onClick={this.toggleyrWeather}>\n                        {yrWeather && yrWeather.length > 0 && yrWeather.slice(0, 1).map(w => (\n                            <div class='col-12 text-right'>\n                                <nobr>\n                                    <small class='font-weight-light text-muted'>{util.isoTime(w.time)}</small>:\n                                    <img src={`./assets/svg/${util.getNestedValue(w, 'next_1_hours.summary.symbol_code')}.svg`}\n                                        class='ml-2'\n                                        style='height: 20px;'\n                                    />\n                                    {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount') > 0 && <small class='ml-2'>\n                                        {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount')}<span class='text-muted font-weight-lighter'>mm</span>\n                                    </small>}\n                                    <small class='ml-2'>\n                                        <i class='fas fa-temperature-low text-muted' /> <Temperature stores={this.props.stores} value={util.getNestedValue(w, 'instant.details.air_temperature')} />\n                                    </small> \n                                    <small class='ml-2'>\n                                        <i class='fas fa-wind text-muted' /> {util.getNestedValue(w, 'instant.details.wind_speed')}<span class='text-muted font-weight-lighter'>m/s</span> <span class='text-muted font-weight-lighter'>{mu.windDirection(util.getNestedValue(w, 'instant.details.wind_from_direction'))}</span>\n                                    </small> \n                                </nobr><br />\n                            </div>\n                        ))}\n                    </div>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default YrWeather;\n"],"sourceRoot":""}