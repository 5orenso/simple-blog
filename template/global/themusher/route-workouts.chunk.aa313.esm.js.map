{"version":3,"sources":["webpack:///./routes/workouts/index.js","webpack:///./components/workout/table.js"],"names":["kmToMiles","value","util","format","MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","SUB_MENU_MARGIN_TOP","subMenuMarginTop","initialState","loadedTime","isLoading","submenu","workoutFilter","sessionid","Date","getTime","dataFields","Workouts","observer","Component","constructor","props","super","loadWorkouts","async","setState","workoutStore","userStore","stores","currentTeam","currentMonth","getMonth","currentYear","getFullYear","month","year","Promise","all","load","query","team","loadWorkoutSummary","loadWorkoutPlans","getNotifications","loadStravaActivities","loadGarminActivities","loadTeams","seasonStart","workoutPlanStore","user","settings","imperial","seasonYear","addData","workoutPlans","workoutPlanCurrent","id","prepareWeekGraphs","updateKeyValue","resetGraphPlanWeekDistanceCurrent","chooseSubmenu","e","this","target","parentElement","dataset","menu","chooseDay","day","dd","mm","yyyy","state","w","date","d","getDate","m","y","parseInt","renderContent","obj","appState","workout","showDate","wrapperClasses","wrapperClassesRow","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","setInterval","postScrollview","getIntersectionObserverHistory","teamStore","skipMusherWorkoutSummary","stravaActivityStore","hideImported","garminActivityDetailsStore","getWorkoutSummary","getWorkoutSummaryDay","daysBack","componentWillMount","componentWillUnmount","clearInterval","componentDidMount","checkCordova","componentWillReceiveProps","nextProps","render","scrolledDown","workoutPlan","workoutSummaryWeekDay","language","MONTHS","getMonths","currentTeamObject","findTeam","darkmode","workouts","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","workoutsFiltered","filter","planMonth","sumWorkoutPlanMonth","summaryMonth","findWorkoutSummaryMonth","percentComplete","Math","floor","totalCountMonth","totalDistanceKmMonth","totalDurationMonth","totalSpeedavgMonth","stravaActivities","garminActivityDetails","class","style","href","role","secToHms","callback","key","data-menu","onClick","chooseDayFunction","length","hideTable","hideSummary","skipLoadSummary","radius","percent","prefix","total","completed","smallUnit","url","section","basehref","showNavigation","showHeader","strava","activities","garmin","fields","name","data","wrapperClassNames","contentClassNames","dataValues","type","WorkoutTable","withText","week","distance","ascend","plan","seasonMonths","monthRange","prevSeasonMonths","xTicksAll","weekRange","map","wo","partSize","xTicks","i","l","push","scope"],"mappings":"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","file":"route-workouts.chunk.aa313.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport Workout from '../../components/workout';\nimport WorkoutSummary from '../../components/workout/summary';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutTable from '../../components/workout/table';\nimport WorkoutCalendar from '../../components/workout/calendar';\nimport Teams from '../../components/team/teams';\nimport Gauge from '../../components/gauge';\nimport CalendarPlan from '../../components/workout/calendarPlan';\nimport Strava from '../../components/strava';\nimport Garmin from '../../components/garmin';\nimport Ad from '../../components/ad/';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\n\nimport FastList from '../../components/team/fastList';\n\nfunction kmToMiles(value) {\n    return util.format(0.621371 * value, 1);\n}\n\nconst initialState = {\n\tloadedTime: 0,\n\tisLoading: false,\n\tsubmenu: 'totals',\n\tworkoutFilter: () => true,\n\tsessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n@observer\nclass Workouts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tloadWorkouts = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { workoutStore, userStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\t// const currentMonth = new Date().getMonth() + 1;\n        // const { month = currentMonth, year = util.getYear(), team = currentTeam, dog = {} } = props;\n\n\t\t// const { year } = props;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n        // await userStore.getInfo();\n\t\tawait Promise.all([\n\t\t\tworkoutStore.load({ query: { team: currentTeam, year, month } }),\n\t\t\tthis.loadWorkoutSummary(props),\n\t\t\tthis.loadWorkoutPlans(props),\n\t\t\tuserStore.getNotifications(),\n\t\t\tthis.loadStravaActivities(),\n\t\t\tthis.loadGarminActivities(),\n\t\t\tthis.loadTeams(props),\n\t\t]);\n\t\tthis.setState({\n\t\t\tloadedTime: new Date().getTime(),\n\t\t\tisLoading: false,\n\t\t});\n\t}\n\n\tasync loadTeams(props = this.props) {\n\t\tconst { teamStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true, year, month }, addData: ['workoutSummary'] });\n\t}\n\n\tasync loadStravaActivities() {\n\t\tconst { stravaActivityStore } = this.props.stores;\n\t\tstravaActivityStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tasync loadGarminActivities() {\n\t\tconst { garminActivityDetailsStore } = this.props.stores;\n\t\tgarminActivityDetailsStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tloadWorkoutPlans = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { year = currentYear, month = currentMonth } = props;\n\t\tconst seasonStart = (month < 8 ? year - 1 : year);\n\n\t\tconst { workoutPlanStore, workoutStore, userStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\tconst { user } = userStore;\n        const { settings = {} } = user;\n\t\tconst { imperial } = settings;\n\n\t\t// workoutPlanStore.updateItem('workoutPlans', []);\n\t\t// workoutPlanStore.updateItem('workoutPlan', {});\n\t\t// workoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({\n\t\t\t\tquery: {\n\t\t\t\t\tteam: currentTeam,\n\t\t\t\t\tseasonYear: seasonStart,\n\t\t\t\t},\n\t\t\t\taddData: ['tips'],\n\t\t\t});\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year, imperial });\n\t\t\t} else {\n\t\t\t\tworkoutPlanStore.updateKeyValue('workoutPlan', {});\n\t\t\t\tworkoutPlanStore.updateKeyValue('workoutPlans', []);\n\t\t\t\tworkoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\t\t\t}\n\t\t}\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tasync loadWorkoutSummary(props = this.props) {\n\t\tconst { userStore, workoutStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n\t\tconst { currentTeam } = workoutStore;\n        await userStore.getWorkoutSummary({ team: currentTeam, year, month });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year, team: currentTeam });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year: year - 1, team: currentTeam });\n\t\tawait userStore.getWorkoutSummaryDay({ daysBack: 500, team: currentTeam });\n    }\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tchooseDay = ({ day, month, year }) => {\n\t\tconst { dd, mm, yyyy } = this.state;\n\t\tif (dd === day && mm === month && yyyy === year) {\n\t\t\treturn this.setState({\n\t\t\t\tworkoutFilter: () => true,\n\t\t\t\tdd: null,\n\t\t\t\tmm: null,\n\t\t\t\tyyyy: null,\n\t\t\t});\n\t\t}\n\t\tthis.setState({\n\t\t\tdd: day,\n\t\t\tmm: month,\n\t\t\tyyyy: year,\n\t\t\tworkoutFilter: (w) => {\n\t\t\t\tconst date = new Date(w.date);\n\t\t\t\tconst d = date.getDate();\n\t\t\t\tconst m = date.getMonth() + 1;\n\t\t\t\tconst y = date.getFullYear();\n\t\t\t\treturn d === parseInt(day, 10) && m === parseInt(month, 10) && y === parseInt(year, 10);\n\t\t\t},\n\t\t});\n\t}\n\n\trenderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        return (<>\n\t\t\t<Workout\n\t\t\t\tstores={this.props.stores}\n\t\t\t\tworkout={obj}\n\t\t\t\tshowDate={true}\n\t\t\t\twrapperClasses={'w-100'}\n\t\t\t\twrapperClassesRow={''}\n\t\t\t/>\n        </>);\n    }\n\n\t// Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { workoutStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => workoutStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n\tcomponentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentWillUnmount() {\n        const { workoutStore, stravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n        workoutStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n    }\n\t// /Scroll views timer\n\n\tcomponentDidMount() {\n\t\tconst { appState } = this.props.stores;\n\t\tthis.loadWorkouts();\n\t\t// this.loadDogs();\n\t\t// this.loadTracks();\n\t\tappState.checkCordova();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.month !== this.props.month\n            || nextProps.year !== this.props.year\n            || nextProps.team !== this.props.team) {\n            this.loadWorkouts(nextProps);\n        }\n    }\n\n\trender() {\n        const { scrolledDown } = this.props;\n\t\tconst { isLoading, submenu, handleIntersection, sessionid, loadedTime } = this.state;\n\t\tconst { userStore, appState, workoutStore, workoutPlanStore,\n\t\t\tstravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n\t\tconst { workoutPlan, workoutPlans } = workoutPlanStore;\n\n\t\tconst { user, workoutSummaryWeekDay = [] } = userStore;\n        const { language = 'en', settings = {} } = user;\n        const MONTHS = mu.getMonths(language);\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\t\n\t\tconst { currentTeam } = workoutStore;\n\t\tconst currentTeamObject = userStore.findTeam(currentTeam, true);\n\n\t\tconst { darkmode } = appState;\n\t\tconst { workouts, cordovaActiveTrackingParams, isRunning, totalDistance, currentSpeed, totalTime } = workoutStore;\n\n\t\tconst { workoutFilter } = this.state;\n\t\tconst workoutsFiltered = workouts.filter(workoutFilter);\n\n\t\tconst planMonth = workoutPlanStore.sumWorkoutPlanMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tconst summaryMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tlet percentComplete;\n\t\tif (planMonth) {\n\t\t\tpercentComplete = Math.floor(summaryMonth / planMonth * 100);\n\t\t}\n\t\tconst totalCountMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'count', true) || 0;\n\t\tconst totalDistanceKmMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'distanceKm', true) || 0;\n\t\tconst totalDurationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'duration', true) || 0;\n\t\tconst totalSpeedavgMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'speedAvg', true) || 0;\n\t\tconst totalElevationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'elevation', true) || 0;\n\n\t\tconst { stravaActivities = [] } = stravaActivityStore;\n\t\tconst { garminActivityDetails = [] } = garminActivityDetailsStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row fixed-top' style={`margin-top: ${scrolledDown > 0 ? 0 : SUB_MENU_MARGIN_TOP}; background-color: ${darkmode ? '#191d21' : '#f8f9fa'}; transition: all 0.3s ease-in-out;`}>\n\t\t\t\t\t<div class='col text-center border-bottom border-primary subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/' class='text-primary stretched-link'><nobr><i class='fas fa-chart-line' /> <Text id='workout.index.dashboard'>Oversikt</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/list' class='text-secondary stretched-link'><nobr><i class='fas fa-list' /> <Text id='workout.index.list'>Liste</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/plan' class='text-secondary stretched-link'><nobr><i class='fas fa-calendar-alt' /> <Text id='workout.index.plan'>Plan</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>\n\t\t\t\t\t\t\t\t\t<Speed stores={this.props.stores} value={currentSpeed * 3.6} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>\n\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalDistance / 1000} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t\t{/* {JSON.stringify(cordovaActiveTrackingParams)}\n\t\t\t\t\t\t\t{JSON.stringify(isRunning)} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadWorkouts} key={`teams-${currentTeam}`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t<a class='btn btn-primary btn-sm float-right'\n\t\t\t\t\t\t\thref='/workouts/edit/new'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i class='fas fa-plus' /> <Text id='workout.index.add-workout'>Legg til treningstur</Text>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.totals'>Totaler</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'seasontotals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='seasontotals'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.seasontotals'>Season totals</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'analysis' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='analysis'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-chart-area' /> <Text id='workouts.analysis'>Analyser</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'table' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='table'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-table' /> <Text id='workouts.table'>Tabell</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'workoutplan' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='workoutplan'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.workoutplan'>Treningsplan</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'calendar' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='calendar'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.calendar'>Kalender</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{submenu === 'totals' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t{planMonth >= 0 && (\n\t\t\t\t\t\t\t\t\t\t<Gauge \n\t\t\t\t\t\t\t\t\t\t\tkey={`gauge-${percentComplete}`}\n\t\t\t\t\t\t\t\t\t\t\tradius={55}\n\t\t\t\t\t\t\t\t\t\t\tpercent={percentComplete}\n\t\t\t\t\t\t\t\t\t\t\tprefix='%'\n\t\t\t\t\t\t\t\t\t\t\ttotal={settings.imperial ? `${kmToMiles(planMonth)} mi` : `${planMonth} km`}\n\t\t\t\t\t\t\t\t\t\t\tcompleted={settings.imperial ? `${kmToMiles(summaryMonth)} mi` : `${summaryMonth} km`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}<br />\n\t\t\t\t\t\t\t\t\t<small class='text-muted'><Text id='workout.index.plan'>Treningsplan</Text></small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-road' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalDistanceKmMonth} smallUnit={true} />\n\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.distance'>Distanse</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-tachometer-alt ml-3' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t<Speed stores={this.props.stores} value={totalSpeedavgMonth} smallUnit={true} />\n\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.avg-speed'>Gj.snittsfart</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-12 text-center'>\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-running' /> </span> {totalCountMonth}\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-clock ml-3' /></span> {util.secToHms(totalDurationMonth)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'seasontotals' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTotals\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tcurrentTeam={currentTeam}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<WorkoutStatus\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tcurrentTeam={currentTeam}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'analysis' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutGraph\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`graph-${workoutPlan.id}-${workoutPlans.length}-${settings.imperial}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'table' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTable\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`table-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'calendar' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'workoutplan' && <>\n\t\t\t\t\t\t<CalendarPlan stores={this.props.stores}\n\t\t\t\t\t\t\tbasehref='/workouts/'\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tkey={`${workoutPlan.id || seasonStart}-${currentTeam}-${month}-${year}-${loadedTime}`}\n\t\t\t\t\t\t\tshowNavigation={true}\n\t\t\t\t\t\t\tshowHeader={true}\n\t\t\t\t\t\t\tcurrentTeam={currentTeam}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t</div>\n\n\t\t\t\t<div class='row mt-3'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-4'>\t\t\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t{user && user.strava && <>\n\t\t\t\t\t\t\t\t<Strava stores={this.props.stores} activities={stravaActivities} key={`strava-${currentTeam}-${stravaActivities.length}`} />\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t{user && user.garmin && <>\n\t\t\t\t\t\t\t\t<Garmin stores={this.props.stores} activities={garminActivityDetails} key={`garmin-${currentTeam}-${garminActivityDetails.length}`} />\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{workoutsFiltered && workoutsFiltered.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4'>\t\t\n\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t<Text id='workout.index.last-workouts' fields={{ total: workoutsFiltered.length, month: MONTHS[month - 1], year }}>\n\t\t\t\t\t\t\t\t\tTreningsturer {MONTHS[month - 1]} {year} - {workoutsFiltered.length} stk\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t{currentTeamObject && currentTeamObject.name && <div>\n\t\t\t\t\t\t\t\t\t<small class='font-weight-lighter'>(<Text id='workout.index.filtered-by'>Filtered by</Text>: {currentTeamObject.name})</small>\n\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<FastList\n\t\t\t\t\t\t\tdata={workoutsFiltered}\n\t\t\t\t\t\t\twrapperClassNames={'row pb-4'}\n\t\t\t\t\t\t\tcontentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n\t\t\t\t\t\t\trenderContent={this.renderContent}\n\t\t\t\t\t\t\tdataFields={dataFields}\n\t\t\t\t\t\t\tdataValues={{ type: '11' }}\n\t\t\t\t\t\t\thandleIntersection={handleIntersection}\n\t\t\t\t\t\t\tsessionid={sessionid}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* {workoutsFiltered && workoutsFiltered.map(workout => (\n\t\t\t\t\t\t\t<Workout stores={this.props.stores} workout={workout} />\n\t\t\t\t\t\t))} */}\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{!workouts || workouts.length === 0 && <div class='col-12 mb-4 text-center pt-5 pb-5'>\n\t\t\t\t\t\t<h1 class='text-muted'><i class='fas fa-running' /></h1>\n\t\t\t\t\t\t<h5 class='text-muted font-weight-lighter'>\n\t\t\t\t\t\t\t<Text id='workouts.no-workouts' fields={{ month: MONTHS[month - 1], year }}>Ingen treningsturer registrert...</Text>\n\t\t\t\t\t\t</h5>\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Workouts;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass WorkoutTable extends Component {\n    render() {\n        const { userStore } = this.props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n        const { isLoading, year = currentYear, month = currentMonth, showHeader = true } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        const { user } = userStore;\n        const { language = 'en' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonMonths = util.monthRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        const prevSeasonMonths = util.monthRange(`${seasonStart - 1}-08-01`, `${seasonStart}-07-31`);\n        const seasonWeeks = util.weekRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = xTicksAll.length % 6;\n        const partSize = Math.floor(xTicksAll.length / parts);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += partSize) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        return (\n            <>\n                {showHeader && <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5>}\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <div class='table-responsive-md'>\n                        <table class='table table-sm table-striped font-weigth-lighter border-bottom'>\n                            <thead>\n                                <tr>\n                                    <th class='text-center'><Text id='workout.graph.season'>Sesong</Text></th>\n                                    {seasonMonths.map(m => (\n                                        <th class='text-center'><a href={`/workouts/month/${m.month}/${m.year}`}>{MONTHS[m.month - 1]}</a></th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'><nobr>{seasonStart - 1} - {seasonStart}</nobr></th>\n                                    {prevSeasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right px-3'>\n                                                    {/* <nobr>{summaryMonth.distance}</nobr><br /> */}\n                                                    <nobr>\n                                                        <Distance stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month)} smallUnit={true} />\n                                                    </nobr><br />\n                                                    <nobr>\n                                                        <Elevation stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')} smallUnit={true} />\n                                                    </nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                </tr>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'><nobr>{seasonStart} - {seasonStart + 1}</nobr></th>\n                                    {seasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right px-3'>\n                                                    <nobr>\n                                                        <Distance stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month)} smallUnit={true} />\n                                                    </nobr><br />\n                                                    <nobr>\n                                                        <Elevation stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')} smallUnit={true} />\n                                                    </nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WorkoutTable;\n"],"sourceRoot":""}