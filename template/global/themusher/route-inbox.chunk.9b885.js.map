{"version":3,"sources":["webpack:///./routes/inbox/index.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","initialState","isLoading","limit","offset","search","Inbox","observer","props","searchForMessages","state","setState","loadMessages","this","messageStore","stores","userStore","getNotifications","getUnReadMessages","loadConversationList","searchText","componentDidMount","render","users","class","style","href","id","for","type","onInput","linkState","value","onClick","map","user","Component"],"mappings":"8hBASMA,EAAaC,IAAGC,WAAU,GAC1BC,EAAgBF,IAAGG,eAEnBC,EAAe,CACjBC,WAAW,EACdC,MAAO,GACPC,OAAQ,EACLC,OAAQ,IAINC,EADLC,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAeJC,kBAAoB,WAAM,MACI,EAAKC,MAAvBL,EADc,EACdA,OAAQF,EADM,EACNA,MACtB,EAAKQ,SAAS,CACbP,OAAQ,IAET,EAAKQ,aAAa,CAAEP,SAAQF,WAnBtB,EAAKO,M,+VAAL,IACOT,GAHQ,E,0HAObW,aAAN,2DAGI,OAHiBT,EAArB,EAAqBA,MAAOC,EAA5B,EAA4BA,OAAQC,EAApC,EAAoCA,OACtCQ,KAAKF,SAAS,CAAET,WAAW,IACnBY,GAFN,EAEkCD,KAAKL,MAAMO,QAAvCD,aACF,gBAHJ,EAEoBE,UACAC,oBAAhB,KAAkC,eAClC,uBAAMH,EAAaI,qBAAnB,KAAsC,eAC5C,uBAAMJ,EAAaK,qBAAqB,CAAEhB,QAAOC,SAAQC,YAAzD,KAAkE,sBAClEQ,KAAKF,SAAS,CAAET,WAAW,EAAOkB,WAAYf,IADoB,yCADtB,qCADJ,sCAHtC,a,EAiBAgB,kBAAA,WACFR,KAAKD,aAAa,K,EAOhBU,OAAA,WAAS,aAC0BT,KAAKH,MAA5BL,EADH,EACGA,OAAQe,EADX,EACWA,WAGRG,EADiBV,KAAKL,MAAMO,OAA5BD,aACAS,MAGR,OACL,mBAAKC,MAAM,kBAAkBC,MAAK,kBAAoB1B,EAApB,iBAAkDH,EAAlD,KAErB,mBAAK4B,MAAM,OACP,mBAAKA,MAAM,kEACP,iBAAGE,KAAK,aAAaF,MAAM,cAAcC,MAAM,yCAAwC,iBAAGD,MAAM,iBAChG,sBAAI,YAAC,IAAD,CAAMG,GAAG,eAAT,WAER,mBAAKH,MAAM,kEACP,mBAAKA,MAAM,+BACP,mBAAKA,MAAM,eACP,qBAAOA,MAAM,UAAUI,IAAI,eAAc,YAAC,IAAD,CAAMD,GAAG,gBAAT,WACzC,YAAC,IAAD,KACI,qBACIE,KAAK,OACLL,MAAM,oBACNG,GAAG,cACHG,QAASC,YAAUlB,KAAM,UACzBmB,MAAO3B,MAInB,mBAAKmB,MAAM,QACP,sBACIK,KAAK,SACLL,MAAM,uBACNS,QAASpB,KAAKJ,mBACjB,YAAC,IAAD,CAAMkB,GAAG,uBAAT,eAMhBP,GAAc,mBACX,mBAAKI,MAAM,OACP,mBAAKA,MAAM,kEACP,oBAAMA,MAAM,cACR,YAAC,IAAD,CAAMG,GAAG,oBAAT,gBADJ,KACsDP,MAKlE,mBAAKI,MAAM,OACND,GAASA,EAAMW,KAAI,SAAAC,GAAI,OAAI,mBACxB,mBAAKX,MAAM,kEACP,YAAC,IAAD,CAAWT,OAAQ,EAAKP,MAAMO,OAAQoB,KAAMA,UAIxD,mBAAKX,MAAM,YACP,mBAAKA,MAAM,kEACP,iBAAGE,KAAK,aAAaF,MAAM,4BAA4BC,MAAM,IAAG,iBAAGD,MAAM,gBAAzE,IAA0F,YAAC,IAAD,CAAMG,GAAG,aAAT,oB,GA3F9FS,e,EAmGL9B,a","file":"route-inbox.chunk.9b885.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport InboxUser from '../../components/inbox/users';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nconst initialState = {\n    isLoading: false,\n\tlimit: 25,\n\toffset: 0,\n    search: '',\n};\n\n@observer\nclass Inbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadMessages({ limit, offset, search }) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { messageStore, userStore } = this.props.stores;\n        await userStore.getNotifications();\n        await messageStore.getUnReadMessages();\n\t\tawait messageStore.loadConversationList({ limit, offset, search });\n\t\tthis.setState({ isLoading: false, searchText: search });\n\t}\n\n    searchForMessages = () => {\n        const { search, limit } = this.state;\n\t\tthis.setState({\n\t\t\toffset: 0,\n\t\t});\n\t\tthis.loadMessages({ search, limit });\n    }\n\n    componentDidMount() {\n\t\tthis.loadMessages({});\n\t}\n\n\t// componentWillReceiveProps(nextProps) {\n\t// \tthis.loadMessages(nextProps);\n\t// }\n\n    render() {\n        const { search, searchText } = this.state;\n\n        const { messageStore } = this.props.stores;\n        const { users } = messageStore;\n\n\n        return (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\n                <div class='row'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                        <a href='/inbox/new' class='float-right' style='font-size: 1.5em; line-height: 1.0em;'><i class='fas fa-edit' /></a>\n                        <h5><Text id='inbox.title'>Inbox</Text></h5>\n                    </div>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2'>\n                        <div class='d-flex flex-row flex-nowrap'>\n                            <div class='flex-grow-1'>\n                                <label class='sr-only' for='inboxSearch'><Text id='inbox.search'>Search</Text></label>\n                                <Localizer>\n                                    <input\n                                        type='text'\n                                        class='form-control mb-2'\n                                        id='inboxSearch'\n                                        onInput={linkState(this, 'search')}\n                                        value={search}\n                                    />\n                                </Localizer>\n                            </div>\n                            <div class='ml-1'>\n                                <button\n                                    type='button'\n                                    class='btn btn-primary mb-2'\n                                    onClick={this.searchForMessages}\n                                ><Text id='inbox.search-button'>Search</Text></button>\n                            </div>\n                        </div>\n                    </div>\n\t\t\t\t</div>\n\n                {searchText && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                            <span class='text-muted'>\n                                <Text id='inbox.search-for'>Searched for</Text>: {searchText}\n                            </span>\n                        </div>\n                    </div>\n                </>}\n                <div class='row'>\n                    {users && users.map(user => <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                            <InboxUser stores={this.props.stores} user={user} />\n                        </div>\n                    </>)}\n                </div>\n                <div class='row mt-5'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2'>\n                        <a href='/inbox/new' class='btn btn-primary btn-block' style=''><i class='fas fa-edit' /> <Text id='inbox.new'>New message</Text></a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Inbox;\n"],"sourceRoot":""}