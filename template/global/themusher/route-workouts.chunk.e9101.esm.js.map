{"version":3,"sources":["webpack:///./components/util/scrollIntoView.js","webpack:///./components/workout/totals.js","webpack:///./components/workout/calendar.js","webpack:///./components/workout/summary.js","webpack:///./components/garmin/index.js","webpack:///./components/workout/status.js","webpack:///./routes/workouts/index.js","webpack:///./components/workout/index.js","webpack:///./components/workout/calendarPlan.js","webpack:///./components/modal/index.js","webpack:///./components/workout/graph.js","webpack:///./components/dog/scroller.js","webpack:///./components/workout/table.js","webpack:///./components/strava/index.js","webpack:///./components/gauge/style.css","webpack:///./components/ad/index.js","webpack:///./components/team/teams.js","webpack:///./components/gauge/index.js","webpack:///./components/team/fastList.js"],"names":["initialState","ScrollIntoView","observer","Component","constructor","props","super","this","state","container","componentDidMount","horizontal","vertical","behavior","inline","block","scrollIntoView","render","ref","c","WorkoutTotals","loadTeams","teamStore","stores","currentMonth","Date","getMonth","currentYear","getFullYear","month","year","currentTeam","load","query","team","skipMusherWorkoutSummary","addData","loadAll","componentWillReceiveProps","nextProps","currentSeason","currentSeasonSummary","prevSeason","prevSeasonSummary","seasonStart","parseInt","findWorkoutSummary","findWorkoutSummaryTotal","class","value","distanceKm","smallUnit","elevation","util","secToHms","duration","speedAvg","RED_DAYS","WorkoutCalendar","chooseDay","e","yyyy","mm","day","dd","chooseDayFunction","target","parentElement","dataset","setState","isLoading","skipLoadSummary","userStore","workoutStore","getYear","dog","id","getWorkoutSummary","getWorkoutSummaryDay","loadWorkoutSummary","appState","workoutPlanStore","user","language","DAYS","mu","getDays","MONTHS","getMonths","darkmode","currentDay","getDate","basehref","hideSummary","hideTable","monthNum","yearNum","nextMonth","nextYear","getNextMonth","prevMonth","prevYear","getPrevMonth","weeksInMonth","getDaysInMonth","getWeeksInMonth","daysOfWeek","getDaysInWeek","week","totalDistanceKmMonth","totalCountMonth","totalElevationMonth","totalDurationMonth","totalSpeedavgMonth","totalPlanDistanceKmMonth","href","name","map","getDay","weekObj","summaryPlanWeek","findWorkoutPlanSummaryWeek","totalWeek","summary","findWorkoutSummaryWeekDay","summaryPlanDay","findWorkoutPlanSummaryDay","count","push","distance","isChosen","isToday","isDayOff","indexOf","style","onClick","data-day","data-month","data-year","getTrainingColor","colspan","avgArr","format","Garmin","toggleDate","stopPropagation","preventDefault","showDate","ignoreGarminWorkout","async","garminActivityDetailsStore","ignoreWorkout","loadGarminActivities","importGarminWorkout","asTrack","importTrack","importWorkout","loadWorkouts","toggleDetail","showDetail","hideImported","activities","forceShowDate","selectedTeam","findTeam","length","type","activity","startDate","parseInputDate","startTimeInSeconds","deviceName","activityType","formatDate","locale","formatDistance","distanceInMeters","totalElevationGainInMeters","averageSpeedInMetersPerSecond","durationInSeconds","data-id","WorkoutStatus","loadWorkoutPlans","seasonYear","seasonMonth","workoutPlans","workoutPlanCurrent","workoutPlan","months","monthRange","lastPlanMonth","planMonth","sumWorkoutPlanMonth","percCompleted","findWorkoutSummaryMonth","height","role","aria-valuenow","aria-valuemin","aria-valuemax","fields","kmToMiles","MARGIN_TOP","marginTop","MARGIN_BOTTOM","marginBottom","SUB_MENU_MARGIN_TOP","subMenuMarginTop","loadedTime","offset","limit","submenu","workoutFilter","sessionid","getTime","dataFields","Workouts","messageStore","Promise","all","getNotifications","getUnReadMessages","loadStravaActivities","changeTeam","setLoadMore","unsetLoadMore","settings","imperial","prepareWeekGraphs","updateKeyValue","resetGraphPlanWeekDistanceCurrent","chooseSubmenu","menu","w","date","d","m","y","renderContent","obj","workout","wrapperClasses","wrapperClassesRow","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","setInterval","postScrollview","getIntersectionObserverHistory","stravaActivityStore","daysBack","componentWillMount","componentWillUnmount","clearInterval","checkCordova","scrolledDown","workoutSummaryWeekDay","currentTeamObject","workouts","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","workoutsFiltered","filter","summaryMonth","percentComplete","Math","floor","stravaActivities","garminActivityDetails","callback","changeTeams","key","data-menu","radius","percent","prefix","total","completed","url","section","showExtra","showNavigation","showHeader","strava","garmin","data","wrapperClassNames","contentClassNames","dataValues","getWorkoutColor","getWorkoutIcon","MAX_LOADINDEX","getMaxLoadIndex","showAddComment","viewImageIdx","likeWorkout","Workout","workoutId","setTimeout","toggleAddComment","inputRef","focus","viewImage","idx","closest","shareLink","title","text","shareUrl","onTeamClick","teamid","showTeam","hideTeam","onUserClick","onDogClick","dogid","dogs","showDog","hideDog","updateTimer","viewmode","hasShareApi","allDogs","intensity","findIntensity","code","teamName","teamNames","teams","forEach","likes","comments","hasLikedWorkout","findIndex","gpxInfo","mushers","loadIndex","workoutEquipment","findEquipment","equipment","workoutEquipmentIcon","field","musherImages","slice","musher","u","findPublicUser","images","publicUser","image","s3SmallLink","mapImage","imgs","toJS","batteryUsage","battegryLevelStart","battegryLevelEnd","views","getViews","statistics","back","img","temperature","isLocked","isInProgress","hour12","hour","minute","getLoadIndexColor","normalizeBetween","getLoadIndexText","garminId","stravaId","track","dogsLeft","dogsRight","sledWeight","kcalBurnedTotal","kcalMeatGramsTotal","kcalSalmonGramsTotal","kcalFatGramsTotal","description","markdown","replaceImages","comment","markdownOpts","getMarkdownOptions","avgGpsMovingSpeed","dblClick","likeRef","data-url","uuidv4","data-title","rel","data-native","inputRefObject","col","compact","object","isTeamAdmin","isAdmin","Calendar","setFocus","editMonth","showInput","inputYear","inputMonth","inputDay","inputWeek","newDistance","editWeek","editDay","saveDistance","response","insert","newId","saveField","resetInput","nextDay","addDays","getWeek","checkKeydown","updateWorkoutPlanTips","hideWorkoutPlanTips","toggleTips","newValue","updateSetting","currentEpoch","daysOfMonth","totalDistanceKmMonthPlan","totalWorkoutDistanceKmMonth","isMonthInTheFuture","findWorkoutPlanSummaryMonth","tips","tipsMonth","padDate","hasTipsMonth","placeholder","onInput","linkState","onKeydown","autocomplete","summaryWeek","asNumber","isWeekInTheFuture","totalWorkoutWeek","tipsWeek","hasTipsWeek","data-week","data-distance","isDayInTheFuture","summaryWorkout","getPlanColor","time","totalWorkouts","avgSpeed","Modal","touchStart","startY","touches","pageY","touchEnd","undefined","readyToRefresh","touchMove","close","refreshing","appContainer","scrollTop","imagexxl","thumb","src","onTouchstart","onTouchend","onTouchmove","download","WorkoutGraph","withText","rest","ascend","plan","avgDogs","avgImages","rating","graphWorkoutSummaryWeekDistanceCurrent","graphWorkoutSummaryWeekDistancePrev","graphWorkoutSummaryWeekElevationCurrent","graphWorkoutSummaryWeekElevationPrev","avgDayDistance","avgDayElevation","avgDayDuration","avgDaySpeedAvg","avgDayLoadIndex","avgDayAvgDogs","avgDayAvgImages","avgDaySledWeight","avgDayRest","avgDayRating","avgDayTemperature","graphPlanWeekDistanceCurrent","seasonWeeks","weekRange","seasonDays","dayRange","xTicksAll","wo","parts","xTicks","i","l","xTicksAllDays","partsDays","xTicksDays","width","showXTicks","xTicksVal","val","paddingTop","lineFromXzero","lineFromXmax","xTicksLink","dataLeft","legendLeft","dataFillLeft","showYTicksLeft","yTicksLeftPostfix","unitLeft","avgWindowLeft","smoothLeft","dataRight","legendRight","showYTicksRight","yTicksRightPostfix","unitRight","avgWindowRight","smoothRight","paddingLeft","yTicksLeftWidth","yTicksLeftVal","yTicksRightVal","DogScroller","scrollImages","scrollLeft","clientWidth","imageIdx","nearestInt","round","diff","abs","Number","isInteger","sortByName","a","b","dogA","find","dogB","size","onScroll","sort","dogId","className","showName","showPosition","WorkoutTable","seasonMonths","prevSeasonMonths","partSize","scope","Strava","ignoreStravaWorkout","importStravaWorkout","start_date","total_elevation_gain","average_speed","elapsed_time","module","exports","Ad","subject","body","logClick","adStore","ads","apiServer","getApiServer","path","ambitions","postalcode","place","country","findTeamAmbition","ambition","findTeamType","page","replace","setTime","loadAd","match","ad","native","s3LargeLink","Teams","toggleTeam","unsetTeamIfSelected","dogStore","setCurrentTeam","isDefined","showAllTeams","highlight","showAll","classNames","mouseData","Gauge","svgRef","heightAdd","color","showPercentText","showCenterText","centerText","centerTextSize","centerTextX","centerTextY","totalY","totalX","totalTextAnchor","completedY","completedX","completedTextAnchor","strokeWidth","innerRadius","strokeWidthGauge","circumference","PI","arc","dashArray","transform","min","max","textSize","textSizeSmall","xmlns","svg","preserveAspectRatio","gaugeBackground","cx","cy","r","strokeDasharray","strokeLinecap","gauge","stroke","strokeDashoffset","transition","gaugeText","x","dominant-baseline","text-anchor","font-size","secondary","FastListLine","containerRef","removeIntersectionObserver","addIntersectionObserver","dataProperties","encodeURI","data-idx","FastList","deleteIntersectionObserver","intersectionObserver","entries","isIntersecting","currentHeight","childNodes","offsetHeight","scrollHeight","display","minHeight","setupIntersectionObserver","window","IntersectionObserverEntry","prototype","IntersectionObserver","root","rootMargin","threshold","observe","unobserve","isObject","hasOwnProperty","contentClasses"],"mappings":"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","file":"route-workouts.chunk.e9101.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\n@observer\nclass WorkoutTotals extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    async loadAll(props = this.props) {\n        await this.loadTeams(props);\n        // await Promise.all([\n        //     this.loadTeams(props),\n        // ]);\n    }\n\n    async loadTeams(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear, currentTeam } = props;\n\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true, year, month }, addData: ['workoutSummary'] });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.year !== this.props.year || nextProps.currentTeam !== this.props.currentTeam) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    render() {\n        const { teamStore } = this.props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear, currentTeam, currentSeason: currentSeasonSummary, prevSeason: prevSeasonSummary } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        const { workoutSummary } = teamStore;\n        const prevSeason = prevSeasonSummary || ((currentTeam ? teamStore.findWorkoutSummary(currentTeam, seasonStart - 1) : teamStore.findWorkoutSummaryTotal(seasonStart - 1)) || {});\n        const currentSeason = currentSeasonSummary || ((currentTeam ? teamStore.findWorkoutSummary(currentTeam, seasonStart) : teamStore.findWorkoutSummaryTotal(seasonStart)) || {});\n\n        return (\n            <div class='container-fluid mb-2'>\n                <div class='row mt-2 border-top'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-road' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            <Distance stores={this.props.stores} value={currentSeason.distanceKm || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-road' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            <Distance stores={this.props.stores} value={prevSeason.distanceKm || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                </div>\n                <div class='row mt-2'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-mountain' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            <Elevation stores={this.props.stores} value={currentSeason.elevation || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-mountain' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            <Elevation stores={this.props.stores} value={prevSeason.elevation || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                </div>\n                <div class='row mt-2'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-clock' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            {util.secToHms(currentSeason.duration || 0)}\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-clock' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            {util.secToHms(prevSeason.duration || 0)}\n                        </h3>\n                    </div>\n                </div>\n                <div class='row mt-2 border-bottom'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-tachometer-alt' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            <Speed stores={this.props.stores} value={currentSeason.speedAvg || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-tachometer-alt' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            <Speed stores={this.props.stores} value={prevSeason.speedAvg || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default WorkoutTotals;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\nconst RED_DAYS = [0, 6];\n\n@observer\nclass WorkoutCalendar extends Component {\n\n    async loadWorkoutSummary(props = this.props) {\n        this.setState({ isLoading: true });\n        if (props.skipLoadSummary) {\n            return false;\n        }\n\n\t\tconst { userStore, workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const { month = currentMonth, year = util.getYear(), team = currentTeam, dog = {} } = props;\n        if (dog && dog.id) {\n            await userStore.getWorkoutSummary({ dog: dog.id, year });\n            await userStore.getWorkoutSummaryDay({ month, year, dog: dog.id });\n        } else {\n            await userStore.getWorkoutSummary({ team, dog: dog.id, year });\n            await userStore.getWorkoutSummaryDay({ month, year, team, dog: dog.id });\n        }\n\t\t// await workoutStore.load({ query: { team: currentTeam, month, year } });\n        this.setState({ isLoading: false });\n    }\n\n    chooseDay = (e) => {\n        const { year: yyyy, month: mm, day: dd } = this.state;\n        const { chooseDayFunction = () => {} } = this.props;\n\t\tconst day = e.target.parentElement.dataset.day || e.target.dataset.day;\n\t\tconst month = e.target.parentElement.dataset.month || e.target.dataset.month;\n\t\tconst year = e.target.parentElement.dataset.year || e.target.dataset.year;\n\t\t// console.log({ day, month, year });\n\n        if (year === yyyy && month === mm && day === dd) {\n            this.setState({\n                year: null,\n                month: null,\n                day: null,\n            });\n        } else {\n            this.setState({\n                year,\n                month,\n                day,\n            });\n        }\n        chooseDayFunction({ day, month, year });\n    }\n\n    componentDidMount() {\n        this.loadWorkoutSummary();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.month !== this.props.month\n            || nextProps.year !== this.props.year\n            || nextProps.dog !== this.props.dog\n            || nextProps.team !== this.props.team) {\n            this.loadWorkoutSummary(nextProps);\n        }\n    }\n\n    render() {\n        const { appState, userStore, workoutPlanStore } = this.props.stores;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        const DAYS = mu.getDays(language);\n        const MONTHS = mu.getMonths(language);\n\n        const { day: dd, month: mm, year: yyyy } = this.state;\n\n\t\tconst { darkmode } = appState;\n        \n        const currentDay = new Date().getDate();\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear, dog, basehref, hideSummary, hideTable } = this.props;\n\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        const monthNum = parseInt(month, 10);\n        const yearNum = parseInt(year, 10);\n        const { month: nextMonth, year: nextYear } = mu.getNextMonth(monthNum, yearNum);\n        const { month: prevMonth, year: prevYear } = mu.getPrevMonth(monthNum, yearNum);\n\n        const daysOfMonth = util.getDaysInMonth(month, year);\n        const weeksInMonth = util.getWeeksInMonth(month, year);\n        const firstWeek = weeksInMonth[0].week;\n        const daysOfWeek = util.getDaysInWeek(firstWeek, year, month);\n        let totalDistanceKmMonth = 0;\n        let totalCountMonth = 0;\n        let totalElevationMonth = 0;\n        let totalDurationMonth = 0;\n        let totalSpeedavgMonth = [];\n\n        let totalPlanDistanceKmMonth = 0;\n\n        return (\n            <>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-4 text-center'>\n                    <a href={`${basehref || '/workouts/month/'}${nextMonth}/${nextYear}/skipScroll`} class='float-right btn btn-sm btn-outline-secondary ml-2'><i class='fas fa-arrow-right' /></a>\n                    <a href={`${basehref || '/workouts/month/'}${prevMonth}/${prevYear}/skipScroll`} class='float-left btn btn-sm btn-outline-secondary mr-2'><i class='fas fa-arrow-left' /></a>\n                    <h3><Text id='workout.calendar.month'>Måned</Text> - {MONTHS[month - 1]} {year}</h3>\n                    <h5 class='text-muted font-weight-light'><Text id='workout.plan.season'>Sesongen</Text> {seasonStart} - {seasonStart + 1}</h5>\n                    {dog && <div>{dog.name}</div>}\n                    {/* <small>{util.isoDate(daysOfMonth[0], false, false, true)} - {util.isoDate(daysOfMonth[daysOfMonth.length - 1], false, false, true)}</small> */}\n                </div>\n\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-4'>\n\n                    {!hideTable && <>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th class='text-muted'><small><Text id='workout.calendar.week'>Uke</Text></small></th>\n                                    {daysOfWeek.map(day => <th><small>{DAYS[day.getDay()]}</small></th>)}\n                                    <th class='text-muted'><small><Text id='workout.calendar.sum'>Sum</Text></small></th>\n                                    {/* <th class='text-muted'>Totalt</th> */}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {weeksInMonth && weeksInMonth.map(weekObj => {\n                                    const daysOfWeek = util.getDaysInWeek(weekObj.week, year, month);\n                                    const summaryPlanWeek = workoutPlanStore.findWorkoutPlanSummaryWeek(parseInt(year, 10), weekObj.week) || {};\n                                    let totalWeek = 0;\n                                    return (\n                                        <tr>\n                                            <td class='text-right text-muted pt-3'>\n                                                <small>\n                                                    <a href={`/workouts/week/${weekObj.week}/${year}`} class='text-muted'>{weekObj.week}</a>\n                                                </small>\n                                            </td>\n                                            {daysOfWeek.map(day => {\n                                                const summary = userStore.findWorkoutSummaryWeekDay(day.getFullYear(), day.getMonth() + 1, day.getDate(), monthNum) || {};\n                                                const summaryPlanDay = workoutPlanStore.findWorkoutPlanSummaryDay(day.getFullYear(), day.getMonth() + 1, day.getDate(), monthNum) || {};\n                                                if (summary && summary.distanceKm) {\n                                                    totalWeek += summary.distanceKm;\n                                                    totalDistanceKmMonth += summary.distanceKm;\n                                                    totalCountMonth += summary.count;\n                                                    totalElevationMonth += summary.elevation;\n                                                    totalDurationMonth += summary.duration;\n                                                    totalSpeedavgMonth.push(summary.speedAvg);\n                                                }\n                                                if (summaryPlanDay && summaryPlanDay.distance) {\n                                                    totalPlanDistanceKmMonth += summaryPlanDay.distance;\n                                                }\n                                                const isChosen = (dd == day.getDate()) && (mm == day.getMonth() + 1) && (yyyy === day.getFullYear());\n                                                const isToday =  (currentDay == day.getDate()) && (currentMonth == day.getMonth() + 1) && (currentYear == day.getFullYear());\n                                                const isDayOff = RED_DAYS.indexOf(day.getDay()) > -1;\n                                                // console.log(summary);\n                                                // count: 1, day: 5, distanceKm: 10, duration: 3600, elevation: 200, month: 9, speedAvg: 12, year: 2020\n                                                return (\n                                                    <td class={`text-center font-weight-light position-relative pt-3 pb-3 ${isChosen ? 'calendarIsChosen' : ''} ${isToday ? 'calendarIsToday' : ''} ${isDayOff ? 'calendarIsWeekend' : ''}`}\n                                                        style={`font-size: 0.8em;`}\n                                                        onClick={this.chooseDay} data-day={day.getDate()} data-month={day.getMonth() + 1} data-year={year}\n                                                    >\n                                                        <div class='position-absolute text-muted' style='top: 0px; right: 2px; font-size: 0.7em;'>\n                                                            {day.getDate()}\n                                                        </div>\n                                                        {summary && summary.distanceKm ? \n                                                            <div class='rounded-pill w-100 px-1'\n                                                                style={`background-color: ${mu.getTrainingColor(summary, darkmode)};`}\n                                                            >\n                                                                <Distance stores={this.props.stores} value={summary.distanceKm} />\n                                                                {summary.count > 1 && (\n                                                                    <span class='position-absolute text-danger'\n                                                                        style='bottom: 0; right: 0px; font-size: 0.6em;'>\n                                                                        {summary.count}\n                                                                    </span>\n                                                                )}\n\n                                                            </div> : '-'}\n                                                        {summaryPlanDay.distance > 0 && (\n                                                            <span class='position-absolute text-primary'\n                                                                style='bottom: 0; left: 0px; font-size: 0.9em;'>\n                                                                <Distance stores={this.props.stores} value={summaryPlanDay.distance} />\n                                                            </span>\n                                                        )}\n                                                    </td>\n                                                );\n                                            })}\n                                            <td class='text-right pt-3 pb-3 position-relative' style='font-size: 0.8em;'>\n                                                <Distance stores={this.props.stores} value={totalWeek} />\n                                                {summaryPlanWeek.distance > 0 && (\n                                                    <span class='position-absolute text-primary'\n                                                        style='bottom: 0; left: 0px; font-size: 0.9em;'>\n                                                        <Distance stores={this.props.stores} value={summaryPlanWeek.distance} />\n                                                    </span>\n                                                )}    \n                                            </td>\n                                            {/* <td class='text-right text-muted pt-3'>{totalDistanceKmMonth}</td> */}\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                            <tfoot>\n                                <tr>\n                                    <td colspan='8' class='text-right'><Text id='workout.calendar.totalKm'>Totalt km</Text></td>\n                                    <td class='text-right text-muted pb-3 position-relative'>\n                                        <Distance stores={this.props.stores} value={totalDistanceKmMonth} />\n                                        {totalPlanDistanceKmMonth > 0 && (\n                                            <span class='position-absolute text-primary'\n                                                style='bottom: 0; left: 0px; font-size: 0.8em;'>\n                                                <Distance stores={this.props.stores} value={totalPlanDistanceKmMonth} />\n                                            </span>\n                                        )}\n                                    </td>\n                                </tr>\n                            </tfoot>\n                        </table>\n                    </>}\n\n                    {!hideSummary && <>\n                        <h5 class='mt-4'><Text id='workout.calendar.summary'>Oppsummering</Text> - {MONTHS[month - 1]} {year}</h5>\n                        {dog && <div>{dog.name}</div>}\n\n                        <table class='table table-striped table-sm'>\n                            <tbody>\n                                <tr>\n                                    <td class='text-muted'><Text id='workout.calendar.totalWorkouts'>Antall økter</Text></td>\n                                    <td class='text-right'>{totalCountMonth}</td>\n                                </tr>\n                                <tr>\n                                    <td class='text-muted'><Text id='workout.calendar.distance'>Distanse</Text></td>\n                                    <td class='text-right'>\n                                        <Distance stores={this.props.stores} value={totalDistanceKmMonth} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class='text-muted'><Text id='workout.calendar.ascend'>Høydemeter</Text></td>\n                                    <td class='text-right'>\n                                        <Elevation stores={this.props.stores} value={totalElevationMonth} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class='text-muted'><Text id='workout.calendar.duration'>Varighet</Text></td>\n                                    <td class='text-right'>\n                                        {util.secToHms(totalDurationMonth)}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class='text-muted'><Text id='workout.calendar.avg-speed'>Gjennomsnittsfart</Text></td>\n                                    <td class='text-right'>\n                                        <Speed stores={this.props.stores} value={mu.avgArr(totalSpeedavgMonth)} />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </>}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WorkoutCalendar;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\n@observer\nclass WorkoutSummary extends Component {\n    render() {\n        const { summary = {} } = this.props;\n\n        return (\n            <div class='w-100 mb-3'>\n                <div class='row'>\n                    <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 d-flex mb-0 position-relative'>\n                        {/* {JSON.stringify(workout, null, 4)} */}\n                        <div class={`text-center border rounded-circle imageRounded`}>\n                            <div class={`text-muted mt-2`} style='font-size: 40px; line-height: 1;'>{summary.week}</div>\n                            <div class={`text-muted`} style='font-size: 10px; line-height: 0.8em;'>{summary.year}</div>\n                        </div>\n                        <div class='flex-grow-1 pl-3'>\n                            <h5 class='my-0'>{summary.week} - {summary.year}</h5>\n                            <small class='text-muted'>\n                                <i class='fas fa-wave-square' /> {summary.count}\n                                <i class='fas fa-road ml-2' /> {util.format(summary.distanceKm, 0)}km\n                                <i class='fas fa-mountain ml-2' /> {util.format(summary.elevation, 0)}m\n                                <i class='fas fa-stopwatch ml-2' /> {util.secToHms(summary.duration)}\n                                <i class='fas fa-tachometer-alt ml-2' /> {util.format(summary.speedAvg, 1)}km/t\n                            </small>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WorkoutSummary;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\n@observer\nclass Garmin extends Component {\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n    ignoreGarminWorkout = async (e) => {\n        e.stopPropagation();\n        const id = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { garminActivityDetailsStore } = this.props.stores;\n\t\tawait garminActivityDetailsStore.ignoreWorkout(id);\n        this.loadGarminActivities();\n    }\n\n    importGarminWorkout = async (e) => {\n        e.stopPropagation();\n        const id = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { asTrack } = this.props;\n        const { garminActivityDetailsStore, workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n        if (asTrack) {\n            await garminActivityDetailsStore.importTrack(id, currentTeam);\n        } else {\n            await garminActivityDetailsStore.importWorkout(id, currentTeam);\n        }\n        this.loadGarminActivities();\n        this.loadWorkouts();\n    }\n\n    async loadGarminActivities() {\n\t\tconst { garminActivityDetailsStore } = this.props.stores;\n\t\tgarminActivityDetailsStore.load({ query: { hideImported: 1 }});\n\t}\n\n    loadWorkouts = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tawait workoutStore.load({ query: { team: currentTeam } });\n\t}\n\n    toggleDetail = () => {\n        const { showDetail = false } = this.state;\n        this.setState({\n            showDetail: !showDetail,\n        });\n    }\n\n    componentDidMount() {\n\t\tthis.loadGarminActivities();\n\t}\n\n    render() {\n        const { showDate, showDetail = false } = this.state;\n        const { activities = [], showDate: forceShowDate, asTrack = false } = this.props;\n\t\tconst { userStore, workoutStore } = this.props.stores;\n        const { currentTeam } = workoutStore;\n        const { team } = userStore;\n\n        const selectedTeam = userStore.findTeam(currentTeam || team.id);\n\n        if (!showDetail) {\n            if (activities && activities.length > 0) {\n                return (<>\n                    <div class='col-12 mb-3'>\n                        <button type='button' class='btn btn-block btn-outline-info' onClick={this.toggleDetail}>\n                            <div class={`float-right ml-2 text-center border rounded-circle imageRounded imageRoundedIcon`} style={`background-image: url('./assets/garmin-connect.png');`} />\n                            <Text id='workout.index.garmin-workouts'>Garmin workouts / not imported</Text> {activities.length}\n                        </button>\n                    </div>\n                </>);\n            }\n            return (<></>);\n        }\n\n        return (<>\n            <div class='col-12 mb-3'>\n                <div class='row'>\n                    {activities && activities.length > 0 && (\n                        <div\n                            class='col-12 border-top border-bottom pt-3 pb-3 my-2 bg-light'\n                        >\n                            <button type='button' class='float-right btn btn-sm btn-link' onClick={this.toggleDetail}>\n                                <i class='fas fa-caret-up' /> <Text id='garmin.hide-list'>Hide list</Text>\n                            </button>\n                            <h5><Text id='workout.index.garmin-workouts'>Garmin workouts / not imported</Text> {activities.length}</h5>\n                            {activities && activities.map(activity => {\n                                const { summary = {} } = activity;\n                                const startDate = util.parseInputDate(summary.startTimeInSeconds);\n\n                                return (<>\n                                    {/* <td>{util.secToHms(activity.moving_time)}</td> */}\n                                    {/* <td>{util.secToHms(activity.elapsed_time)}</td> */}\n\n                                    {/* {\n                                        \"durationInSeconds\": 616,\n                                        \"startTimeInSeconds\": 1602065947,\n                                        \"startTimeOffsetInSeconds\": 7200,\n                                        \"activityType\": \"ROAD_BIKING\",\n                                        \"averageSpeedInMetersPerSecond\": 0.152,\n                                        \"averagePaceInMinutesPerKilometer\": 109.649124, \n                                        \"activeKilocalories\": 1, \n                                        \"deviceName\": \"edge1000\", \n                                        \"distanceInMeters\": 94.02, \n                                        \"maxPaceInMinutesPerKilometer\": 14.6455765, \n                                        \"maxSpeedInMetersPerSecond\": 1.138, \n                                        \"startingLatitudeInDegree\": 61.00674974732101, \n                                        \"startingLongitudeInDegree\": 9.975536987185478, \n                                        \"totalElevationLossInMeters\": 2\n                                    } */}\n\n                                    <div class='col-12 d-flex mb-4 position-relative'>\n                                        <div class={`text-center border rounded-circle imageRounded`} style={`background-image: url(\"./assets/garmin-connect.png\"); border-width: 3px !important;`}>\n                                            &nbsp;\n                                        </div>\n                                        <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                                            <h5 class='my-0 mb-1' style='line-height: 1.0em;'>{summary.deviceName}</h5>\n                                            {summary.activityType}<br />\n                                            <small class='text-muted'>\n                                                {startDate && <small onClick={this.toggleDate}>\n                                                    {forceShowDate || showDate ? util.formatDate(startDate, { locale: 'no-NB' }) : util.formatDistance(startDate, new Date(), { locale: 'no-NB' })}\n                                                </small>}\n                                                <span class='text-muted'>\n                                                    <i class='fas fa-road ml-2' /> <Distance stores={this.props.stores} value={summary.distanceInMeters / 1000} />\n                                                    <i class='fas fa-mountain ml-2' /> <Elevation stores={this.props.stores} value={summary.totalElevationGainInMeters} />\n                                                    <i class='fas fa-tachometer-alt ml-2' /> <Speed stores={this.props.stores} value={summary.averageSpeedInMetersPerSecond * 3.6} />\n                                                    <i class='fas fa-stopwatch ml-2' /> {util.secToHms(summary.durationInSeconds)}\n                                                </span>\n                                            </small>\n                                            <br />\n                                            <button class='btn btn-sm btn-block btn-primary' onClick={this.importGarminWorkout} data-id={activity.id}>\n                                                <i class='fas fa-file-import' /> {asTrack ? <Text id='garmin.import-track'>Import as track</Text> : <><Text id='garmin.import'>Import workout</Text> <i class='fas fa-arrow-right' /> {selectedTeam}</>} \n                                            </button>\n                                            <button class='btn btn-sm btn-link' onClick={this.ignoreGarminWorkout} data-id={activity.id}>\n                                                <i class='fas fa-trash-alt' /> <Text id='garmin.ignore'>Ignore workout</Text>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </>);\n                            })}\n\n                            <button type='button' class='btn btn-block btn-primary mt-3' onClick={this.toggleDetail}>\n                                <i class='fas fa-caret-up' /> <Text id='garmin.hide-list'>Hide list</Text>\n                            </button>\n                        </div>\n                    )}\n\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default Garmin;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutStatus extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    async loadAll(props = this.props) {\n        // await Promise.all([\n        //     this.loadTeams(props),\n        //     this.loadWorkoutPlans(props),\n        //     this.loadWorkoutSummary(props),\n        // ]);\n    }\n\n    async loadTeams(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear, currentTeam } = props;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true, year, month }, addData: ['workoutSummary'] });\n\t}\n\n    loadWorkoutPlans = async (props = this.props) => {\n\t\tconst { workoutPlanStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { year = currentYear, month = currentMonth, currentTeam } = props;\n\t\tconst seasonStart = parseInt(year || (month < 8 ? year - 1 : year), 10);\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t\tseasonMonth: 6,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t}\n\t\t}\n\t}\n\n    async loadWorkoutSummary(props = this.props) {\n        const { year, currentTeam, dog } = props;\n\t\tconst { userStore } = props.stores;\n        await userStore.getWorkoutSummary({ team: currentTeam, year, dog });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.year !== this.props.year || nextProps.currentTeam !== this.props.currentTeam) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    render() {\n\t\tconst { currentSeason, prevSeason, currentTeam } = this.props;\n\n        const { userStore, workoutPlanStore, teamStore } = this.props.stores;\n        const { workoutPlan } = workoutPlanStore;\n        const { user, workoutSummaryTeam } = userStore;\n        const { language = 'en' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n\t\tconst team = teamStore.findTeam(currentTeam) || {};\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n        const { year = currentYear, month = currentMonth } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n        const months = util.monthRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        let lastPlanMonth;\n\n        return (\n            <div class='container-fluid mb-2'>\n                <div class='row mt-2'>\n                    <div class='col-12'>\n                        <h5>\n                            <span style='display: none;'>{workoutPlan.id}</span>\n                            <Text id='workout.totals.title'>Treningsplanstatus</Text>\n                        </h5>\n                    </div>\n                </div>\n                <div class='row mt-2 border-bottom pb-2'>\n                    {months && months.map((month) => {\n                        if (month.year > year || (month.year === year && month.month >= month)) {\n                            return '';\n                        }\n                        const planMonth = workoutPlanStore.sumWorkoutPlanMonth(month.year, month.month + 1);\n                        if (!planMonth) {\n                            return '';\n                        }\n                        lastPlanMonth = planMonth;\n                        const summaryMonth = userStore.findWorkoutSummaryMonth(month.year, month.month + 1);\n                        const percCompleted = summaryMonth / planMonth * 100;\n                        const height = percCompleted > 100 ? 100 : util.format(percCompleted, 0);\n                        return (\n                            <div class='col-3 text-center'>\n                                {/* <div class='w-100 mt-1'>\n                                    <small class='text-muted'>\n                                        {planMonth}km\n                                    </small>\n                                    <small class='text-info'>\n                                        {summaryMonth}km\n                                    </small>\n                                </div> */}\n                                <div class='px-auto w-100 clearfix'>\n                                    <div class={`progress ${style['progress-bar-vertical']}`}\n                                        style={' margin-left: calc(50% - 20px);'}\n                                    >\n                                        <div class='progress-bar progress-bar-striped bg-success' role='progressbar'\n                                            style={`height: ${height}%; width: 40px;`}\n                                            aria-valuenow={height} aria-valuemin='0' aria-valuemax='100'\n                                        >\n                                            {util.format(percCompleted, 0)}%\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class='w-100 mt-1'>\n                                    {MONTHS[month.month]} {month.year}\n                                </div>\n                            </div>\n                        );\n                    })}\n                    {!lastPlanMonth && <div class='col-12 text-center text-muted mb-5'>\n                        <div class='display-1'>\n                            <i class='far fa-sad-tear' />\n                        </div>\n                        <h3 class='font-weight-lighter'>\n                            <Text id='workout.plan.no-workout-plan-found' fields={{ name: team.name }}>Ingen treningsplaner funnet for team {team.name}.</Text>\n                        </h3>\n                        <a class='btn btn-success btn-lg mt-3' href='/workouts/plan'><i class='fas fa-calendar-alt' /> <Text id='workout.plan.new'>New workoutplan</Text></a>\n                    </div>}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default WorkoutStatus;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport Workout from '../../components/workout';\nimport WorkoutSummary from '../../components/workout/summary';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutTable from '../../components/workout/table';\nimport WorkoutCalendar from '../../components/workout/calendar';\nimport Teams from '../../components/team/teams';\nimport Gauge from '../../components/gauge';\nimport CalendarPlan from '../../components/workout/calendarPlan';\nimport Strava from '../../components/strava';\nimport Garmin from '../../components/garmin';\nimport Ad from '../../components/ad/';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\nimport FastList from '../../components/team/fastList';\n\nfunction kmToMiles(value) {\n    return util.format(0.621371 * value, 1);\n}\n\nconst initialState = {\n\tloadedTime: 0,\n\tisLoading: false,\n\toffset: 0,\n\tlimit: 5,\n\tsubmenu: 'totals',\n\tworkoutFilter: () => true,\n\tsessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n@observer\nclass Workouts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tloadAll = async (props = this.props) => {\n\t\tconst { limit, offset } = this.state;\n\t\tthis.setState({ isLoading: true });\n\t\tconst { workoutStore, userStore, messageStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\t// const currentMonth = new Date().getMonth() + 1;\n        // const { month = currentMonth, year = util.getYear(), team = currentTeam, dog = {} } = props;\n\n\t\t// const { year } = props;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n        // await userStore.getInfo();\n\t\tawait Promise.all([\n\t\t\tthis.loadWorkouts({ team: currentTeam, year, month, limit, offset }),\n\t\t\tthis.loadWorkoutSummary(props),\n\t\t\tthis.loadWorkoutPlans(props),\n\t\t\tuserStore.getNotifications(),\n\t\t\tmessageStore.getUnReadMessages(),\n\t\t\tthis.loadStravaActivities(),\n\t\t\tthis.loadGarminActivities(),\n\t\t\tthis.loadTeams(props),\n\t\t]);\n\t\tthis.setState({\n\t\t\tloadedTime: new Date().getTime(),\n\t\t\tisLoading: false,\n\t\t});\n\t}\n\n\tchangeTeam = () => {\n        this.loadAll();\n\t}\n\n\tloadWorkouts = ({ team, year, month, limit, offset }) => {\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst append = offset > 0;\n\t\tworkoutStore.load({\n\t\t\tquery: {\n\t\t\t\tteam,\n\t\t\t\tyear,\n\t\t\t\tmonth,\n\t\t\t},\n\t\t\tlimit,\n\t\t\toffset,\n\t\t\taddData: ['publicTeams', 'publicUsers'],\n\t\t}, append);\n\t}\n\n    setLoadMore = () => {\n        const { workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear } = this.props;\n\n        workoutStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadWorkouts({ team: currentTeam, year, month, limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { workoutStore } = this.props.stores;\n        workoutStore.setLoadMore(() => {});\n    }\n\n\tasync loadTeams(props = this.props) {\n\t\tconst { teamStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true, year, month }, addData: ['workoutSummary'] });\n\t}\n\n\tasync loadStravaActivities() {\n\t\tconst { stravaActivityStore } = this.props.stores;\n\t\tstravaActivityStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tasync loadGarminActivities() {\n\t\tconst { garminActivityDetailsStore } = this.props.stores;\n\t\tgarminActivityDetailsStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tloadWorkoutPlans = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { year = currentYear, month = currentMonth } = props;\n\t\tconst seasonStart = (month < 8 ? year - 1 : year);\n\n\t\tconst { workoutPlanStore, workoutStore, userStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\tconst { user } = userStore;\n        const { settings = {} } = user;\n\t\tconst { imperial } = settings;\n\n\t\t// workoutPlanStore.updateItem('workoutPlans', []);\n\t\t// workoutPlanStore.updateItem('workoutPlan', {});\n\t\t// workoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({\n\t\t\t\tquery: {\n\t\t\t\t\tteam: currentTeam,\n\t\t\t\t\tseasonYear: seasonStart,\n\t\t\t\t},\n\t\t\t\taddData: ['tips'],\n\t\t\t});\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year, imperial });\n\t\t\t} else {\n\t\t\t\tworkoutPlanStore.updateKeyValue('workoutPlan', {});\n\t\t\t\tworkoutPlanStore.updateKeyValue('workoutPlans', []);\n\t\t\t\tworkoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\t\t\t}\n\t\t}\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tasync loadWorkoutSummary(props = this.props) {\n\t\tconst { userStore, workoutStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n\t\tconst { currentTeam } = workoutStore;\n        await userStore.getWorkoutSummary({ team: currentTeam, year, month });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year, team: currentTeam });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year: year - 1, team: currentTeam });\n\t\tawait userStore.getWorkoutSummaryDay({ daysBack: 500, team: currentTeam });\n    }\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tchooseDay = ({ day, month, year }) => {\n\t\tconst { dd, mm, yyyy } = this.state;\n\t\tif (dd === day && mm === month && yyyy === year) {\n\t\t\treturn this.setState({\n\t\t\t\tworkoutFilter: () => true,\n\t\t\t\tdd: null,\n\t\t\t\tmm: null,\n\t\t\t\tyyyy: null,\n\t\t\t});\n\t\t}\n\t\tthis.setState({\n\t\t\tdd: day,\n\t\t\tmm: month,\n\t\t\tyyyy: year,\n\t\t\tworkoutFilter: (w) => {\n\t\t\t\tconst date = new Date(w.date);\n\t\t\t\tconst d = date.getDate();\n\t\t\t\tconst m = date.getMonth() + 1;\n\t\t\t\tconst y = date.getFullYear();\n\t\t\t\treturn d === parseInt(day, 10) && m === parseInt(month, 10) && y === parseInt(year, 10);\n\t\t\t},\n\t\t});\n\t}\n\n\trenderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        return (<>\n\t\t\t<Workout\n\t\t\t\tstores={this.props.stores}\n\t\t\t\tworkout={obj}\n\t\t\t\tshowDate={true}\n\t\t\t\twrapperClasses={'w-100'}\n\t\t\t\twrapperClassesRow={''}\n\t\t\t/>\n        </>);\n    }\n\n\t// Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { workoutStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => workoutStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n\tcomponentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentWillUnmount() {\n        const { workoutStore, stravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n        workoutStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        this.unsetLoadMore();\n\t\t// workoutStore.cleanupMemory();\n    }\n\t// /Scroll views timer\n\n\tcomponentDidMount() {\n\t\tconst { appState } = this.props.stores;\n\t\tthis.loadAll();\n\t\t// this.loadDogs();\n\t\t// this.loadTracks();\n\t\tappState.checkCordova();\n\t\tthis.setLoadMore();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.month !== this.props.month\n            || nextProps.year !== this.props.year\n            || nextProps.team !== this.props.team) {\n            this.loadAll(nextProps);\n        }\n    }\n\n\trender() {\n        const { scrolledDown } = this.props;\n\t\tconst { isLoading, submenu, handleIntersection, sessionid, loadedTime } = this.state;\n\t\tconst { userStore, appState, workoutStore, workoutPlanStore,\n\t\t\tstravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n\t\tconst { workoutPlan, workoutPlans } = workoutPlanStore;\n\n\t\tconst { user, workoutSummaryWeekDay = [] } = userStore;\n        const { language = 'en', settings = {} } = user;\n        const MONTHS = mu.getMonths(language);\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\t\n\t\tconst { currentTeam } = workoutStore;\n\t\tconst currentTeamObject = userStore.findTeam(currentTeam, true);\n\n\t\tconst { darkmode } = appState;\n\t\tconst { workouts, cordovaActiveTrackingParams, isRunning, totalDistance, currentSpeed, totalTime } = workoutStore;\n\n\t\tconst { workoutFilter } = this.state;\n\t\tconst workoutsFiltered = workouts.filter(workoutFilter);\n\n\t\tconst planMonth = workoutPlanStore.sumWorkoutPlanMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tconst summaryMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'distanceKm', true) || 0;\n\t\tlet percentComplete;\n\t\tif (planMonth) {\n\t\t\tpercentComplete = Math.floor(summaryMonth / planMonth * 100);\n\t\t}\n\t\tconst totalCountMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'count', true) || 0;\n\t\tconst totalDistanceKmMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'distanceKm', true) || 0;\n\t\tconst totalDurationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'duration', true) || 0;\n\t\tconst totalSpeedavgMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'speedAvg', true) || 0;\n\t\tconst totalElevationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'elevation', true) || 0;\n\n\t\tconst { stravaActivities = [] } = stravaActivityStore;\n\t\tconst { garminActivityDetails = [] } = garminActivityDetailsStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row fixed-top pt-2' style={`margin-top: ${scrolledDown > 0 ? 0 : SUB_MENU_MARGIN_TOP}; background-color: ${darkmode ? '#191d21' : '#f8f9fa'}; transition: all 0.3s ease-in-out;`}>\n\t\t\t\t\t<div class='col text-center border-bottom border-primary subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/' class='text-primary stretched-link'><nobr><i class='fas fa-chart-line' /> <Text id='workout.index.dashboard'>Oversikt</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/list' class='text-secondary stretched-link'><nobr><i class='fas fa-list' /> <Text id='workout.index.list'>Liste</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/plan' class='text-secondary stretched-link'><nobr><i class='fas fa-calendar-alt' /> <Text id='workout.index.plan'>Plan</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{/* <xmp>\n\t\t\t\ttotalTime: {totalTime}<br />\n\t\t\t\tcordovaActiveTrackingParams: {JSON.stringify(cordovaActiveTrackingParams)}<br />\n\t\t\t\t</xmp> */}\n\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>\n\t\t\t\t\t\t\t\t\t<Speed stores={this.props.stores} value={currentSpeed * 3.6} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>\n\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalDistance / 1000} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t\t{/* {JSON.stringify(cordovaActiveTrackingParams)}\n\t\t\t\t\t\t\t{JSON.stringify(isRunning)} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.changeTeams} key={`teams-${currentTeam}`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t<a class='btn btn-primary btn-sm float-right'\n\t\t\t\t\t\t\thref='/workouts/edit/new'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i class='fas fa-plus' /> <Text id='workout.index.add-workout'>Legg til treningstur</Text>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-1'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-pill-left rounded-none ${submenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.totals'>Totaler</Text></button>\n                                        {submenu === 'totals' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-none ${submenu === 'seasontotals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='seasontotals'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.seasontotals'>Season totals</Text></button>\n                                        {submenu === 'seasontotals' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-none ${submenu === 'analysis' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='analysis'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-chart-area' /> <Text id='workouts.analysis'>Analyser</Text></button>\n                                        {submenu === 'analysis' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-none ${submenu === 'table' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='table'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-table' /> <Text id='workouts.table'>Tabell</Text></button>\n                                        {submenu === 'table' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-none ${submenu === 'workoutplan' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='workoutplan'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.workoutplan'>Treningsplan</Text></button>\n                                        {submenu === 'workoutplan' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-pill-right rounded-none ${submenu === 'calendar' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='calendar'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.calendar'>Kalender</Text></button>\n                                        {submenu === 'calendar' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{submenu === 'totals' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t{planMonth >= 0 && (\n\t\t\t\t\t\t\t\t\t\t<Gauge \n\t\t\t\t\t\t\t\t\t\t\tkey={`gauge-${percentComplete}`}\n\t\t\t\t\t\t\t\t\t\t\tradius={55}\n\t\t\t\t\t\t\t\t\t\t\tpercent={percentComplete}\n\t\t\t\t\t\t\t\t\t\t\tprefix='%'\n\t\t\t\t\t\t\t\t\t\t\ttotal={settings.imperial ? `${kmToMiles(planMonth)} mi` : `${util.format(planMonth, 0)} km`}\n\t\t\t\t\t\t\t\t\t\t\tcompleted={settings.imperial ? `${kmToMiles(summaryMonth)} mi` : `${util.format(summaryMonth, 0)} km`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}<br />\n\t\t\t\t\t\t\t\t\t<small class='text-muted'><Text id='workout.index.plan'>Treningsplan</Text></small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-road' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalDistanceKmMonth} smallUnit={true} />\n\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.distance'>Distanse</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-tachometer-alt ml-3' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t<Speed stores={this.props.stores} value={totalSpeedavgMonth} smallUnit={true} />\n\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.avg-speed'>Gj.snittsfart</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-12 text-center'>\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-running' /> </span> {totalCountMonth}\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-clock ml-3' /></span> {util.secToHms(totalDurationMonth)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'seasontotals' && <>\n\t\t\t\t\t\t{/* <WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3 text-center'>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t<i class='fas fa-tachometer-alt' /> <Text id='workouts.seasontotals'>Season totals</Text>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTotals\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tcurrentTeam={currentTeam}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<WorkoutStatus\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tcurrentTeam={currentTeam}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'analysis' && <>\n\t\t\t\t\t\t{/* <WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3 text-center'>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t<i class='fas fa-chart-area' /> <Text id='workouts.analysis'>Analyser</Text>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutGraph\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`graph-${workoutPlan.id}-${workoutPlans.length}-${settings.imperial}`}\n\t\t\t\t\t\t\t\tshowExtra={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'table' && <>\n\t\t\t\t\t\t{/* <WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3 text-center'>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t<i class='fas fa-table' /> <Text id='workouts.table'>Tabell</Text>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTable\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`table-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'calendar' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'workoutplan' && <>\n\t\t\t\t\t\t<CalendarPlan stores={this.props.stores}\n\t\t\t\t\t\t\tbasehref='/workouts/'\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tkey={`${workoutPlan.id || seasonStart}-${currentTeam}-${month}-${year}-${loadedTime}`}\n\t\t\t\t\t\t\tshowNavigation={true}\n\t\t\t\t\t\t\tshowHeader={true}\n\t\t\t\t\t\t\tcurrentTeam={currentTeam}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t</div>\n\n\t\t\t\t{submenu === 'totals' && <>\n\t\t\t\t\t<div class='row mt-3'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-4'>\t\t\n\t\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t\t{user && user.strava && <>\n\t\t\t\t\t\t\t\t\t<Strava stores={this.props.stores} activities={stravaActivities} key={`strava-${currentTeam}-${stravaActivities.length}`} />\n\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t{user && user.garmin && <>\n\t\t\t\t\t\t\t\t\t<Garmin stores={this.props.stores} activities={garminActivityDetails} key={`garmin-${currentTeam}-${garminActivityDetails.length}`} />\n\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t{workoutsFiltered && workoutsFiltered.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4'>\t\t\n\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t{/* <Text id='workout.index.last-workouts' fields={{ total: workoutsFiltered.length, month: MONTHS[month - 1], year }}>\n\t\t\t\t\t\t\t\t\t\tTreningsturer {MONTHS[month - 1]} {year} - {workoutsFiltered.length} stk\n\t\t\t\t\t\t\t\t\t</Text> */}\n\t\t\t\t\t\t\t\t\t{currentTeamObject && currentTeamObject.name && <div>\n\t\t\t\t\t\t\t\t\t\t<small class='font-weight-lighter'>(<Text id='workout.index.filtered-by'>Filtered by</Text>: {currentTeamObject.name})</small>\n\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<FastList\n\t\t\t\t\t\t\t\tdata={workoutsFiltered}\n\t\t\t\t\t\t\t\twrapperClassNames={'row pb-4'}\n\t\t\t\t\t\t\t\tcontentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n\t\t\t\t\t\t\t\trenderContent={this.renderContent}\n\t\t\t\t\t\t\t\tdataFields={dataFields}\n\t\t\t\t\t\t\t\tdataValues={{ type: '11' }}\n\t\t\t\t\t\t\t\thandleIntersection={handleIntersection}\n\t\t\t\t\t\t\t\tsessionid={sessionid}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/* {workoutsFiltered && workoutsFiltered.map(workout => (\n\t\t\t\t\t\t\t\t<Workout stores={this.props.stores} workout={workout} />\n\t\t\t\t\t\t\t))} */}\n\t\t\t\t\t\t</div>}\n\n\t\t\t\t\t\t{!workouts || workouts.length === 0 && <div class='col-12 mb-4 text-center pt-5 pb-5'>\n\t\t\t\t\t\t\t<h1 class='text-muted'><i class='fas fa-running' /></h1>\n\t\t\t\t\t\t\t<h5 class='text-muted font-weight-lighter'>\n\t\t\t\t\t\t\t\t<Text id='workouts.no-workouts' fields={{ month: MONTHS[month - 1], year }}>Ingen treningsturer registrert...</Text>\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t</div>\n\t\t\t\t</>}\t\t\t\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Workouts;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport Modal from '../modal';\nimport WorkoutComments from '../../components/workout/comments';\nimport WorkoutAddComment from '../../components/workout/commentAdd';\nimport ImageScroller from '../../components/imageScroller';\nimport DogScroller from '../../components/dog/scroller';\n\nimport Overlay from '../../components/overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\n\nimport LikesAndComments from '../../components/feedback/likesAndComments';\nimport Views from '../../components/feedback/views';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\nconst MAX_LOADINDEX = mu.getMaxLoadIndex();\n\nfunction getWorkoutColor(workout) {\n\tswitch (workout.type) {\n\t\tcase 1:\n\t\t\treturn 'border-primary';\n\t\tcase 2:\n\t\t\treturn 'border-danger';\n\t\tcase 3:\n\t\t\treturn 'border-success';\n\t\tcase 4:\n\t\t\treturn 'border-info';\n\t\tdefault:\n\t\t\treturn 'border-warning';\n\t}\n}\n\nfunction getWorkoutIcon(workout) {\n\tswitch (workout.type) {\n\t\tcase 1:\n\t\t\treturn 'fas fa-running';\n\t\tcase 2:\n\t\t\treturn 'fas fa-flag-checkered';\n\t\tcase 3:\n\t\t\treturn 'fas fa-hiking';\n\t\tcase 4:\n\t\t\treturn 'fas fa-futbol';\n\t\tdefault:\n\t\t\treturn 'fas fa-hiking';\n\t}\n}\n\nfunction displayDistance(distanceKm) {\n\tif (distanceKm < 5) {\n\t\treturn util.format(distanceKm, 2);\n\t}\n\tif (distanceKm < 10) {\n\t\treturn util.format(distanceKm, 1);\n\t}\n\treturn util.format(distanceKm, 1);\n}\n\nconst initialState = {\n\tshowAddComment: false,\n    viewImageIdx: {},\n    likeWorkout: {},\n};\n\n@observer\nclass Workout extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\n\tlikeWorkout = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n        const { workout } = this.props;\n        const workoutId = workout.id;\n\n        const { likeWorkout } = this.state;\n        likeWorkout[workoutId] = true;\n        this.setState({ likeWorkout });\n        setTimeout(() => {\n            const { likeWorkout } = this.state;\n            delete likeWorkout[workoutId];\n            this.setState({ likeWorkout });\n        }, 1200);\n\n\t\tconst response = await workoutStore.likeWorkout({ id: workoutId });\n        if (response && response.status === 200) {\n\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst workoutId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAddComment } = this.state;\n\t\tthis.setState({\n\t\t\tshowAddComment: !showAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[workoutId]) {\n\t\t\t\tthis.inputRef[workoutId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n        // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n\n    render() {\n        const {\n            showDate,\n            showAddComment,\n            viewImageIdx = {},\n            likeWorkout,\n            dogs,\n            showTeam,\n            showDog,\n        } = this.state;\n        const {\n            workout,\n            showDate: forceShowDate,\n            wrapperClasses = 'col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3',\n            wrapperClassesRow = 'row',\n        } = this.props;\n\t\tconst { userStore, appState, workoutStore } = this.props.stores;\n        const { viewmode, hasShareApi } = appState;\n        const { user, dogs: allDogs } = userStore;\n        const { language = 'en' } = user;\n        const intensity = userStore.findIntensity({ code: workout.intensity, language }) || {};\n        // const teamName = userStore.findTeam(workout.team);\n        const team = userStore.findTeam(workout.team, true) || {};\n        const teamName = team.name;\n        // const teamNames = workout.teams ? workout.teams.map(e => userStore.findTeam(e)) : [];\n        const teamNames = [];\n        if (teamName) {\n            teamNames.push(teamName);\n        }\n        if (workout.teams) {\n            workout.teams.forEach((e) => {\n                if (userStore.findTeam(e)) {\n                    teamNames.push(userStore.findTeam(e));\n                }\n            });\n        }\n\n        const { likes = [], comments = [] } = workout;\n\t\tconst hasLikedWorkout = workout.likes && workout.likes.findIndex(e => e.user === user.id) > -1;\n        const { gpxInfo = {}, mushers = [] } = workout;\n\t\tconst { loadIndex = 0 } = gpxInfo;\n        const workoutEquipment = userStore.findEquipment({ equipment: workout.equipment, language });\n        const workoutEquipmentIcon = userStore.findEquipment({ equipment: workout.equipment, field: 'icon' });\n\n        const musherImages = [];\n        if (mushers.length > 1) {\n            mushers.slice(1, 10).map((musher) => {\n                const u = workoutStore.findPublicUser(musher) || {};\n                if (u.images && u.images[0]) {\n                    musherImages.push(u.images[0]);\n                }\n            });\n        }\n\n        const publicUser = workoutStore.findPublicUser(mushers[0]) || {};\n        let image;\n        if (publicUser && publicUser.images && publicUser.images[0]) {\n            image = publicUser.images[0];\n        } else if (team.image && team.image.s3SmallLink) {\n            image = team.image;\n        } else if (team.images && team.images[0] && team.images[0].s3SmallLink) {\n            image = team.images[0];\n        } else if (workout.image && workout.image.s3SmallLink) {\n            image = workout.image;\n        }\n\n        const images = [];\n        if (workout.mapImage) {\n            images.push({\n                ...workout.mapImage,\n                type: 'map',\n            });\n        }\n        if (workout.images) {\n            const imgs = toJS(workout.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[workout.id] ? viewImageIdx[workout.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        let batteryUsage;\n        if (workout && workout.gpxInfo && workout.gpxInfo.battegryLevelStart) {\n            batteryUsage = (workout.gpxInfo.battegryLevelStart - workout.gpxInfo.battegryLevelEnd) * 100;\n        }\n\n        const views = mu.getViews(workout.statistics);\n\n        // let temperature;\n        // let windSpeed;\n        // if (util.checkNested(workout, 'temperature')) {\n        //     const yr = toJS(workout.yr[0].instant.details);\n        //     // displayValue = `Yr.no: 🌡️ ${yr.air_temperature}°C, 💨 ${yr.wind_speed}m/s 🧭 ${mu.windDirection(yr.wind_from_direction)}, ☁️ ${yr.cloud_area_fraction}%, ${yr.air_pressure_at_sea_level}mb, 💦 ${yr.relative_humidity}%`;\n        //     temperature = `${yr.air_temperature}°C`;\n        //     windSpeed = `${yr.wind_speed}m/s`;\n        // }\n\t\t// // const loadMultiplier = loadIndex / 100;\n\n        return (<>\n\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} hideTeam={this.hideTeam} />\n            </Overlay>}\n\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={dogs} />\n            </Overlay>}\n\n            <div class='w-100 mb-2'>\n                <div class={wrapperClassesRow}>\n\n                    <div class={`${wrapperClasses} d-flex mb-0 position-relative`}>\n\n                        {/* {workout.gpxInfo && <svg viewBox='0 0 300 300' style='top: 80px; left: 10px; width: 90px; height: 90px;' class='position-absolute'>\n                            <path d={`${workout.gpxInfo.svgMap}`} style='fill: none; stroke: #0063FF; stroke-width: 5; opacity: 0.3;' />\n                        </svg>} */}\n\n                        {/* {JSON.stringify(workout, null, 4)} */}\n                        <div class='text-center'>\n                            <div\n                                class={`position-relative text-center border rounded-circle imageRounded ${getWorkoutColor(workout)}`}\n                                style={`${image ? `background-image: url(\"${image.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                            >\n                                {!image && <i class={`${getWorkoutIcon(workout)} text-${intensity.class ? intensity.class : 'muted'} mt-3`} style='font-size: 40px;' />}\n\n                                {musherImages && musherImages.map((img, idx) => <>\n                                    <div\n                                        class='position-absolute rounded-circle imageRounded border imageRoundedThumb border-white'\n                                        style={`\n                                            background-image: url(\"${img.s3SmallLink}\");\n                                            background-size: cover;\n                                            bottom: -3px;\n                                            left: ${-5 + (idx * 10)}px;\n                                        `}\n                                    />\n                                </>)}\n                            </div>\n                            {workout.temperature !== 0 && <>\n                                <span class='text-muted font-weight-light'>\n                                    <Temperature stores={this.props.stores} value={workout.temperature} />\n                                </span>\n                            </>}\n                        </div>\n                        <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                            <span class='float-right'>\n                                {workout.isLocked === 1 && <i class='fas fa-lock text-danger ml-3' />}\n                                {workout.isInProgress === 1 && <div class='spinner-grow text-success ml-3' role='status' />}\n                                {workout.isInProgress === 2 && <i class='fas fa-pause-circle text-warning ml-3' />}\n                            </span>\n                            <a class='stretched-link' href={`/workouts/${workout.id}`}>\n                                <h5 class='my-0 mb-1' style='line-height: 1.0em;'>\n                                    {workout.name}\n                                </h5>\n                            </a>\n                            {teamNames && teamNames.length > 0 && <small class='font-weight-lighter'>\n                                {teamNames.map((name, idx) => <>{idx > 0 ? ', ' : ''}{name}</>)}\n                            </small>}\n                            <br />\n                            <small class='text-muted'>\n                                {workout.date && <small onClick={this.toggleDate}>\n                                    {forceShowDate || showDate ? util.formatDate(workout.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(workout.date, new Date(), { locale: 'no-NB' })}\n                                </small>}\n                                <span class={`badge badge-${intensity.class} ml-2`}>{intensity.name}</span>\n                                {loadIndex > 0 && <span class={`ml-2 text-${mu.getLoadIndexColor(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))}`}>\n                                    <i class='fas fa-hand-rock mr-1' />\n                                    {Math.floor(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))} -&nbsp;\n                                    {mu.getLoadIndexText(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))}\n                                </span>}\n                                <br />\n                            </small>\n                            <small>\n                                <div class='text-muted'>\n                                    {workout.garminId > 0 && <div class={`float-left mr-2 text-center border rounded-circle imageRounded imageRoundedIcon`} style={`background-image: url(\"./assets/garmin-connect.png\");`} />}\n                                    {workout.stravaId > 0&& <div class={`float-left mr-2 text-center border rounded-circle imageRounded imageRoundedIcon`} style={`background-image: url(\"./assets/strava-icon.png\");`} />}\n\n                                    {workout.equipment > 0 && <><i class={`${workoutEquipmentIcon} ml-2`} /> {workoutEquipment}</>}\n                                    {/* {workout.distanceKm > 0 && <><i class='fas fa-road ml-2' /> {displayDistance(workout.distanceKm)}km</>}\n                                    {workout.elevation > 0 && <><i class='fas fa-mountain ml-2' /> {util.format(workout.elevation, 0)}m</>} */}\n                                    {/* {workout.speedAvg > 0 && <><i class='fas fa-tachometer-alt ml-2' /> {util.format(workout.speedAvg, 1)}km/t</>} */}\n                                    {workout.dogs > 0 && <><i class='fas fa-dog ml-2' /> {workout.dogs.length}</>}\n                                    {workout.track > 0 && <><i class={`fas fa-map-marked text-${workout.track > 0 ? 'success' : 'danger'} ml-2`} /></>}\n                                    {workout.dogsLeft > 0 && <><i class={`fas fa-crosshairs text-${workout.dogsLeft && workout.dogsRight ? 'success' : 'danger'} ml-2`} /></>}\n                                    {workout.sledWeight > 0 && <>\n                                        <i class='fas fa-sleigh ml-2' /> <Weight stores={this.props.stores} value={workout.sledWeight} />\n                                    </>}\n                                    {batteryUsage > 0 && <span class='text-muted ml-2'><i class='fas fa-battery-three-quarters' /> {util.format(batteryUsage, 1)}% <Text id='workout.battery-used'>used</Text></span>}\n                                </div>\n                                {['beta', 'advanced'].indexOf(viewmode) > -1 && (\n                                    <span class='text-muted'>\n                                        <i class='fas fa-balance-scale' /> {util.format(workout.kcalBurnedTotal)} <Text id='workout.kcal'>kcal</Text>\n                                        <i class='fas fa-drumstick-bite ml-2' /> <Weight stores={this.props.stores} value={workout.kcalMeatGramsTotal / 1000} />\n                                        <i class='fas fa-fish ml-2' /> <Weight stores={this.props.stores} value={workout.kcalSalmonGramsTotal / 1000} />\n                                        <i class='fas fa-piggy-bank ml-2' /> <Weight stores={this.props.stores} value={workout.kcalFatGramsTotal / 1000} />\n                                    </span>\n                                )}\n                            </small>\n                        </div>\n                    </div>\n                    <div class={`${wrapperClasses} position-relative mt-2`}>\n                        <strong>\n                            {workout.description}\n                        </strong>\n                    </div>\n                    <div class={`${wrapperClasses} position-relative`}>\n                        <Markdown markdown={mu.replaceImages(workout.comment, workout.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                    </div>\n                    <div class={`${wrapperClasses} d-flex mb-0 position-relative`}>\n                        <div class='container-fluid px-0'>\n                            <div class='row mt-1'>\n                                {workout.distanceKm > 0 && <div class='col-3'>\n                                    <div class='text-overflow'>\n                                        <small><i class='fas fa-road' /> <Text id='workout.calendar.distance'>Distanse</Text></small>\n                                    </div>\n                                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                                        <Distance stores={this.props.stores} value={workout.distanceKm} />\n                                    </div>\n                                </div>}\n                                {workout.elevation > 0 && <div class='col-3'>\n                                    <div class='text-overflow'>\n                                        <small><i class='fas fa-mountain' /> <Text id='workout.calendar.ascend'>Høydemeter</Text></small>\n                                    </div>\n                                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                                        <Elevation stores={this.props.stores} value={workout.elevation} />\n                                    </div>\n                                </div>}\n                                {workout.duration > 0 && <div class='col-3'>\n                                    <div class='text-overflow'>\n                                        <small><i class='fas fa-clock' /> <Text id='workout.calendar.duration'>Varighet</Text></small>\n                                    </div>\n                                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                                        {util.secToHms(workout.duration, true)}\n                                    </div>\n                                </div>}\n                                {workout.speedAvg > 0 && <div class='col-3'>\n                                    <div class='text-overflow'>\n                                        <small><i class='fas fa-tachometer-alt' /> <Text id='workout.calendar.avg-speed'>Snittfart</Text></small>\n                                    </div>\n                                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n\t\t\t\t                        {workout.gpxInfo && workout.gpxInfo.avgGpsMovingSpeed > 0 ? <>\n                                            <Speed stores={this.props.stores} value={workout.gpxInfo.avgGpsMovingSpeed * 3.6} />\n                                        </> : <>\n                                            <Speed stores={this.props.stores} value={workout.speedAvg} />\n                                        </>}\n                                    </div>\n                                </div>}\n                            </div>\n                        </div>\n                    </div>\n\n                    {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && (\n                        <div class={`${wrapperClasses}`}>\n                            <div class='container-fluid px-0 mt-1'>\n                                <div class='row'>\n                                    <ImageScroller stores={this.props.stores} images={images} id={workout.id} dblClick={this.likeWorkout} likeRef={likeWorkout} />\n                                </div>\n                            </div>\n                        </div>\n                    )}\n\n                    {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                        {workout.dogs && workout.dogs.length > 0 && <div class='container-fluid px-0 mt-1'>\n                            <div class='row pt-2'>\n                                <DogScroller stores={this.props.stores} dogs={workout.dogs} allDogs={allDogs} onDogClick={this.onDogClick} />\n                            </div>\n                        </div>}\n\n                        <div class='mt-2'>\n                            <LikesAndComments\n                                stores={this.props.stores}\n                                likes={likes}\n                                comments={comments}\n                                type='workout'\n                                onTeamClick={this.onTeamClick}\n                                onUserClick={this.onUserClick}\n                            />\n                        </div>\n\n                    </>}\n\n                    {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                        <div class={`${wrapperClasses} mb-0 position-relative mt-2`}>\n                            <div class='row'>\n                                <div class='col text-center'>\n                                    <button type='button' class={`btn btn-sm btn-outline-${hasLikedWorkout ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedWorkout ? 'text-primary' : ''}`}\n                                        onClick={this.likeWorkout}\n                                        // disabled={hasLikedWorkout}\n                                    >\n                                        <i class={`${hasLikedWorkout ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                                    </button>\n                                </div>\n                                <div class='col text-center'>\n                                    <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block'\n                                        data-id={workout.id}\n                                        onClick={this.toggleAddComment}\n                                    >\n                                        <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                    </button>\n                                </div>\n                                {hasShareApi ? <>\n                                    <div class='col text-center'>\n                                        <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                            onClick={this.shareLink}\n                                            data-url={`https://themusher.app/share/workout/${workout.uuidv4}`}\n                                            data-title={`title: ${workout.name}`}\n                                        >\n                                            <i class='fas fa-share' /> <Text id='workout.share'>Del</Text>\n                                        </button>\n                                    </div>\n                                </> : <>\n                                    <div class='col text-center'>\n                                        <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                            href={`https://themusher.app/share/workout/${workout.uuidv4}`}\n                                            target='_blank'\n                                            rel='noreferrer'\n                                            data-native\n                                        >\n                                            <i class='fas fa-share' /> <Text id='workout.share'>Del</Text>\n                                        </a>\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n\n                        <div class={`${wrapperClasses} mt-2 mb-3`}>\n                            {showAddComment && <WorkoutAddComment\n                                stores={this.props.stores}\n                                workout={workout}\n                                inputRef={c => this.inputRef[workout.id] = c}\n                                inputRefObject={this.inputRef}\n                                col='12'\n                                offset='0'\n                            />}\n                            <WorkoutComments stores={this.props.stores} workout={workout} col='10' offset='2' compact={true} />\n                        </div>\n\n                        {views > 0 && <>\n                            <div class='mt-2'>\n                                <Views\n                                    stores={this.props.stores}\n                                    views={views}\n                                    object={workout}\n                                    type='workout'\n                                    isTeamAdmin={true}\n                                    isAdmin={false}\n                                    onTeamClick={this.onTeamClick}\n                                    onUserClick={this.onUserClick}\n                                />\n                            </div>\n                        </>}\n\n                    </>}\n\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default Workout;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport linkState from 'linkstate';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\nconst RED_DAYS = [0, 6];\n\n@observer\nclass Calendar extends Component {\n\tsetFocus = () => {\n\t\tif (this.inputRef) {\n\t\t\tthis.inputRef.focus();\n\t\t}\n\t}\n\teditMonth = (e) => {\n\t\tconst month = e.target.parentElement.dataset.month || e.target.dataset.month;\n\t\tconst year = e.target.parentElement.dataset.year || e.target.dataset.year;\n\t\tconst distance = e.target.parentElement.dataset.distance || e.target.dataset.distance;\n\t\t// console.log({ month, year });\n\t\tthis.setState({\n\t\t\tshowInput: true,\n\t\t\tinputYear: year,\n\t\t\tinputMonth: month,\n\t\t\tinputDay: null,\n\t\t\tinputWeek: null,\n\t\t\tnewDistance: distance || null,\n\t\t}, () => this.setFocus());\n\t}\n\n\teditWeek = (e) => {\n\t\tconst week = e.target.parentElement.dataset.week || e.target.dataset.week;\n\t\tconst year = e.target.parentElement.dataset.year || e.target.dataset.year;\n\t\tconst distance = e.target.parentElement.dataset.distance || e.target.dataset.distance;\n\t\t// console.log({ week, year });\n\t\tthis.setState({\n\t\t\tshowInput: true,\n\t\t\tinputYear: year,\n\t\t\tinputWeek: week,\n\t\t\tinputMonth: null,\n\t\t\tinputDay: null,\n\t\t\tnewDistance: distance || null,\n\t\t}, () => this.setFocus());\n\t}\n\n\teditDay = (e) => {\n\t\tconst day = e.target.parentElement.dataset.day || e.target.dataset.day;\n\t\tconst month = e.target.parentElement.dataset.month || e.target.dataset.month;\n\t\tconst year = e.target.parentElement.dataset.year || e.target.dataset.year;\n\t\tconst week = e.target.parentElement.dataset.week || e.target.dataset.week;\n\t\tconst distance = e.target.parentElement.dataset.distance || e.target.dataset.distance;\n\t\t// console.log({ day, month, year });\n\t\tthis.setState({\n\t\t\tshowInput: true,\n\t\t\tinputYear: year,\n\t\t\tinputMonth: month,\n\t\t\tinputDay: day,\n\t\t\tinputWeek: week,\n\t\t\tnewDistance: distance || null,\n\t\t}, () => this.setFocus());\n\t}\n\n\tsaveDistance = async () => {\n\t\tconst { workoutPlanStore, workoutStore, userStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tconst teamName = userStore.findTeam(currentTeam) || '';\n\t\tconst { year, month } = this.props;\n\t\tconst { workoutPlans } = workoutPlanStore;\n\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\tconst { inputYear, inputMonth, inputWeek, inputDay, newDistance } = this.state;\n\t\t// console.log({ showInput, inputYear, inputMonth, inputWeek, inputDay, newDistance });\n\n\t\tconst currentMonth = month || new Date().getMonth() + 1;\n\t\tconst currentYear = year || util.getYear();\n\t\tconst seasonStart = parseInt(currentMonth < 8 ? currentYear - 1 : currentYear, 10);\n\n\t\tif (!workoutPlanCurrent.id) {\n\t\t\tconst response = await workoutPlanStore.insert({\n\t\t\t\ttitle: `Workout plan for ${seasonStart} - ${seasonStart + 1}: ${teamName}`,\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t\tseasonMonth: 6,\n\t\t\t});\n\t\t\tconst { id: newId } = response.data;\n\t\t\tawait workoutPlanStore.load(newId);\n\t\t} else {\n\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t}\n\t\tconst { workoutPlan } = workoutPlanStore;\n\t\tconst { id } = workoutPlan;\n\t\t// console.log({ id });\n\n\t\tlet field;\n\t\tif (inputYear) {\n\t\t\tif (inputDay) {\n\t\t\t\tfield = 'days';\n\t\t\t} else {\n\t\t\t\tfield = 'weeks';\n\t\t\t}\n\t\t}\n\t\tawait workoutPlanStore.saveField(id, field, {\n\t\t\tyear: inputYear,\n\t\t\tmonth: inputMonth,\n\t\t\tday: inputDay,\n\t\t\tweek: inputWeek,\n\t\t\tdistance: newDistance,\n\t\t});\n\t\tawait workoutPlanStore.load(id);\n\n\t\tthis.resetInput(true);\n\t}\n\n\tresetInput = (nextDay) => {\n\t\tif (nextDay) {\n\t\t\tconst { inputYear, inputMonth, inputDay } = this.state;\n\t\t\tconst nextDay = util.addDays(new Date(inputYear, inputMonth - 1, inputDay, 0, 0, 0, 0), 1);\n\t\t\tthis.setState({\n\t\t\t\tshowInput: true,\n\t\t\t\tinputYear: nextDay.getFullYear(),\n\t\t\t\tinputMonth: nextDay.getMonth() + 1,\n\t\t\t\tinputDay: nextDay.getDate(),\n\t\t\t\tinputWeek: util.getWeek(nextDay),\n\t\t\t\tnewDistance: null,\n\t\t\t});\n\t\t\tthis.setFocus();\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tshowInput: false,\n\t\t\t\tinputYear: null,\n\t\t\t\tinputMonth: null,\n\t\t\t\tinputDay: null,\n\t\t\t\tinputWeek: null,\n\t\t\t\tnewDistance: null,\n\t\t\t});\n\t\t}\n\t}\n\n\tcheckKeydown = (e) => {\n\t\tswitch (e.key) {\n\t\t\tcase 'Enter':\n\t\t\t\tthis.saveDistance();\n\t\t\t\tbreak;\n\n\t\t\tcase 'Escape':\n\t\t\t\tthis.resetInput();\n\t\t\t\tbreak;\n\t\t\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateWorkoutPlanTips();\n\t}\n\n\tupdateWorkoutPlanTips = () => {\n\t\t// console.log('updateWorkoutPlanTips');\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user = {} } = userStore;\n\t\tconst { settings = {} } = user;\n\t\tthis.setState({ hideWorkoutPlanTips: settings.hideWorkoutPlanTips });\n\t}\n\n\ttoggleTips = async () => {\n\t\tconst { hideWorkoutPlanTips } = this.state;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst newValue = hideWorkoutPlanTips === 1 ? 0 : 1;\n\t\tthis.setState({ hideWorkoutPlanTips: newValue });\n\t\tawait userStore.updateSetting({ 'settings.hideWorkoutPlanTips': newValue }, { hideWorkoutPlanTips: newValue });\n\t}\n\n\trender() {\n\t\tconst { hideWorkoutPlanTips } = this.state;\n\t\tconst { appState, workoutPlanStore, userStore, workoutStore, teamStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { language = 'en' } = user;\n\t\tconst { darkmode } = appState;\n\t\tconst DAYS = mu.getDays(language);\n\t\tconst MONTHS = mu.getMonths(language);\n\n\t\tconst { showInput, inputYear, inputMonth, inputWeek, inputDay, newDistance } = this.state;\n\n        const currentDay = new Date().getDate();\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst currentEpoch = new Date().getTime();\n\t\tconst { month = currentMonth, year = currentYear, dog, basehref, showNavigation = true, showHeader = true, currentTeam } = this.props;\n\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        const monthNum = parseInt(month, 10);\n        const yearNum = parseInt(year, 10);\n        const { month: nextMonth, year: nextYear } = mu.getNextMonth(monthNum, yearNum);\n        const { month: prevMonth, year: prevYear } = mu.getPrevMonth(monthNum, yearNum);\n\n        const daysOfMonth = util.getDaysInMonth(month, year);\n        const weeksInMonth = util.getWeeksInMonth(month, year);\n        const firstWeek = weeksInMonth[0].week;\n        const daysOfWeek = util.getDaysInWeek(firstWeek, year, month);\n        let totalDistanceKmMonth = 0;\n\t\tlet totalDistanceKmMonthPlan = 0;\n\t\tlet totalWorkoutDistanceKmMonth = 0;\n\n\t\tconst monthEpoch = daysOfMonth[daysOfMonth.length - 1].getTime();\n\t\tconst isMonthInTheFuture = monthEpoch > currentEpoch;\n\n\t\tconst summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n\t\tconst { workoutPlan, tips } = workoutPlanStore;\n\n\t\tconst tipsMonth = tips[`${year}-${util.padDate(month)}`];\n\t\tconst hasTipsMonth = tipsMonth && (tipsMonth.comments.length > 0 || tipsMonth.distance);\n\n\t\tconst team = teamStore.findTeam(currentTeam) || {};\n\n\t\treturn (\n\t\t\t<>\n                {showHeader && <>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-4 text-center'>\n\t\t\t\t\t\t{showNavigation && <a href={`${basehref || '/workouts/month/'}${nextMonth}/${nextYear}/skipScroll`} class='float-right btn btn-sm btn-outline-secondary ml-2'><i class='fas fa-arrow-right' /></a>}\n\t\t\t\t\t\t{showNavigation && <a href={`${basehref || '/workouts/month/'}${prevMonth}/${prevYear}/skipScroll`} class='float-left btn btn-sm btn-outline-secondary mr-2'><i class='fas fa-arrow-left' /></a>}\n\t\t\t\t\t\t<h3><Text id='workout.plan.month'>Måned</Text> - {MONTHS[month - 1]} {year} {summaryMonth.distance ? `- ${util.format(summaryMonth.distance, 0)} km` : ''}</h3>\n\t\t\t\t\t\t<h5 class='text-muted font-weight-light'><Text id='workout.plan.season'>Sesongen</Text> {seasonStart} - {seasonStart + 1}</h5>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{workoutPlan.id ? <>\n\t\t\t\t\t\t\t\t<small>{workoutPlan.title}</small>\n\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t<div class='display-4'>\n\t\t\t\t\t\t\t\t\t<i class='far fa-sad-tear text-muted' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<h5 class='font-weight-lighter text-muted'>\n\t\t\t\t\t\t\t\t\t<Text id='workout.plan.no-workout-plan-found' fields={{ name: team }}>Ingen plan</Text>\n\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t<div class='text-muted'>\n\t\t\t\t\t\t\t\t\t<Text id='workout.plan.click-to-start'>Click on a date to get started.</Text>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{dog && <div>{dog.name}</div>}\n\t\t\t\t\t\t{/* <small>{util.isoDate(daysOfMonth[0], false, false, true)} - {util.isoDate(daysOfMonth[daysOfMonth.length - 1], false, false, true)}</small> */}\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t{!!(showInput && inputYear && inputWeek && !inputDay) && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div class='form-inline w-100'>\n\t\t\t\t\t\t\t\t<div class='form-group w-75 mr-3 mb-0'>\n\t\t\t\t\t\t\t\t\t<input class='form-control w-100 form-control' type='text' \n\t\t\t\t\t\t\t\t\t\tplaceholder={`Enter distance for ${inputYear} w${inputWeek}`}\n\t\t\t\t\t\t\t\t\t\tref={c => this.inputRef = c}\n\t\t\t\t\t\t\t\t\t\tonInput={linkState(this, 'newDistance')}\n\t\t\t\t\t\t\t\t\t\tonKeydown={this.checkKeydown}\n\t\t\t\t\t\t\t\t\t\tautocomplete='off'\n\t\t\t\t\t\t\t\t\t\tvalue={newDistance || ''}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<button type='button' class='btn btn-primary' onClick={this.saveDistance}><Text id='workout.plan.save'>Lagre</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t\t{!!(showInput && inputYear && inputMonth) && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div class='form-inline w-100'>\n\t\t\t\t\t\t\t\t<div class='form-group w-75 mr-3 mb-0'>\n\t\t\t\t\t\t\t\t\t<input class='form-control w-100 form-control' type='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder={`Enter distance for ${inputYear}-${util.padDate(inputMonth)} ${inputDay ? `-${util.padDate(inputDay)}` : ''}`}\n\t\t\t\t\t\t\t\t\t\tref={c => this.inputRef = c}\n\t\t\t\t\t\t\t\t\t\tonInput={linkState(this, 'newDistance')}\n\t\t\t\t\t\t\t\t\t\tonKeydown={this.checkKeydown}\n\t\t\t\t\t\t\t\t\t\tautocomplete='off'\n\t\t\t\t\t\t\t\t\t\tvalue={newDistance || ''}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<button type='button' class='btn btn-primary' onClick={this.saveDistance}><Text id='workout.plan.save'>Lagre</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t{language === 'no' && <>\n\t\t\t\t\t{hideWorkoutPlanTips ? <>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-4 d-flex justify-content-end'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\tclass='btn btn-outline-primary btn-sm'\n\t\t\t\t\t\t\t\tonClick={this.toggleTips}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-eye' /> <Text id='workout.plan.show-tips'>Show tips</Text>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</> : <>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-4 d-flex justify-content-end'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\tclass='btn btn-primary btn-sm'\n\t\t\t\t\t\t\t\tonClick={this.toggleTips}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-eye-slash' /> <Text id='workout.plan.hide-tips'>Hide tips</Text>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\t\t\t\t</>}\n\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t<div class='table-responsive'>\n\t\t\t\t\t\t<table class='table table-striped table-sm'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th class='text-muted'><small><Text id='workout.plan.week'>Uke</Text></small></th>\n\t\t\t\t\t\t\t\t\t{daysOfWeek.map(day => <th><small>{DAYS[day.getDay()]}</small></th>)}\n\t\t\t\t\t\t\t\t\t<th class='text-muted'><small><Text id='workout.plan.sum'>Sum</Text></small></th>\n\t\t\t\t\t\t\t\t\t<th class='text-muted'><small><Text id='workout.plan.planned'>Plan</Text></small></th>\n\t\t\t\t\t\t\t\t\t{/* <th class='text-muted'>Totalt</th> */}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{weeksInMonth && weeksInMonth.map(weekObj => {\n\t\t\t\t\t\t\t\t\tconst daysOfWeek = util.getDaysInWeek(weekObj.week, year, month);\n\t\t\t\t\t\t\t\t\tconst summaryWeek = workoutPlanStore.findWorkoutPlanSummaryWeek(util.asNumber(year), weekObj.week) || {};\n\t\t\t\t\t\t\t\t\tconst weekEpoch = daysOfWeek[6].getTime();\n\t\t\t\t\t\t\t\t\tconst isWeekInTheFuture = weekEpoch > currentEpoch;\n\t\t\t\t\t\t\t\t\tlet totalWeek = 0;\n\t\t\t\t\t\t\t\t\tlet totalWorkoutWeek = 0;\n\t\t\t\t\t\t\t\t\tif (summaryWeek.distance > 0) {\n\t\t\t\t\t\t\t\t\t\ttotalDistanceKmMonthPlan += summaryWeek.distance;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconst tipsWeek = tips[`${year}-${util.padDate(month)}-w${util.padDate(weekObj.week)}`];\n\t\t\t\t\t\t\t\t\tconst hasTipsWeek = tipsWeek && (tipsWeek.comments.length > 0 || tipsWeek.distance);\n\n\t\t\t\t\t\t\t\t\treturn (<>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td class={`text-right text-muted pt-3 border-right ${!inputDay && inputYear == year && inputWeek == weekObj.week ? 'border rounded border-primary' : ''}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<small onClick={this.editWeek} data-week={weekObj.week} data-year={year} data-distance={summaryWeek.distance}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{weekObj.week}\n\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t{daysOfWeek.map(day => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst yyyy = day.getFullYear();\n\t\t\t\t\t\t\t\t\t\t\t\tconst mm = day.getMonth() + 1;\n\t\t\t\t\t\t\t\t\t\t\t\tconst dd = day.getDate();\n\t\t\t\t\t\t\t\t\t\t\t\tconst epoch = day.getTime();\n\t\t\t\t\t\t\t\t\t\t\t\tconst isDayInTheFuture = epoch > currentEpoch;\n\t\t\t\t\t\t\t\t\t\t\t\tconst summaryWorkout = userStore.findWorkoutSummaryWeekDay((isDayInTheFuture ? yyyy - 1 : yyyy), mm, dd, monthNum) || {};\n\t\t\t\t\t\t\t\t\t\t\t\tconst summary = workoutPlanStore.findWorkoutPlanSummaryDay(yyyy, mm, dd, monthNum) || {};\n\t\t\t\t\t\t\t\t\t\t\t\tif (summary && summary.distance) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttotalWeek += summary.distance;\n\t\t\t\t\t\t\t\t\t\t\t\t\ttotalDistanceKmMonth += summary.distance;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tif (summaryWorkout.distanceKm) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttotalWorkoutWeek += summaryWorkout.distanceKm;\n\t\t\t\t\t\t\t\t\t\t\t\t\ttotalWorkoutDistanceKmMonth += summaryWorkout.distanceKm;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst isChosen = (inputYear == yyyy && inputMonth == mm && inputDay == dd);\n\t\t\t\t\t\t\t\t\t\t\t\tconst isToday =  (currentYear == yyyy) && (currentMonth == mm) && (currentDay == dd);\n\t\t\t\t\t\t\t\t\t\t\t\tconst isDayOff = RED_DAYS.indexOf(day.getDay()) > -1;\n\n\t\t\t\t\t\t\t\t\t\t\t\t// console.log(summary);\n\t\t\t\t\t\t\t\t\t\t\t\t// count: 1, day: 5, distanceKm: 10, duration: 3600, elevation: 200, month: 9, speedAvg: 12, year: 2020\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class={`text-center overflow-hidden font-weight-light position-relative pt-3 pb-3 border-right ${isChosen ? 'calendarIsChosen' : ''} ${isToday ? 'calendarIsToday' : ''} ${isDayOff ? 'calendarIsWeekend' : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={`font-size: 0.8em; min-width: 3rem;`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.editDay} data-day={day.getDate()} data-month={day.getMonth() + 1} data-year={year} data-week={weekObj.week} data-distance={summary.distance}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='position-absolute text-muted' style='top: 0px; right: 2px; font-size: 0.7em;'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{day.getDate()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{summary && summary.distance ? \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='rounded-pill w-100 px-1'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={`background-color: ${mu.getPlanColor(summary, darkmode)};`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={summary.distance} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{summary.count > 1 && <span class='position-absolute text-danger' style='bottom: 0; right: 0px; font-size: 0.6em;'>{summary.count}</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div> : '-'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{summaryWorkout.distanceKm > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class={`position-absolute font-weight-bold`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={`bottom: 0; left: 0px; font-size: 0.85em; color: ${isDayInTheFuture ? '#393DB1' : '#2BAAA9'};`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={summaryWorkout.distanceKm} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t<td class='text-right pt-3 pb-3 position-relative border-right' style='font-size: 0.8em;'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalWeek} />\n\t\t\t\t\t\t\t\t\t\t\t\t{totalWorkoutWeek > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class={`position-absolute`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={`bottom: 0; left: 0px; font-size: 0.85em; color: ${isWeekInTheFuture ? '#393DB1' : '#2BAAA9'};`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalWorkoutWeek} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t<td class='text-right pt-3 pb-3 text-muted border-right' style='font-size: 0.8em;'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.editWeek} data-week={weekObj.week} data-year={year} data-distance={summaryWeek.distance}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{summaryWeek.distance > 0 && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='rounded-pill w-100 px-1 text-white text-center'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={`background-color: ${mu.getPlanColor(summaryWeek, darkmode)};`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={summaryWeek.distance} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t{/* <td class='text-right text-muted pt-3'>{totalDistanceKmMonth}</td> */}\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t{!hideWorkoutPlanTips && language === 'no' && tipsWeek && hasTipsWeek && <tr>\n\t\t\t\t\t\t\t\t\t\t\t<td colspan='10' class='pb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t<h5><span class='font-weight-lighter'>Uke {weekObj.week} {year}:</span>Tips fra Femundløpet</h5>\n\n\t\t\t\t\t\t\t\t\t\t\t\t{tipsWeek.totalDistance > 0 && <div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-road' /> Distanse</span>: {tipsWeek.totalDistance} km\n\t\t\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t\t\t{tipsWeek.distance > 0 && <div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-road' /> Distanse pr økt</span>: {tipsWeek.distance}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t\t\t{tipsWeek.time && <div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-clock' /> Tid pr økt</span>: {tipsWeek.time}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t\t\t{tipsWeek.totalWorkouts > 0 && <div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-list-ol' /> Antall økter</span>: {tipsWeek.totalWorkouts}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t\t\t{tipsWeek.avgSpeed && <div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-tachometer-alt' /> Gjennomsnittsfart</span>: {tipsWeek.avgSpeed}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t{tipsWeek.comments && <div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{tipsWeek.comments.map(c => <p>{c}</p>)}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>}\n\n\t\t\t\t\t\t\t\t\t</>);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t<tfoot>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td colspan='8' class='text-right pb-3'><Text id='workout.plan.totalkm'>Totalt km</Text></td>\n\t\t\t\t\t\t\t\t\t<td class='text-right position-relative pb-3'>\n\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalDistanceKmMonth} />\n\t\t\t\t\t\t\t\t\t\t{totalWorkoutDistanceKmMonth > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t<span class='position-absolute'\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={`bottom: 0; left: 0px; font-size: 0.65em; color: ${isMonthInTheFuture ? '#393DB1' : '#2BAAA9'};`}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalWorkoutDistanceKmMonth} />\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td class='text-right text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalDistanceKmMonthPlan} />\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t{!hideWorkoutPlanTips && language === 'no' && tipsMonth && hasTipsMonth && <tr>\n\t\t\t\t\t\t\t\t\t<td colspan='10' class='pb-3'>\n\t\t\t\t\t\t\t\t\t\t<h5><span class='font-weight-lighter'>{MONTHS[month - 1]} {year}:</span> Tips fra Femundløpet</h5>\n\n\t\t\t\t\t\t\t\t\t\t{tipsMonth.totalDistance > 0 && <div>\n\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-road' /> Distanse</span>: {tipsMonth.totalDistance} km\n\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t{tipsMonth.distance > 0 && <div>\n\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-road' /> Distanse pr økt</span>: {tipsMonth.distance}\n\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t{tipsMonth.time && <div>\n\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-clock' /> Tid pr økt</span>: {tipsMonth.time}\n\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t{tipsMonth.totalWorkouts > 0 && <div>\n\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-list-ol' /> Antall økter</span>: {tipsMonth.totalWorkouts}\n\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t{tipsMonth.avgSpeed && <div>\n\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-tachometer-alt' /> Gjennomsnittsfart</span>: {tipsMonth.avgSpeed}\n\t\t\t\t\t\t\t\t\t\t</div>}\n\n\t\t\t\t\t\t\t\t\t\t{tipsMonth.comments && <div>\n\t\t\t\t\t\t\t\t\t\t\t{tipsMonth.comments.map(c => <p>{c}</p>)}\n\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>}\n\t\t\t\t\t\t\t</tfoot>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Calendar;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\n@observer\nclass Modal extends Component {\n    toggleDate = () => {\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startY: e.touches[0].pageY,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startY: undefined,\n            readyToRefresh: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        const { close } = this.props;\n        const { startY, refreshing } = this.state;\n        const scrollDistance = 30;\n        const y = e.touches[0].pageY;\n        if (this.appContainer) {\n            const { scrollTop } = this.appContainer;\n            if (scrollTop === 0 && y > startY + scrollDistance && !refreshing) {\n                close();\n            }\n        }\n    }\n\n    render() {\n        const { showDate } = this.state;\n        const { image, imagexxl, close, thumb, name, title, date } = this.props;\n        return (\n            <div class='fixed-top bg-dark text-center pt-2' style='width: 100vw; height: 100vh;'>\n                <button class='btn btn-secondary float-right mr-2' onClick={close}>X</button>\n\n                    <div class='d-flex mb-2 px-2'>\n                        {/* {JSON.stringify(dog, null, 4)} */}\n                        {thumb && <div class={`text-center border rounded-circle imageRounded imageRoundedSmall`} style={thumb ? `background-image: url(\"${thumb}\");` : ''}>\n                            &nbsp;\n                        </div>}\n                        <div class='flex-grow-1 pl-3 pr-2 text-left' style='line-height: 1.3em;'>\n                            {name && <strong class='mr-2'>{name}:</strong>}\n                            {title}<br />\n                            <small class='text-muted'>\n                                {date && <small onClick={this.toggleDate}>\n                                    {showDate ? util.formatDate(date, { locale: 'no-NB' }) : util.formatDistance(date, new Date(), { locale: 'no-NB' })}\n                                </small>}\n                            </small>\n                        </div>\n                    </div>\n\n\n                <img src={image}\n                    class='img-fluid align-middle mt-2 mb-2'\n                    onClick={close}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                    ref={c => this.appContainer = c}\n                />\n\n                <a target='_blank' rel='noopener noreferrer' href={imagexxl || image} download={imagexxl || image}>\n                    <i class='fas fa-download' /> <Text id='modal.download'>Last ned bildet</Text>\n                </a>\n            </div>\n        );\n    }\n}\n\nexport default Modal;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport LineGraph from '../../components/lineGraph';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    duration: <Text id='workout.graph.duration'>Duration</Text>,\n    rest: <Text id='workout.graph.rest'>Rest</Text>,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n    speedAvg: <Text id='workout.graph.speedavg'>Speed</Text>,\n    loadIndex: <Text id='workout.graph.loadindex'>Loadindex</Text>,\n\n    avgDogs: <Text id='workout.graph.avgdogs'>Avg dogs</Text>,\n    avgImages: <Text id='workout.graph.avgimages'>Avg images</Text>,\n    sledWeight: <Text id='workout.graph.sledweight'>Sled weight</Text>,\n    rating: <Text id='workout.graph.rating'>Rating</Text>,\n    temperature: <Text id='workout.graph.temperature'>Temperature</Text>,\n}))\n@observer\nclass WorkoutGraph extends Component {\n    render() {\n        const { userStore, workoutPlanStore } = this.props.stores;\n        const {\n            user,\n\t\t\tworkoutSummary,\n\t\t\tgraphWorkoutSummaryWeekDistanceCurrent, graphWorkoutSummaryWeekDistancePrev,\n\t\t\tgraphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev,\n            avgDayDistance, avgDayElevation, \n            avgDayDuration, avgDaySpeedAvg, avgDayLoadIndex, \n            avgDayAvgDogs, avgDayAvgImages, avgDaySledWeight,\n            avgDayRest, avgDayRating, avgDayTemperature,\n\t\t} = userStore;\n        const { settings = {} } = user;\n        const { graphPlanWeekDistanceCurrent } = workoutPlanStore;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n        const {\n            isLoading,\n            week,\n            distance,\n            duration,\n            rest,\n            ascend,\n            plan,\n            speedAvg,\n            loadIndex,\n            avgDogs,\n            avgImages,\n            sledWeight,\n            rating,\n            temperature,\n            year = currentYear,\n            month = currentMonth,\n            showExtra = false,\n        } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonWeeks = util.weekRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        const seasonDays = util.dayRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = Math.floor(xTicksAll.length / 5);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += parts) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        const xTicksAllDays = seasonDays.map(wo => `${wo.day}.${wo.month}`);\n        const partsDays = Math.floor(xTicksAllDays.length / 5);\n        const xTicksDays = [];\n        for (let i = 0, l = xTicksAllDays.length; i < l; i += partsDays) {\n            xTicksDays.push(xTicksAllDays[i]);\n        }\n\n        return (\n            <>\n                {/* <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5> */}\n                <div class='w-100 mt-3 mb-4 border-top pt-5'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <h5 class='text-center'><Text id='workout.graph.total-distance'>Total distance</Text></h5>\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={500}\n                        height={200}\n                        showXTicks={1}\n                        xTicksVal={val => `${week} ${val}`}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        lineFromXzero={true}\n                        lineFromXmax={true}\n                        xTicksLink={'/workouts/week/'}\n\n                        dataLeft={[graphWorkoutSummaryWeekDistanceCurrent, graphWorkoutSummaryWeekDistancePrev, graphPlanWeekDistanceCurrent]}\n                        legendLeft={[`${seasonStart} ${distance}`, `${seasonStart - 1} ${distance}`, `${seasonStart} ${plan}`]}\n                        dataFillLeft={[1]}\n                        // yMaxLeft={30}\n                        // yMinLeft={0}\n                        showYTicksLeft={1}\n                        yTicksLeftPostfix={settings.imperial ? 'mi' : 'km'}\n                        unitLeft={settings.imperial ? ['mi', 'mi', 'mi'] : ['km', 'km', 'km']}\n                        avgWindowLeft={[0, 0, 0]}\n                        smoothLeft={[1, 1, 1]}\n\n                        dataRight={[graphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev]}\n                        legendRight={[`${seasonStart} ${ascend}`, `${seasonStart - 1} ${ascend}`]}\n                        showYTicksRight={1}\n                        yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                        unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                        avgWindowRight={[0, 0]}\n                        smoothRight={[1, 1]}\n\n                        // marker={week}\n                    />\n                </div>\n\n                {!isLoading && graphWorkoutSummaryWeekDistanceCurrent && graphWorkoutSummaryWeekDistanceCurrent.length < 3 && (\n                    <div class='mb-5 py-3 border-top border-bottom'>\n                        <div class='text-left' style='line-height: 1.0em;'>\n                            <div class='display-4 float-left text-warning mr-3'>\n                                <i class='fas fa-paw' />\n                            </div>\n                            <small>\n                                <Text id='workout.graph.too-little-data'>Foreløpig er det litt lite data for å kunne vise noen fine grafer. \n                                Etterhvert som du legger inn flere treninger så vil dette bli en fin tabell og graf som viser progresjonen din.</Text>\n                            </small>\n                        </div>\n                    </div>\n                )}\n                {showExtra && <>\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-rating'>Average rating/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayRating]}\n                            legendLeft={[`${seasonStart} ${rating}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            // yTicksLeftPostfix={settings.imperial ? 'mph' : 'km/t'}\n                            // unitLeft={settings.imperial ? ['mph', 'mph', 'mph'] : ['km/t', 'km/t', 'km/t']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayTemperature]}\n                            legendRight={[`${seasonStart} ${temperature}`]}\n                            showYTicksRight={1}\n                            yTicksRightPostfix={settings.imperial ? '°F' : '°C'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-distance'>Average distance/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayDistance]}\n                            legendLeft={[`${seasonStart} ${distance}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            yTicksLeftPostfix={settings.imperial ? 'mi' : 'km'}\n                            unitLeft={settings.imperial ? ['mi', 'mi', 'mi'] : ['km', 'km', 'km']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayElevation]}\n                            legendRight={[`${seasonStart} ${ascend}`]}\n                            showYTicksRight={1}\n                            yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-duration'>Average duration/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            paddingLeft={50}\n                            yTicksLeftWidth={'50px'}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayDuration]}\n                            legendLeft={[`${seasonStart} ${duration}`]}\n                            yTicksLeftVal={val => `${util.secToHms(val)}`}\n\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            // yTicksLeftPostfix={settings.imperial ? 'mi' : 'km'}\n                            // unitLeft={settings.imperial ? ['mi', 'mi', 'mi'] : ['km', 'km', 'km']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayRest]}\n                            legendRight={[`${seasonStart} ${rest}`]}\n                            showYTicksRight={1}\n                            yTicksRightVal={val => `${util.secToHms(val)}`}\n                            // yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-speed'>Average speed/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDaySpeedAvg]}\n                            legendLeft={[`${seasonStart} ${speedAvg}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            yTicksLeftPostfix={settings.imperial ? 'mph' : 'km/t'}\n                            unitLeft={settings.imperial ? ['mph', 'mph', 'mph'] : ['km/t', 'km/t', 'km/t']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayLoadIndex]}\n                            legendRight={[`${seasonStart} ${loadIndex}`]}\n                            showYTicksRight={1}\n                            // yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-dogs'>Average dogs/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayAvgDogs, avgDayAvgImages]}\n                            legendLeft={[`${seasonStart} ${avgDogs}`, `${seasonStart} ${avgImages}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            // yTicksLeftPostfix={settings.imperial ? 'mph' : 'km/t'}\n                            // unitLeft={settings.imperial ? ['mph', 'mph', 'mph'] : ['km/t', 'km/t', 'km/t']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDaySledWeight]}\n                            legendRight={[`${seasonStart} ${sledWeight}`]}\n                            showYTicksRight={1}\n                            // yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    {/* <xmp>{JSON.stringify(avgDayDuration, null, 4)}</xmp> */}\n                </>}\n            </>\n        );\n    }\n}\n\nexport default WorkoutGraph;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DogSimplePublic from './simplePublic';\n\n@observer\nclass DogScroller extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageIdx: 0,\n        };\n    }\n\n    scrollImages = (e) => {\n        const { dogs } = this.props;\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const imageStep = clientWidth;\n        const imageIdx = scrollLeft / imageStep;\n        // console.log({ e, imageStep, imageIdx, scrollLeft, scrollWidth, clientWidth });\n\n        const nearestInt = Math.round(imageIdx);\n        const diff = Math.abs(nearestInt - imageIdx);\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(imageIdx) || diff < 0.1) {\n            this.setState({\n                imageIdx: nearestInt,\n            });\n        }\n    }\n\n    sortByName = (a, b) => {\n        const { allDogs = [] } = this.props;\n        const dogA = allDogs.find(e => e.id === a);\n        const dogB = allDogs.find(e => e.id === b);\n        if (dogA && dogB) {\n            if (dogA.name > dogB.name) {\n                return 1;\n            }\n        }\n        return -1;\n    }\n\n    render() {\n        const { imageIdx } = this.state;\n        const { dogs, allDogs = [], size = 'medium', onDogClick = () => {} } = this.props;\n\n        return (\n            <div class='w-100'>\n                <div\n                    class='d-flex flex-row flex-nowrap no-scrollbar'\n                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                    onScroll={this.scrollImages}\n                >\n                    {dogs && dogs.sort(this.sortByName).map((dogId, idx) => {\n                        const dog = allDogs.find(e => e.id === dogId);\n                        if (!dog) {\n                            return '';\n                        }\n                        return (\n                            <div class='col clearfix position-relative p-0 mx-2'>\n                                <div\n                                    class={`w-100 h-100 text-center rounded-lg imageContainer d-flex justify-content-center align-items-center`}\n                                    style={`\n                                        flex-wrap: wrap;\n                                        overflow-y: hidden;\n                                    `}\n                                    onTouchstart={(e) => { e.stopPropagation(); }}\n                                    onTouchend={(e) => { e.stopPropagation(); }}\n                                    onTouchmove={(e) => { e.stopPropagation(); }}\n                                >\n                                    <DogSimplePublic\n                                        stores={this.props.stores}\n                                        dog={dog}\n                                        dogs={allDogs.filter(d => dogs.indexOf(d.id) > -1).sort((a, b) => a.name > b.name ? 1 : -1)}\n                                        className='mx-auto'\n                                        showName={true}\n                                        showPosition={false}\n                                        size={size}\n                                        onDogClick={onDogClick} \n                                    />\n                                    {/* <xmp>{JSON.stringify(img, null, 4)}</xmp> */}\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DogScroller;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass WorkoutTable extends Component {\n    render() {\n        const { userStore } = this.props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n        const { isLoading, year = currentYear, month = currentMonth, showHeader = true } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        const { user } = userStore;\n        const { language = 'en' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonMonths = util.monthRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        const prevSeasonMonths = util.monthRange(`${seasonStart - 1}-08-01`, `${seasonStart}-07-31`);\n        const seasonWeeks = util.weekRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = xTicksAll.length % 6;\n        const partSize = Math.floor(xTicksAll.length / parts);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += partSize) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        return (\n            <>\n                {showHeader && <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5>}\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <div class='table-responsive-lg'>\n                        <table class='table table-sm table-striped font-weigth-lighter border-bottom'>\n                            <thead>\n                                <tr>\n                                    <th class='text-center'><Text id='workout.graph.season'>Sesong</Text></th>\n                                    {seasonMonths.map(m => (\n                                        <th class='text-center'><a href={`/workouts/month/${m.month}/${m.year}`}>{MONTHS[m.month - 1]}</a></th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'><nobr>{seasonStart - 1} - {seasonStart}</nobr></th>\n                                    {prevSeasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right px-3'>\n                                                    {/* <nobr>{summaryMonth.distance}</nobr><br /> */}\n                                                    <nobr>\n                                                        <Distance stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month)} smallUnit={true} />\n                                                    </nobr><br />\n                                                    <nobr>\n                                                        <Elevation stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')} smallUnit={true} />\n                                                    </nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                </tr>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'><nobr>{seasonStart} - {seasonStart + 1}</nobr></th>\n                                    {seasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right px-3'>\n                                                    <nobr>\n                                                        <Distance stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month)} smallUnit={true} />\n                                                    </nobr><br />\n                                                    <nobr>\n                                                        <Elevation stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')} smallUnit={true} />\n                                                    </nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WorkoutTable;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\n@observer\nclass Strava extends Component {\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n    ignoreStravaWorkout = async (e) => {\n        e.stopPropagation();\n        const id = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { stravaActivityStore } = this.props.stores;\n\t\tawait stravaActivityStore.ignoreWorkout(id);\n        this.loadStravaActivities();\n    }\n\n    importStravaWorkout = async (e) => {\n        e.stopPropagation();\n        const id = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { stravaActivityStore, workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tawait stravaActivityStore.importWorkout(id, currentTeam);\n        this.loadStravaActivities();\n        this.loadWorkouts();\n    }\n\n    async loadStravaActivities() {\n\t\tconst { stravaActivityStore } = this.props.stores;\n\t\tstravaActivityStore.load({ query: { hideImported: 1 }});\n\t}\n\n    loadWorkouts = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tawait workoutStore.load({ query: { team: currentTeam } });\n\t}\n\n    toggleDetail = () => {\n        const { showDetail = false } = this.state;\n        this.setState({\n            showDetail: !showDetail,\n        });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadStravaActivities();\n\t}\n\n    render() {\n        const { showDate, showDetail = false } = this.state;\n        const { activities, showDate: forceShowDate } = this.props;\n\t\tconst { userStore, workoutStore } = this.props.stores;\n        const { currentTeam } = workoutStore;\n        const { team } = userStore;\n\n        const selectedTeam = userStore.findTeam(currentTeam || team.id);\n\n         if (!showDetail) {\n            if (activities && activities.length > 0) {\n                return (<>\n                    <div class='col-12 mb-3'>\n                        <button type='button' class='btn btn-block btn-outline-info' onClick={this.toggleDetail}>\n                            <div class={`float-right ml-2 text-center border rounded-circle imageRounded imageRoundedIcon`} style={`background-image: url('./assets/strava-icon.png');`} />\n                            <Text id='workout.index.strava-workouts'>Strava workouts / not imported</Text> {activities.length}\n                        </button>\n                    </div>\n                </>);\n            }\n            return (<></>);\n        }\n\n        return (<>\n            <div class='col-12 mb-3'>\n                <div class='row'>\n                    {activities && activities.length > 0 && (\n                        <div\n                            class='col-12 border-top border-bottom pt-3 pb-3 my-2 bg-light'\n                        >\n                            <button type='button' class='float-right btn btn-sm btn-link' onClick={this.toggleDetail}>\n                                <i class='fas fa-caret-up' /> <Text id='strava.hide-list'>Hide list</Text>\n                            </button>\n                            <h5><Text id='workout.index.strava-workouts'>Strava workouts / not imported</Text> {activities.length}</h5>\n                            {activities && activities.map(activity => {\n                                const { summary = {} } = activity;\n                                const startDate = util.parseInputDate(summary.startTimeInSeconds);\n\n                                return (<>\n                                    {/* <td>{util.secToHms(activity.moving_time)}</td> */}\n                                    {/* <td>{util.secToHms(activity.elapsed_time)}</td> */}\n\n                                    <div class='col-12 d-flex mb-4 position-relative'>\n                                        <div class={`text-center border rounded-circle imageRounded`} style={`background-image: url(\"./assets/strava-icon.png\"); border-width: 3px !important;`}>\n                                            &nbsp;\n                                        </div>\n                                        <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                                            <h5 class='my-0 mb-1' style='line-height: 1.0em;'>{activity.name}</h5>\n                                            {activity.type}<br />\n                                            <small class='text-muted'>\n                                                {activity.start_date && <small onClick={this.toggleDate}>\n                                                    {forceShowDate || showDate ? util.formatDate(activity.start_date, { locale: 'no-NB' }) : util.formatDistance(activity.start_date, new Date(), { locale: 'no-NB' })}\n                                                </small>}\n                                                <span class='text-muted'>\n                                                    <i class='fas fa-road ml-2' /> <Distance stores={this.props.stores} value={activity.distance / 1000} />\n                                                    <i class='fas fa-mountain ml-2' /> <Elevation stores={this.props.stores} value={activity.total_elevation_gain} />\n                                                    <i class='fas fa-tachometer-alt ml-2' /> <Speed stores={this.props.stores} value={activity.average_speed * 3.6} />\n                                                    <i class='fas fa-stopwatch ml-2' /> {util.secToHms(activity.elapsed_time)}\n                                                </span>\n                                            </small>\n                                            <br />\n                                            <button class='btn btn-sm btn-block btn-primary' onClick={this.importStravaWorkout} data-id={activity.id}>\n                                                <i class='fas fa-file-import' /> <Text id='strava.import'>Import workout</Text> <i class='fas fa-arrow-right' /> {selectedTeam}\n                                            </button>\n                                            <button class='btn btn-sm btn-link' onClick={this.ignoreStravaWorkout} data-id={activity.id}>\n                                                <i class='fas fa-trash-alt' /> <Text id='strava.ignore'>Ignore workout</Text>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </>);\n                            })}\n\n                            <button type='button' class='btn btn-block btn-primary mt-3' onClick={this.toggleDetail}>\n                                <i class='fas fa-caret-up' /> <Text id='strava.hide-list'>Hide list</Text>\n                            </button>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default Strava;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gaugeBackground\":\"gaugeBackground__1UGxt\",\"gauge\":\"gauge__2ZDxd\",\"success\":\"success__3UQxg\",\"primary\":\"primary__3pPV6\",\"secondary\":\"secondary__-Vrk_\",\"info\":\"info__3t5zs\",\"warning\":\"warning__1jHlR\",\"danger\":\"danger__BLVC9\",\"gaugeText\":\"gaugeText__1on-w\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@withText(() => ({\n    subject: <Text id='ad.subject'>Annonseforespørsel</Text>,\n    body: <Text id='ad.body'>Hei, Jeg ønsker å vite mer om annonsering i appen The Musher.</Text>,\n}))\n\n@observer\nclass Ad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n        this.apiServer = util.getApiServer();\n    }\n\n\tasync loadAd(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adStore, workoutStore, userStore, appState } = this.props.stores;\n        const { section } = this.props;\n        const { path: url = '' } = appState;\n        const { currentTeam } = workoutStore;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        let team = {};\n        let ambitions;\n        let type;\n        let postalcode;\n        let place;\n        let country;\n        if (currentTeam) {\n            team = userStore.findTeam(currentTeam, true);\n            if (team && team.id) {\n                ambitions = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n                type = userStore.findTeamType({ type: team.type, language });\n                postalcode = team.postalcode;\n                place = team.place;\n                country = team.country;\n            }\n        }\n        // console.log({ currentTeam, team, ambitions,  type, postalcode, place, country });\n        // const { url = '' } = this.props;\n        let page = url.replace(/\\d+$/, 'detail');\n        page = url.replace(/\\/\\d+/, '/detail');\n\n        // props: { \"url\": \"/\" }\n        // props: { \"url\": \"/workouts/\" }\n        // props: { \"url\": \"/workouts/4708\" }\n        // props: { \"url\": \"/dogs\" }\n        // props: { \"url\": \"/dogs/10\" }\n\n\t\tawait adStore.load({ query: { page, section }});\n        adStore.setTime();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    logClick = async () => {\n        const { adStore, userStore } = this.props.stores;\n        const { ads = [] } = adStore;\n        let id = ads.length > 0 ? ads[0].id : null;\n        const { user = {} } = userStore;\n        await adStore.logClick({ id, user: user.id });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAd();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.path !== this.props.path) {\n            this.loadAd(nextProps);\n        }\n    }\n\n    render() {\n        const { adStore, userStore, appState } = this.props.stores;\n        const { subject, body, section } = this.props;\n        const { path } = appState;\n        const { user = {} } = userStore;\n        const { ads = [], time, adViews, adClicks } = adStore;\n        if (!user || !user.id || !ads || ads.length === 0) {\n            if (path.match(/\\/(home)/i)) {\n                return <>\n                    <div class='w-100'>\n                        <div class='row'>\n                            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                                <div class='border rounded-lg p-4 my-3'>\n                                    <span class='float-right display-4 text-warning'>\n                                        <i class='far fa-smile-wink' />\n                                    </span>\n                                    <h5><Text id='ad.heading'>Vil du annonsere her?</Text></h5>\n                                    <div><Text id='ad.teaser'>Det er super enkelt :)</Text></div>\n                                    <Localizer>\n                                        <a href={`mailto:post@themusher.no?subject=${subject}: ${path}: ${section}&body=${body}`} target='_blank' rel='noreferrer'>\n                                            <i class='fas fa-paper-plane' /> <Text id='ad.linktext'>Ta kontakt med The Musher</Text>\n                                        </a>\n                                    </Localizer>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>;\n            }\n            return <></>;\n        }\n        const ad = ads[0];\n        return (\n            <>\n                <div class='w-100'>\n                    <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                            <div>\n                                <small><small class='text-muted'>\n                                    <Text id='ad.ad'>Annonse</Text>:\n                                    <img src={`${this.apiServer}/api/ads/${ad.id}/view?user=${user.id}&time=${time}`} style='width: 1; height: 1; opacity: 0.1;' />\n                                </small></small>\n                            </div>\n                            {ad.target ? <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    target={ad.target || '_blank'}\n                                    rel='noopener noreferrer'\n                                    onClick={this.logClick}\n                                    native\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>                            \n                            </> : <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    onClick={this.logClick}\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>\n                            </>}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Ad;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\n@observer\nclass Teams extends Component {\n    toggleTeam = (team) => {\n\t\tconst { callback, unsetTeamIfSelected = true } = this.props;\n        const { dogStore, workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = dogStore;\n\t\tif (unsetTeamIfSelected && team === currentTeam) {\n\t\t\tdogStore.setCurrentTeam(undefined);\n\t\t\tworkoutStore.setCurrentTeam(undefined);\n\t\t} else {\n\t\t\tdogStore.setCurrentTeam(team);\n\t\t\tworkoutStore.setCurrentTeam(team);\n\t\t}\n\t\tif (util.isDefined(callback)) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n    showAllTeams = () => {\n\t\tconst { callback } = this.props;\n        const { dogStore, workoutStore } = this.props.stores;\n\t\tdogStore.setCurrentTeam(undefined);\n\t\tworkoutStore.setCurrentTeam(undefined);\n\t\tif (util.isDefined(callback)) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t// componentDidMount() {\n\t// \tif (this.container) {\n\t// \t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'center' });\n\t// \t}\n\t// }\n\n    render() {\n        const { userStore, dogStore } = this.props.stores;\n        const { teams } = userStore;\n\t\tconst { currentTeam } = dogStore;\n\t\tconst { highlight, showAll = true } = this.props;\n        return (\n\t\t\t<div class='row mt-2'>\n\t\t\t\t<div class='w-100 overflow-hidden'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='d-flex flex-row flex-nowrap pb-2 px-1 no-scrollbar'\n\t\t\t\t\t\tstyle='overflow: auto; scroll-snap-type: x mandatory;'\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* <xmp><br /><br /><br /><br />{JSON.stringify(teams, null, 4)}</xmp> */}\n\t\t\t\t\t\t{teams && teams.map((team, idx) => {\n\t\t\t\t\t\t\tlet classNames;\n\t\t\t\t\t\t\tif (teams.length === 1) {\n\t\t\t\t\t\t\t\tclassNames = 'rounded-pill-both';\n\t\t\t\t\t\t\t} else if (idx === 0) {\n\t\t\t\t\t\t\t\tclassNames = 'rounded-pill-left';\n\t\t\t\t\t\t\t} else if (idx + 1 === teams.length) {\n\t\t\t\t\t\t\t\tclassNames = 'rounded-pill-right';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div class='col mb-0 px-0 clearfix' key={team.id}>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-sm btn-block \n\t\t\t\t\t\t\t\t\t\t\trounded-none ${classNames}\n\t\t\t\t\t\t\t\t\t\t\t${currentTeam === team.id ? 'btn-success' : 'btn-outline-success'}\n\t\t\t\t\t\t\t\t\t\t\ttext-nowrap clearfix`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tonClick={() => this.toggleTeam(team.id)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-users' /> {team.name}\n\n\t\t\t\t\t\t\t\t\t\t{highlight && highlight.indexOf(team.id) > -1 && <>\n\t\t\t\t\t\t\t\t\t\t\t{currentTeam === team.id ? <>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-check float-right' />\n\t\t\t\t\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='spinner-grow text-warning float-right' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />   \n\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t{/* {currentTeam === team.id && <ScrollIntoView horizontal={'center'} vertical={'end'} />} */}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t\t{showAll && <div class='row'>\n\t\t\t\t\t\t<div class='col-12 mb-1 px-1 d-flex justify-content-center'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass={`btn btn-sm rounded-lg btn-link text-nowrap clearfix`}\n\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\tonClick={this.showAllTeams}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-users' /> <Text id='teams.show-all'>Show all</Text>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\t\t\t</div>\n        );\n    }\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport style from './style.css';\n\nconst initialState = {\n    mouseData: {},\n};\n\n@observer\nclass Gauge extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.svgRef = null;\n    }\n\n    render() {\n        const {\n            radius = 50,\n            heightAdd = 0,\n            color = 'success',\n\n            showPercentText = true,\n            percent = 0,\n            prefix = '',\n\n            showCenterText= false,\n            centerText,\n            centerTextSize,\n            centerTextX,\n            centerTextY,\n\n            total = '',\n            totalY = '90%',\n            totalX = '50%',\n            totalTextAnchor = 'middle',\n                        \n            completed = '',\n            completedY = '65%',\n            completedX = '50%',\n            completedTextAnchor = 'middle',\n        } = this.props;\n        const strokeWidth = radius * 0.3;\n        const innerRadius = radius - strokeWidth / 2;\n\n        const strokeWidthGauge = radius * 0.3;\n\n        const circumference = innerRadius * 2 * Math.PI;\n        const arc = circumference * (270 / 360);\n        const dashArray = `${arc} ${circumference}`;\n        const transform = `rotate(135, ${radius}, ${radius})`;\n\n        const percentNormalized = Math.min(Math.max(percent, 0), 100);\n        const offset = arc - (percentNormalized / 100) * arc;\n\n        const textSize = centerTextSize || radius / 2.5;\n        const textSizeSmall = radius / 5;\n\n        return (\n            <>\n                <svg xmlns='http://www.w3.org/2000/svg' class={style.svg}\n                    // viewBox={`0 0 ${radius * 2} ${radius * 2}`}\n                    width={radius * 2}\n                    height={radius * 2 + heightAdd}\n                    preserveAspectRatio='none'\n                    ref={c => this.svgRef = c}\n                >\n\n                    <circle\n                        class={`${style.gaugeBackground}`}\n                        cx={radius}\n                        cy={radius}\n                        r={innerRadius}\n                        strokeWidth={strokeWidth}\n                        strokeDasharray={dashArray}\n                        strokeLinecap='round'\n                        transform={transform}\n                    />\n                    \n                    <circle\n                        class={`${style[color]} ${style.gauge}`}\n                        cx={radius}\n                        cy={radius}\n                        r={innerRadius}\n                        stroke='url(#grad)'\n                        strokeDasharray={dashArray}\n                        strokeDashoffset={offset}\n                        strokeLinecap='round'\n                        strokeWidth={strokeWidthGauge}\n                        style={{\n                            transition: 'stroke-dashoffset 0.3s',\n                        }}\n                        transform={transform}\n                    />\n                     \n                    {showPercentText && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={centerTextX || '50%'}\n                        y={centerTextY || '50%'}\n                        dominant-baseline='middle'\n                        text-anchor='middle'\n                        font-size={textSize}\n                    >{percent} {prefix}</text>}\n\n                    {showCenterText && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={centerTextX || '50%'}\n                        y={centerTextY || '50%'}\n                        dominant-baseline='middle'\n                        text-anchor='middle'\n                        font-size={textSize}\n                    >{centerText}</text>}\n\n                    {completed && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={completedX}\n                        y={completedY}\n                        dominant-baseline='middle'\n                        text-anchor={completedTextAnchor}\n                        font-size={textSizeSmall}\n                    >{completed}</text>}\n\n                    <text\n                        class={`${style.gaugeText} ${style.secondary}`}\n                        x={totalX}\n                        y={totalY}\n                        dominant-baseline='middle'\n                        text-anchor={totalTextAnchor}\n                        font-size={textSizeSmall}\n                    >{total}</text>\n\n                </svg>\n            </>\n        );\n    }\n}\n\nexport default Gauge;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\n// TODO: Do we need mobx? What is mobx doing here?  \n\n@observer\nclass FastListLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.containerRef = null;\n    }\n\n    componentWillUnmount() {\n        const { removeIntersectionObserver } = this.props;\n        if (removeIntersectionObserver) {\n            removeIntersectionObserver(this.containerRef);\n        }\n    }\n\n    componentDidMount() {\n        const { addIntersectionObserver } = this.props;\n        if (addIntersectionObserver) {\n            addIntersectionObserver(this.containerRef);\n        }\n    }\n\n    render() {\n        const {\n            wrapperClassNames = '',\n            contentClassNames = '',\n            renderContent,\n            obj = {},\n            idx,\n            dataFields,\n            dataValues,\n            sessionid,\n        } = this.props;\n\n        const dataProperties = {};\n        if (sessionid) {\n            dataProperties.sessionid = sessionid;\n        }\n        dataFields.forEach(e => dataProperties[`data-${e}`] = encodeURI(dataValues[e] || obj[e]));\n\n        return (\n            <div\n                class={`${wrapperClassNames}`}\n                ref={c => this.containerRef = c}\n                data-idx={idx}\n                {...dataProperties}\n            >\n                <div\n                    class={`${contentClassNames}`}\n                    style={`display: block;`}\n                >\n                    {renderContent({\n                        obj,\n                        idx,\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n@observer\nclass FastList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    // IntersectionObserver\n    deleteIntersectionObserver = () => {\n        this.intersectionObserver = null;\n    }\n\n    handleIntersection = (entries) => {\n        const { handleIntersection } = this.props;\n        if (typeof(handleIntersection) === 'function') {\n            // console.log('handleIntersection');\n            handleIntersection(entries);\n        }\n        // console.log({ entries });\n        // TODO: Make it possible to run defined functions for entries.\n        // mu.intersectionObserverCallback(entries);\n        entries.forEach((e) => {\n            const { isIntersecting } = e;\n            const { height = 0 } = e.target.dataset;\n            // const childHeight = e.target.childNodes[0].getBoundingClientRect().height;\n            // const targetHeight = e.target.getBoundingClientRect().height;\n            const childHeight = e.target.childNodes[0].offsetHeight;\n            const targetHeight = e.target.offsetHeight;\n            const scrollHeight = e.target.scrollHeight;\n            const currentHeight = Math.max(childHeight, targetHeight, scrollHeight);\n            // console.log({ isIntersecting, height, childHeight, targetHeight, scrollHeight, currentHeight }, e.target);\n\n            if (isIntersecting) {\n                e.target.childNodes[0].style.display=`block`;\n                // TODO: Should be set after image is loaded.\n                // const height = e.target.childNodes[0].clientHeight > e.target.clientHeight ? e.target.childNodes[0].clientHeight : e.target.clientHeight;\n                // console.log(e.target);\n                // console.log('e.target.childNodes[0].offsetHeight:', e.target.childNodes[0].offsetHeight);\n                // console.log('e.target.childNodes[0].scrollHeight:', e.target.childNodes[0].scrollHeight);\n                // console.log('e.target.childNodes[0].clientHeight:', e.target.childNodes[0].clientHeight);\n                // console.log('e.target.offsetHeight:', e.target.offsetHeight);\n                // console.log('e.target.scrollHeight:', e.target.scrollHeight);\n                // console.log('e.target.clientHeight:', e.target.clientHeight);\n                // console.log('height:', height);\n                // e.target.style.height=`${height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n            } else if (e.target.style.minHeight) {\n                // e.target.style.height = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.childNodes[0].style.display=`none`;\n            }\n        });\n    }\n\n    setupIntersectionObserver = () => {\n        if (!('IntersectionObserver' in window) ||\n            !('IntersectionObserverEntry' in window) ||\n            !('intersectionRatio' in window.IntersectionObserverEntry.prototype)) {\n            return false;\n        }\n\n        const options = {\n            root: null,\n            rootMargin: '100px',\n            threshold: 0.1,\n        };\n        this.intersectionObserver = new IntersectionObserver(this.handleIntersection, options);\n    }\n\n    addIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.observe(ref);\n        }\n    }\n    removeIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.unobserve(ref);\n        }\n    }\n\n    componentWillMount() {\n        this.setupIntersectionObserver();\n    }\n\n    componentWillUnmount() {\n        this.deleteIntersectionObserver();\n    }\n\n    render() {\n        const {\n            data = [],\n            wrapperClassNames = 'row pb-4 bg-light',\n            contentClassNames = `col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 shadow-sm`,\n            renderContent = (e) => <>Missing render function!</>,\n            dataFields = [],\n            dataValues = {},\n        } = this.props;\n        \n        return (\n            <div class='w-100'>\n                {data && data.filter(e => util.isObject(e)).map((obj, idx) => {\n                    const wrapperClasses = obj.hasOwnProperty('wrapperClassNames') ? obj.wrapperClassNames : wrapperClassNames;\n                    const contentClasses = obj.hasOwnProperty('contentClassNames') ? obj.contentClassNames : contentClassNames;\n                    return (<>\n                        <FastListLine\n                            key={`fastline-${idx}-${obj.id}`}\n                            obj={obj}\n                            idx={idx}\n                            addIntersectionObserver={this.addIntersectionObserver}\n                            removeIntersectionObserver={this.removeIntersectionObserver}\n                            wrapperClassNames={wrapperClasses}\n                            contentClassNames={contentClasses}\n                            renderContent={renderContent}\n                            dataFields={dataFields}\n                            dataValues={dataValues}\n                        />\n                    </>);\n                })}\n            </div>\n        );\n    };\n}\n\nexport default FastList;\n"],"sourceRoot":""}