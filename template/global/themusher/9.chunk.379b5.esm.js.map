{"version":3,"sources":["webpack:///./components/feedback/likesAndComments.js","webpack:///./components/imageSlider/index.js","webpack:///./components/story/commentAdd.js","webpack:///./components/story/commentReply.js","webpack:///./components/story/add.js","webpack:///./components/story/publicDetail.js","webpack:///./components/story/comments.js","webpack:///./components/style.css","webpack:///./components/story/publicStory.js","webpack:///./components/data/temperature.js","webpack:///./components/team/connect-boxes.js","webpack:///./components/ad/index.js","webpack:///./components/story/publicFeed.js","webpack:///./components/form/images.js","webpack:///./components/team/connect-confirm.js","webpack:///./components/form/dragNdropFileupload.js","webpack:///./components/feedback/views.js","webpack:///./components/yrweather/index.js","webpack:///./components/team/fastList.js"],"names":["initialState","DisplayLikesAndComments","observer","Component","constructor","props","super","toggleLikes","showLikesList","this","state","setState","render","storyStore","teamStore","workoutStore","raceStore","stores","likes","comments","type","onTeamClick","onUserClick","class","length","style","onClick","slice","map","like","user","teams","publicTeam","findPublicUser","findPublicTeamByMembers","util","isArray","find","e","public","image","mu","getImage","team","priority","shortname","displayNameShort","href","uuidv4","title","name","id","fields","total","displayName","touchStart","stopPropagation","startX","touches","pageX","touchEnd","undefined","sliding","touchMove","totalImages","scrollDistance","x","prevImage","nextImage","images","imageContainer","currentImage1","currentImage2","currentIdx","imageDots","Array","fill","y","nextImageContainer","nextIdx","componentWillReceiveProps","nextProps","nextImages","img","curImage","htmlImageRatio","height","width","imgHeight","imgWidth","dimensions","orientation","imageRatio","onTouchstart","onTouchend","onTouchmove","loading","src","s3LargeLink","ref","c","image1","image2","i","StoryAdd","beforeImagesUploaded","sendButtonEnabled","afterImagesUploaded","commentStory","async","callback","inputRefObject","story","comment","showAddImage","response","status","body","resizeTextarea","addImage","addImages","value","push","handleImageErrored","target","onerror","setTimeout","Date","inputRef","userStore","userImage","s3SmallLink","for","placeholder","onInput","linkState","onKeyUp","onFocus","data-id","disabled","onError","removeImage","data-name","object","updateField","before","after","autoOpen","StoryCommentReply","commentId","commentReplyStory","componentDidMount","initCall","showTeamChange","showChangeVisibility","showChangeType","addStory","hashTags","postfix","topic","tag","join","insert","pinned","urlText","url","currency","price","code","country","region","startDate","endDate","loadPublicFeed","hashtags","data","changeVisibility","changePinned","changeType","toggleTeamChange","setPublicTeam","publicTeams","findPublicTeams","col","offset","appState","isAdmin","firstname","ucfirst","lastname","email","teamId","parseInt","findTeam","darkmode","onChange","selected","checked","StoryPublicFeed","loadStoriesPublicFeed","publicFeed","showAllComments","showAddComment","showAllReplies","viewImageIdx","likeComment","likeReply","showOriginal","StoryComments","addLikeComment","closest","dataset","likeStoryComment","replyId","likeStoryCommentReply","replyComment","parentElement","focus","toggleComments","toggleReplies","toggleMenu","showMenu","showDeleteComment","showEdit","toggleEdit","commentEditText","toggleDeleteComment","deleteComment","deleteCommentStory","deleteCommentReply","commentid","deleteCommentReplyStory","saveComment","editCommentStory","saveCommentReply","editCommentReplyStory","viewImage","idx","translate","preventDefault","replyid","translatedText","key","translateCommentReply","translateComment","compact","currentUser","language","max_comments","filteredComments","totalComments","diplayedComments","Math","max","reverse","hasLikedComment","findIndex","filteredReplises","totalReplies","diplayedReplies","imgs","toJS","imageIdx","currentImage","currentLocationGeocode","translation","getCommentTranslations","targetLang","data-comment","filter","t","markdown","replaceImages","markdownOpts","getMarkdownOptions","onDblclick","data-idx","data-commentid","formatDistance","createdDate","locale","updatedDate","reply","hasLikedReply","replyTranslation","getCommentReplyTranslations","replyBody","data-replyid","more","module","exports","showTeamSetting","likeStory","StoryEditInline","saveStory","storyBody","saveField","publicFeedUpdate","storyType","saveStoryField","clearTimeout","updateTimer","doUpdateField","StoryTypeRegular","showStoryDetail","localName","route","likeRef","getTranslation","field","offline","dblClick","StoryTypeAd","componentWillMount","asUrl","rel","currencty","format","StoryTypeArticle","toggleDate","showDate","storyId","likeIds","Object","keys","toggleAddComment","closeAllAddComments","toggleShowTeamSetting","showDeleteStory","toggleDeleteStory","reportStory","adminRemoveStory","adminHideStory","deleteStory","doneEdit","shareLink","text","shareUrl","hashtag","hasShareApi","findPublicTeam","isTeamAdmin","members","some","m","username","userLink","settings","hideProfile","reports","hasLikedStory","totalFollowers","followers","isYourTeam","indexOf","isFollowing","hasRequestedFollow","followRequests","yrWeather","views","getViews","statistics","adminData","getAdminData","date","formatDate","hour12","hour","minute","formattedCounty","formatted_address","deviceInfo","count","ranking","isNumber","rankingTrend","getClassForTrend","durationAvg","durationAvgTrend","statisticsCurrent","totalInteractions","shadowTags","buttonOnly","role","data-url","data-title","data-native","Temperature","imperial","celciusToFahrenheit","requestSent","Teams","requestFollowTeam","followRequest","getButton","isBlocked","blockedFollowers","unFollowTeam","data-team","isLoading","loadPublic","query","notfollowing","array","limit","loadTeams","publicTeamsToFollow","place","dogs","Ad","withText","subject","logClick","adStore","ads","apiServer","getApiServer","section","path","currentTeam","ambitions","postalcode","findTeamAmbition","ambition","findTeamType","page","replace","load","setTime","loadAd","time","match","ad","native","MARGIN_TOP","marginTop","idxConfirm","idxSuggestion","idxAd","sessionid","getTime","dataFields","reloadStories","appContainerScrollTop","setCheckForNewStories","checkForNewStoriesTimer","setInterval","checkForNewStories","clearCheckForNewStories","clearInterval","insertTopRanked","topRankedStories","topRankedRandomized","shuffleArray","feed","startPosition","now","forEach","parseInputDate","floor","endPosition","l","randomPlace","randomInt","isObject","splice","localUpdateField","insertAds","wrapperClassNames","contentClassNames","insertTeamConfirm","insertTeamSuggestions","setLoadMore","unsetLoadMore","teamid","showTeam","hideTeam","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","postScrollview","getIntersectionObserverHistory","renderContent","obj","sort","componentWillUnmount","cleanupMemory","hasNewStories","marginBottom","back","Images","handleAddImage","file","addToImages","skipTimer","files","uploadStatus","apiUrl","confirmed","deleted","confirmRequest","follow","confirmFollowRequest","followRequestUser","deleteRequest","deleteFollowRequest","addData","hasFollowRequests","reqUser","isDeleted","isConfirmed","data-user","data-follow","DragNDropFileupload","dropRef","createRef","handleDrag","handleDragIn","dragCounter","dataTransfer","items","drag","handleDragOut","handleDrop","readLocalFile","handleAddFiles","event","el","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","readyState","JSON","parse","responseText","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","current","click","removeEventListener","position","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","isImage","result","formatBytes","aria-valuenow","aria-valuemin","aria-valuemax","children","toggleViews","showViewList","viewUsersArrays","entries","year","yearObject","week","weekObject","viewUsers","flat","userId","YrWeather","toggleyrWeather","showWeather","currentLocationInfo","coords","latitude","lat","longitude","lon","altitude","getWeatherUser","formatWeather","loadWeather","yrWeatherKeys","yrWeatherFormatted","captureEvents","onScroll","getNestedValue","night","morning","day","evening","getTemperatureColor","getWindSpeedColor","w","isoTime","windDirection","FastListLine","containerRef","removeIntersectionObserver","addIntersectionObserver","dataValues","dataProperties","encodeURI","FastList","deleteIntersectionObserver","intersectionObserver","isIntersecting","currentHeight","childNodes","offsetHeight","scrollHeight","display","minHeight","setupIntersectionObserver","window","IntersectionObserverEntry","prototype","IntersectionObserver","root","rootMargin","threshold","observe","unobserve","wrapperClasses","hasOwnProperty","contentClasses"],"mappings":"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","file":"9.chunk.379b5.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleLikes = () => {\n        const { showLikesList } = this.state;\n        this.setState({\n            showLikesList: !showLikesList,\n        });\n    }\n\n    render() {\n        const { showLikesList } = this.state;\n        const { storyStore, teamStore, workoutStore, raceStore } = this.props.stores;\n        const { likes, comments, type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\t\treturn (<>\n            <div class='d-flex justify-content-between mb-2'>\n                {likes && likes.length > 0 && <>\n                    <div class='d-flex flex-row flex-nowrap position-relative mr-3' style='overflow: auto;'>\n                        <span\n                            class='text-muted mr-2'\n                            onClick={this.toggleLikes}\n                        >\n                            <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                        </span>\n                        {likes.slice(0, 3).map((like) => {\n                            let user;\n                            let teams;\n                            if (type === 'story') {\n                                user = storyStore.findPublicUser(like.user);\n                                teams = storyStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'team') {\n                                user = teamStore.findPublicUser(like.user);\n                                teams = teamStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'workout') {\n                                user = workoutStore.findPublicUser(like.user);\n                                teams = workoutStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'race') {\n                                user = raceStore.findPublicUser(like.user);\n                                teams = raceStore.findPublicTeamByMembers(like.user);\n                            }\n                            let publicTeam;\n                            if (util.isArray(teams)) {\n                                publicTeam = teams.find(e => e.public === 1);\n                            }\n                            const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                            const shortname = mu.displayNameShort(user);\n                            return (<>\n                                {publicTeam ? <>\n                                    <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)}>\n                                        <div\n                                            class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                            style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                        >\n                                            {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                        </div>\n                                    </a>\n                                </> : <>\n                                    <div\n                                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                        style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                                    >\n                                        {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                    </div>\n                                </>}\n                            </>);\n                        })}\n                        {likes.length > 3 && <>\n                            <span class='text-muted font-weight-lighter ml-2' onClick={this.toggleLikes}>\n                                <Text id='likes-comments.and' fields={{ total: likes.length - 3 }}>and {likes.length - 3} others.</Text>\n                            </span>\n                        </>}\n                    </div>\n                </>}\n\n                {comments && comments.length > 0 && <span class='float-right text-muted'>\n                    <i class='fas fa-comment text-primary' /> {comments.length}\n                </span>}\n            </div>\n            {showLikesList && <div class='mt-3 mb-3'>\n                {likes && likes.map((like) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(like.user);\n                        teams = storyStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(like.user);\n                        teams = teamStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(like.user);\n                        teams = workoutStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'race') {\n                        user = raceStore.findPublicUser(like.user);\n                        teams = raceStore.findPublicTeamByMembers(like.user);\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-light mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                {name} <span class='font-weight-lighter'>- {publicTeam.name}</span>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                {name}\n                            </div>\n                        </>}\n                    </div>);\n                })}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\n@observer\nclass ImageSlider extends Component {\n    constructor(props) {\n        super(props);\n        const { images = [] } = props;\n        this.state = {\n            imageContainer: 1,\n            currentImage1: images[0] || {},\n            currentImage2: {},\n            currentIdx: 0,\n            totalImages: images.length || 0,\n            imageDots: [...Array(images.length || 0).fill(1).map((x, y) => x + y)],\n        };\n    }\n\n    nextImage() {\n        // console.log('next');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx + 1;\n        if (nextIdx > totalImages -1) {\n            nextIdx = 0;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: nextImageContainer,\n        });\n    }\n\n    prevImage() {\n        // console.log('prev');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx - 1;\n        if (nextIdx < 0) {\n            nextIdx = totalImages - 1;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: imageContainer === 1 ? 2 : 1,\n        });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: e.touches[0].pageX,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: undefined,\n            sliding: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        // e.preventDefault();\n        const { totalImages } = this.state;\n        if (totalImages > 1) {\n            const { startX, sliding } = this.state;\n            const scrollDistance = 50;\n            const x = e.touches[0].pageX;\n            if (!sliding) {\n                if (x > startX + scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.prevImage();\n                } else if (x < startX - scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.nextImage();\n                }\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.images !== this.props.images) {\n            const { images: nextImages = [] } = nextProps;\n            this.setState({\n                imageContainer: 1,\n                currentImage1: nextImages.length > 0 ? nextImages[0] : {},\n                currentImage2: {},\n                currentIdx: 0,\n                totalImages: nextImages.length || 0,\n                imageDots: [...Array(nextImages.length || 0).fill(1).map((x, y) => x + y)],\n            });\n        }\n    }\n\n    render() {\n        const { currentImage1, currentImage2, imageContainer, totalImages, imageDots, currentIdx } = this.state;\n        const img = this[`image${imageContainer}`];\n        const curImage = imageContainer === 1 ? currentImage1 : currentImage2;\n        const htmlImageRatio = img && img.height ? img.width / img.height : 4 / 3;\n        let imgHeight;\n        let imgWidth;\n        if (curImage.dimensions) {\n            const { width, height, orientation } = curImage.dimensions;\n            if (orientation > 4 && orientation < 9) {\n                imgHeight = width;\n                imgWidth = height;\n            } else {\n                imgHeight = height;\n                imgWidth = width;\n            }\n        }\n        const imageRatio = curImage.dimensions ? imgWidth / imgHeight : htmlImageRatio;\n        if (totalImages <= 0) {\n            return '';\n        }\n\n        return (\n            <div class='w-100'>\n                <div class='border rounded position-relative w-100'\n                    style={`height: calc(85vw / ${imageRatio}); overflow: hidden; transition: all .3s ease-in-out;`}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                >\n                    {totalImages > 1 && <span class='position-absolute' style='top:0px; right: 5px; z-index: 2000;'><small>{currentIdx + 1}/{totalImages}</small></span>}\n                    {currentImage1 && <div class='position-absolute' style={`${imageContainer === 1 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage1.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image1 = c}\n                        />\n                    </div>}\n                    {currentImage2 && <div class='position-absolute' style={`${imageContainer === 2 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage2.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image2 = c}\n                        />\n                    </div>}\n                </div>\n                {imageDots.length > 1 && <div class='w-100 text-center'>{imageDots.map(i => <span style={`color: ${i === currentIdx + 1 ? '#ffffff' : '#808080'};`}>&bull;</span>)}</div>}\n            </div>\n        );\n    }\n}\n\nexport default ImageSlider;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentStory({ id: story.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[story.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ story, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, story } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={story.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryCommentReply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentReplyStory({ id: story.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ story, response, commentId });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    componentDidMount() {\n        const { initCall = () => {} } = this.props;\n        initCall();\n    }\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddImage: false,\n    showTeamChange: false,\n    showChangeVisibility: false,\n    showChangeType: false,\n    sendButtonEnabled: true,\n};\n\n@observer\nclass StoryAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            story: {\n                type: 1,\n                title: '',\n                body: '',\n                images: [],\n                public: 1,\n                urlText: '',\n                url: '',\n                currency: '',\n                price: 0,\n                code: '',\n                country: '',\n                region: '',\n                startDate: '',\n                endDate: '',\n            },\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    addStory = async () => {\n        const { story = {}, showAddImage, sendButtonEnabled } = this.state;\n        const { callback = () => {}, hashTags = [], postfix, topic = `team-${story.team}` } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        if (!sendButtonEnabled) {\n            return false;\n        }\n\n        if (!story.body) {\n            return false;\n        }\n        this.setState({ sendButtonEnabled: false });\n\n        let body = story.body;\n        if (postfix) {\n            body += `\\n\\n${postfix}`;\n        }\n        if (hashTags && hashTags.length > 0) {\n            body += `\\n\\n${hashTags.map(tag => `#${tag}`).join(' ')}`;\n        }\n\n\t\tconst response = await storyStore.insert({\n            type: story.type,\n            title: story.title,\n            body,\n            pinned: story.pinned,\n            images: story.images,\n            public: story.public ? 1 : 0,\n            team: story.team,\n            urlText: story.urlText,\n            url: story.url,\n            currency: story.currency,\n            price: story.price,\n            code: story.code,\n            country: story.country,\n            region: story.region,\n            startDate: story.startDate,\n            endDate: story.endDate,\n            topic,\n        });\n\t\tif (response && response.status === 201) {\n            await storyStore.loadPublicFeed({ hashtags: hashTags });\n            this.setState({\n                story: {\n                    type: 1,\n                    title: '',\n                    body: '',\n                    pinned: null,\n                    images: [],\n                    public: 1,\n                    urlText: '',\n                    url: '',\n                    currency: '',\n                    price: null,\n                    code: '',\n                    country: '',\n                    region: '',\n                    startDate: null,\n                    endDate: null,\n                },\n            }, () => {\n                mu.resizeTextarea(this.inputRef['newStoryBody']);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback(response.data);\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { story } = this.state;\n        story.images.push(...value);\n        this.setState({ story });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    changeVisibility = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changePinned = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changeType = () => {\n        const { showChangeType } = this.state;\n        this.setState({\n            showChangeType: !showChangeType,\n        });\n    }\n\n    toggleTeamChange = () => {\n        const { showTeamChange } = this.state;\n        this.setState({\n            showTeamChange: !showTeamChange,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    setPublicTeam = () => {\n        const { userStore } = this.props.stores;\n        const publicTeams = userStore.findPublicTeams();\n        if (util.isArray(publicTeams) && publicTeams.length > 0) {\n            const { story } = this.state;\n            story.team = publicTeams[0].id;\n            this.setState({ story });\n        }\n    }\n\n    componentDidMount() {\n        this.setPublicTeam();\n\t}\n\n    render() {\n        const { col = 12, offset = 0, hashTags = [] } = this.props;\n        const { story = {}, showAddImage, showTeamChange, showChangeVisibility, showChangeType, sendButtonEnabled } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { user = {}, isAdmin } = userStore;\n        // const team = userStore.findTeam(story.team || user.team, true) || {};\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        let userImage = user.image || (user.images ? user.images[0] : undefined);\n        if (story.team) {\n            const teamId = parseInt(story.team, 10);\n            const team = userStore.findTeam(teamId, true);\n            userImage = team.image || (team.images ? team.images[0] : undefined);\n        }\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100 px-0'>\n                <div class='row'>\n\n                    <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 rounded rounded-lg pt-3 pb-1 bg-${darkmode ? 'black' : 'white'} shadow-sm mb-1`}>\n                        <div class='d-flex mb-0 position-relative w-100'>\n                            <div class='position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall pointerCursor`}\n                                    style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                                    onClick={this.toggleTeamChange}\n                                >\n                                    {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='position-absolute' style='top: 16px; right: 0px;'>\n                                    <small class='text-white' style='font-size: 1.5em;'>\n                                        <i class='fas fa-caret-down pointerCursor' onClick={this.toggleTeamChange} />\n                                    </small>\n                                </div>\n                            </div>\n                            <div class='col pl-3 pr-0' style='line-height: 1.2em;'>\n                                <div class='d-flex bd-highlight'>\n                                    <div class='p-0 w-100 bd-highlight'>\n                                        <label class='sr-only' for='inlineFormInput'><Text id='story.body'>Story</Text></label>\n                                        <div class='border rounded rounded-lg position-relative'>\n                                            <Localizer>\n                                                <textarea\n                                                    class='form-control-plaintext px-2'\n                                                    type='text'\n                                                    placeholder={<Text id='story.write-body'>Hva tenker du på?..</Text>}\n                                                    onInput={linkState(this, 'story.body')}\n                                                    onKeyUp={mu.resizeTextarea}\n                                                    onFocus={mu.resizeTextarea}\n                                                    style='height: 2.3em;'\n                                                    value={story.body}\n                                                    ref={c => this.inputRef['newStoryBody'] = c}\n                                                />\n                                            </Localizer>\n                                            <div class='position-absolute' style='bottom: 8px; right: 10px; font-size: 1.2em;'>\n                                                <i class='fas fa-image pointerCursor'\n                                                    data-id={story.id}\n                                                    onClick={this.addImage}\n                                                />\n                                                <i class={`fas fa-${story.public === 1 ? 'globe-europe' : 'users'} pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeVisibility}\n                                                />\n                                                {isAdmin && <i class={`fas fa-cog pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeType}\n                                                />}\n                                            </div>\n                                        </div>\n                                        {hashTags && hashTags.length > 0 && <>\n                                            {hashTags.map(tag => <>\n                                                <span class='badge badge-secondary mr-2 my-1'>\n                                                    <a href={`/stories/tag/${tag}`} class='text-white'>#{tag}</a>\n                                                </span>\n                                            </>)}\n                                        </>}\n                                    </div>\n                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight pt-auto'>\n                                        <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} ml-1`} disabled={!sendButtonEnabled}\n                                            onClick={this.addStory}\n                                        ><i class='fas fa-paper-plane' /></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class='row'>\n                                {showTeamChange && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.team')}\n                                                    onChange={this.toggleTeamChange}\n                                                >\n                                                    <option value=''>-- <Text id='story.team-choose'>Velg team</Text> --</option>\n                                                    {util.isArray(user.teams) && user.teams.map((teamId) => {\n                                                        const team = userStore.findTeam(teamId, true);\n                                                        if (team && team.public) {\n                                                            return (<option value={team.id} selected={story.team == team.id ? 'selected' : ''}>{team.name}</option>);\n                                                        }\n                                                        return '';\n                                                    })}\n                                                    \n                                                    {!user.teams && <>\n                                                        <option value=''>No public teams</option>\n                                                    </>}\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeVisibility && <>\n                                    {isAdmin && <>\n                                        <div class='col-12 text-center mt-2'>\n                                            <div class='form-group'>\n                                                <small>\n                                                    <label for='pinned'>Pinned to top:</label><input id='pinned' type='checkbox' onInput={linkState(this, 'story.pinned')} value={1} checked={story.pinned ? 1 : 0} />\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </>}\n\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.public')}\n                                                    value={story.public}\n                                                    onChange={this.changeVisibility}\n                                                >\n                                                    <option value={0} selected={story.public == 0 ? 'selected' : ''}>👥 <Text id='story.visibility-followers'>Kun synlig for de som følger deg.</Text></option>\n                                                    <option value={1} selected={story.public == 1 ? 'selected' : ''}>🌍 <Text id='story.visibility-public'>Synlig for alle som bruker appen.</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeType && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.type')}\n                                                    value={story.type}\n                                                    onChange={this.changeType}\n                                                >\n                                                <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                                    <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                                    <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                                    <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showAddImage && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='container-fluid'>\n                                            <div class='row'>\n                                                {util.isArray(story.images) && story.images.map(img => (\n                                                    <div class='col-3 p-1'>\n                                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                        <button class='btn btn-sm btn-link'\n                                                            onClick={this.removeImage}\n                                                            data-name={img.name}\n                                                        ><i class='fas fa-trash' /> Del</button>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                        <Images object={story} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                                    </div>\n                                </>}\n\n                                {story.type > 1 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url-text'>URL text</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='urlText'\n                                                    onInput={linkState(this, 'story.urlText')}\n                                                    value={story.urlText}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url'>URL</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='url'\n                                                    onInput={linkState(this, 'story.url')}\n                                                    value={story.url}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n\n                                {story.type == 2 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.code'>Code</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='code'\n                                                    onInput={linkState(this, 'story.code')}\n                                                    value={story.code}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.region'>Region</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='region'\n                                                    onInput={linkState(this, 'story.region')}\n                                                    value={story.region}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.country'>Country</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='country'\n                                                    onInput={linkState(this, 'story.country')}\n                                                    value={story.country}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-4'>\n                                        <label><Text id='story.currency'>Currency</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='currency'\n                                                    onInput={linkState(this, 'story.currency')}\n                                                    value={story.currency}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-8'>\n                                        <label><Text id='story.price'>Price</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='price'\n                                                    onInput={linkState(this, 'story.price')}\n                                                    value={story.price}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport Story from './publicStory';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n\t\tconst { storyStore } = props.stores;\n        const { story } = props;\n\t\tawait storyStore.loadPublicFeed({ story });\n\t}\n\n\tcomponentDidMount() {\n        this.loadStoriesPublicFeed();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.story !== this.props.story) {\n            this.loadStoriesPublicFeed(nextProps);\n        }\n    }\n\n    render() {\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100'>\n\n                <div class='row pb-4 bg-light'>\n                    <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                        {!publicFeed || publicFeed.length === 0 && <>\n                            <div class='text-center text-muted mt-5'>\n                                <div class='display-1 text-center mb-5'>\n                                    <i class='fas fa-comment' />\n                                </div>\n                                <h3>No story found!</h3>\n                            </div>\n                        </>}\n                        {publicFeed && publicFeed.map((story) => <>\n                            <Story\n                                stores={this.props.stores}\n                                story={story}\n                                showAllComments={true}\n                            />\n                        </>)}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport StoryReplyComment from '../../components/story/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n    showOriginal: {},\n};\n\nconst MAX_COMMENTS = 1;\n\n@observer\nclass StoryComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            showAllComments: props.showAllComments,\n        };\n        this.inputRef = {};\n    }\n\n    addLikeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.closest('.commentContainer').dataset.id;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeComment } = this.state;\n        likeComment[commentId] = true;\n        this.setState({ likeComment });\n        setTimeout(() => {\n            const { likeComment } = this.state;\n            delete likeComment[commentId];\n            this.setState({ likeComment });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryComment({ id: story.id, commentId });\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', story, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n        const replyId = e.target.closest('.replyContainer').dataset.id;\n        const commentId = e.target.closest('.replyContainer').dataset.comment;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeReply } = this.state;\n        likeReply[replyId] = true;\n        this.setState({ likeReply });\n        setTimeout(() => {\n            const { likeReply } = this.state;\n            delete likeReply[replyId];\n            this.setState({ likeReply });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryCommentReply({ id: story.id, replyId, commentId });\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', story, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id, comment: commentEditText } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n\t\t\tshowEdit,\n            showMenu: {},\n            commentEditText,\n\t\t});\n\t}\n\n    toggleDeleteComment = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteComment = {} } = this.state;\n        showDeleteComment[id] = !showDeleteComment[id];\n\t\tthis.setState({\n\t\t\tshowDeleteComment,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    deleteComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentStory({ id: story.id, commentId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentReplyStory({ id: story.id, commentId, replyId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\n    }\n\n    saveComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentStory({ id: story.id, commentId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    saveCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentReplyStory({ id: story.id, commentId, replyId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await storyStore.translateCommentReply({ commentid, replyid, story, user });\n        } else {\n            translatedText[key] = await storyStore.translateComment({ commentid, story, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showMenu = {}, showEdit = {},\n            showDeleteComment = {}, commentEditText, likeComment, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { story, callback = () => {}, initCall = () => {}, compact = false } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (story.comments) {\n            totalComments = story.comments.length;\n            if (showAllComments) {\n                filteredComments = story.comments;\n            } else {\n                // filteredComments = story.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = story.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {story && util.isArray(filteredComments) && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                    const translation = storyStore.getCommentTranslations({\n                        story,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg position-relative'>\n\n                                        {currentUser.id === user.id && <>\n                                            <span class='float-right font-weight-lighter text-muted'>\n                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={comment.id} />\n                                            </span>\n                                        </>}\n                                        {showMenu[comment.id] && <>\n                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={comment.id} data-comment={comment.comment}><i class='fas fa-edit' /> Edit</button>\n                                                <hr />\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                            </div>\n                                        </>}\n\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                    {teams && teams.length > 0 && <>\n                                                        <span class='font-weight-lighter text-muted ml-1'>\n                                                            {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                - <a href={`/teams/public/${t.uuidv4}`}>{t.name}</a>\n                                                            </>)}\n                                                        </span>\n                                                    </>}\n                                                </h5>\n\n\n                                                {showEdit[comment.id] ? <>\n                                                    <div class='d-flex bd-highlight'>\n                                                        <div class='p-0 w-100 bd-highlight'>\n                                                            <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                            <div class='border rounded rounded-lg position-relative'>\n                                                                <Localizer>\n                                                                    <textarea\n                                                                        class='form-control-plaintext px-2'\n                                                                        type='text'\n                                                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                        onInput={linkState(this, 'commentEditText')}\n                                                                        onKeyUp={mu.resizeTextarea}\n                                                                        onFocus={mu.resizeTextarea}\n                                                                        style='height: 2.3em;'\n                                                                        value={commentEditText}\n                                                                    />\n                                                                </Localizer>\n                                                           </div>\n                                                        </div>\n                                                        <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                            <button type='button' class='btn btn-primary mb-2'\n                                                                onClick={this.saveComment}\n                                                                data-id={comment.id}\n                                                            ><i class='fas fa-paper-plane' /></button>\n                                                        </div>\n                                                    </div>\n                                                </> : <>\n                                                    <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </>}\n                                                {showDeleteComment[comment.id] && <div class='clearfix mt-3 mb-3'>\n                                                    <button class='btn btn-danger float-left' onClick={this.deleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                </div>}\n\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row position-relative'>\n                                                    <div\n                                                        class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 60vh;`}\n                                                        onDblclick={this.addLikeComment}\n                                                        data-id={comment.id}\n                                                    >\n                                                        <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                    {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                        <i class='fas fa-heart likeStory' />\n                                                    </span>}\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {util.isArray(images) && images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`commentContainer btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.addLikeComment}\n                                            data-id={comment.id}\n                                            disabled={hasLikedComment}\n                                        >\n                                            {hasLikedComment ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && util.isArray(filteredReplises) && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = mu.displayNameShort(user);\n                                    const displayName = mu.displayName(user);\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n                                    const { currentLocationGeocode = {} } = reply;\n\n                                    const replyTranslation = storyStore.getCommentReplyTranslations({\n                                        story,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div\n                                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg position-relative'>\n                                                    {currentUser.id === user.id && <>\n                                                            <span class='float-right font-weight-lighter text-muted'>\n                                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={reply.id} />\n                                                            </span>\n                                                        </>}\n                                                        {showMenu[reply.id] && <>\n                                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={reply.id} data-comment={reply.comment}><i class='fas fa-edit' /> Edit</button>\n                                                                <hr />\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                            </div>\n                                                        </>}\n\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                                {displayName}\n                                                                {teams && teams.length > 0 && <>\n                                                                    <span class='font-weight-lighter text-muted ml-2'>\n                                                                        {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                            - <a href={`/teams/public/${t.uuidv4}`} class='mr-2'> {t.name}</a>\n                                                                        </>)}\n                                                                    </span>\n                                                                </>}\n                                                            </h5>\n\n\n                                                            {showEdit[reply.id] ? <>\n                                                                <div class='d-flex bd-highlight'>\n                                                                    <div class='p-0 w-100 bd-highlight'>\n                                                                        <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                                        <div class='border rounded rounded-lg position-relative'>\n                                                                            <Localizer>\n                                                                                <textarea\n                                                                                    class='form-control-plaintext px-2'\n                                                                                    type='text'\n                                                                                    placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                                    onInput={linkState(this, 'commentEditText')}\n                                                                                    onKeyUp={mu.resizeTextarea}\n                                                                                    onFocus={mu.resizeTextarea}\n                                                                                    style='height: 2.3em;'\n                                                                                    value={commentEditText}\n                                                                                />\n                                                                            </Localizer>\n                                                                    </div>\n                                                                    </div>\n                                                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                                        <button type='button' class='btn btn-primary mb-2'\n                                                                            onClick={this.saveCommentReply}\n                                                                            data-commentid={comment.id}\n                                                                            data-id={reply.id}\n                                                                        ><i class='fas fa-paper-plane' /></button>\n                                                                    </div>\n                                                                </div>\n                                                            </> : <>\n                                                                <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                            </>}\n                                                            {showDeleteComment[reply.id] && <div class='clearfix mt-3 mb-3'>\n                                                                <button class='btn btn-danger float-left' onClick={this.deleteCommentReply} data-id={reply.id} data-commentid={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                            </div>}\n\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`replyContainer btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                            disabled={hasLikedReply}\n                                                        >\n                                                            {hasLikedReply ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                            {reply.updatedDate && <>\n                                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(reply.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                                            </>}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <StoryReplyComment stores={this.props.stores} story={story}\n                                    initCall={initCall}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                    key={`story-commentreply-${comment.id}`}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default StoryComments;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__1mJGJ\",\"hoverElement\":\"hoverElement__axh3O\",\"hoverelementhide\":\"hoverelementhide__1k_qH\",\"progress-bar-vertical\":\"progress-bar-vertical__1B2sC\",\"progress-bar\":\"progress-bar__pnsVj\",\"dragged\":\"dragged__QXO46\",\"over\":\"over__1re3x\",\"list\":\"list__q_emZ\"};","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport ImageSlider from '../imageSlider';\nimport StoryComments from './comments';\nimport StoryAddComment from './commentAdd';\nimport Story from './publicStory';\nimport ImageScroller from '../imageScroller';\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport PublicTeam from '../team/public';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n\tshowTeamSetting: {},\n    viewImageIdx: {},\n    likeStory: {},\n};\n\n@observer\nclass StoryEditInline extends Component {\n    constructor(props) {\n        super(props);\n        this.updateTimer = {};\n    }\n\n    saveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyBody: body } = this.state;\n        const { storyStore } = this.props.stores;\n        const { callback = () => true } = this.props;\n        // saveField(id, field, value, updateMemory) {\n        await storyStore.saveField(parseInt(id, 10), 'body', body, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'body', body);\n        this.setState({\n            storyBody: '',\n            storyType: 0,\n\t\t});\n        callback();\n    }\n\n    saveStoryField = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const { value, name } = e.target;\n\n        clearTimeout(this.updateTimer[name]);\n        this.updateTimer[name] = setTimeout(async () => {\n            this.doUpdateField(id, name, value);\n        }, 1000);\n    }\n\n    async doUpdateField(id, name, value) {\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), name, value, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), name, value);\n    }\n\n    render() {\n        const { storyBody, storyType } = this.state;\n        const { userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\n        const { story } = this.props;\n        return (<>\n            <div class='d-flex bd-highlight'>\n                <div class='p-0 w-100 bd-highlight'>\n                    <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                    <div class='border rounded rounded-lg position-relative'>\n                        <Localizer>\n                            <textarea\n                                class='form-control-plaintext px-2'\n                                type='text'\n                                placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                onInput={linkState(this, 'storyBody')}\n                                // onKeyUp={mu.resizeTextarea}\n                                onFocus={mu.resizeTextarea}\n                                style='height: 2.3em;'\n                                value={storyBody || story.body}\n                            />\n                        </Localizer>\n                    </div>\n\n                    <div class='position-relative mt-3'>\n                        {isAdmin && <>\n                            <div class='col-12 text-center mt-2'>\n                                <div class='form-group'>\n                                    <small>\n                                        <label>Pinned to top:</label>\n                                        <input\n                                            type='checkbox'\n                                            id={story.id}\n                                            name='pinned'\n                                            onInput={this.saveStoryField}\n                                            value={story.pinned ? 0 : 1}\n                                            checked={story.pinned ? 1 : 0}\n                                        />\n                                    </small>\n                                </div>\n                            </div>\n                        </>}\n\n                        {isAdmin && <>\n                            <label><Text id='story.type'>Type</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <select\n                                        class='custom-select custom-select-sm'\n                                        id={story.id}\n                                        name='type'\n                                        onInput={this.saveStoryField}\n                                        value={storyType || story.type}\n                                    >\n                                    <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                        <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                        <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                        <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                    </select>\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type >= 2 && <>\n                            <label><Text id='story.url-text'>URL text</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='urlText'\n                                        onInput={this.saveStoryField}\n                                        value={story.urlText}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.url'>URL</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='url'\n                                        onInput={this.saveStoryField}\n                                        value={story.url}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type === 2 && <>\n                            <label><Text id='story.code'>Code</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='code'\n                                        onInput={this.saveStoryField}\n                                        value={story.code}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.country'>Country</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='country'\n                                        onInput={this.saveStoryField}\n                                        value={story.country}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.region'>Region</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='region'\n                                        onInput={this.saveStoryField}\n                                        value={story.region}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.currency'>Currency</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='currency'\n                                        onInput={this.saveStoryField}\n                                        value={story.currency}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.price'>Price</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='price'\n                                        onInput={this.saveStoryField}\n                                        value={story.price}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n                <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                    <button type='button' class='btn btn-primary mb-2'\n                        onClick={this.saveStory}\n                        data-id={story.id}\n                    ><i class='fas fa-paper-plane' /></button>\n                </div>\n            </div>\n        </>)\n    }\n}\n\n@observer\nclass StoryTypeRegular extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedText = await storyStore.translate({ story, user });\n        this.setState({ showOriginal: 0, translatedText });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal, translatedText } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        }) || translatedText;\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='row mt-2'>\n                <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n            </div>\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeAd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    {/* <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}> */}\n                    <div id='storyDetail' data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price > 0) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                            {story.code && <>\n                                <div class='col text-left' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        <span class='font-weight-lighter'><Text id='story.ad-campaign-code'>Kampanjekode</Text>:</span> {story.code}\n                                    </nobr>\n                                </div>\n                            </>}\n                            {story.price > 0 && <>\n                                <div class='col text-right' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        {story.currencty && <span class='font-weight-lighter'>{story.currency}</span>} {util.format(story.price, 2)}\n                                    </nobr>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeArticle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n\n            {/* Flere artikler fra:... */}\n        </>);\n    }\n}\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n        // this.ref = createRef();\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeStory = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const storyId = id;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeStory } = this.state;\n        likeStory[storyId] = true;\n        const likeIds = Object.keys(likeStory);\n        this.setState({ likeStory, likeIds });\n        setTimeout(() => {\n            const { likeStory } = this.state;\n            delete likeStory[storyId];\n            const likeIds = Object.keys(likeStory);\n            this.setState({ likeStory, likeIds });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStory({ id: storyId });\n        if (response && response.status === 200) {\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[storyId]) {\n            delete showAddComment[storyId];\n        } else {\n            showAddComment[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[storyId]) {\n\t\t\t\tthis.inputRef[storyId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    closeAllAddComments = () => {\n        this.setState({\n\t\t\tshowAddComment: {},\n\t\t});\n    }\n\n\ttoggleShowTeamSetting = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showTeamSetting } = this.state;\n        if (showTeamSetting[storyId]) {\n            delete showTeamSetting[storyId];\n        } else {\n            showTeamSetting[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowTeamSetting,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n        const { hashtag } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed({ hashtag });\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n\t\t\tshowEdit,\n            showMenu: {},\n\t\t});\n\t}\n\n    toggleDeleteStory = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteStory = {} } = this.state;\n        showDeleteStory[id] = !showDeleteStory[id];\n\t\tthis.setState({\n\t\t\tshowDeleteStory,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    reportStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.reportStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    adminRemoveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.adminHideStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), 'offline', 1, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'offline', 1);\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    doneEdit = () => {\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    // IntersectionObserver\n    // componentDidMount() {\n    //     const { addIntersectionObserver } = this.props;\n    //     if (addIntersectionObserver) {\n    //         addIntersectionObserver(this.ref);\n    //     }\n    // }\n\n    // componentWillUnmount() {\n    //     const { removeIntersectionObserver } = this.props;\n    //     if (removeIntersectionObserver) {\n    //         removeIntersectionObserver(this.ref);\n    //     }\n    // }\n    // /IntersectionObserver\n\n    render() {\n        const { showAddComment, showDate, viewImageIdx, showMenu = {}, showEdit = {}, showDeleteStory = {}, showTeamSetting, likeStory, likeIds } = this.state;\n        const { story, showAllComments, sessionid, onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n        const { userStore, storyStore, appState } = this.props.stores;\n        const { user: currentUser = {}, isAdmin } = userStore;\n        const { darkmode, hasShareApi } = appState;\n\n        const team = storyStore.findPublicTeam(story.team) || {};\n        const user = storyStore.findPublicUser(story.user) || {};\n        const image = mu.getImage({ user, team, priority: 'user', object: story });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === currentUser.id) : false;\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n            username = mu.displayName(user);\n            if (user.settings && currentUser.uuidv4 !== user.uuidv4) {\n                userLink = user.settings.hideProfile ? null : `/inbox/${user.uuidv4}`;\n            }\n        } else if (user && user.id) {\n            shortname = mu.displayNameShort(user);\n            name = mu.displayName(user);\n        }\n        const { likes, comments, reports = [] } = story;\n        const hasLikedStory = story.likes && story.likes.findIndex(e => e.user === currentUser.id) > -1;\n        const totalFollowers = team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = story;\n        const views = mu.getViews(story.statistics);\n        const adminData = mu.getAdminData(story.statistics);\n\n        return (<>\n            {/* <div\n                class='row pt-3 pb-3 bg-light'\n                style={`${story.offline ? 'opacity: 0.4;' : ''}`}\n                ref={c => this.ref = c}\n                data-id={story.id}\n                data-type={'story'}\n                data-user={story.user}\n                data-team={story.team}\n                data-title={story.title}\n                data-sessionid={sessionid}\n            >\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}> */}\n                    {(isAdmin || (currentUser.id === user.id)) && <>\n                        <span class='float-right font-weight-lighter text-muted'>\n                            <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={story.id} />\n                        </span>\n                    </>}\n                    {showMenu[story.id] && <>\n                        <div class='position-absolute bg-light p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                            {currentUser.id === user.id ? <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={story.id}><i class='fas fa-edit' /> Edit</button>\n                                <hr />\n                                <button class='btn btn-link btn-block text-left text-danger' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                            </> : <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.reportStory} data-id={story.id}><i class='fas fa-flag' /> Report</button>\n                                {isAdmin && <>\n                                    <hr />\n                                    <button class='btn btn-link btn-block text-left text-danger' onClick={this.adminRemoveStory} data-id={story.id}>\n                                        <i class='fas fa-eraser' /> Remove from feed\n                                    </button>\n                                </>}\n                            </>}\n                        </div>\n                    </>}\n\n                    <div class='d-flex position-relative'>\n                        <div\n                            class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                            style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                        >\n                            {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                        </div>\n                        <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                            <h5 class='mb-1 position-relative' style={`line-height: 1.0em; ${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {team.public ? <>\n                                    <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => onTeamClick(e, team.uuidv4)} class='stretched-link'>{name}</a>\n                                    {/* <a href={`/stories/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a> */}\n                                </> : <>\n                                    {name}\n                                </>}\n\n                                {isYourTeam && !team.public && <button type='button' class='btn btn-sm btn-link text-muted'\n                                    data-id={story.id}\n                                    onClick={this.toggleShowTeamSetting}\n                                >\n                                    <i class='fas fa-exclamation-triangle' />\n                                </button>}\n\n                            </h5>\n                            <div class='mb-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {story.pinned && <>\n                                    <small class='text-muted mr-2'>\n                                        <i class='fas fa-thumbtack' />\n                                    </small>\n                                </>}\n                                {story.type === 2 ? <>\n                                    <small class='text-muted'><Text id='story.sponsored'>Sponsored</Text> -</small>\n                                </> : <>\n                                    {story.date && <small class='text-muted' onClick={this.toggleDate}>\n                                        {showDate ? util.formatDate(story.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(story.date, new Date(), { locale: 'no-NB' })}\n                                    </small>}\n                                </>}\n                                {story.public === 1 ? <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-globe-europe' />\n                                    </small>\n                                </> : <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                    </small>\n                                </>}\n                                {username && <>\n                                    <small class='ml-2 text-muted'>\n                                        {userLink ? <>\n                                            <i class='fas fa-user' /> <a href={userLink}>{username}</a>\n                                        </> : <>\n                                            <i class='fas fa-user' /> {username}\n                                        </>}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formattedCounty}\n                                    </small>\n                                </>}\n                            </div>\n                            {isAdmin && <div\n                                class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                                style='overflow: auto;'\n                            >\n                                <small class='text-muted mr-2'>Adm:</small>\n                                {reports && reports.length > 0 && <>\n                                    <small class='text-danger mr-2'>\n                                        <i class='fas fa-flag' /> {reports.length}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                                    </small>\n                                </>}\n                                {user.deviceInfo && <>\n                                    <span class='badge badge-secondary ml-2 float-right font-weight-light'>\n                                        {['platform', 'manufacturer', 'model'].map(e => <>\n                                            <span class='ml-2 text-white'>\n                                                {user.deviceInfo[e]}\n                                            </span>\n                                        </>)}\n                                    </span>\n                                </>}\n\n                                {adminData && <>\n                                    <small class='ml-2 text-muted'>\n                                        V: {adminData.count}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                                    </small>\n                                    {story.statisticsCurrent && story.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                        S: {util.format(story.statisticsCurrent.totalInteractions, 0)}\n                                    </small>}\n                                    {story.shadowTags && story.shadowTags.map(tag => <>\n                                        <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                                    </>)}\n                                </>}\n                                {/* {story.tags && <>\n                                    {util.isArray(story.tags) && story.tags.map(tag => <>\n                                        <small class='ml-2 text-muted'>\n                                            {tag}\n                                        </small>\n                                    </>)}\n                                </>} */}\n                            </div>}\n                        </div>\n                    </div>\n\n                    <div class='row mt-2'>\n                        <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                            {showEdit[story.id] && <>\n                                <StoryEditInline\n                                    stores={this.props.stores}\n                                    story={story}\n                                    key={`story-edit-${story.id}`}\n                                    callback={this.doneEdit}\n                                />\n                            </>}\n                            {showDeleteStory[story.id] && <div class='clearfix mt-3 mb-3'>\n                                <button class='btn btn-danger float-left' onClick={this.deleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-times-circle' /> Cancel</button>\n                            </div>}\n                        </div>\n                    </div>\n\n                    {(!story.type || story.type == 1) && <StoryTypeRegular stores={this.props.stores} story={story} key={`story-regular-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                    {story.type == 2 && <StoryTypeAd stores={this.props.stores} story={story} key={`story-ad-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                    {story.type == 3 && <StoryTypeArticle stores={this.props.stores} story={story} key={`story-article-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n\n                    <div class='mt-2'>\n                        <LikesAndComments\n                            stores={this.props.stores}\n                            likes={likes}\n                            comments={comments}\n                            type='story'\n                            onTeamClick={onTeamClick}\n                            onUserClick={onUserClick}\n                        />\n                    </div>\n\n                    {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <div class='clearfix mb-2'>\n                        <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} />\n                    </div>}\n\n                    {showTeamSetting[story.id] && <>\n                        <small>\n                            <div class='alert alert-info' role='alert'>\n                                <span class='display-4 float-left'>\n                                    <i class='fas fa-exclamation-triangle mr-3 mb-3' />\n                                </span>\n                                <p>\n                                    <Text id='story.alert-text-1'>Your team is not visible and it's not possible to request friendship with your team.</Text>\n                                </p>\n                                <p>\n                                    <Text id='story.alert-text-2'>If you want to make your team visible so other can request to follow your team, you can find the setting here:</Text>\n                                </p>\n                                <p>\n                                    <a href={`/teams/edit/${team.id}`}><Text id='story.alert-text-3'>Edit team</Text></a>\n                                </p>\n                            </div>\n                        </small>\n                    </>}\n\n                    <div>\n                        <div class='row'>\n                            <div class='col text-center'>\n                                <button\n                                    type='button'\n                                    class={`storyImage btn btn-sm btn-outline-${hasLikedStory ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedStory ? 'text-primary' : ''} text-overflow`}\n                                    data-id={story.id}\n                                    onClick={this.likeStory}\n                                >\n                                    <i class={`${hasLikedStory ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> {hasLikedStory ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                </button>\n                            </div>\n                            <div class='col text-center'>\n                                <button\n                                    type='button'\n                                    class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                    data-id={story.id}\n                                    onClick={this.toggleAddComment}\n                                >\n                                    <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                </button>\n                            </div>\n                            {hasShareApi ? <>\n                                <div class='col text-center'>\n                                    <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                        onClick={this.shareLink}\n                                        data-url={`https://themusher.app/share/story/${story.uuidv4}`}\n                                        data-title={`title: ${story.title}`}\n                                    >\n                                        <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                    </button>\n                                </div>\n                            </> : <>\n                                <div class='col text-center'>\n                                    <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                        href={`https://themusher.app/share/story/${story.uuidv4}`}\n                                        target='_blank'\n                                        rel='noreferrer'\n                                        data-native\n                                    >\n                                        <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                    </a>\n                                </div>\n                            </>}\n\n                        </div>\n                    </div>\n\n                    {views > 0 && <>\n                        <div class='mt-2'>\n                            <Views\n                                stores={this.props.stores}\n                                views={views}\n                                object={story}\n                                type='story'\n                                isTeamAdmin={isTeamAdmin}\n                                isAdmin={isAdmin}\n                                onTeamClick={onTeamClick}\n                                onUserClick={onUserClick}\n                            />\n                        </div>\n                    </>}\n\n                    <div class='mt-2'>\n                        <StoryComments\n                            stores={this.props.stores}\n                            story={story}\n                            col='10'\n                            offset='2'\n                            compact={false}\n                            showAllComments={showAllComments}\n                            initCall={this.closeAllAddComments}\n                        />\n                        {showAddComment[story.id] && <StoryAddComment\n                            stores={this.props.stores}\n                            story={story}\n                            inputRef={c => this.inputRef[story.id] = c}\n                            inputRefObject={this.inputRef}\n                            col='10'\n                            offset='2'\n                            key={`story-comment-${story.id}`}\n                        />}\n                    </div>\n\n                {/* </div> */}\n\n            {/* </div> */}\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass Temperature extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(celciusToFahrenheit(value), 0)}°F\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)}°C\n            </nobr>\n        </>);\n    }\n}\n\nexport default Temperature;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\trequestSent: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadTeams() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { teamStore } = this.props.stores;\n\t\tawait teamStore.loadPublic({ query: { notfollowing: 1, array: 1 }, limit: 15 });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\trequestFollowTeam = (e) => {\n        const { teamStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const { team } = e.target.closest('button').dataset;\n        teamStore.followRequest(parseInt(team, 10), user);\n\t\tconst { requestSent } = this.state;\n\t\trequestSent[team] = true;\n        this.setState({ requestSent });\n    }\n\n    getButton = (team) => {\n        const { requestSent } = this.state;\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n        const isYourTeam = team.members && team.members.findIndex(e => e.id === user.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(user.id) > -1;\n        const isBlocked = team.blockedFollowers && team.blockedFollowers.indexOf(user.id) > -1;\n        const hasRequestedFollow = requestSent[team.id] || team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n        if (isYourTeam) {\n            return (\n                <i class='fas fa-home' />\n            );\n        }\n        if (isFollowing) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    onClick={this.unFollowTeam}\n                    disabled='true'\n                    data-team={team.id}\n                >\n                    <i class='fas fa-link mr-2' />\n                    <Text id='teams.connect.is-following'>Følger</Text>\n                </button>\n            );\n        }\n        if (isBlocked) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hand-paper mr-2' />\n                    <Text id='teams.connect.is-blocked'>Blokkert</Text>\n                </button>\n            );\n        }\n        if (hasRequestedFollow) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hourglass-half mr-2' />\n                    <Text id='teams.connect.has-requested'>Venter på godkjenning</Text>\n                </button>\n            );\n        }\n        return (\n            <button\n                class={`btn btn-sm btn-block btn-outline-success float-right`}\n                onClick={this.requestFollowTeam}\n                data-team={team.id}\n            >\n                <i class='far fa-hand-point-right mr-2' />\n                <Text id='teams.connect.follow'>Følg</Text>\n            </button>\n        );\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { publicTeamsToFollow } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!publicTeamsToFollow || publicTeamsToFollow.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n\t\t\t<div class='row pb-4 bg-light'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\t\t\t\t\t<div class='container-fluid'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<h5><Text id='teams.connect.teams-to-follow'>Team du kan følge</Text>:</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n\t\t\t\t\t\t\t\t{util.isArray(publicTeamsToFollow) && publicTeamsToFollow.map((team) => {\n\t\t\t\t\t\t\t\t\tconst image = team.image && team.image.s3SmallLink ? team.image : null;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div class='mr-2' style='width: 110px;'>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclass={`text-center border rounded-lg`}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={image ? `background-image: url(\"${image.s3SmallLink}\"); background-size: cover; width: 110px; height: 100px;` : 'width: 110px; height: 100px;'}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{!image && <i class='fas fa-users text-muted mt-3' style='font-size: 40px;' />}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{team.name}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{team.place ? `${team.place}, ` : ''} {team.country} &nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.dogs && <span class=''><i class='fas fa-dog' /> {team.dogs.length}</span>} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.followers && <span class='ml-2'><i class='fas fa-user' /> {team.followers.length}</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.getButton(team)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@withText(() => ({\n    subject: <Text id='ad.subject'>Annonseforespørsel</Text>,\n    body: <Text id='ad.body'>Hei, Jeg ønsker å vite mer om annonsering i appen The Musher.</Text>,\n}))\n\n@observer\nclass Ad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n        this.apiServer = util.getApiServer();\n    }\n\n\tasync loadAd(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adStore, workoutStore, userStore, appState } = this.props.stores;\n        const { section } = this.props;\n        const { path: url = '' } = appState;\n        const { currentTeam } = workoutStore;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        let team = {};\n        let ambitions;\n        let type;\n        let postalcode;\n        let place;\n        let country;\n        if (currentTeam) {\n            team = userStore.findTeam(currentTeam, true);\n            if (team && team.id) {\n                ambitions = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n                type = userStore.findTeamType({ type: team.type, language });\n                postalcode = team.postalcode;\n                place = team.place;\n                country = team.country;\n            }\n        }\n        // console.log({ currentTeam, team, ambitions,  type, postalcode, place, country });\n        // const { url = '' } = this.props;\n        const page = url.replace(/\\d+$/, 'detail');\n\n        // props: { \"url\": \"/\" }\n        // props: { \"url\": \"/workouts/\" }\n        // props: { \"url\": \"/workouts/4708\" }\n        // props: { \"url\": \"/dogs\" }\n        // props: { \"url\": \"/dogs/10\" }\n\n\t\tawait adStore.load({ query: { page, section }});\n        adStore.setTime();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    logClick = async () => {\n        const { adStore, userStore } = this.props.stores;\n        const { ads = [] } = adStore;\n        let id = ads.length > 0 ? ads[0].id : null;\n        const { user = {} } = userStore;\n        await adStore.logClick({ id, user: user.id });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAd();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.path !== this.props.path) {\n            this.loadAd(nextProps);\n        }\n    }\n\n    render() {\n        const { adStore, userStore, appState } = this.props.stores;\n        const { subject, body, section } = this.props;\n        const { path } = appState;\n        const { user = {} } = userStore;\n        const { ads = [], time, adViews, adClicks } = adStore;\n        if (!user || !user.id || !ads || ads.length === 0) {\n            if (path.match(/\\/(home)/i)) {\n                return <>\n                    <div class='w-100'>\n                        <div class='row'>\n                            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                                <div class='border rounded-lg p-4 my-3'>\n                                    <span class='float-right display-4 text-warning'>\n                                        <i class='far fa-smile-wink' />\n                                    </span>\n                                    <h5><Text id='ad.heading'>Vil du annonsere her?</Text></h5>\n                                    <div><Text id='ad.teaser'>Det er super enkelt :)</Text></div>\n                                    <Localizer>\n                                        <a href={`mailto:post@themusher.no?subject=${subject}: ${path}: ${section}&body=${body}`} target='_blank' rel='noreferrer'>\n                                            <i class='fas fa-paper-plane' /> <Text id='ad.linktext'>Ta kontakt med The Musher</Text>\n                                        </a>\n                                    </Localizer>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>;\n            }\n            return <></>;\n        }\n        const ad = ads[0];\n        return (\n            <>\n                <div class='w-100'>\n                    <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                            <div>\n                                <small><small class='text-muted'>\n                                    <Text id='ad.ad'>Annonse</Text>:\n                                    <img src={`${this.apiServer}/api/ads/${ad.id}/view?user=${user.id}&time=${time}`} style='width: 1; height: 1; opacity: 0.1;' />\n                                </small></small>\n                            </div>\n                            {ad.target ? <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    target={ad.target || '_blank'}\n                                    rel='noopener noreferrer'\n                                    onClick={this.logClick}\n                                    native\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>                            \n                            </> : <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    onClick={this.logClick}\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>\n                            </>}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Ad;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Story from './publicStory';\n\nimport TeamConnectBoxes from '../team/connect-boxes';\nimport TeamConnectConfirm from '../team/connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from '../team/fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\n\nconst initialState = {\n    loading: false,\n    limit: 10,\n    offset: 0,\n    idxConfirm: 0,\n    idxSuggestion: 1,\n    idxAd: 5,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n\t\tthis.ref = {};\n    }\n\n    async loadStoriesPublicFeed({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n        let sort;\n        // if (path.match(/\\/home-wall/)) {\n        //     sort = 'statistics.ranking';\n        // }\n\t\tawait storyStore.loadPublicFeed({ hashtag, hashtags, teamid, limit, offset, sort });\n\n        if (!offset) {\n            this.insertTopRanked();\n            // this.insertAds();\n            this.insertTeamConfirm();\n            // this.insertTeamSuggestions();\n        }\n\t}\n\n    reloadStories = async () => {\n        const { appState } = this.props.stores;\n        let { limit, offset } = this.state;\n        offset = 0;\n        this.setState({ offset });\n        await this.loadStoriesPublicFeed({ props: this.props, limit, offset })\n        appState.appContainerScrollTop();\n    }\n\n    async checkForNewStories({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.checkForNewStories({ hashtag, hashtags, teamid });\n    }\n\n    setCheckForNewStories = (props = this.props) => {\n        this.checkForNewStoriesTimer = setInterval(() => this.checkForNewStories({ props }), 60 * 1000);\n    }\n\n    clearCheckForNewStories = () => {\n        clearInterval(this.checkForNewStoriesTimer);\n    }\n\n    insertTopRanked = () => {\n        const { storyStore } = this.props.stores;\n        const { publicFeed, topRankedStories } = storyStore;\n        const topRankedRandomized = util.shuffleArray(topRankedStories);\n        const feed = [...publicFeed];\n\n        const totalInserts = 3;\n        const pinToTopDiff = 86400;\n        let startPosition = 0;\n        const now = new Date();\n        feed.forEach((e, idx) => {\n            const date = util.parseInputDate(e.date);\n            const deltaSec = Math.floor((now.getTime() - date.getTime()) / 1000);\n            if (deltaSec < pinToTopDiff) {\n                startPosition = idx + 1;\n            }\n        });\n        const endPosition = feed.length;\n\n        if (endPosition > startPosition + totalInserts) {\n            for (let i = 0, l = totalInserts; i < l; i += 1) {\n                const randomPlace = mu.randomInt(startPosition, endPosition);\n                if (util.isObject(topRankedRandomized[i])) {\n                    feed.splice(randomPlace, 0, topRankedRandomized[i]);\n                }\n            }\n            storyStore.localUpdateField('publicFeed', feed);\n        }\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    setLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadStoriesPublicFeed({ limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {});\n    }\n\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { storyStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => storyStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentDidMount() {\n        const { limit } = this.state;\n        this.loadStoriesPublicFeed({ limit, offset: 0 });\n        this.setLoadMore();\n        this.setCheckForNewStories()\n\t}\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { storyStore } = this.props.stores;\n        storyStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        storyStore.cleanupMemory();\n        this.clearCheckForNewStories();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.hashtag !== this.props.hashtag || nextProps.path !== this.props.path) {\n            const { limit } = this.state;\n            this.loadStoriesPublicFeed({ props: nextProps, limit, offset: 0 });\n        }\n    }\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        return (<>\n            <Story\n                stores={this.props.stores}\n                story={obj}\n                hashtag={hashtag}\n                key={`story-detail-${obj.id}`}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { loading, handleIntersection, sessionid, showTeam } = this.state;\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed, publicTags, hasNewStories } = storyStore;\n        const { darkmode } = appState;\n\n        return (<>\n            {/* <div class='row bg-light pt-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative`}>\n                    <div class='bg-light d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                        {util.isArray(publicTags) && publicTags.length > 0 && publicTags.slice(0, 20).map((tag) => {\n                            const tagLinkReady = tag.tag.replace(/^#/, '');\n                            return (<>\n                                <span class='badge badge-pill badge-secondary mr-2 mb-1'>\n                                    <a href={`/stories/tag/${tagLinkReady}`} class='text-white'>\n                                        {tag.tag}\n                                    </a>\n                                </span>\n                            </>);\n                        })}\n                    </div>\n                </div>\n            </div> */}\n\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} />\n            </Overlay>}\n\n            <div class='w-100'>\n                {hasNewStories && <>\n                    <div\n                        class={`col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 d-flex justify-content-center fixed-top`}\n                        style={`margin-top: ${MARGIN_TOP};`}\n                    >\n                        <button\n                            class='btn btn-sm btn-primary rounded-pill'\n                            onClick={this.reloadStories}\n                        >\n                            New stories\n                        </button>\n                    </div>\n                </>}\n                <FastList\n                    data={publicFeed}\n                    wrapperClassNames={'row pb-4'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n                {loading && <div class='d-flex justify-content-center'>\n                    <div class='spinner-border text-primary' role='status'>\n                        <span class='sr-only'>Loading...</span>\n                    </div>\n                </div>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\tconfirmed: {},\n\tdeleted: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeams() {\n        const { teamStore } = this.props.stores;\n        await teamStore.load({ query: {}, addData: ['followRequests'] });\n    }\n\n    confirmRequest = (e) => {\n        const { team, user, follow } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.confirmFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { confirmed } = this.state;\n\t\tconfirmed[`${team}-${user}`] = true;\n        this.setState({ confirmed });\n\n        if (follow) {\n            teamStore.followRequestUser(user);\n        }\n    }\n\n    deleteRequest = (e) => {\n        const { team, user } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.deleteFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { deleted } = this.state;\n\t\tdeleted[`${team}-${user}`] = true;\n        this.setState({ deleted });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n        const { deleted = {}, confirmed = {} } = this.state;\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { teams, hasFollowRequests, followRequests = [] } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!hasFollowRequests) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n            <div class='row pb-4'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            <div class='col-12'>\n                                <h5><Text id='teams.connect.teams-follow-requests'>Forespørsel om å følge</Text>:</h5>\n                            </div>\n                        </div>\n\t\t\t\t\t\t<div class='row'>\n                            <div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                                {util.isArray(teams) && teams.map((team) => <>\n                                    {team && util.isArray(team.followRequests) && team.followRequests.map((reqUser) => {\n                                        const image = reqUser.image && reqUser.image.s3SmallLink ? reqUser.image : null;\n                                        const isDeleted = deleted[`${team.id}-${reqUser.id}`];\n                                        const isConfirmed = confirmed[`${team.id}-${reqUser.id}`];\n                                        const publicTeam = followRequests.find(e => e.user.id === reqUser.id);\n                                        return (\n                                            <div class='mr-2' style='width: 150px;'>\n                                                <div class={`text-center border rounded-circle imageRounded mx-auto`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                                    {!image && <div class='text-muted font-weight-lighter' style='font-size: 40px; padding-top: 5px;'>{mu.displayNameShort(reqUser)}</div>}\n                                                </div>\n                                                <small>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(reqUser)}</strong><br />\n                                                        {publicTeam && publicTeam.public > 0 ? <>\n                                                            <a href={`/teams/public/${publicTeam.uuidv4}`}>{publicTeam.name}</a>\n                                                        </> : <>\n                                                            {publicTeam ? <>{publicTeam.name}</> : ''}<br />\n                                                            <span class='text-muted'>(<Text id='teams.not-public'>Not public</Text>)</span>\n                                                        </>}\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <Text id='teams.connect.wants-to-follow'>wants to follow your team:</Text>\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(team)}</strong>\n                                                    </div>\n                                                </small>\n                                                {(isConfirmed || isDeleted) ? <>\n                                                    <div class='text-center'>\n                                                        {isConfirmed ? <div class='text-success'>\n                                                            <Text id='teams.connect.confirmed'>Confirmed</Text> <i class='fas fa-check' />\n                                                        </div> : <div class='text-danger'>\n                                                            <Text id='teams.connect.deleted'>Deleted</Text> <i class='fas fa-trash-alt' />\n                                                        </div>}\n                                                    </div>\n                                                </> : <>                                    \n                                                    <div>\n                                                        <button class='btn btn-sm btn-block btn-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id}>\n                                                            <Text id='teams.connect.confirm'>Confirm</Text>\n                                                        </button>\n                                                        {publicTeam && publicTeam.public > 0 && <button class='btn btn-sm btn-block btn-outline-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id} data-follow={true}>\n                                                            <Text id='teams.connect.confirm-and-follow'>Confirm & follow back</Text>\n                                                        </button>}\n                                                        <small class='mt-3'>\n                                                            <button class='btn btn-sm btn-block btn-link text-overflow' onClick={this.deleteRequest} data-team={team.id} data-user={reqUser.id}>\n                                                                <Text id='teams.connect.delete'>Del</Text>\n                                                            </button>\n                                                        </small>\n                                                    </div>\n                                                </>}\n                                            </div>\n                                        );\n                                    })}\n                                </>)}\n                            </div>\n                        </div>\n                        <details class='mt-3'>\n                            <summary><Text id='teams.connect.how-summary'>How does this work?</Text></summary>\n                            <p>\n                                <Text id='teams.connect.how-text'>What can followers see when I grant them access to follow? The answer is very little. They can see main details of the workouts you share and name of the dogs. That's all. Try to follow a team and check out the workout tab.</Text>\n                            </p>\n                        </details>\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleViews = () => {\n        const { showViewList } = this.state;\n        const { isTeamAdmin, isAdmin } = this.props;\n        if (isTeamAdmin || isAdmin) {\n            this.setState({\n                showViewList: !showViewList,\n            });\n        }\n    }\n\n    render() {\n        const { showViewList } = this.state;\n        const { storyStore, teamStore, workoutStore } = this.props.stores;\n        const { views, object, isTeamAdmin, isAdmin,\n            type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\n        const viewUsersArrays = [];\n        Object.entries(object.statistics).forEach(([year, yearObject]) => {\n            // console.log({ year, yearObject });\n            Object.entries(yearObject).forEach(([week, weekObject]) => {\n                // console.log({ week, weekObject });\n                if (weekObject.viewUsers) {\n                    viewUsersArrays.push(weekObject.viewUsers);\n                }\n            });\n        });\n        const viewUsers = viewUsersArrays.flat().slice(0, 50);\n\n\t\treturn (<>\n            <div class='d-flex justify-content-between mb-2'>\n                <small class='ml-2 text-muted'\n                    onClick={this.toggleViews}\n                >\n                    {views} <Text id='story.views'>views</Text>\n                </small>\n            </div>\n            {showViewList && <div class='mt-3 mb-3'>\n                {viewUsers && viewUsers.map((userId) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(userId);\n                        teams = storyStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(userId);\n                        teams = teamStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(userId);\n                        teams = workoutStore.findPublicTeamByMembers(userId);\n                    }\n                    if (!user) {\n                        return '';\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-light mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                {name} <span class='font-weight-lighter'>- {publicTeam.name}</span>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                {name}\n                            </div>\n                        </>}\n                    </div>);\n                })}\n                {views > viewUsers.length && <>\n                    <small class='text-muted'>\n                        <Text id='story.limited-to'>Limited to max 50 users.</Text>\n                    </small>\n                </>}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass YrWeather extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\t\tthis.inputRef = {};\n    }\n\n    toggleyrWeather = () => {\n        const { showWeather } = this.state;\n        this.setState({\n            showWeather: !showWeather,\n        });\n    }\n\n    async loadWeather() {\n\t\tconst { userStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        const { user } = userStore;\n\t\tif (user.currentLocationInfo && user.currentLocationInfo.coords) {\n\t\t\tconst { latitude: lat, longitude: lon, altitude } = user.currentLocationInfo.coords;\n\t\t\tuserStore.getWeatherUser({ lat, lon, altitude });\n            userStore.formatWeather();\n\t\t}\n    }\n\n\tcomponentDidMount() {\n        this.loadWeather();\n\t}\n\n    render() {\n        const { showWeather } = this.state;\n        const { place } = this.props;\n        const { userStore } = this.props.stores;\n        const { yrWeather, yrWeatherKeys, yrWeatherFormatted, user } = userStore;\n        const { currentLocationGeocode } = user;\n\n        if (!yrWeather || !place) {\n            return '';\n        }\n        if (showWeather) {\n            return (\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mb-4'>\n                    {currentLocationGeocode && currentLocationGeocode.formatted_address && <h5>{currentLocationGeocode.formatted_address}</h5>}\n                    <div class='table-responsive'\n                        onTouchstart={mu.captureEvents}\n                        onTouchend={mu.captureEvents}\n                        onTouchmove={mu.captureEvents}\n                        onScroll={mu.captureEvents}\n                    >\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th class='text-center'>&nbsp;</th>\n                                    <th class='text-center'><Text id='weather.night'>Night</Text></th>\n                                    <th class='text-center'><Text id='weather.morning'>Morning</Text></th>\n                                    <th class='text-center'><Text id='weather.afternoon'>Afternoon</Text></th>\n                                    <th class='text-center'><Text id='weather.evening'>Evening</Text></th>\n                                    <th class='text-center'><Text id='weather.temp'>Temp</Text></th>\n                                    <th class='text-center'><Text id='weather.rainfall'>Rainfall</Text></th>\n                                    <th class='text-center'><Text id='weather.wind'>Wind</Text></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {yrWeatherKeys && yrWeatherKeys.map(date => <>\n                                    <tr>\n                                        <td class='text-center'><nobr>{date}</nobr></td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-temperature-low text-muted ml-1 mr-2' />\n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min')} />\n                                                </span> \n                                                <span class='text-muted font-weight-lighter mx-1'>-</span> \n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max')} />\n                                                </span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.format(util.getNestedValue(yrWeatherFormatted[date], 'precipitation_amount'), 1)} <span class='text-muted font-weight-lighter'>mm</span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-wind text-muted ml-1' /> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'), 1)}</span> <span class='text-muted font-weight-lighter'>-</span> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'), 1)}</span> <span class='text-muted font-weight-lighter'>m/s</span>\n                                            </nobr>\n                                        </td>\n                                    </tr>\n                                </>)}\n                            </tbody>\n                        </table>\n                    </div>\n                    <button type='button' class='btn btn-block btn-primary btn-sm' onClick={this.toggleyrWeather}>\n                        <i class='fas fa-times-circle' /> <Text id='weather.close'>Close</Text>\n                    </button>\n                </div>\n            );\n        }\n        return (\n            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                {yrWeather && yrWeather.length > 0 && <div class='container-fluid px-0'>\n                    <div class='row' onClick={this.toggleyrWeather}>\n                        {yrWeather && yrWeather.length > 0 && yrWeather.slice(0, 1).map(w => (\n                            <div class='col-12 text-right'>\n                                <nobr>\n                                    <small class='font-weight-light text-muted'>{util.isoTime(w.time)}</small>:\n                                    <img src={`./assets/svg/${util.getNestedValue(w, 'next_1_hours.summary.symbol_code')}.svg`}\n                                        class='ml-2'\n                                        style='height: 20px;'\n                                    />\n                                    {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount') > 0 && <small class='ml-2'>\n                                        {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount')}<span class='text-muted font-weight-lighter'>mm</span>\n                                    </small>}\n                                    <small class='ml-2'>\n                                        <i class='fas fa-temperature-low text-muted' /> <Temperature stores={this.props.stores} value={util.getNestedValue(w, 'instant.details.air_temperature')} />\n                                    </small> \n                                    <small class='ml-2'>\n                                        <i class='fas fa-wind text-muted' /> {util.getNestedValue(w, 'instant.details.wind_speed')}<span class='text-muted font-weight-lighter'>m/s</span> <span class='text-muted font-weight-lighter'>{mu.windDirection(util.getNestedValue(w, 'instant.details.wind_from_direction'))}</span>\n                                    </small> \n                                </nobr><br />\n                            </div>\n                        ))}\n                    </div>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default YrWeather;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\n// TODO: Do we need mobx? What is mobx doing here?  \n\n@observer\nclass FastListLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.containerRef = null;\n    }\n\n    componentWillUnmount() {\n        const { removeIntersectionObserver } = this.props;\n        if (removeIntersectionObserver) {\n            removeIntersectionObserver(this.containerRef);\n        }\n    }\n\n    componentDidMount() {\n        const { addIntersectionObserver } = this.props;\n        if (addIntersectionObserver) {\n            addIntersectionObserver(this.containerRef);\n        }\n    }\n\n    render() {\n        const {\n            wrapperClassNames = '',\n            contentClassNames = '',\n            renderContent,\n            obj = {},\n            idx,\n            dataFields,\n            dataValues,\n            sessionid,\n        } = this.props;\n\n        const dataProperties = {};\n        if (sessionid) {\n            dataProperties.sessionid = sessionid;\n        }\n        dataFields.forEach(e => dataProperties[`data-${e}`] = encodeURI(dataValues[e] || obj[e]));\n\n        return (\n            <div\n                class={`${wrapperClassNames}`}\n                ref={c => this.containerRef = c}\n                data-idx={idx}\n                {...dataProperties}\n            >\n                <div\n                    class={`${contentClassNames}`}\n                    style={`display: block;`}\n                >\n                    {renderContent({\n                        obj,\n                        idx,\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n@observer\nclass FastList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    // IntersectionObserver\n    deleteIntersectionObserver = () => {\n        this.intersectionObserver = null;\n    }\n\n    handleIntersection = (entries) => {\n        const { handleIntersection } = this.props;\n        if (typeof(handleIntersection) === 'function') {\n            // console.log('handleIntersection');\n            handleIntersection(entries);\n        }\n        // console.log({ entries });\n        // TODO: Make it possible to run defined functions for entries.\n        // mu.intersectionObserverCallback(entries);\n        entries.forEach((e) => {\n            const { isIntersecting } = e;\n            const { height = 0 } = e.target.dataset;\n            // const childHeight = e.target.childNodes[0].getBoundingClientRect().height;\n            // const targetHeight = e.target.getBoundingClientRect().height;\n            const childHeight = e.target.childNodes[0].offsetHeight;\n            const targetHeight = e.target.offsetHeight;\n            const scrollHeight = e.target.scrollHeight;\n            const currentHeight = Math.max(childHeight, targetHeight, scrollHeight);\n            // console.log({ isIntersecting, height, childHeight, targetHeight, scrollHeight, currentHeight }, e.target);\n\n            if (isIntersecting) {\n                e.target.childNodes[0].style.display=`block`;\n                // TODO: Should be set after image is loaded.\n                // const height = e.target.childNodes[0].clientHeight > e.target.clientHeight ? e.target.childNodes[0].clientHeight : e.target.clientHeight;\n                // console.log(e.target);\n                // console.log('e.target.childNodes[0].offsetHeight:', e.target.childNodes[0].offsetHeight);\n                // console.log('e.target.childNodes[0].scrollHeight:', e.target.childNodes[0].scrollHeight);\n                // console.log('e.target.childNodes[0].clientHeight:', e.target.childNodes[0].clientHeight);\n                // console.log('e.target.offsetHeight:', e.target.offsetHeight);\n                // console.log('e.target.scrollHeight:', e.target.scrollHeight);\n                // console.log('e.target.clientHeight:', e.target.clientHeight);\n                // console.log('height:', height);\n                // e.target.style.height=`${height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n            } else if (e.target.style.minHeight) {\n                // e.target.style.height = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.childNodes[0].style.display=`none`;\n            }\n        });\n    }\n\n    setupIntersectionObserver = () => {\n        if (!('IntersectionObserver' in window) ||\n            !('IntersectionObserverEntry' in window) ||\n            !('intersectionRatio' in window.IntersectionObserverEntry.prototype)) {\n            return false;\n        }\n\n        const options = {\n            root: null,\n            rootMargin: '100px',\n            threshold: 0.1,\n        };\n        this.intersectionObserver = new IntersectionObserver(this.handleIntersection, options);\n    }\n\n    addIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.observe(ref);\n        }\n    }\n    removeIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.unobserve(ref);\n        }\n    }\n\n    componentWillMount() {\n        this.setupIntersectionObserver();\n    }\n\n    componentWillUnmount() {\n        this.deleteIntersectionObserver();\n    }\n\n    render() {\n        const {\n            data = [],\n            wrapperClassNames = 'row pb-4 bg-light',\n            contentClassNames = `col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 shadow-sm`,\n            renderContent = (e) => <>Missing render function!</>,\n            dataFields = [],\n            dataValues = {},\n        } = this.props;\n        \n        return (\n            <div class='w-100'>\n                {data && data.filter(e => util.isObject(e)).map((obj, idx) => {\n                    const wrapperClasses = obj.hasOwnProperty('wrapperClassNames') ? obj.wrapperClassNames : wrapperClassNames;\n                    const contentClasses = obj.hasOwnProperty('contentClassNames') ? obj.contentClassNames : contentClassNames;\n                    return (<>\n                        <FastListLine\n                            key={`fastline-${idx}-${obj.id}`}\n                            obj={obj}\n                            idx={idx}\n                            addIntersectionObserver={this.addIntersectionObserver}\n                            removeIntersectionObserver={this.removeIntersectionObserver}\n                            wrapperClassNames={wrapperClasses}\n                            contentClassNames={contentClasses}\n                            renderContent={renderContent}\n                            dataFields={dataFields}\n                            dataValues={dataValues}\n                        />\n                    </>);\n                })}\n            </div>\n        );\n    };\n}\n\nexport default FastList;\n"],"sourceRoot":""}