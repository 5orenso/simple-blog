{"version":3,"sources":["webpack:///./components/util/scrollIntoView.js","webpack:///./components/imageSlider/index.js","webpack:///./components/data/distance.js","webpack:///./components/style.css","webpack:///./components/track/commentReply.js","webpack:///./components/track/infoGraph.js","webpack:///./components/data/temperature.js","webpack:///./components/data/weight.js","webpack:///./components/workout/graph.js","webpack:///./components/gauge/style.css","webpack:///./components/track/commentAdd.js","webpack:///./components/data/elevation.js","webpack:///./components/track/comments.js","webpack:///./components/data/speed.js","webpack:///./components/form/images.js","webpack:///./routes/tracks/detail.js","webpack:///./components/imageScroller/index.js","webpack:///./components/form/dragNdropFileupload.js","webpack:///./components/gauge/index.js"],"names":["initialState","ScrollIntoView","observer","props","state","container","componentDidMount","this","horizontal","vertical","behavior","inline","block","scrollIntoView","render","ref","c","Component","touchStart","e","stopPropagation","setState","startX","touches","pageX","touchEnd","undefined","sliding","touchMove","totalImages","x","prevImage","nextImage","images","imageContainer","currentImage1","currentImage2","currentIdx","length","imageDots","Array","fill","map","y","nextImageContainer","nextIdx","componentWillReceiveProps","nextProps","nextImages","imgHeight","imgWidth","img","curImage","dimensions","width","height","orientation","imageRatio","class","style","onTouchstart","onTouchend","onTouchmove","loading","src","s3LargeLink","image1","image2","i","displayDistance","distance","util","format","Distance","value","smallUnit","stores","userStore","user","settings","imperial","kmToMiles","module","exports","TrackCommentReply","commentTrack","response","callback","track","comment","trackStore","commentReplyTrack","id","commentId","status","inputRef","displayNameShort","firstname","ucfirst","lastname","email","userImage","image","s3SmallLink","for","type","placeholder","onInput","linkState","onClick","WorkoutInfoGraph","showTemperatur","gpx","gpxInfo","finalGpxInfo","elevations","temperatures","climbs","ecor","dataLeft","dataLeft2","dataLeft3","dataRight","dataRight3","legendLeft","legendLeft2","legendLeft3","legendRight3","unitLeft","unitLeft2","unitLeft3","unitRight3","data","mu","smoothArray","idx","push","xTicks","distanceKm","xTicksRange","range","Math","ceil","partSize","floor","l","showXTicks","xTicksVal","val","paddingTop","lineFromXzero","lineFromXmax","showYTicksLeft","yTicksLeftPostfix","avgWindowLeft","smoothLeft","legendRight","showYTicksRight","yTicksRightPostfix","unitRight","avgWindowRight","smoothRight","yMaxMinLeftRound","yTicksRightVal","v","Temperature","celciusToFahrenheit","Weight","kgToPounds","WorkoutGraph","withText","week","duration","rest","ascend","plan","speedAvg","loadIndex","avgDogs","avgImages","sledWeight","rating","temperature","graphWorkoutSummaryWeekDistanceCurrent","graphWorkoutSummaryWeekDistancePrev","graphWorkoutSummaryWeekElevationCurrent","graphWorkoutSummaryWeekElevationPrev","avgDayDistance","avgDayElevation","avgDayDuration","avgDaySpeedAvg","avgDayLoadIndex","avgDayAvgDogs","avgDayAvgImages","avgDaySledWeight","avgDayRest","avgDayRating","avgDayTemperature","graphPlanWeekDistanceCurrent","workoutPlanStore","currentMonth","Date","getMonth","currentYear","getFullYear","isLoading","year","month","showExtra","seasonStart","parseInt","seasonWeeks","weekRange","seasonDays","dayRange","xTicksAll","wo","parts","xTicksAllDays","day","partsDays","xTicksDays","xTicksLink","dataFillLeft","paddingLeft","yTicksLeftWidth","yTicksLeftVal","secToHms","TrackAdd","inputRefObject","showAddImage","body","resizeTextarea","addImage","addImages","handleImageErrored","target","onerror","setTimeout","data-id","isArray","onError","removeImage","data-name","name","object","updateField","autoOpen","Elevation","meterToFeet","showAddComment","showAllComments","showAllReplies","viewImageIdx","likeComment","likeReply","TrackComments","parentElement","dataset","likeTrackComment","likeTrackCommentReply","replyId","replyComment","focus","toggleComments","toggleReplies","col","offset","compact","currentUser","language","filteredComments","totalComments","diplayedComments","comments","slice","max","reverse","displayName","hasLikedComment","likes","findIndex","filteredReplises","totalReplies","diplayedReplies","max_comments","imgs","toJS","imageIdx","currentImage","markdown","replaceImages","markdownOpts","getMarkdownOptions","onDblclick","addLikeComment","viewImage","data-idx","formatDistance","createdDate","locale","reply","hasLikedReply","data-comment","fields","more","Speed","kmtToMph","Images","handleAddImage","file","addToImages","field","skipTimer","files","uploadStatus","before","after","apiUrl","MARGIN_TOP","marginTop","MARGIN_TOP_BACK","marginTopBack","MARGIN_BOTTOM","marginBottom","MAX_LOADINDEX","getMaxLoadIndex","weather","newTrack","showAdminInfo","showWeatherDetails","submenu","TracksDetail","deleteTrack","saveField","PubSub","publish","topics","STATUS_MESSAGE","message","icon","route","toggleAdminInfo","isAdmin","likeTrack","toggleAddComment","toggleShowWeatherDetails","chooseSubmenu","menu","back","history","goBack","updateTimer","loadTrack","load","firstPoint","getWeather","lat","lon","altitude","force","updateItem","resetGraphPlanWeekDistanceCurrent","getWorkoutSummary","isPublic","graphWorkoutSummaryWeekDistanceCurrentTotal","teams","isAllowedToEdit","indexOf","team","hasLikedNews","href","place","s3Link","native","formatBytes","bytes","isoDate","date","updatedDate","public","userObject","data-menu","mapId","geojson","geoJSON","fullscreenMap","w","getNestedValue","windDirection","isoTime","time","formatDate","weekday","localeMatcher","calculatedTotalDistance","elevation","calculatedAscend","decent","calculatedDescend","normalSpeedMs","normalSpeed","checkNested","key","radius","showPercentText","color","getLoadIndexColor","normalizeBetween","percent","completed","getLoadIndexText","prefix","totalKcalRelated","normalDuration","durationFactor","noimagestext","cols","hasImage","isObject","ImageScroller","scrollImages","scrollLeft","clientWidth","nearestInt","round","diff","abs","Number","isInteger","event","hypot","pageY","pinchZoomOnTouchStart","preventDefault","start","pinchZoomOnTouchMove","imageElementScale","imageElementMaxScale","scale","min","transform","transition","WebkitTransform","zIndex","pinchZoomOnTouchEnd","dblClick","likeRef","minHeight","onScroll","filter","DragNDropFileupload","dropRef","createRef","handleDrag","handleDragIn","dragCounter","dataTransfer","items","drag","handleDragOut","handleDrop","readLocalFile","handleAddFiles","el","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","getApiServer","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","total","readyState","JSON","parse","responseText","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","current","click","componentWillUnmount","removeEventListener","position","border","backgroundColor","top","bottom","left","right","textAlign","fontSize","multiple","onchange","Object","keys","isImage","match","result","role","aria-valuenow","aria-valuemin","aria-valuemax","children","mouseData","Gauge","svgRef","heightAdd","showCenterText","centerText","centerTextSize","centerTextX","centerTextY","totalY","totalX","totalTextAnchor","completedY","completedX","completedTextAnchor","strokeWidth","innerRadius","strokeWidthGauge","circumference","PI","arc","dashArray","textSize","textSizeSmall","xmlns","svg","preserveAspectRatio","gaugeBackground","cx","cy","r","strokeDasharray","strokeLinecap","gauge","stroke","strokeDashoffset","gaugeText","dominant-baseline","text-anchor","font-size","secondary"],"mappings":"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","file":"29.chunk.f1e2f.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\n@observer\nclass ImageSlider extends Component {\n    constructor(props) {\n        super(props);\n        const { images = [] } = props;\n        this.state = {\n            imageContainer: 1,\n            currentImage1: images[0] || {},\n            currentImage2: {},\n            currentIdx: 0,\n            totalImages: images.length || 0,\n            imageDots: [...Array(images.length || 0).fill(1).map((x, y) => x + y)],\n        };\n    }\n\n    nextImage() {\n        // console.log('next');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx + 1;\n        if (nextIdx > totalImages -1) {\n            nextIdx = 0;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: nextImageContainer,\n        });\n    }\n\n    prevImage() {\n        // console.log('prev');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx - 1;\n        if (nextIdx < 0) {\n            nextIdx = totalImages - 1;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: imageContainer === 1 ? 2 : 1,\n        });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: e.touches[0].pageX,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: undefined,\n            sliding: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        // e.preventDefault();\n        const { totalImages } = this.state;\n        if (totalImages > 1) {\n            const { startX, sliding } = this.state;\n            const scrollDistance = 50;\n            const x = e.touches[0].pageX;\n            if (!sliding) {\n                if (x > startX + scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.prevImage();\n                } else if (x < startX - scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.nextImage();\n                }\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.images !== this.props.images) {\n            const { images: nextImages = [] } = nextProps;\n            this.setState({\n                imageContainer: 1,\n                currentImage1: nextImages.length > 0 ? nextImages[0] : {},\n                currentImage2: {},\n                currentIdx: 0,\n                totalImages: nextImages.length || 0,\n                imageDots: [...Array(nextImages.length || 0).fill(1).map((x, y) => x + y)],\n            });\n        }\n    }\n\n    render() {\n        const { currentImage1, currentImage2, imageContainer, totalImages, imageDots, currentIdx } = this.state;\n        const img = this[`image${imageContainer}`];\n        const curImage = imageContainer === 1 ? currentImage1 : currentImage2;\n        const htmlImageRatio = img && img.height ? img.width / img.height : 4 / 3;\n        let imgHeight;\n        let imgWidth;\n        if (curImage.dimensions) {\n            const { width, height, orientation } = curImage.dimensions;\n            if (orientation > 4 && orientation < 9) {\n                imgHeight = width;\n                imgWidth = height;\n            } else {\n                imgHeight = height;\n                imgWidth = width;\n            }\n        }\n        const imageRatio = curImage.dimensions ? imgWidth / imgHeight : htmlImageRatio;\n        if (totalImages <= 0) {\n            return '';\n        }\n\n        return (\n            <div class='w-100'>\n                <div class='border rounded position-relative w-100'\n                    style={`height: calc(85vw / ${imageRatio}); overflow: hidden; transition: all .3s ease-in-out;`}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                >\n                    {totalImages > 1 && <span class='position-absolute' style='top:0px; right: 5px; z-index: 2000;'><small>{currentIdx + 1}/{totalImages}</small></span>}\n                    {currentImage1 && <div class='position-absolute' style={`${imageContainer === 1 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage1.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image1 = c}\n                        />\n                    </div>}\n                    {currentImage2 && <div class='position-absolute' style={`${imageContainer === 2 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage2.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image2 = c}\n                        />\n                    </div>}\n                </div>\n                {imageDots.length > 1 && <div class='w-100 text-center'>{imageDots.map(i => <span style={`color: ${i === currentIdx + 1 ? '#ffffff' : '#808080'};`}>&bull;</span>)}</div>}\n            </div>\n        );\n    }\n}\n\nexport default ImageSlider;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distance) {\n\tif (distance < 5) {\n\t\treturn util.format(distance, 2);\n\t}\n\tif (distance < 10) {\n\t\treturn util.format(distance, 1);\n\t}\n\treturn util.format(distance, 1);\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Distance extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n\t\t\t\t\t{displayDistance(kmToMiles(value))} {smallUnit ? <><small><small><small class='ml-0 text-muted'>mi</small></small></small></> : <>mi</>}\n\t\t\t\t</nobr>\n            </>);\n        }\n\n\t\treturn (<>\n\t\t\t<nobr>\n\t            {displayDistance(value)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>km</small></small></small></> : <>km</>}\n\t\t\t</nobr>\n\t    </>);\n    }\n}\n\nexport default Distance;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__1mJGJ\",\"hoverElement\":\"hoverElement__axh3O\",\"hoverelementhide\":\"hoverelementhide__1k_qH\",\"progress-bar-vertical\":\"progress-bar-vertical__1B2sC\",\"progress-bar\":\"progress-bar__pnsVj\",\"dragged\":\"dragged__QXO46\",\"over\":\"over__1re3x\",\"list\":\"list__q_emZ\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass TrackCommentReply extends Component {\n    commentTrack = async () => {\n        const { callback = () => {}, commentId } = this.props;\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n        const { comment = '' } = this.state;\n\t\tconst response = await trackStore.commentReplyTrack({ id: track.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            });\n            callback({ track, response });\n\t\t}\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <input\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-sm btn-primary mb-2'\n                                    onClick={this.commentTrack}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TrackCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport LineGraph from '../../components/lineGraph';\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass WorkoutInfoGraph extends Component {\n    render() {\n        const { showDebug, showTemperatur = true } = this.props;\n        const { trackStore, userStore } = this.props.stores;\n        const { track = {} } = trackStore;\n        const { user } = userStore;\n        const { settings = {} } = user;\n        const { gpx = {}, gpxInfo } = track;\n        const { gpxInfo: subGpxInfo = {} } = gpx;\n\n        const finalGpxInfo = {\n            ...subGpxInfo,\n            ...gpxInfo,\n        };\n        const { speeds = [], elevations = [], temperatures = [], climbs = [], distances = [], ecor = [] } = finalGpxInfo;\n\n        let dataLeft = [];\n        let dataLeft2 = [];\n        let dataLeft3 = [];\n        let dataRight = [];\n        let dataRight3 = [];\n        const legendLeft = [];\n        const legendLeft2 = [];\n        const legendLeft3 = [];\n        const legendRight = [];\n        const legendRight3 = [];\n        const unitLeft = [];\n        const unitLeft2 = [];\n        const unitLeft3 = [];\n        const unitRight = [];\n        const unitRight3 = [];\n\n        if (elevations.length > 0) {\n            const smoothed = mu.smoothArray(elevations, 5);\n            const data = smoothed.map((e, idx) => ({\n                x: idx,\n                y: settings.imperial ? meterToFeet(e) : e,\n            }));\n            dataLeft.push(data);\n            legendLeft.push('Elevation');\n            unitLeft.push('m');\n        }\n        if (showTemperatur) {\n            if (temperatures.length > 0) {\n                const smoothed = mu.smoothArray(temperatures, 2);\n                const data = smoothed.map((e, idx) => ({\n                    x: idx,\n                    y: settings.imperial ? celciusToFahrenheit(e) : e,\n                }));\n                dataLeft2.push(data);\n                legendLeft2.push('Temp');\n                unitLeft2.push('°C');\n            }\n        }\n        if (climbs.length > 0) {\n            const smoothed = mu.smoothArray(climbs, 2);\n            const data = smoothed.map((e, idx) => ({\n                x: idx,\n                y: e,\n            }));\n            dataLeft3.push(data);\n            legendLeft3.push('Climblevel');\n            unitLeft3.push('%');\n        }\n        if (ecor.length > 0) {\n            const smoothed = mu.smoothArray(ecor, 2);\n            const data = smoothed.map((e, idx) => ({\n                x: idx,\n                y: e * 1000,\n            }));\n            dataRight3.push(data);\n            legendRight3.push('ECOR (kcal/kg/km)');\n            unitRight3.push('kcal/kg/km');\n        }\n        // if (distances.length > 0) {\n        //     const smoothed = mu.smoothArray(distances, 30);\n        //     const data = smoothed.map((e, idx) => ({\n        //         x: idx,\n        //         y: e * 1000,\n        //     }));\n        //     dataRight3.push(data);\n        //     legendRight3.push('Distance');\n        //     unitRight3.push('km');\n        // }\n\n        // const firstData = dataLeft[0] || [];\n        const xTicks = [];\n        if (track.distanceKm > 0) {\n            const distance = settings.imperial ? kmToMiles(track.distanceKm) : track.distanceKm;\n            const xTicksRange = util.range(0, Math.ceil(distance), 1);\n            const partSize = Math.ceil(xTicksRange.length / 5);\n            const parts = Math.floor(xTicksRange.length / partSize);\n            // if (showDebug) {\n                // console.log({ xTicksRange, parts, partSize });\n            // }\n            for (let i = 0, l = xTicksRange.length; i < l; i += partSize) {\n                xTicks.push(xTicksRange[i]);\n            }\n            xTicks.push(xTicksRange[xTicksRange.length - 1]);\n        }\n        // if (firstData.length) {\n        //     const partSize = Math.ceil(firstData.length / 4);\n        //     const parts = Math.floor(firstData.length / partSize);\n        //     if (showDebug) {\n        //         console.log({ firstData, parts, partSize });\n        //     }\n        //     for (let i = 0, l = firstData.length; i < l; i += partSize) {\n        //         xTicks.push(firstData[i].epoch);\n        //     }\n        //     xTicks.push(firstData[firstData.length - 1].epoch);\n        // }\n        return (\n            <>\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={1000}\n                        height={200}\n                        showXTicks={1}\n                        xTicksVal={val => settings.imperial ? `${val}mi` : `${val}km`}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        lineFromXzero={true}\n                        lineFromXmax={true}\n                        // xTicksLink={'/tracks/week/'}\n\n                        dataLeft={dataLeft}\n                        legendLeft={legendLeft}\n                        // yMaxLeft={30}\n                        // yMinLeft={0}\n                        showYTicksLeft={1}\n                        yTicksLeftPostfix={settings.imperial ? 'ft' : 'm'}\n                        unitLeft={unitLeft}\n                        avgWindowLeft={[0, 0, 0]}\n                        smoothLeft={[1, 1, 1]}\n\n                        dataRight={dataRight}\n                        legendRight={legendRight}\n                        // dataRight={[graphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev]}\n                        // legendRight={[`${seasonStart} ${ascend}`, `${seasonStart - 1} ${ascend}`]}\n                        showYTicksRight={dataRight.length > 0 ? 1 : 0}\n                        yTicksRightPostfix={settings.imperial ? 'mph' : 'km/t'}\n                        unitRight={unitRight}\n                        avgWindowRight={[0, 0, 0]}\n                        smoothRight={[1, 1, 1]}\n\n                        // marker={week}\n                    />\n                </div>\n\n                {dataLeft2.length > 0 && <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={1000}\n                        height={100}\n                        showXTicks={1}\n                        xTicksVal={val => settings.imperial ? `${val}mi` : `${val}km`}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        lineFromXzero={true}\n                        lineFromXmax={true}\n                        // xTicksLink={'/tracks/week/'}\n\n                        dataLeft={dataLeft2}\n                        legendLeft={legendLeft2}\n                        // yMaxLeft={10}\n                        // yMinLeft={-20}\n                        yMaxMinLeftRound={false}\n                        showYTicksLeft={1}\n                        yTicksLeftPostfix={'°C'}\n                        unitLeft={unitLeft2}\n                        avgWindowLeft={[0]}\n                        smoothLeft={[1]}\n                        // marker={week}\n                    />\n                </div>}\n\n                {dataLeft3.length > 0 && <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={1000}\n                        height={200}\n                        showXTicks={1}\n                        xTicksVal={val => settings.imperial ? `${val}mi` : `${val}km`}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        lineFromXzero={true}\n                        lineFromXmax={true}\n                        // xTicksLink={'/tracks/week/'}\n\n                        dataLeft={dataLeft3}\n                        legendLeft={legendLeft3}\n                        // yMaxLeft={20}\n                        // yMinLeft={-20}\n                        yMaxMinLeftRound={false}\n                        showYTicksLeft={1}\n                        yTicksLeftPostfix={'%'}\n                        unitLeft={unitLeft3}\n                        avgWindowLeft={[0]}\n                        smoothLeft={[1]}\n                        // marker={week}\n\n                        dataRight={dataRight3}\n                        legendRight={legendRight3}\n                        // dataRight={[graphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev]}\n                        // legendRight={[`${seasonStart} ${ascend}`, `${seasonStart - 1} ${ascend}`]}\n                        showYTicksRight={dataRight3.length > 0 ? 1 : 0}\n                        yTicksRightVal={v => util.format(v / 1000, 2)}\n                        // yTicksRightPostfix={'kcal/kg/km'}\n                        unitRight={unitRight3}\n                        avgWindowRight={[0, 0, 0]}\n                        smoothRight={[1, 1, 1]}\n                    />\n                </div>}\n\n            </>\n        );\n    }\n}\n\nexport default WorkoutInfoGraph;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass Temperature extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(celciusToFahrenheit(value), 0)}°F\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)}°C\n            </nobr>\n        </>);\n    }\n}\n\nexport default Temperature;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kgToPounds(value) {\n    return 2.20462 * value;\n}\n\n@observer\nclass Weight extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kgToPounds(value), 0)} lb\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} kg\n            </nobr>\n        </>);\n    }\n}\n\nexport default Weight;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport LineGraph from '../../components/lineGraph';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    duration: <Text id='workout.graph.duration'>Duration</Text>,\n    rest: <Text id='workout.graph.rest'>Rest</Text>,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n    speedAvg: <Text id='workout.graph.speedavg'>Speed</Text>,\n    loadIndex: <Text id='workout.graph.loadindex'>Loadindex</Text>,\n\n    avgDogs: <Text id='workout.graph.avgdogs'>Avg dogs</Text>,\n    avgImages: <Text id='workout.graph.avgimages'>Avg images</Text>,\n    sledWeight: <Text id='workout.graph.sledweight'>Sled weight</Text>,\n    rating: <Text id='workout.graph.rating'>Rating</Text>,\n    temperature: <Text id='workout.graph.temperature'>Temperature</Text>,\n}))\n@observer\nclass WorkoutGraph extends Component {\n    render() {\n        const { userStore, workoutPlanStore } = this.props.stores;\n        const {\n            user,\n\t\t\tworkoutSummary,\n\t\t\tgraphWorkoutSummaryWeekDistanceCurrent, graphWorkoutSummaryWeekDistancePrev,\n\t\t\tgraphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev,\n            avgDayDistance, avgDayElevation, \n            avgDayDuration, avgDaySpeedAvg, avgDayLoadIndex, \n            avgDayAvgDogs, avgDayAvgImages, avgDaySledWeight,\n            avgDayRest, avgDayRating, avgDayTemperature,\n\t\t} = userStore;\n        const { settings = {} } = user;\n        const { graphPlanWeekDistanceCurrent } = workoutPlanStore;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n        const {\n            isLoading,\n            week,\n            distance,\n            duration,\n            rest,\n            ascend,\n            plan,\n            speedAvg,\n            loadIndex,\n            avgDogs,\n            avgImages,\n            sledWeight,\n            rating,\n            temperature,\n            year = currentYear,\n            month = currentMonth,\n            showExtra = false,\n        } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonWeeks = util.weekRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        const seasonDays = util.dayRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = Math.floor(xTicksAll.length / 5);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += parts) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        const xTicksAllDays = seasonDays.map(wo => `${wo.day}.${wo.month}`);\n        const partsDays = Math.floor(xTicksAllDays.length / 5);\n        const xTicksDays = [];\n        for (let i = 0, l = xTicksAllDays.length; i < l; i += partsDays) {\n            xTicksDays.push(xTicksAllDays[i]);\n        }\n\n        return (\n            <>\n                {/* <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5> */}\n                <div class='w-100 mt-3 mb-4 border-top pt-5'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <h5 class='text-center'><Text id='workout.graph.total-distance'>Total distance</Text></h5>\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={500}\n                        height={200}\n                        showXTicks={1}\n                        xTicksVal={val => `${week} ${val}`}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        lineFromXzero={true}\n                        lineFromXmax={true}\n                        xTicksLink={'/workouts/week/'}\n\n                        dataLeft={[graphWorkoutSummaryWeekDistanceCurrent, graphWorkoutSummaryWeekDistancePrev, graphPlanWeekDistanceCurrent]}\n                        legendLeft={[`${seasonStart} ${distance}`, `${seasonStart - 1} ${distance}`, `${seasonStart} ${plan}`]}\n                        dataFillLeft={[1]}\n                        // yMaxLeft={30}\n                        // yMinLeft={0}\n                        showYTicksLeft={1}\n                        yTicksLeftPostfix={settings.imperial ? 'mi' : 'km'}\n                        unitLeft={settings.imperial ? ['mi', 'mi', 'mi'] : ['km', 'km', 'km']}\n                        avgWindowLeft={[0, 0, 0]}\n                        smoothLeft={[1, 1, 1]}\n\n                        dataRight={[graphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev]}\n                        legendRight={[`${seasonStart} ${ascend}`, `${seasonStart - 1} ${ascend}`]}\n                        showYTicksRight={1}\n                        yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                        unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                        avgWindowRight={[0, 0]}\n                        smoothRight={[1, 1]}\n\n                        // marker={week}\n                    />\n                </div>\n\n                {!isLoading && graphWorkoutSummaryWeekDistanceCurrent && graphWorkoutSummaryWeekDistanceCurrent.length < 3 && (\n                    <div class='mb-5 py-3 border-top border-bottom'>\n                        <div class='text-left' style='line-height: 1.0em;'>\n                            <div class='display-4 float-left text-warning mr-3'>\n                                <i class='fas fa-paw' />\n                            </div>\n                            <small>\n                                <Text id='workout.graph.too-little-data'>Foreløpig er det litt lite data for å kunne vise noen fine grafer. \n                                Etterhvert som du legger inn flere treninger så vil dette bli en fin tabell og graf som viser progresjonen din.</Text>\n                            </small>\n                        </div>\n                    </div>\n                )}\n                {showExtra && <>\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-rating'>Average rating/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayRating]}\n                            legendLeft={[`${seasonStart} ${rating}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            // yTicksLeftPostfix={settings.imperial ? 'mph' : 'km/t'}\n                            // unitLeft={settings.imperial ? ['mph', 'mph', 'mph'] : ['km/t', 'km/t', 'km/t']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayTemperature]}\n                            legendRight={[`${seasonStart} ${temperature}`]}\n                            showYTicksRight={1}\n                            yTicksRightPostfix={settings.imperial ? '°F' : '°C'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-distance'>Average distance/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayDistance]}\n                            legendLeft={[`${seasonStart} ${distance}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            yTicksLeftPostfix={settings.imperial ? 'mi' : 'km'}\n                            unitLeft={settings.imperial ? ['mi', 'mi', 'mi'] : ['km', 'km', 'km']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayElevation]}\n                            legendRight={[`${seasonStart} ${ascend}`]}\n                            showYTicksRight={1}\n                            yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-duration'>Average duration/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            paddingLeft={50}\n                            yTicksLeftWidth={'50px'}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayDuration]}\n                            legendLeft={[`${seasonStart} ${duration}`]}\n                            yTicksLeftVal={val => `${util.secToHms(val)}`}\n\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            // yTicksLeftPostfix={settings.imperial ? 'mi' : 'km'}\n                            // unitLeft={settings.imperial ? ['mi', 'mi', 'mi'] : ['km', 'km', 'km']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayRest]}\n                            legendRight={[`${seasonStart} ${rest}`]}\n                            showYTicksRight={1}\n                            yTicksRightVal={val => `${util.secToHms(val)}`}\n                            // yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-speed'>Average speed/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDaySpeedAvg]}\n                            legendLeft={[`${seasonStart} ${speedAvg}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            yTicksLeftPostfix={settings.imperial ? 'mph' : 'km/t'}\n                            unitLeft={settings.imperial ? ['mph', 'mph', 'mph'] : ['km/t', 'km/t', 'km/t']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayLoadIndex]}\n                            legendRight={[`${seasonStart} ${loadIndex}`]}\n                            showYTicksRight={1}\n                            // yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-dogs'>Average dogs/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayAvgDogs, avgDayAvgImages]}\n                            legendLeft={[`${seasonStart} ${avgDogs}`, `${seasonStart} ${avgImages}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            // yTicksLeftPostfix={settings.imperial ? 'mph' : 'km/t'}\n                            // unitLeft={settings.imperial ? ['mph', 'mph', 'mph'] : ['km/t', 'km/t', 'km/t']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDaySledWeight]}\n                            legendRight={[`${seasonStart} ${sledWeight}`]}\n                            showYTicksRight={1}\n                            // yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    {/* <xmp>{JSON.stringify(avgDayDuration, null, 4)}</xmp> */}\n                </>}\n            </>\n        );\n    }\n}\n\nexport default WorkoutGraph;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gaugeBackground\":\"gaugeBackground__1UGxt\",\"gauge\":\"gauge__2ZDxd\",\"success\":\"success__3UQxg\",\"primary\":\"primary__3pPV6\",\"secondary\":\"secondary__-Vrk_\",\"info\":\"info__3t5zs\",\"warning\":\"warning__1jHlR\",\"danger\":\"danger__BLVC9\",\"gaugeText\":\"gaugeText__1on-w\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass TrackAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n        };\n        this.inputRef = {};\n    }\n\n    commentTrack = async () => {\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n\n\t\tconst response = await trackStore.commentTrack({ id: track.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[track.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ track, response });\n\t\t}\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, track } = this.props;\n        const { comment, showAddImage } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-3 position-relative'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <input\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={track.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-primary mb-2'\n                                    onClick={this.commentTrack}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default TrackAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\n@observer\nclass Elevation extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(meterToFeet(value), 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>ft</small></small></small></> : <>ft</>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>m</small></small></small></> : <>m</>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Elevation;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport TrackReplyComment from '../../components/track/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass TrackComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    likeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n\t\tconst response = await trackStore.likeTrackComment({ id: track.id, commentId });\n\n\t\tif (response && response.status === 200) {\n            callback({ track, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n\n        const replyId = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const commentId = e.target.parentElement.dataset.comment || e.target.dataset.comment;\n\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n\t\tconst response = await trackStore.likeTrackCommentReply({ id: track.id, replyId, commentId });\n\n        if (response && response.status === 200) {\n            callback({ track, commentId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, likeComment } = this.state;\n\t\tconst { track, callback = () => {}, col = 12, offset = 0, compact = false  } = this.props;\n        const { userStore } = this.props.stores;\n        const { user: currentUser, language = 'en', isAdmin } = userStore;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (track.comments) {\n            totalComments = track.comments.length;\n            if (showAllComments) {\n                filteredComments = track.comments;\n            } else {\n                // filteredComments = track.comments.slice(0, MAX_COMMENTS);\n                const max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = track.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3`}>\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0 mb-2'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n                {track && filteredComments && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n    \n                    const { currentLocationGeocode = {} } = comment;\n\n                    return (\n                        <div class='row'>\n                            <div class='col-12 d-flex mb-2 position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded-lg'>\n                                        <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                        <Markdown markdown={mu.replaceImages(comment.comment, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </div>\n                                    <div>\n                                        <div class='container-fluid px-3 mt-1'>\n                                            {currentImage && <div class='clearfix row position-relative'>\n                                                <div\n                                                    class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                    style={`max-height: 60vh;`}\n                                                    onDblclick={this.addLikeComment}\n                                                    data-id={comment.id}\n                                                >\n                                                    <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                </div>\n                                                {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                    <i class='fas fa-heart likeStory' />\n                                                </span>}\n                                            </div>}\n                                            {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                {util.isArray(images) && images.map((img, idx) => {\n                                                    return (<>\n                                                        <div\n                                                            class={`col px-0 overflow-hidden`}\n                                                            style={`max-height: 100px; min-width: 100px;`}\n                                                        >\n                                                            <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                        </div>\n                                                    </>);\n                                                })}\n                                            </div>}\n                                        </div>\n                                    </div>\n\n                                    <small>\n                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.likeComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.like'>Lik</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-11 offset-1 mb-2'>\n\n                                {comment && filteredReplises && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div \n                                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg'>\n                                                        <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                                        {reply.comment}\n                                                    </div>\n                                                    <small>\n                                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                        >\n                                                            <Text id='comments.like'>Lik</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <TrackReplyComment stores={this.props.stores} track={track}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default TrackComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Speed extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kmtToMph(value), 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.mph'>mph</Text></small></small></small></> : <><Text id='workouts.mph'>mph</Text></>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.kmt'>km/t</Text></small></small></small></> : <><Text id='workouts.kmt'>km/t</Text></>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Speed;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport PubSub, { topics } from '../../lib/pubsub';\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nconst MAX_LOADINDEX = mu.getMaxLoadIndex();\n\nimport Map from '../../components/map';\nimport ImageSlider from '../../components/imageSlider';\nimport ImageScroller from '../../components/imageScroller';\nimport WorkoutGraph from '../../components/workout/graph';\nimport TrackInfoGraph from '../../components/track/infoGraph';\nimport Gauge from '../../components/gauge';\nimport TrackComments from '../../components/track/comments';\nimport TrackAddComment from '../../components/track/commentAdd';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\nconst initialState = {\n    weather: [],\n    newTrack: {},\n    showAdminInfo: false,\n    showWeatherDetails: false,\n    submenu: 'map',\n};\n\n@observer\nclass TracksDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n        this.inputRef = {};\n    }\n\n    async loadTrack(props = this.props) {\n\t\tconst { trackStore, userStore, workoutPlanStore } = this.props.stores;\n        await trackStore.load(props.track);\n        const { track } = trackStore;\n\n        if (track.firstPoint) {\n            const weather = await userStore.getWeather({\n                lat: track.firstPoint[1],\n                lon: track.firstPoint[0],\n                altitude: track.firstPoint[2],\n                force: 1,\n            });\n            this.setState({\n                weather,\n            });\n        }\n\n        workoutPlanStore.updateItem('workoutPlans', []);\n\t\tworkoutPlanStore.updateItem('workoutPlan', {});\n        workoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\n        await userStore.getWorkoutSummary({ track: track.id });\n    }\n\n\tdeleteTrack = async () => {\n\t\tconst { trackStore } = this.props.stores;\n\t\tconst { track } = trackStore;\n        await trackStore.saveField(track.id, 'offline', 1);\n\t\tPubSub.publish(topics.STATUS_MESSAGE, {\n\t\t\tmessage: 'Runden er slettet',\n\t\t\ttype: 'success',\n\t\t\ticon: 'fas fa-check',\n\t\t});\n        route(`/tracks/`);\n\t}\n\n    toggleAdminInfo = () => {\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { isAdmin } = userStore;\n\t\tif (isAdmin) {\n\t\t\tconst { showAdminInfo } = this.state;\n\t\t\tthis.setState({\n\t\t\t\tshowAdminInfo: !showAdminInfo,\n\t\t\t});\n\t\t}\n\t}\n\n    likeTrack = async () => {\n\t\tconst { trackStore } = this.props.stores;\n\t\tconst { track } = trackStore;\n\t\tconst response = await trackStore.likeTrack({ id: track.id });\n\n        if (response && response.status === 200) {\n\t\t\t// this.loadNewsDetail({ news });\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst id = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAddComment } = this.state;\n\t\tthis.setState({\n\t\t\tshowAddComment: !showAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[id]) {\n\t\t\t\tthis.inputRef[id].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    toggleShowWeatherDetails = () => {\n        const { showWeatherDetails } = this.state;\n        this.setState({\n            showWeatherDetails: !showWeatherDetails,\n        })\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\tcomponentDidMount() {\n        this.loadTrack();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.track !== this.props.track) {\n            this.loadTrack(nextProps);\n        }\n    }\n\n\trender() {\n\t\tconst { trackStore, userStore } = this.props.stores;\n        const { submenu, showAdminInfo, showAddComment, weather, showWeatherDetails } = this.state;\n        const { isPublic } = this.props;\n\n        const { isAdmin, graphWorkoutSummaryWeekDistanceCurrentTotal, user = {} } = userStore;\n        const { teams = [] } = user;\n\t\tconst { track = {} } = trackStore;\n        const { gpx, gpxInfo = {} } = track;\n        const { weightedTotalKcal = 0, loadIndex = 0 } = gpxInfo;\n\t\tconst loadMultiplier = loadIndex / 100;\n\n        const isAllowedToEdit = track.user === user.id || teams.indexOf(track.team) > -1;\n\n        const { likes = [], comments = [] } = track;\n\t\tconst hasLikedNews = track.likes && track.likes.findIndex(e => e.user === user.id) > -1;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <div class='d-flex justify-content-between'>\n                    <div>\n                        <button class='btn btn-link pl-0 fixed-top text-primary'\n                            style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                            onClick={this.back}>\n                            <i class='fas fa-arrow-circle-left' />\n                        </button>\n                    </div>\n                    <div>\n                        <h5 class='text-muted'>&nbsp;</h5>\n                    </div>\n                    <div>\n                        {isAllowedToEdit && <a class='btn btn-sm btn-primary float-right'\n                            href={`/tracks/edit/${track.id}`}\n                        >\n                            <i class='fas fa-edit' /> <Text id='tracks.edit'>Endre</Text>\n                        </a>}\n                    </div>\n                </div>\n\n                <div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <div class='d-flex mb-2'>\n                            {/* {JSON.stringify(dog, null, 4)} */}\n                            <div class={`text-center border rounded-circle imageRounded`} style={track.image ? `background-image: url(\"${track.image.s3SmallLink}\");` : ''}>\n                                {!track.image && <i class='fas fa-map-marked text-muted mt-3' style='font-size: 40px;' />}\n                            </div>\n                            <div class='flex-grow-1 pl-3'>\n                                <h5>{track.name}</h5>\n                                <div>{track.place}</div>\n                                <i class='fas fa-calendar-alt mr-1' />\n                                {track.gpx && track.gpx.s3Link && <span class='float-right font-weight-lighter'><a href={track.gpx.s3Link} native>\n                                    <i class='fas fa-download' /> {util.formatBytes(track.gpx.bytes, 0)}\n                                </a></span>}\n                                {util.isoDate(track.date || track.updatedDate || track.createdDate)}<br />\n                                {track.public === 1 && <span class='badge badge-success'>Is public</span>}\n                                {isPublic && track.userObject && <span class='text-muted font-weight-lighter ml-3'>{mu.displayName(track.userObject)}</span>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class='row'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n\t\t\t\t\t\t<div class='row'>\n                            <div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'map' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='map'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-map-marked-alt' /> <Text id='tracks.map'>Map</Text></button>\n                                        {submenu === 'map' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'stats' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='stats'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-chart-line' /> <Text id='tracks.stats'>Your stats</Text></button>\n                                        {submenu === 'stats' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'weather' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='weather'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-cloud-sun-rain' /> <Text id='tracks.weather'>Weather</Text></button>\n                                        {submenu === 'weather' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'summary' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='summary'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-info-circle' /> <Text id='tracks.summary'>Summary</Text></button>\n                                        {submenu === 'summary' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'photos' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='photos'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-camera' /> <Text id='tracks.photos'>Photos</Text></button>\n                                        {submenu === 'photos' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {submenu === 'map' && <>\n                    <div class='row mt-4'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 p-0'>\n                            {track.gpx && <div class='mb-4' style='height: 500px;'>\n                                <Map\n                                    stores={this.props.stores}\n                                    mapId={track.id}\n                                    geojson={track.gpx.geoJSON}\n                                    gpxInfo={track.gpxInfo || track.gpx.gpxInfo}\n                                    fullscreenMap={true}\n                                />\n                            </div>}\n                        </div>\n                    </div>\n                </>}\n\n                {submenu === 'stats' && <>\n                    <div class='row mt-4'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <h5><Text id='tracks.your-workout-summary'>Your workout summary</Text></h5>\n                            {graphWorkoutSummaryWeekDistanceCurrentTotal > 0 ? <>\n                                <WorkoutGraph stores={this.props.stores} isLoading={false} />\n                                {/* {util.format(graphWorkoutSummaryWeekDistanceCurrentTotal, 0)} km */}\n                            </> : <>\n                                <div class='text-center text-muted'>\n                                    <div class='display-1'>\n                                        <i class='fas fa-chart-line' />\n                                    </div>\n                                    <h3 class='font-weight-lighter'>\n                                        <Text id='tracks.no-workout-summary'>You have no workout summary for this track. You can choose track inside your workouts to have the summary calculated.</Text>\n                                    </h3>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n\n                {submenu === 'weather' && <>\n                    <div class='row mt-4'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <h5><Text id='tracks.weather-start'>Weather at the start position</Text></h5>\n\n                            <div class='row'>\n                                {weather && weather.length > 0 ? weather.slice(0, 4).map(w => (\n                                    <div class='col-3 text-center'>\n                                        <img loading='lazy' src={`./assets/svg/${util.getNestedValue(w, 'next_1_hours.summary.symbol_code')}.svg`} /><br />\n                                        <nobr>\n                                            <small>\n                                                <i class='fas fa-temperature-low text-muted ml-1' />\n                                            </small> {util.getNestedValue(w, 'instant.details.air_temperature')} <span class='text-muted'>°C</span>\n                                        </nobr><br />\n                                        <small>\n                                            <i class='fas fa-compass text-muted ml-1' /> {mu.windDirection(util.getNestedValue(w, 'instant.details.wind_from_direction'))}<br />\n                                            <i class='fas fa-wind text-muted ml-1' /> {util.getNestedValue(w, 'instant.details.wind_speed')} <span class='text-muted'>m/s</span><br />\n                                            <i class='fas fa-cloud-rain text-muted ml-1' /> {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount')} <span class='text-muted'>mm</span><br />\n                                            <i class='fas fa-tint text-muted ml-1' /> {util.getNestedValue(w, 'instant.details.relative_humidity')} <span class='text-muted'>%</span><br />\n                                        </small>\n                                        <span class='font-weight-strong'>{util.isoTime(w.time)}</span><br />\n                                    </div>\n                                )) : <>                        \n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'>\n                                            <i class='fas fa-cloud-sun-rain' />\n                                        </div>\n                                        <h3 class='font-weight-lighter'>\n                                            <Text id='tracks.no-weather'>Can't find weather for this track.</Text>\n                                        </h3>\n                                    </div>\n                                </>}\n                            </div>\n                            <small>\n                                {showWeatherDetails ? <>\n                                    <table class='table table-sm table-striped mt-4'>\n                                        {weather && weather.length > 0 && weather.slice(4, 70).map(w => (\n                                            <tr>\n                                                <td><img loading='lazy' src={`./assets/svg/${util.getNestedValue(w, 'next_1_hours.summary.symbol_code') || util.getNestedValue(w, 'next_6_hours.summary.symbol_code')}.svg`} style='height: 20px;' /></td>\n                                                <td class='text-center'><i class='fas fa-temperature-low text-muted ml-1' /> {util.getNestedValue(w, 'instant.details.air_temperature')} <span class='text-muted'>°C</span></td>\n                                                <td class='text-center'><i class='fas fa-compass text-muted ml-1' /> {mu.windDirection(util.getNestedValue(w, 'instant.details.wind_from_direction'))}</td>\n                                                <td class='text-center'><i class='fas fa-wind text-muted ml-1' /> {util.getNestedValue(w, 'instant.details.wind_speed')} <span class='text-muted'>m/s</span></td>\n                                                <td class='text-center'><i class='fas fa-cloud-rain text-muted ml-1' /> {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount') || util.getNestedValue(w, 'next_6_hours.details.precipitation_amount') || 0} <span class='text-muted'>mm</span></td>\n                                                <td class='text-center'><i class='fas fa-tint text-muted ml-1' /> {util.getNestedValue(w, 'instant.details.relative_humidity')} <span class='text-muted'>%</span></td>\n                                                <td class='font-weight-strong text-right'>\n                                                    {util.isoDate(new Date(), false, false, true) !== util.isoDate(w.time, false, false, true) \n                                                        ? util.formatDate(w.time, { year: undefined, weekday: 'short', localeMatcher: 'lookup' }) : ''} {util.isoTime(w.time)}\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </table>\n                                    <button class='btn btn-link' onClick={this.toggleShowWeatherDetails}><i class='fas fa-eye-slash' /> <Text id='tracks.weather-hide-details'>Hide details</Text></button>\n                                </>\n                                : <button class='btn btn-link' onClick={this.toggleShowWeatherDetails}><i class='fas fa-eye' /> <Text id='tracks.weather-show-details'>Show details</Text></button>}\n                            </small>\n                        </div>\n                    </div>\n                </>}\n\n                {submenu === 'summary' && <>\n                    <div class='row mt-4'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <h5><Text id='tracks.summary'>Track summary</Text></h5>\n                            <p><Text id='tracks.summary-info'>The summary for this track is estimated based on the tracks profile and your team settings.</Text></p>\n                        </div>\n                    </div>\n                    <div class='row mt-2'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <div class='row'>\n                                <div class='col text-center'>\n                                    <small class='text-muted'><i class='fas fa-road' /> <Text id='tracks.distance'>Distance</Text></small>\n                                    <h3>\n                                        <Distance stores={this.props.stores} value={track.distanceKm} />\n                                    </h3>\n                                    {gpxInfo.calculatedTotalDistance > 0 && <small class='text-muted' style='line-height: 0.8em;'>\n                                        <Text id='workouts.kcal-calculated'>Beregnet:</Text> <Distance stores={this.props.stores} value={gpxInfo.calculatedTotalDistance} /><br />\n                                    </small>}\n                                </div>\n                                <div class='col text-center'>\n                                    <small class='text-muted'><i class='fas fa-mountain' /> <Text id='tracks.elevation'>Elevation</Text></small>\n                                    <h3>\n                                        <Elevation stores={this.props.stores} value={track.elevation} />\n                                    </h3>\n                                    {gpxInfo.calculatedAscend > 0 && <small class='text-muted' style='line-height: 0.8em;'>\n                                        <Text id='workouts.kcal-calculated'>Beregnet:</Text> <Elevation stores={this.props.stores} value={gpxInfo.calculatedAscend} /><br />\n                                    </small>}\n                                </div>\n                                <div class='col text-center'>\n                                    <small class='text-muted'><i class='fas fa-mountain' /> <Text id='tracks.downhill'>Downhill</Text></small>\n                                    <h3>\n                                        <Elevation stores={this.props.stores} value={track.decent} />\n                                    </h3>\n                                    {gpxInfo.calculatedDescend > 0 && <small class='text-muted' style='line-height: 0.8em;'>\n                                        <Text id='workouts.kcal-calculated'>Beregnet:</Text> <Elevation stores={this.props.stores} value={gpxInfo.calculatedDescend} /><br />\n                                    </small>}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class='row mt-2'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <div class='row'>\n                                <div class='col text-center'>\n                                    <small class='text-muted'><i class='fas fa-clock' /> <Text id='tracks.duration'>Duration</Text></small>\n                                    <h3>\n                                        {util.secToHms(gpxInfo.duration)}\n                                    </h3>\n                                </div>\n                                {gpxInfo.normalSpeedMs > 0 ? <div class='col text-center'>\n                                    <small class='text-muted'><i class='fas fa-tachometer-alt' /> <Text id='tracks.speed'>Speed</Text></small>\n                                    <h3>\n                                        <Speed stores={this.props.stores} value={gpxInfo.normalSpeedMs * 3.6} />\n                                    </h3>\n                                </div> : <div class='col text-center'>\n                                    <small class='text-muted'><i class='fas fa-tachometer-alt' /> <Text id='tracks.speed'>Speed</Text></small>\n                                    <h3>\n                                        <Speed stores={this.props.stores} value={gpxInfo.normalSpeed} />\n                                    </h3>\n                                </div>}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class='row mt-2'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            {(util.checkNested(track, 'gpxInfo', 'elevations') || util.checkNested(track, 'gpx', 'gpxInfo', 'elevations')) && <TrackInfoGraph\n                                stores={this.props.stores}\n                                showTemperatur={false}\n                                key={`track-elevation-${track.id}`}\n                            />}\n                        </div>\n                    </div>\n\n                    {loadIndex > 0 && <div class='row mt-2'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <h5 onClick={this.toggleAdminInfo}>\n                                <Text id='workouts.load-index'>Belastningsindex</Text>\n                            </h5>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 text-center'>\n                            <Gauge key={`gauge-${loadIndex}`}\n                                radius={100}\n                                showPercentText={true}\n                                color={mu.getLoadIndexColor(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))}\n                                percent={Math.floor(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))}\n                                completed={mu.getLoadIndexText(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))}\n                                prefix=''\n                            />\n                            <div>\n                                <span class='badge badge-pill badge-secondary'>Long distance</span>\n                                <span class='badge badge-pill badge-secondary ml-2'>Serious amature</span><br />\n                            </div>\n                            \n                            {isAdmin && showAdminInfo && <div>\n                                <small>\n                                    <span class='badge badge-secondary mr-2'>loadIndex: {gpxInfo.loadIndex}</span>\n                                    <span class='badge badge-secondary mr-2'>Max loadIndex: {MAX_LOADINDEX}</span>\n                                    <span class='badge badge-secondary mr-2'>totalKcalRelated: {util.format(gpxInfo.totalKcalRelated, 1)}</span>\n                                    <span class='badge badge-secondary mr-2'>normalSpeedMs: {gpxInfo.normalSpeedMs}</span>\n                                    <span class='badge badge-secondary mr-2'>normalDuration: {gpxInfo.normalDuration}</span>\n                                    <span class='badge badge-secondary mr-2'>durationFactor: {util.format(gpxInfo.durationFactor, 2)}</span>\n                                    <div>\n                                        <small class='text-muted'>\n                                            loadIndex = Math.floor(totalKcalRelated * durationFactor * speedFactor * typeFactor * ambitionFactor);\n                                        </small>\n                                    </div>\n                                </small>\n                            </div>}\n                        </div>\n                    </div>}\n                </>}\n\n                {submenu === 'photos' && <>\n                    <div class='row mt-4'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <h5><Text id='tracks.photos'>Photos from this track</Text></h5>\n                        </div>\n                    </div>\n                    <div class='row'>\n                        <Localizer>\n                            <ImageScroller stores={this.props.stores} images={track.images} noimagestext={<Text id='tracks.no-photos'>No photos for this track.</Text>} />\n                        </Localizer>\n                    </div>\n                </>}\n\n\n                <div class='row'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                        {likes && likes.length > 0 && <small class='bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                            <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                        </small>}\n                        {comments && comments.length > 0 && <small class='float-right bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                            <i class='fas fa-comment text-primary' /> {comments.length}\n                        </small>}\n                    </div>\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-3'>\n                        <div class='row'>\n                            <div class='col-6 text-center'>\n                                <button type='button' class={`btn btn-outline-${hasLikedNews ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedNews ? 'text-primary' : ''}`}\n                                    onClick={this.likeTrack}\n                                    // disabled={hasLikedNews}\n                                >\n                                    <i class={`${hasLikedNews ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> Like\n                                </button>\n                            </div>\n                            <div class='col-6 text-center'>\n                                <button type='button' class='btn btn-outline-secondary btn-lg btn-block'\n                                    data-id={track.id}\n                                    onClick={this.toggleAddComment}\n                                >\n                                    <i class='fas fa-comment' /> Comment\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n                    {showAddComment && <TrackAddComment\n                        stores={this.props.stores}\n                        track={track}\n                        // callback={this.loadNewsDetail}\n                        inputRef={c => this.inputRef[track.id] = c}\n                        inputRefObject={this.inputRef}\n                    />}\n                    <TrackComments\n                        stores={this.props.stores}\n                        track={track}\n                        cols='12'\n                        // callback={this.loadNewsDetail}\n                    />\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-5'>\n                        {isAllowedToEdit && <button class='btn btn-sm btn-danger mt-5 float-right'\n                            onClick={this.deleteTrack}\n                        >\n                            <i class='fas fa-trash' /> <Text id='tracks.delete'>Slett</Text> {track.name}\n                        </button>}\n                    </div>\n                </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TracksDetail;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nfunction hasImage(img) {\n    return (util.isObject(img) && img.s3LargeLink);\n}\n\n\n@observer\nclass ImageScroller extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageIdx: 0,\n            imageElementScale: 1,\n            imageElementMaxScale: 5,\n            start: {},\n        };\n    }\n\n    scrollImages = (e) => {\n        const { images } = this.props;\n        const totalImages = images.length - 1;\n\n        // scrollHeight: 705\n        // scrollLeft: 564\n        // scrollTop: 0\n        // scrollWidth: 1692\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const imageStep = clientWidth;\n        const imageIdx = scrollLeft / imageStep;\n        // console.log({ e, imageStep, imageIdx, scrollLeft, scrollWidth, clientWidth });\n\n        const nearestInt = Math.round(imageIdx);\n        const diff = Math.abs(nearestInt - imageIdx);\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(imageIdx) || diff < 0.1) {\n            this.setState({\n                imageIdx: nearestInt,\n            });\n        }\n    }\n\n    distance = (event) => {\n        return Math.hypot(event.touches[0].pageX - event.touches[1].pageX, event.touches[0].pageY - event.touches[1].pageY);\n    }\n\n    pinchZoomOnTouchStart = (event) => {\n        // console.log('touchstart', event);\n        if (event.touches.length === 2) {\n            event.preventDefault(); // Prevent page scroll\n            event.stopPropagation();\n\n            // Calculate where the fingers have started on the X and Y axis\n            const start = {};\n            start.x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n            start.y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n            start.distance = this.distance(event);\n            this.setState({ start });\n        }    \n    }\n\n    pinchZoomOnTouchMove = (event) => {\n        // console.log('touchmove', event);\n        let { imageElementScale, imageElementMaxScale } = this.state;\n        const { start } = this.state;\n        if (event.touches.length === 2) {\n            event.preventDefault(); // Prevent page scroll\n            event.stopPropagation();\n            let scale;\n\n            // Safari provides event.scale as two fingers move on the screen\n            // For other browsers just calculate the scale manually\n            if (event.scale) {\n                scale = event.scale;\n            } else {\n            const deltaDistance = this.distance(event);\n                scale = deltaDistance / start.distance;\n            }\n\n            imageElementScale = Math.min(Math.max(1, scale), imageElementMaxScale);\n            this.setState({ imageElementScale }, () => {\n                // Calculate how much the fingers have moved on the X and Y axis\n                const deltaX = (((event.touches[0].pageX + event.touches[1].pageX) / 2) - start.x) * 2; // x2 for accelarated movement\n                const deltaY = (((event.touches[0].pageY + event.touches[1].pageY) / 2) - start.y) * 2; // x2 for accelarated movement\n\n                // Transform the image to make it grow and move with fingers\n                const transform = `translate3d(${deltaX}px, ${deltaY}px, 0) scale(${imageElementScale})`;\n                event.target.style.transition = '';\n                event.target.style.transform = transform;\n                event.target.style.WebkitTransform = transform;\n                event.target.style.zIndex = '100000';\n                // event.target.style.maxHeight = '';\n                // event.target.style.maxWidth = '';\n            });\n\n        }\n    }\n\n    pinchZoomOnTouchEnd = (event) => {\n        // console.log('touchend', event);\n        // Reset image to it's original format\n        this.setState({ imageElementScale: 1 });\n        event.target.style.transition = 'transform 250ms';\n        event.target.style.transform = '';\n        event.target.style.WebkitTransform = '';\n        event.target.style.zIndex = '';\n        // event.target.style.maxHeight = '75vh';\n        // event.target.style.maxWidth = '100%';\n    }\n\n    render() {\n        const { imageIdx, imageElementScale } = this.state;\n        const { images, id, dblClick = () => {}, likeRef = {}, noimagestext, minHeight = '100px' } = this.props;\n\n        if (!images || images.length === 0) {\n            if (noimagestext) {\n                return (<>            \n                    <div class='col-12 text-center text-muted'>\n                        <div class='display-1'>\n                            <i class='fas fa-camera' />\n                        </div>\n                        <h3 class='font-weight-lighter'>\n                            {noimagestext}\n                        </h3>\n                    </div>\n                </>);\n            }\n            return <></>;\n        }\n\n        return (\n            <div class='w-100 position-relative'>\n                <div\n                    class='d-flex flex-row flex-nowrap bg-light border-top border-bottom'\n                    style={`\n                        overflow-x: ${imageElementScale > 1 && images.length === 1 ? 'visible !important' : 'auto'};\n                        overflow-y: ${imageElementScale > 1 ? 'visible !important' : 'auto'};\n                        scroll-snap-type: x mandatory;\n                    `}\n                    onScroll={this.scrollImages}\n                >\n                    {images && images.filter(hasImage).map((img, idx) => (\n                        <div class='col-12 clearfix p-0'>\n                            <div\n                                class={`w-100 h-100 text-center rounded-lg imageContainer d-flex justify-content-center align-items-center position-relative `}\n                                style={`\n                                    scroll-snap-align: start;\n                                    flex-wrap: wrap;\n                                `}\n                                // overflow: ${imageElementScale > 1 ? 'visible !important' : 'hidden'};\n                                onDblclick={dblClick}\n                                data-id={id}\n                                onTouchstart={(e) => { e.stopPropagation(); }}\n                                onTouchend={(e) => { e.stopPropagation(); }}\n                                onTouchmove={(e) => { e.stopPropagation(); }}\n                            >\t\t\t\t\t\n                                <div\n                                    class='position-absolute w-100 h-100'\n                                    style={`\n                                        background-image: url('${img.s3SmallLink}'); background-size: cover;\n                                        filter: blur(10px);\n                                        opacity: 0.5;\n                                    `}\n                                        // overflow-y: ${imageElementScale > 1 ? 'visible !important' : 'hidden'};\n                                />\n                                {img.s3LargeLink ? <img\n                                    class='img-fluid position-relative'\n                                    src={`${img.s3LargeLink}${img.updatedDate ? `?updated=${`${img.updatedDate}`}`: ''}`}\n                                    loading='lazy'\n                                    style={`max-height: 75vh; min-height: ${minHeight}; ${idx !== imageIdx ? '' : ''}`}\n\n                                    onTouchstart={this.pinchZoomOnTouchStart}\n                                    onTouchend={this.pinchZoomOnTouchEnd}\n                                    onTouchmove={this.pinchZoomOnTouchMove}\n                                /> : <>\n                                    <span class='display-1 text-muted'>\n                                        <i class='fas fa-camera' />\n                                    </span>\n                                </>}\n\n                                {/* <xmp>{JSON.stringify(img, null, 4)}</xmp> */}\n                            </div>\n                            {likeRef[id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                <i class='fas fa-heart likeStory' />\n                            </span>}\n                        </div>\n                    ))}\n                </div>\n                {images && images.length > 1 && <>\n                    <div class='w-100 text-center'>\n                        <small>\n                            <small>\n                                {images && images.filter(hasImage).map((img, idx) => <>\n                                    <i class={`${idx === imageIdx ? 'fas' : 'far'} fa-circle mr-1`} />\n                                </>)}\n                            </small>\n                        </small>\n                    </div>\n                    <div\n                        class='position-absolute text-white font-weight-lighter px-1 py-1 rounded-lg'\n                        style='top: 10px; right: 10px; background-color: rgba(0, 0, 0, 0.3); line-height: 1.0em;'\n                    >\n                        <small>{imageIdx + 1} / {images.length}</small>\n                    </div>\n                </>}\n\n            </div>\n        );\n    }\n}\n\nexport default ImageScroller;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport style from './style.css';\n\nconst initialState = {\n    mouseData: {},\n};\n\n@observer\nclass Gauge extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.svgRef = null;\n    }\n\n    render() {\n        const {\n            radius = 50,\n            heightAdd = 0,\n            color = 'success',\n\n            showPercentText = true,\n            percent = 0,\n            prefix = '',\n\n            showCenterText= false,\n            centerText,\n            centerTextSize,\n            centerTextX,\n            centerTextY,\n\n            total = '',\n            totalY = '90%',\n            totalX = '50%',\n            totalTextAnchor = 'middle',\n                        \n            completed = '',\n            completedY = '65%',\n            completedX = '50%',\n            completedTextAnchor = 'middle',\n        } = this.props;\n        const strokeWidth = radius * 0.3;\n        const innerRadius = radius - strokeWidth / 2;\n\n        const strokeWidthGauge = radius * 0.3;\n\n        const circumference = innerRadius * 2 * Math.PI;\n        const arc = circumference * (270 / 360);\n        const dashArray = `${arc} ${circumference}`;\n        const transform = `rotate(135, ${radius}, ${radius})`;\n\n        const percentNormalized = Math.min(Math.max(percent, 0), 100);\n        const offset = arc - (percentNormalized / 100) * arc;\n\n        const textSize = centerTextSize || radius / 2.5;\n        const textSizeSmall = radius / 5;\n\n        return (\n            <>\n                <svg xmlns='http://www.w3.org/2000/svg' class={style.svg}\n                    // viewBox={`0 0 ${radius * 2} ${radius * 2}`}\n                    width={radius * 2}\n                    height={radius * 2 + heightAdd}\n                    preserveAspectRatio='none'\n                    ref={c => this.svgRef = c}\n                >\n\n                    <circle\n                        class={`${style.gaugeBackground}`}\n                        cx={radius}\n                        cy={radius}\n                        r={innerRadius}\n                        strokeWidth={strokeWidth}\n                        strokeDasharray={dashArray}\n                        strokeLinecap='round'\n                        transform={transform}\n                    />\n                    \n                    <circle\n                        class={`${style[color]} ${style.gauge}`}\n                        cx={radius}\n                        cy={radius}\n                        r={innerRadius}\n                        stroke='url(#grad)'\n                        strokeDasharray={dashArray}\n                        strokeDashoffset={offset}\n                        strokeLinecap='round'\n                        strokeWidth={strokeWidthGauge}\n                        style={{\n                            transition: 'stroke-dashoffset 0.3s',\n                        }}\n                        transform={transform}\n                    />\n                     \n                    {showPercentText && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={centerTextX || '50%'}\n                        y={centerTextY || '50%'}\n                        dominant-baseline='middle'\n                        text-anchor='middle'\n                        font-size={textSize}\n                    >{percent} {prefix}</text>}\n\n                    {showCenterText && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={centerTextX || '50%'}\n                        y={centerTextY || '50%'}\n                        dominant-baseline='middle'\n                        text-anchor='middle'\n                        font-size={textSize}\n                    >{centerText}</text>}\n\n                    {completed && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={completedX}\n                        y={completedY}\n                        dominant-baseline='middle'\n                        text-anchor={completedTextAnchor}\n                        font-size={textSizeSmall}\n                    >{completed}</text>}\n\n                    <text\n                        class={`${style.gaugeText} ${style.secondary}`}\n                        x={totalX}\n                        y={totalY}\n                        dominant-baseline='middle'\n                        text-anchor={totalTextAnchor}\n                        font-size={textSizeSmall}\n                    >{total}</text>\n\n                </svg>\n            </>\n        );\n    }\n}\n\nexport default Gauge;\n"],"sourceRoot":""}