{"version":3,"sources":["webpack:///./components/track/commentReply.js","webpack:///./components/track/commentAdd.js","webpack:///./components/track/comments.js","webpack:///./components/track/index.js"],"names":["TrackCommentReply","observer","commentTrack","response","callback","props","track","state","comment","stores","trackStore","commentReplyTrack","id","commentId","status","setState","render","inputRef","this","userStore","user","displayNameShort","firstname","util","ucfirst","lastname","email","userImage","image","images","undefined","class","style","s3SmallLink","for","type","placeholder","onInput","linkState","value","ref","onClick","Component","TrackAdd","inputRefObject","showAddImage","body","mu","resizeTextarea","addImage","addImages","push","handleImageErrored","e","target","onerror","setTimeout","src","Date","data-id","isArray","map","img","onError","removeImage","data-name","name","object","updateField","autoOpen","initialState","showAddComment","showAllComments","showAllReplies","viewImageIdx","likeComment","likeReply","TrackComments","parentElement","dataset","likeTrackComment","likeTrackCommentReply","replyId","replyComment","focus","toggleComments","toggleReplies","col","offset","compact","currentUser","language","filteredComments","totalComments","diplayedComments","comments","length","slice","Math","max","reverse","displayName","hasLikedComment","likes","findIndex","filteredReplises","totalReplies","diplayedReplies","max_comments","imgs","toJS","imageIdx","currentImage","markdown","replaceImages","markdownOpts","getMarkdownOptions","onDblclick","addLikeComment","loading","s3LargeLink","idx","viewImage","data-idx","formatDistance","createdDate","locale","reply","hasLikedReply","data-comment","fields","more","c","MAX_LOADINDEX","getMaxLoadIndex","Track","likeTrack","toggleAddComment","showModal","stopPropagation","preventDefault","displayModal","currentImageXXL","imagexxl","thumb","title","date","closeModal","toggleDate","showDate","updateTimer","showUser","isPublic","gpxInfo","loadIndex","hasLikedNews","close","href","place","getLoadIndexColor","normalizeBetween","floor","getLoadIndexText","public","users","formatDate","garminId","stravaId","distanceKm","elevation","gpx","data-image","data-imagexxl","s3XXLargeLink","data-thumb","data-title","data-date"],"mappings":"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","file":"31.chunk.e0e2b.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass TrackCommentReply extends Component {\n    commentTrack = async () => {\n        const { callback = () => {}, commentId } = this.props;\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n        const { comment = '' } = this.state;\n\t\tconst response = await trackStore.commentReplyTrack({ id: track.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            });\n            callback({ track, response });\n\t\t}\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <input\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-sm btn-primary mb-2'\n                                    onClick={this.commentTrack}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TrackCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass TrackAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n        };\n        this.inputRef = {};\n    }\n\n    commentTrack = async () => {\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n\n\t\tconst response = await trackStore.commentTrack({ id: track.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[track.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ track, response });\n\t\t}\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, track } = this.props;\n        const { comment, showAddImage } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-3 position-relative'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <input\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={track.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-primary mb-2'\n                                    onClick={this.commentTrack}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default TrackAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport TrackReplyComment from '../../components/track/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass TrackComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    likeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n\t\tconst response = await trackStore.likeTrackComment({ id: track.id, commentId });\n\n\t\tif (response && response.status === 200) {\n            callback({ track, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n\n        const replyId = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const commentId = e.target.parentElement.dataset.comment || e.target.dataset.comment;\n\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n\t\tconst response = await trackStore.likeTrackCommentReply({ id: track.id, replyId, commentId });\n\n        if (response && response.status === 200) {\n            callback({ track, commentId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, likeComment } = this.state;\n\t\tconst { track, callback = () => {}, col = 12, offset = 0, compact = false  } = this.props;\n        const { userStore } = this.props.stores;\n        const { user: currentUser, language = 'en', isAdmin } = userStore;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (track.comments) {\n            totalComments = track.comments.length;\n            if (showAllComments) {\n                filteredComments = track.comments;\n            } else {\n                // filteredComments = track.comments.slice(0, MAX_COMMENTS);\n                const max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = track.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3`}>\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0 mb-2'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n                {track && filteredComments && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n    \n                    const { currentLocationGeocode = {} } = comment;\n\n                    return (\n                        <div class='row'>\n                            <div class='col-12 d-flex mb-2 position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded-lg'>\n                                        <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                        <Markdown markdown={mu.replaceImages(comment.comment, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </div>\n                                    <div>\n                                        <div class='container-fluid px-3 mt-1'>\n                                            {currentImage && <div class='clearfix row position-relative'>\n                                                <div\n                                                    class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                    style={`max-height: 60vh;`}\n                                                    onDblclick={this.addLikeComment}\n                                                    data-id={comment.id}\n                                                >\n                                                    <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                </div>\n                                                {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                    <i class='fas fa-heart likeStory' />\n                                                </span>}\n                                            </div>}\n                                            {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                {util.isArray(images) && images.map((img, idx) => {\n                                                    return (<>\n                                                        <div\n                                                            class={`col px-0 overflow-hidden`}\n                                                            style={`max-height: 100px; min-width: 100px;`}\n                                                        >\n                                                            <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                        </div>\n                                                    </>);\n                                                })}\n                                            </div>}\n                                        </div>\n                                    </div>\n\n                                    <small>\n                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.likeComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.like'>Lik</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-11 offset-1 mb-2'>\n\n                                {comment && filteredReplises && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div \n                                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg'>\n                                                        <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                                        {reply.comment}\n                                                    </div>\n                                                    <small>\n                                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                        >\n                                                            <Text id='comments.like'>Lik</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <TrackReplyComment stores={this.props.stores} track={track}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default TrackComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport Modal from '../modal';\nimport TrackComments from '../../components/track/comments';\nimport TrackAddComment from '../../components/track/commentAdd';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\nconst MAX_LOADINDEX = mu.getMaxLoadIndex();\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass Track extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n    likeTrack = async () => {\n\t\tconst { trackStore } = this.props.stores;\n        const { track } = this.props;\n\t\tconst response = await trackStore.likeTrack({ id: track.id });\n\n        if (response.status === 200) {\n\t\t\t\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst id = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAddComment } = this.state;\n\t\tthis.setState({\n\t\t\tshowAddComment: !showAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[id]) {\n\t\t\t\tthis.inputRef[id].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    showModal = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const img = e.target.dataset.image;\n        const imgXXL = e.target.dataset.imagexxl;\n        const thumb = e.target.dataset.thumb;\n        const name = e.target.dataset.name;\n        const title = e.target.dataset.title;\n        const date = e.target.dataset.date;\n        this.setState({\n            displayModal: true,\n            currentImage: img,\n            currentImageXXL: imgXXL,\n            thumb,\n            name,\n            title,\n            date,\n        });\n    }\n\n    closeModal = () => {\n        this.setState({\n            displayModal: false,\n        });\n    }\n\n    toggleDate = () => {\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n    render() {\n        const { displayModal, currentImage, currentImageXXL, showDate, thumb, name, title, date, showAddComment } = this.state;\n\n        const { track, showUser = false, isPublic = false } = this.props;\n        const image = track.image && track.image.s3SmallLink ? track.image : null;\n        const { gpxInfo = {} } = track;\n\t\tconst { loadIndex = 0 } = gpxInfo;\n\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n        const { likes = [], comments = [] } = track;\n\t\tconst hasLikedNews = track.likes && track.likes.findIndex(e => e.user === user.id) > -1;\n\n        return (\n            <div class='w-100 mb-3'>\n                <div class='row'>\n                    {displayModal && <Modal close={this.closeModal} image={currentImage} imagexxl={currentImageXXL} thumb={thumb} name={name} title={title} date={date} />}\n\n                    <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 d-flex mb-0 position-relative'>\n                        {/* {JSON.stringify(track, null, 4)} */}\n\n                        <div class={`text-center border rounded-circle imageRounded`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                            {!image && <i class='fas fa-map-marked text-muted mt-3' style='font-size: 40px;' />}\n                        </div>\n                        <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                            <a class='stretched-link' href={`/tracks/${track.id}${isPublic ? '/public' : ''}`}>\n                                <h5 class='mb-1' style='line-height: 1.0em;'>{track.name}</h5>\n                                <div class='text-muted font-weight-lighter'><small>{track.place}</small></div>\n                            </a>\n                            <div>\n                                <small>\n                                    {loadIndex > 0 && <span class={`ml-2 text-${mu.getLoadIndexColor(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))}`}>\n                                        <i class='fas fa-hand-rock mr-1' />\n                                        {Math.floor(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))} -&nbsp;\n                                        {mu.getLoadIndexText(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))}\n                                    </span>}\n                                </small>\n                            </div>\n                            <div>\n                                {track.public === 1 && <span class='badge badge-success'>Is public</span>}\n                                {showUser && <span class='text-muted font-weight-lighter ml-3'>{mu.displayName(track.users)}</span>}\n                            </div>\n                            <small class='text-muted'>\n                                {track.date && <small onClick={this.toggleDate}>\n                                    {showDate ? util.formatDate(track.date, { locale: 'no-NB' }) : util.formatDistance(track.date, new Date(), { locale: 'no-NB' })}<br />\n                                </small>}\n                            </small>\n                            <small class='text-muted'>\n                                {track.garminId > 0 && <div class={`float-left mr-2 text-center border rounded-circle imageRounded imageRoundedIcon`} style={`background-image: url(\"./assets/garmin-connect.png\");`} />}\n                                {track.stravaId > 0&& <div class={`float-left mr-2 text-center border rounded-circle imageRounded imageRoundedIcon`} style={`background-image: url(\"./assets/strava-icon.png\");`} />}\n\n                                <i class='fas fa-road' /> <Distance stores={this.props.stores} value={track.distanceKm} />\n                                <i class='fas fa-mountain ml-2' /> <Elevation stores={this.props.stores} value={track.elevation} />\n                                {track.gpx && <i class='fas fa-map-marked-alt ml-2' />}\n                            </small>\n                        </div>\n                    </div>\n\n                    <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-1' style='padding-left: 122px;'>\n                        <div class='row'>\n                            {track.images && track.images.map(img => (\n                                <div class={`text-center border rounded imageRounded imageRoundedSmall`}\n                                    style={img ? `background-image: url(\"${img.s3SmallLink}\");` : ''}\n                                    onClick={this.showModal}\n                                    data-image={img.s3LargeLink}\n                                    data-imagexxl={img.s3XXLargeLink}\n                                    data-thumb={track.image && track.image.s3SmallLink}\n                                    data-title={track.name}\n                                    data-date={track.date}\n                                >\n                                    &nbsp;\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n\n                        <div class='col-10 offset-2 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                            {likes && likes.length > 0 && <small class='bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                            </small>}\n                            {comments && comments.length > 0 && <small class='float-right bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                <i class='fas fa-comment text-primary' /> {comments.length}\n                            </small>}\n                        </div>\n\n                        <div class='col-10 offset-2 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-3'>\n                            <div class='row'>\n                                <div class='col-6 text-center'>\n                                    <button type='button' class={`btn btn-sm btn-outline-${hasLikedNews ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedNews ? 'text-primary' : ''}`}\n                                        onClick={this.likeTrack}\n                                        // disabled={hasLikedNews}\n                                    >\n                                        <i class={`${hasLikedNews ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> Like\n                                    </button>\n                                </div>\n                                <div class='col-6 text-center'>\n                                    <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block'\n                                        data-id={track.id}\n                                        onClick={this.toggleAddComment}\n                                    >\n                                        <i class='fas fa-comment' /> Comment\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n\n                        {showAddComment && <TrackAddComment\n                            stores={this.props.stores}\n                            track={track}\n                            inputRef={c => this.inputRef[track.id] = c}\n                        />}\n                        <TrackComments stores={this.props.stores} track={track} col={10} offset={2} compact={true} />\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Track;\n"],"sourceRoot":""}