{"version":3,"sources":["webpack:///./components/form/files.js","webpack:///./routes/users/edit.js","webpack:///./components/form/images.js","webpack:///./components/form/dragNdropFileupload.js"],"names":["Files","observer","props","handleAddImage","file","updateField","id","object","field","value","state","files","render","this","uploadStatus","before","after","autoOpen","class","apiUrl","style","height","width","Component","MARGIN_TOP","mu","marginTop","MARGIN_TOP_BACK","marginTopBack","MARGIN_BOTTOM","marginBottom","initialState","Input","handleImageErrored","e","image","target","onerror","setTimeout","src","Date","removeImage","stores","userStore","user","name","parentElement","dataset","removeMainImage","saved","type","title","icon","help","onInput","for","s3SmallLink","onError","onClick","data-name","images","map","img","aria-describedby","data-id","data-field","UserEdit","elementtype","updateFieldValue","parseInt","datatype","skipTimer","newValue","localObjectValue","Array","isArray","split","parseFloat","doUpdateField","clearTimeout","updateTimer","back","history","goBack","loadUser","getInfo","saveField","componentDidMount","insertStatus","email","role","Images","addToImages","push","DragNDropFileupload","dropRef","createRef","handleDrag","preventDefault","stopPropagation","handleDragIn","dragCounter","dataTransfer","items","length","setState","drag","handleDragOut","handleDrop","i","l","readLocalFile","handleAddFiles","event","el","handleEvent","handleUpload","fileObject","util","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","getApiServer","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","total","readyState","status","JSON","parse","responseText","data","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","current","click","componentWillUnmount","removeEventListener","position","ref","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","c","Object","keys","key","isImage","match","result","formatBytes","aria-valuenow","aria-valuemin","aria-valuemax","children"],"mappings":"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","file":"86.chunk.a438a.js","sourcesContent":["import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\nimport Map from '../../components/map';\n\nconst initialState = {};\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { userStore } = this.props.stores;\n        const { user } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        userStore.removeImage({\n            id: user.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { user, field, updateField } = this.props;\n        updateField({ id: user.id, field, value: {} });\n    }\n\n    render() {\n        // const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField } = this.props;\n        const { saved, user, type = 'text', field, title, icon, help, onInput, updateField } = this.props;\n        const value = user[field];\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {user.image && user.image.s3SmallLink && <div class='col-3 p-1'>\n                                <img src={user.image.s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                <button class='btn btn-sm btn-link'\n                                    onClick={this.removeMainImage}\n                                    data-name={user.image.name}\n                                ><i class='fas fa-trash' /> Del</button>\n                                <span class='badge badge-success'>Main</span>\n                            </div>}\n                            {user.images && user.images.map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Del</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={user} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Files saved={saved} object={user} field={field} updateField={updateField} />\n                    {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        return (\n            <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type='text' class={`form-control ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    value={value}\n                    data-id={user.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass UserEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    async loadUser() {\n\t\tconst { userStore } = this.props.stores;\n        userStore.getInfo();\n    }\n\n    updateField = (e) => {\n        const { id, field, type, elementtype } = e.target.dataset;\n        const value = e.target.value;\n        this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype });\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, skipTimer = false }) => {\n        const { userStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { user } = userStore;\n        if (field === 'images') {\n            if (Array.isArray(user.images) && Array.isArray(value)) {\n                localObjectValue = [...user.images, ...value];\n            }\n        }\n    \n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n       \n        userStore.updateField(id, field, localObjectValue);\n        if (skipTimer) {\n            this.doUpdateField(id, field, newValue);\n        } else {\n            clearTimeout(this.updateTimer[field]);\n            this.updateTimer[field] = setTimeout(async () => {\n                this.doUpdateField(id, field, newValue);\n            }, 500);\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { userStore } = this.props.stores;\n        await userStore.saveField(id, field, value);\n    }\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\tcomponentDidMount() {\n        this.loadUser();\n    }\n\n\trender() {\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { insertStatus, saved, user } = userStore;\n        const { email } = user;\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link pl-0 fixed-top text-primary'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}>\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='offset-0 col-12 offset-sm-2 col-sm-8 offset-lg-4 col-lg-4' style='padding-left: 35px;'>\n                        <div>\n                            <h5><Text id='users.edit'>Endre</Text>: {email}</h5>\n\n                            <Input saved={saved} user={user} field='username' icon='fas fa-user'\n                                title={<Text id='users.username'>Brukernavn</Text>}\n                                help={<Text id='users.username-help'>Ditt brukernavn på The Musher</Text>}\n                                onInput={this.updateField} />\n\n                            <div class='row'>\n                                <div class='col-6'>\n                                    <Input saved={saved} user={user} field='firstname'\n                                        title={<Text id='users.firstname'>Fornavn</Text>}\n                                        help={<Text id='users.firstname-help'>Ditt fornavn</Text>}\n                                        onInput={this.updateField} />\n                                </div>\n                                <div class='col-6'>\n                                    <Input saved={saved} user={user} field='lastname'\n                                        title={<Text id='users.lastname'>Etternavn</Text>}\n                                        help={<Text id='users.lastname-help'>Ditt etternavn</Text>}\n                                        onInput={this.updateField} />\n                                </div>\n                            </div>\n\n                            <Input saved={saved} user={user} field='cellphone' icon='fas fa-mobile'\n                                title={<Text id='users.cellphone'>Mobil</Text>}\n                                help={<Text id='users.cellphone-help'>Ditt mobilnummer</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} user={user} field='url' icon='fas fa-link'\n                                title={<Text id='users.url'>Hjemmeside</Text>}\n                                help={<Text id='users.url-help'>Din hjemmeside</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} user={user} field='facebook' icon='fab fa-facebook-square'\n                                title={<Text id='users.facebook'>Facebook</Text>}\n                                help={<Text id='users.facebook-help'>Din Facebook profil</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} user={user} field='instagram' icon='fab fa-instagram'\n                                title={<Text id='users.instagram'>Instagram</Text>}\n                                help={<Text id='users.instagram-help'>Din Instagram profil</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} user={user} field='snapchat' icon='fab fa-snapchat'\n                                title={<Text id='users.snapchat'>Snapchat</Text>}\n                                help={<Text id='users.snapchat-help'>Din Snapchat profil</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} user={user} field='image' icon='fas fa-camera' type='image'\n                                stores={this.props.stores}\n                                title={<Text id='users.photos'>Bilder</Text>}\n                                help={<Text id='users.photos-help'>Bilder av deg.</Text>}\n                                onInput={this.updateField} updateField={this.updateFieldValue} />\n                        </div>                                                        \n\t\t\t\t\t</div>\n\n\t\t\t\t\t{insertStatus && <div class='alert alert-success mt-4 col-12' role='alert'>\n\t\t\t\t\t\t<Text id='users.saved'>Profilen er lagret.</Text>\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default UserEdit;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n"],"sourceRoot":""}