{"version":3,"sources":["webpack:///./components/util/scrollIntoView.js","webpack:///./components/form/links.js","webpack:///./components/form/achievements.js","webpack:///./routes/dogs/edit.js","webpack:///./components/form/files.js","webpack:///./components/form/images.js","webpack:///./components/form/dragNdropFileupload.js"],"names":["initialState","ScrollIntoView","observer","props","state","container","componentDidMount","this","horizontal","vertical","behavior","inline","block","scrollIntoView","render","ref","c","Component","Achievements","handleAdd","updateField","id","object","field","value","data","setState","name","url","removeLink","e","dogStore","stores","target","closest","dataset","linkId","showFiles","class","links","length","map","file","util","isoDate","createdDate","onClick","data-name","data-id","for","type","aria-describedby","onInput","linkstate","description","removeAchievement","achievementId","achievements","date","MARGIN_TOP","mu","marginTop","MARGIN_TOP_BACK","marginTopBack","MARGIN_BOTTOM","marginBottom","Input","handleImageErrored","image","retry","parseInt","onerror","setTimeout","src","Date","removeImage","dog","parentElement","removeFile","saved","datalist","min","max","step","title","icon","help","refName","showImages","maxValue","undefined","files","formatBytes","size","style","data-field","rows","images","s3SmallLink","onError","img","autoOpen","addToImages","list","el","Teams","toggleType","typeId","isNew","toJS","teams","indexOf","removeTeam","team","addTeam","userStore","highlight","idx","isPrimary","isSecondary","isArray","hintTeam","role","Harnesses","harnesses","user","language","harness","colorNonstop","lang","Status","toggleStatus","statuses","removeStatus","status","addStatus","dogstatuses","Position","dogPositions","DogsEdit","insertDog","insert","newDog","resetDog","route","elementtype","updateFieldValue","datatype","skipTimer","newValue","localObjectValue","Array","split","parseFloat","updateObjectKeyValue","doUpdateField","clearTimeout","updateTimer","chooseMother","dogId","motherDog","findDog","chipId","chooseFather","fatherDog","chooseSubmenu","submenu","menu","back","history","goBack","loadDog","createNew","load","addData","saveField","insertStatus","dogFemales","findDogsByGender","dogMales","hasBirthday","birth","daysUntilBirthday","Math","ceil","daysUntilNextBirthday","linkState","age","deceased","gender","data-menu","mother","d","father","Files","handleAddImage","uploadStatus","before","after","apiUrl","height","width","Images","push","DragNDropFileupload","dropRef","createRef","handleDrag","preventDefault","stopPropagation","handleDragIn","dragCounter","dataTransfer","items","drag","handleDragOut","handleDrop","i","l","readLocalFile","handleAddFiles","event","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","getApiServer","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","total","readyState","JSON","parse","responseText","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","current","click","componentWillUnmount","removeEventListener","position","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","Object","keys","key","isImage","match","result","aria-valuenow","aria-valuemin","aria-valuemax","children"],"mappings":"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","file":"12.chunk.1d22f.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\n@observer\nclass Achievements extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n        };\n    }\n    \n    handleAdd = () => {\n        const { data } = this.state;\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: { ...data } });\n        this.setState({\n            data: {\n                name: '',\n                url: '',\n            }\n        });\n    };\n\n    removeLink = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { object } = this.props;\n        const { name, id } = e.target.closest('button').dataset;\n        dogStore.removeLink({\n            id: object.id,\n            name,\n            linkId: id,\n        });\n    }\n\n    render() {\n        const { showFiles = true, object = {} } = this.props;\n\n        return (\n            <div class='row'>\n                <div class='col-12 mt-3'>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!object.links || object.links.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-link' /></div>\n                                        <h3><Text id='dogs.no-links-title'>No links for this dog!</Text></h3>\n                                        <Text id='dogs.no-links-text'>You can add links to this dog. Ie. Links to Facebook page, Instagram page, blogg, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {object.links && object.links.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.createdDate, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='mr-2'>{file.url}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeLink}\n                                            data-name={file.name}\n                                            data-id={file.id}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                <div class='col-12 mt-3'>\n                    <details>\n                        <summary><Text id='dogs.link-add'>Add new link</Text></summary>\n                        <div class='form-group'>\n                            <label for='name'><Text id='dogs.link-name'>Name</Text></label>\n                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp' onInput={linkstate(this, 'data.name')} />\n                            <small id='nameHelp' class='form-text text-muted'><Text id='dogs.link-name-help'>Name of link</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='url'><Text id='dogs.link-url'>Url</Text></label>\n                            <input type='text' class='form-control' id='url' aria-describedby='urlHelp' onInput={linkstate(this, 'data.url')} />\n                            <small id='urlHelp' class='form-text text-muted'><Text id='dogs.link-url-help'>URL of link</Text></small>\n                        </div>\n                        <button class='btn btn-success' onClick={this.handleAdd}>\n                            <Text id='dogs.link-add'>Add link</Text>\n                        </button>\n                    </details>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Achievements;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\n@observer\nclass Achievements extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n        };\n    }\n    \n    handleAdd = () => {\n        const { data } = this.state;\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: { ...data } });\n        this.setState({\n            data: {\n                name: '',\n                description: '',\n                url: '',\n            }\n        });\n    };\n\n\n    removeAchievement = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { object } = this.props;\n        const { name, id } = e.target.closest('button').dataset;\n        dogStore.removeAchievement({\n            id: object.id,\n            name,\n            achievementId: id,\n        });\n    }\n\n    render() {\n        const { data } = this.state;\n        const { showFiles = true, object = {} } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12 mt-3'>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!object.achievements || object.achievements.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-trophy' /></div>\n                                        <h3><Text id='dogs.no-achievements-title'>No achievements for this dog!</Text></h3>\n                                        <Text id='dogs.no-achievements-text'>You can add achievements to this dog. Ie. Memories, trips, tests, prices, races, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {object.achievements && object.achievements.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.date, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='mr-2'>{file.url}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeAchievement}\n                                            data-name={file.name}\n                                            data-id={file.id}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                <div class='col-12 mt-3'>\n                    <details>\n                        <summary><Text id='dogs.achievement-add'>Add new achievement</Text></summary>\n\n                        <div class='form-group'>\n                            <label for='name'><Text id='dogs.achievement-name'>Name</Text></label>\n                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp' onInput={linkstate(this, 'data.name')} value={data.name} />\n                            <small id='nameHelp' class='form-text text-muted'><Text id='dogs.achievement-name-help'>Name of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='date'><Text id='dogs.achievement-date'>Date</Text></label>\n                            <input type='date' class='form-control' id='date' aria-describedby='dateHelp' onInput={linkstate(this, 'data.date')} value={data.date} />\n                            <small id='dateHelp' class='form-text text-muted'><Text id='dogs.achievement-date-help'>Date of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='description'><Text id='dogs.achievement-description'>Description</Text></label>\n                            <input type='text' class='form-control' id='description' aria-describedby='descriptionHelp' onInput={linkstate(this, 'data.description')} value={data.description} />\n                            <small id='descriptionHelp' class='form-text text-muted'><Text id='dogs.achievement-description-help'>Description of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='url'><Text id='dogs.achievement-url'>Url</Text></label>\n                            <input type='text' class='form-control' id='url' aria-describedby='urlHelp' onInput={linkstate(this, 'data.url')} value={data.url} />\n                            <small id='urlHelp' class='form-text text-muted'><Text id='dogs.achievement-url-help'>URL of achievement</Text></small>\n                        </div>\n                        <button class='btn btn-success' onClick={this.handleAdd}>\n                            <Text id='dogs.achievement-add'>Add achievement</Text>\n                        </button>\n                    </details>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Achievements;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom(false);\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\nimport Achievements from '../../components/form/achievements';\nimport Links from '../../components/form/links';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n\n        if (!image.dataset.retry) {\n            image.dataset.retry = 0;\n        }\n        image.dataset.retry = parseInt(image.dataset.retry, 10) + 1;\n        if (image.dataset.retry > 5) {\n            return false;\n        }\n\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        dogStore.removeImage({\n            id: dog.id,\n            name: imageName,\n        });\n    }\n\n    removeFile = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = this.props;\n        const fileName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        dogStore.removeFile({\n            id: dog.id,\n            name: fileName,\n        });\n    }\n\n    render() {\n        const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField, refName, showImages = false, showFiles = true } = this.props;\n        let value = dog[field];\n        let maxValue = max;\n        if (type === 'date') {\n            if (value) {\n                value = util.isoDate(dog[field], false, false, true);\n            }\n            if (max === 'today') {\n                maxValue = util.isoDate(undefined, false, false, true);\n            }\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!dog.files || dog.files.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-file' /></div>\n                                        <h3><Text id='dogs.no-files-title'>No files attached to this dog!</Text></h3>\n                                        <Text id='dogs.no-files-text'>You can upload files to this dog inside edit. These files can be of any type. Ie: Certificates, test, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {dog.files && dog.files.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.createdDate, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='font-weight-lighter mr-2'>{util.formatBytes(file.size, 1)}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeFile}\n                                            data-name={file.name}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                    <Files saved={saved} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'textarea') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea type='text' class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                        rows={10}\n                    />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (field === 'links') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Links saved={saved} stores={this.props.stores} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (field === 'achievements') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Achievements saved={saved} stores={this.props.stores} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                    {showImages && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {(!dog.images || dog.images.length === 0) && <>\n                                    <div class='text-center text-muted mb-3'>\n                                        <div class='display-1'><i class='fas fa-images' /></div>\n                                        <h3><Text id='dogs.no-images-title'>No images for this dog!</Text></h3>\n                                        <Text id='dogs.no-images-text'>You can add more images to this dog. Puppy pictures, workout pictures, lazy summer pictures, etc. All is a nice way to create a better profile for this dog.</Text>\n                                    </div>\n                                </>}\n                                {field === 'image' ? <>\n                                    {dog.image && dog.image.s3SmallLink && <div class='col-3 p-1'>\n                                        <img src={dog.image.s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={dog.image.name}\n                                        ><i class='fas fa-trash' /> Remove</button>\n                                        <span class='badge badge-success'>Main</span>\n                                    </div>}\n                                </> : <>\n                                    {dog.images && dog.images.map(img => (\n                                        <div class='col-3 p-1'>\n                                            <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                            <button class='btn btn-sm btn-link'\n                                                onClick={this.removeImage}\n                                                data-name={img.name}\n                                            ><i class='fas fa-trash' /> Remove</button>\n                                        </div>\n                                    ))}\n                                </>}\n\n                            </div>\n                        </div>\n                    </>}\n\n                    {field === 'image' ? <>\n                        <Images saved={saved} object={dog} field={field} updateField={updateField} autoOpen={false} addToImages={false} />\n                    </> : <>\n                        <Images saved={saved} object={dog} field={field} updateField={updateField} autoOpen={false} />\n                    </>}\n\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'datalist') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                    <input list={`list-${field}`} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                        // onInput={e => console.log(e)}\n                        // onChange={e => console.log(e)}\n                    />\n                    <datalist id={`list-${field}`}>\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </datalist>\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'select') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n\n                    <select type={type} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                    >\n                        <option value=''>-- Velg kjønn --</option>\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </select>\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        return (\n            <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label> {refName}\n                <input type={type} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    min={min}\n                    max={maxValue}\n                    step={step}\n                    value={value}\n                    data-id={dog.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Teams extends Component {\n    toggleType(typeId) {\n        const { dogStore } = this.props.stores;\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        if (value === null) {\n            updateField({ id: object.id, field, value, type, isNew });\n        } else if (object.teams.indexOf(value) > -1) {\n            dogStore.removeTeam({ id: object.id, team: value });\n        } else if (object.team) {\n            dogStore.addTeam({ id: object.id, team: value });\n        } else {\n            updateField({ id: object.id, field, value, type, isNew });\n        }\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { teams } = userStore;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        const { highlight } = this.props;\n\n        return (\n            <div class={`form-group mb-1 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {teams && teams.map((team, idx) => {\n                                    const isPrimary = value === team.id;\n                                    const isSecondary = object && util.isArray(object.teams) && object.teams.indexOf(team.id) > -1;\n                                    return (\n                                        <div class='col mb-0 px-0'\n                                            ref={(isPrimary || isSecondary) ? c => this.container = c : null}\n                                        >\n                                            <button\n                                                class={`btn btn-block\n            \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === teams.length ? 'rounded-pill-right': '')}\n                                                    btn${(isPrimary || isSecondary) ? '' : '-outline'}-${isSecondary ? 'info' : 'success'}\n                                                    text-nowrap overflow-hidden`}\n                                                style='text-overflow: ellipsis;'\n                                                onClick={() => this.toggleType(team.id)}\n                                            >\n                                                {object.hintTeam === team.id && <span class='float-right text-primary'><i class='fas fa-circle' /></span>}\n                                                <i class='fas fa-users mr-2' />\n                                                {team.name}\n\n                                                {highlight && highlight.indexOf(team.id) > -1 && <>\n                                                    {value === team.id ? <>\n                                                        <i class='fas fa-check float-right' />\n                                                    </> : <>\n                                                        <div class='spinner-grow text-warning float-right' role='status'>\n                                                            <span class='sr-only'>Loading...</span>\n                                                        </div>\n                                                        <i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />\n                                                    </>}\n                                                </>}\n\n                                                <small>\n                                                    {isPrimary && <span class='badge badge-pill badge-primary'>Primary</span>}\n                                                    {isSecondary && <span class='badge badge-pill badge-secondary'>Secondary</span>}\n                                                </small>\n                                            </button>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Harnesses extends Component {\n    toggleType(typeId) {\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: object.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { harnesses, user } = userStore;\n        const { language = 'en' } = user;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {harnesses && harnesses.map((harness, idx) => (\n                                    <div class='col px-0 mb-2'\n                                        ref={value === harness.id ? c => this.container = c : null}\n                                    >\n                                        <div class={`border\n                                            rounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === harnesses.length ? 'rounded-pill-right': '')}\n                                            p-2 ${value === harness.id ? 'bg-success' : ''}`}\n                                            style={`border-bottom: 3px solid ${harness.colorNonstop} !important;`}\n                                            onClick={() => this.toggleType(harness.id)}\n                                        >\n                                            {harness.lang && harness.lang[language] ? harness.lang[language] : harness.name}\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Status extends Component {\n    // toggleStatus(typeId) {\n    //     const { object, type, field, updateField, isNew } = this.props;\n    //     let value = toJS(object[field]);\n    //     if (value === typeId) {\n    //         value = 0;\n    //     } else {\n    //         value = typeId;\n    //     }\n    //     updateField({ id: object.id, field, value, type, isNew });\n    // }\n\n    toggleStatus(typeId) {\n        const { dogStore } = this.props.stores;\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = 0;\n        } else {\n            value = typeId;\n        }\n        if (value === 0) {\n            updateField({ id: object.id, field, value, type, isNew });\n        } else if (object.statuses.indexOf(value) > -1) {\n            dogStore.removeStatus({ id: object.id, status: value });\n        } else if (object.status) {\n            dogStore.addStatus({ id: object.id, status: value });\n        } else {\n            updateField({ id: object.id, field, value, type, isNew });\n        }\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { dogstatuses, user } = userStore;\n        const { language } = user;\n\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group  mb-4 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {dogstatuses && dogstatuses.map((status, idx) => {\n                                    const isPrimary = value === status.id;\n                                    const isSecondary = object && util.isArray(object.statuses) && object.statuses.indexOf(status.id) > -1;\n                                    return (\n                                        <div class='col mb-2 px-0'\n                                            ref={(isPrimary || isSecondary) ? c => this.container = c : null}\n                                        >\n                                            <button\n                                                class={`btn btn-block\n            \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === dogstatuses.length ? 'rounded-pill-right': '')}\n                                                    btn${(isPrimary || isSecondary) ? '' : '-outline'}-${isSecondary ? 'info' : 'success'}\n                                                    text-nowrap overflow-hidden`}\n                                                style='text-overflow: ellipsis;'\n                                                onClick={() => this.toggleStatus(status.id)}\n                                            >\n                                                {language && status.lang && status.lang[language] ? status.lang[language] : status.name}\n                                            </button>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Position extends Component {\n    toggleStatus(typeId) {\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: object.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { dogPositions } = userStore;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group  mb-4 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        {dogPositions && dogPositions.map(status => (\n                            <div class='offset-2 col-8 mb-2'>\n                                <div class={`border rounded rounded-pill px-3 py-1 bg-${value === status.id ? status.class || 'success' : ''}`}\n                                    onClick={() => this.toggleStatus(status.id)}\n                                    style='line-height: 1.1em; cursor: pointer; pointer-events: inherit;'\n                                >\n                                    <small>\n                                        {status.name}\n                                    </small>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass DogsEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newDog: {},\n            submenu: props.submenu || 'info',\n        };\n        this.updateTimer = {};\n    }\n\n    async loadDog() {\n\t\tconst { dogStore } = this.props.stores;\n        if (this.props.dog === 'new') {\n            this.setState({ createNew: true });\n        } else {\n            await dogStore.load(this.props.dog, false, { addData: ['team', 'user', 'workoutSummary', 'vaccineStatuses', 'historyStatuses', 'vaccineLogStatuses', 'allDogs'] });\n        }\n    }\n\n\tresetDog() {\n\t\tthis.setState({\n            newDog: {},\n            createNew: false,\n        });\n\t}\n\n\tinsertDog = async () => {\n\t\tconst { newDog } = this.state;\n\t\tconst { dogStore } = this.props.stores;\n\t\tawait dogStore.insert({ ...newDog });\n        this.resetDog();\n        route(`/dogs/`);\n\t}\n\n    updateField = (e) => {\n        const { id, field, type, elementtype, isNew } = e.target.dataset;\n        const { value, type: fieldType, min, max } = e.target;\n        // console.log({ id, field, fieldType, type, elementtype, value, min, max });\n        if (fieldType === 'date') {\n            if (min && max) {\n                if (value >= min && value <= max) {\n                    this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n                }\n            } else {\n                this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n            }\n        } else {\n            this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n        }\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const { dogStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { dog } = dogStore;\n        if (field === 'images') {\n            if (Array.isArray(dog.images) && Array.isArray(value)) {\n                localObjectValue = [...dog.images, ...value];\n            }\n        }\n        if (field === 'files') {\n            if (Array.isArray(dog.files)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.files, ...value];\n                } else {\n                    localObjectValue = [...dog.files, value];\n                }\n            }\n        }\n        if (field === 'achievements') {\n            if (Array.isArray(dog.achievements)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.achievements, ...value];\n                } else {\n                    localObjectValue = [...dog.achievements, value];\n                }\n            }\n        }\n        if (field === 'links') {\n            if (Array.isArray(dog.links)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.links, ...value];\n                } else {\n                    localObjectValue = [...dog.links, value];\n                }\n            }\n        }\n\n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n        if (isNew) {\n            dogStore.updateObjectKeyValue('newDog', field, value);\n        } else {\n            dogStore.updateField(id, field, localObjectValue);\n            if (skipTimer) {\n                this.doUpdateField(id, field, newValue);\n            } else {\n                clearTimeout(this.updateTimer[field]);\n                this.updateTimer[field] = setTimeout(async () => {\n                    this.doUpdateField(id, field, newValue);\n                }, 500);\n            }\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { dogStore } = this.props.stores;\n        await dogStore.saveField(id, field, value);\n    }\n\n    chooseMother = (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = dogStore;\n        const dogId = parseInt(e.target.value, 10);\n        const motherDog = dogStore.findDog(dogId);\n\n        if (motherDog) {\n            this.updateFieldValue({ id: dog.id, field: 'mother', value: motherDog.id, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'motherName', value: motherDog.name, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'motherChipId', value: motherDog.chipId, skipTimer: true });\n        } else {\n            this.updateFieldValue({ id: dog.id, field: 'mother', value: null, skipTimer: true });\n        }\n    }\n\n    chooseFather = (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = dogStore;\n        const dogId = parseInt(e.target.value, 10);\n        const fatherDog = dogStore.findDog(dogId);\n\n        if (fatherDog) {\n            this.updateFieldValue({ id: dog.id, field: 'father', value: fatherDog.id, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'fatherName', value: fatherDog.name, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'fatherChipId', value: fatherDog.chipId, skipTimer: true });\n        } else {\n            this.updateFieldValue({ id: dog.id, field: 'father', value: null, skipTimer: true });\n        }\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/edit/${dog.id}/${submenu}`);\n\t}\n\n    back = () => {\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/${dog.id}`);\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\tcomponentDidMount() {\n        this.loadDog();\n    }\n\n\trender() {\n        const { createNew, newDog, submenu } = this.state;\n\t\tconst { dogStore, userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\t\tconst { insertStatus, saved, dog } = dogStore;\n        const dogFemales = dogStore.findDogsByGender('female');\n        const dogMales = dogStore.findDogsByGender('male');\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        const { name } = dog;\n        if (createNew) {\n            return (\n                <div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                    <button class='btn btn-link float-left pl-0 fixed-top text-primary'\n                        style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                        onClick={this.back}\n                    >\n                        <i class='fas fa-arrow-circle-left' />\n                    </button>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <div>\n                                <h5 style='padding-left: 35px;'><Text id='dogs.add-new'>Legg til ny hund</Text></h5>\n                                <div class='form-group'>\n                                    <label for='nameInput'><Text id='dogs.name'>Navn</Text></label>\n                                    <input type='text' class='form-control' id='nameInput' aria-describedby='nameHelp'\n                                        onInput={linkState(this, 'newDog.name')}\n                                        value={newDog.name}\n                                    />\n                                    <small id='nameHelp' class='form-text text-muted'><Text id='dogs.name-of-dog'>Fullt navn på hunden.</Text></small>\n                                </div>\n                                <button type='button' class='btn btn-primary'\n                                    onClick={this.insertDog}\n                                >\n                                    <Text id='dogs.save-new'>Registrer ny hund</Text>\n                                </button>\n\n                                {insertStatus && <div class='alert alert-success mt-4 col-12' role='alert'>\n                                    <Text id='dogs.dog-saved'>Hunden er lagret</Text> 🐕\n                                </div>}\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link float-left pl-0 fixed-top'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}\n                >\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\t\t\t\t<div class='row'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <div class='clearfix'>\n                            <div class={`text-center border rounded-circle imageRounded float-right`} style={dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\");` : ''}>\n                                {!dog.image && <i class='fas fa-dog text-muted mt-3' style='font-size: 40px;' />}\n                            </div>\n                            <span class='float-right'>\n                                {daysUntilBirthday < 7 && <>\n                                    <span class='text-muted mr-2'>\n                                        <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                                    </span>\n                                </>}\n                                {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                            </span>\n                            <h5 style='padding-left: 35px;'>\n                                <Text id='dogs.edit'>Endre</Text>: {name}\n                                {hasBirthday && <>\n                                    <i class='fas fa-birthday-cake ml-3' />\n                                </>}\n                            </h5>\n                        </div>\n                    </div>\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <div class='row'>\n                            <div class='col-12 my-3'>\n                                <div class='row'>\n                                    <div class='w-100 overflow-hidden'>\n                                        <div\n                                            class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                            style='overflow: auto; scroll-snap-type: x mandatory;'\n                                        >\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='info'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-info-circle' /> <Text id='dogs.info'>Info</Text></button>\n\t\t                                        {submenu === 'info' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'status' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='status'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-thermometer' /> <Text id='dogs.status'>Status</Text></button>\n\t\t                                        {submenu === 'status' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'pictures' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='pictures'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-images' /> <Text id='dogs.pictures'>Pictures</Text></button>\n\t\t                                        {submenu === 'pictures' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='team'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-users' /> <Text id='dogs.team'>Team</Text></button>\n\t\t                                        {submenu === 'team' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'relations' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='relations'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-project-diagram' /> <Text id='dogs.relations'>Relations</Text></button>\n\t\t                                        {submenu === 'relations' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'achievements' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='achievements'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-clock' /> <Text id='dogs.achievements'>Achievements</Text></button>\n\t\t                                        {submenu === 'achievements' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'links' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='links'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-link' /> <Text id='dogs.links'>Links</Text></button>\n\t\t                                        {submenu === 'links' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'advanced' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='advanced'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-cogs' /> <Text id='dogs.log'>Advanced</Text></button>\n\t\t                                        {submenu === 'advanced' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\n                        {submenu === 'info' && <>\n                            <Localizer>\n                                <Input saved={saved} dog={dog} field='name'\n                                    title={<Text id='dogs.full-name'>Fullt navn</Text>}\n                                    help={<Text id='dogs.full-name-help'>Fullt navn på hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n                                <Input saved={saved} dog={dog} field='shortname'\n                                    title={<Text id='dogs.short-name'>Kallenavn</Text>}\n                                    help={<Text id='dogs.short-name-help'>Kallenavnet på hunden. Hva roper du på innkalling?</Text>}\n                                    onInput={this.updateField}\n                                />\n                                <Input saved={saved} dog={dog} field='gender' type='select'\n                                    datalist={[\n                                        ['male', <Text id='dogs.gender-male'>Male</Text>],\n                                        ['female', <Text id='dogs.gender-female'>Female</Text>]\n                                    ]}\n                                    title={<Text id='dogs.gender'>Kjønn</Text>}\n                                    help={<Text id='dogs.gender-help'>Kjønn på hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n                                <Input saved={saved} dog={dog} field='chipId'\n                                    title={<Text id='dogs.chip-id'>Chip ID</Text>}\n                                    help={<Text id='dogs.chip-id-help'>Chip ID på hunden. Står ofte i vetrinærhåndbok eller passet.</Text>}\n                                    onInput={this.updateField}\n                                />\n                                <Input saved={saved} dog={dog} field='birth' type='date' min='2000-01-01' max='today'\n                                    title={<Text id='dogs.birth'>Fødselsdato</Text>}\n                                    help={<Text id='dogs.birth-help'>Fødselsdato på hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n                                <Harnesses stores={this.props.stores} saved={saved} object={dog} type='number' field='harness'\n                                    title={<Text id='dogs.harness-size'>Selestørrelse</Text>}\n                                    help={<Text id='dogs.harness-size-help'>Sele til hunden</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                                <Input saved={saved} dog={dog} field='description' icon='fas fa-paragraph' type='textarea'\n                                    title={<Text id='dogs.description'>Beskrivelse</Text>}\n                                    help={<Text id='dogs.description-help'>Beskrivelse av hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n\n                                <div class='mt-5 pt-5'>\n                                    <Input saved={saved} dog={dog} field='deceased' type='date' min='2000-01-01' max='today'\n                                        title={<Text id='dogs.deceased'>Død</Text>}\n                                        help={<Text id='dogs.deceased-help'>Dødsdato for hunden.</Text>}\n                                        onInput={this.updateField}\n                                    />\n                                </div>\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'status' && <>\n                            <Localizer>\n                                <Status stores={this.props.stores} saved={saved} object={dog} type='number' field='status'\n                                    title={<Text id='dogs.status'>Status</Text>}\n                                    help={<Text id='dogs.status-help'>Status til hunden</Text>}\n                                    updateField={this.updateFieldValue} />\n                                <Input saved={saved} dog={dog} field='specialNeeds'\n                                    title={<Text id='dogs.special-needs'>Spesielle behov</Text>}\n                                    help={<Text id='dogs.special-needs-help'>Har hunden spesielle behov? Trenger ekstra mat, utstyr eller annet? Eks: \"Ekstra fett\", \"Husk ulveklobandasje\", etc.</Text>}\n                                    onInput={this.updateField} />\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'pictures' && <>\n                            <Localizer>\n                                <Input saved={saved} dog={dog} field='imageOther' type='image' icon='fas fa-camera'\n                                    stores={this.props.stores}\n                                    title={<Text id='dogs.photo'>Bilde</Text>}\n                                    help={<Text id='dogs.photo-help'>Bilder av hunden.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                    showImages={true}\n                                />\n                                <Input saved={saved} dog={dog} field='image' type='image' icon='fas fa-portrait'\n                                    stores={this.props.stores}\n                                    title={<Text id='dogs.profile-photo'>Profilbilde</Text>}\n                                    help={<Text id='dogs.profile-photo-help'>Profilbilde av hunden.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                    showImages={true}\n                                />\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'team' && <>\n                            <Localizer>\n                                <Teams stores={this.props.stores} saved={saved} object={dog} type='number' field='team'\n                                    title={<Text id='dogs.team'>Team</Text>}\n                                    help={<Text id='dogs.team-help'>Team som hunden er på.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                                <Position stores={this.props.stores} saved={saved} object={dog} type='number' field='position'\n                                    title={<Text id='dogs.position'>Plass i spannet</Text>}\n                                    help={<Text id='dogs.position-help'>Foretrukket plass i spannet.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'relations' && <>\n                            <h5 class='mt-5'><Text id='dogs.mother'>Mor</Text></h5>\n                            <select class='form-control' aria-describedby='fatherHelp'\n                                value={dog.mother}\n                                onInput={this.chooseMother}\n                            >\n                                <option value=''>-- <Text id='dogs.choose-mother'>Velg blant dine hunder</Text> --</option>\n                                {dogFemales && dogFemales.map(d => <option value={d.id}>{d.name} - {util.age(d.birth, d.deceased)}</option>)}\n                            </select>\n                            <Localizer>\n                                <Input saved={saved} dog={dog} field='motherName' type='text'\n                                    title={<Text id='dogs.mother-name'>Navn på mor</Text>}\n                                    help={<Text id='dogs.mother-name-help'>Navn på moren til denne hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n                                <Input saved={saved} dog={dog} field='motherChipId' type='text'\n                                    title={<Text id='dogs.mother-chipid'>Chip ID på mor</Text>}\n                                    help={<Text id='dogs.mother-chipid-help'>Chip ID til moren til denne hunden. Dersom hunden finnes blant dine hunder, så vil den bli koblet sammen.</Text>}\n                                    onInput={this.updateField}\n                                />\n                                <Input saved={saved} dog={dog} field='motherComment'\n                                    title={<Text id='dogs.mother-comment'>Kommentar til mor</Text>}\n                                    help={<Text id='dogs.mother-comment-help'>Kommentar til moren til denne hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n                            </Localizer>\n\n                            <h5 class='mt-5'><Text id='dogs.father'>Far</Text></h5>\n                            <select class='form-control' aria-describedby='fatherHelp'\n                                value={dog.father}\n                                onInput={this.chooseFather}\n                            >\n                                <option value=''>-- <Text id='dogs.choose-father'>Velg blant dine hunder</Text> --</option>\n                                {dogMales && dogMales.map(d => <option value={d.id}>{d.name} - {util.age(d.birth, d.deceased)}</option>)}\n                            </select>\n                            <Localizer>\n                                <Input saved={saved} dog={dog} field='fatherName' type='text'\n                                    title={<Text id='dogs.father-name'>Navn på far</Text>}\n                                    help={<Text id='dogs.father-name-help'>Navn på faren til denne hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n                                <Input saved={saved} dog={dog} field='fatherChipId' type='text'\n                                    title={<Text id='dogs.father-chipid'>Chip ID på far</Text>}\n                                    help={<Text id='dogs.father-chipid-help'>Chip ID til faren til denne hunden. Dersom hunden finnes blant dine hunder, så vil den bli koblet sammen.</Text>}\n                                    onInput={this.updateField}\n                                />\n                                <Input saved={saved} dog={dog} field='fatherComment'\n                                    title={<Text id='dogs.father-comment'>Kommentar til far</Text>}\n                                    help={<Text id='dogs.father-comment-help'>Kommentar til faren til denne hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'links' && <>\n                            <Localizer>\n                                <Input saved={saved} dog={dog} field='links' type='text' icon='fas fa-link'\n                                    stores={this.props.stores}\n                                    title={<Text id='dogs.links'>Linker</Text>}\n                                    help={<Text id='dogs.links-help'>Linker til denne hunden.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'achievements' && <>\n                            <Localizer>\n                                <Input saved={saved} dog={dog} field='achievements' type='text' icon='fas fa-clock'\n                                    stores={this.props.stores}\n                                    title={<Text id='dogs.achievements'>Bragder</Text>}\n                                    help={<Text id='dogs.achievements-help'>Bragder til denne hunden.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'advanced' && <>\n                            <Localizer>\n                                <Input saved={saved} dog={dog} field='files' type='file' icon='fas fa-file'\n                                    stores={this.props.stores}\n                                    title={<Text id='dogs.files'>Files</Text>}\n                                    help={<Text id='dogs.files-help'>Filer til denne hunden.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </Localizer>\n                        </>}\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DogsEdit;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n"],"sourceRoot":""}