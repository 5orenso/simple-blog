{"version":3,"sources":["webpack:///./routes/news/edit.js","webpack:///./components/form/files.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_TOP_BACK","marginTopBack","MARGIN_BOTTOM","marginBottom","initialState","isLoading","Input","observer","Component","handleImageErrored","e","image","target","onerror","setTimeout","src","Date","removeImage","async","newsStore","props","stores","news","id","name","parentElement","dataset","removeMainImage","field","updateField","this","value","render","saved","type","rows","title","icon","help","onInput","max","min","step","maxValue","util","isoDate","undefined","class","for","images","map","img","s3SmallLink","onError","onClick","data-name","object","autoOpen","style","aria-describedby","data-id","data-field","InputNew","updateObjectKeyValue","newNews","NewsEdit","constructor","super","elementtype","fieldType","updateFieldValue","parseInt","datatype","skipTimer","newValue","localObjectValue","Array","isArray","split","parseFloat","doUpdateField","clearTimeout","updateTimer","insertNewNews","result","insert","console","log","data","route","back","createNew","state","setState","load","saveField","componentDidMount","loadNews","userStore","isAdmin","onclick","Files","handleAddImage","file","files","uploadStatus","before","after","apiUrl","height","width"],"mappings":"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","file":"44.chunk.98f7a.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\n\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n    \n    removeImage = async (e) => {\n        const { newsStore } = this.props.stores;\n        const { news } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        newsStore.removeImage({\n            id: news.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { news, field, updateField } = this.props;\n        updateField({ id: news.id, field, value: {} });\n    }\n\n    render() {\n        // const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField } = this.props;\n        const { saved, news, type = 'text', rows, field, title, icon, help, onInput, updateField, max, min, step } = this.props;\n        let value = news[field];\n        let maxValue = max;\n        if (type === 'date') {\n            if (value) {\n                value = util.isoDate(news[field], false, false, true);\n            }\n            if (max === 'today') {\n                maxValue = util.isoDate(undefined, false, false, true);\n            }\n        }\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {news.images && news.images.map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Del</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={news} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${news.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='news.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Files saved={saved} object={news} field={field} updateField={updateField} />\n                    {saved[`${field}.${news.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='news.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'textarea') {\n            return (\n                <div class={`form-group ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea type={type} class={`form-control ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        rows={rows}\n                        data-id={news.id}\n                        data-field={field}\n                        onInput={onInput}\n                    />\n                    {saved[`${field}.${news.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='news.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n\n        return (\n            <div class={`form-group ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type={type} class={`form-control ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    value={value}\n                    min={min}\n                    max={maxValue}\n                    step={step}\n                    data-id={news.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${news.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='news.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass InputNew extends Component {\n    onInput = (e) => {\n        const { field } = this.props;\n        const value = e.target.value;\n        const { newsStore } = this.props.stores;\n        // console.log('adStore.newAd', adStore.newAd);\n        newsStore.updateObjectKeyValue('newNews', field, value);\n    }\n\n    render() {\n        const { field, icon, title, help } = this.props;\n        const { newsStore } = this.props.stores;\n        const { newNews } = newsStore;\n        return (\n            <div class='form-group'>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type='text' class={`form-control`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    onInput={this.onInput}\n                    value={newNews[field]}\n                />\n                <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n            </div>\n        );\n    }\n}\n\n@observer\nclass NewsEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n\tasync loadNews(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { newsStore } = this.props.stores;\n\t\tawait newsStore.load(props.id);\n\t}\n\n    updateField = (e) => {\n        const { id, field, type, elementtype } = e.target.dataset;\n        const { value, type: fieldType, min, max } = e.target;\n        // console.log({ id, field, fieldType, type, elementtype, value, min, max });\n        if (fieldType === 'date') {\n            if (min && max) {\n                if (value >= min && value <= max) {\n                    this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype });\n                }\n            } else {\n                this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype });\n            }\n        } else {\n            this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype });\n        }\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, skipTimer = false }) => {\n        const { newsStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { news } = newsStore;\n        if (field === 'images') {\n            if (Array.isArray(news.images) && Array.isArray(value)) {\n                localObjectValue = [...news.images, ...value];\n            }\n        }\n    \n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n       \n        newsStore.updateField(id, field, localObjectValue);\n        if (skipTimer) {\n            this.doUpdateField(id, field, newValue);\n        } else {\n            clearTimeout(this.updateTimer[field]);\n            this.updateTimer[field] = setTimeout(async () => {\n                this.doUpdateField(id, field, newValue);\n            }, 500);\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { newsStore } = this.props.stores;\n        await newsStore.saveField(id, field, value);\n    }\n\n    insertNewNews = async () => {\n        const { newsStore } = this.props.stores;\n\t\tconst { newNews } = newsStore;\n\t\tconst result = await newsStore.insert({ ...newNews });\n        console.log({ result });\n        const { data } = result;\n        if (data && data.id) {\n            route(`/news/edit/${data.id}`);\n        }\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadNews();\n\t}\n\n    back = () => {\n        const { createNew } = this.props;\n        const { newsStore } = this.props.stores;\n\t\tconst { news } = newsStore;\n        if (createNew) {\n            route(`/news/`);\n        } else {\n            route(`/news/${news.id}`);\n        }\n    }\n\n\trender() {\n        const { createNew } = this.props;\n\t\tconst { newsStore, userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n        if (!isAdmin) {\n            return '';\n        }\n\t\tconst { news, saved } = newsStore;\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <div class='d-flex justify-content-between mb-2'>\n                    <div>\n                        <button class='btn btn-link pl-0 fixed-top text-primary'\n                            style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                            onClick={this.back}>\n                            <i class='fas fa-arrow-circle-left' />\n                        </button>\n                    </div>\n                    <div>\n                        <h5 class='text-muted'>News and howto content</h5>\n                    </div>\n                    <div>\n                        &nbsp;\n                    </div>\n                </div>\n\n\t\t\t\t{createNew ? (\n                    <div class='row'>\n                        <div class='col-12'>\n                            <h5><Text id='news.add-new'>Lag nytt innhold</Text></h5>\n                            <InputNew stores={this.props.stores} field='title' icon='fas fa-heading'\n                                title={<Text id='news.title'>Tittel</Text>}\n                                help={<Text id='news.title-help'>Title of this news story</Text>} />\n                            <InputNew stores={this.props.stores} field='tag' icon='fas fa-eye'\n                                title={<Text id='news.tag'>Tag</Text>}\n                                help={<Text id='news.tag-help'>Tag of this news story</Text>}\n                                onInput={this.updateField} />\n                            <button\n                                type='button'\n                                class='btn btn-primary mb-2'\n                                onclick={this.insertNewNews}\n                            >Save news</button>\n                        </div>\n                    </div>\n                ) : (\n                    <div class='row'>\n                        <div class='col-12'>\n                            <Input saved={saved} news={news} field='title' icon='fas fa-heading'\n                                title={<Text id='news.title'>Title</Text>}\n                                help={<Text id='news.title-help'>Title of this news story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input stores={this.props.stores} saved={saved} news={news} field='date' icon='fas fa-calendar' type='date' min='2010-01-01' max='today'\n                                title={<Text id='news.date'>Dato</Text>}\n                                help={<Text id='news.date-help'>Date for this news article. Format is: 'YYYY-MM-DD'.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n\n                            <Input saved={saved} news={news} field='active' icon='fas fa-heading'\n                                title={<Text id='news.active'>Active</Text>}\n                                help={<Text id='news.active-help'>Is this active yet?</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='sort' icon='fas fa-sort-amount-down'\n                                title={<Text id='news.sort'>Sort order</Text>}\n                                help={<Text id='news.sort-help'>Highest number on top.</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='tag' icon='fas fa-heading'\n                                title={<Text id='news.tag'>Tag</Text>}\n                                help={<Text id='news.tag-help'>Tag of this news story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='ingress' icon='fas fa-quote-right'\n                                type='textarea'\n                                title={<Text id='news.ingress'>Ingress</Text>}\n                                help={<Text id='news.ingress-help'>Ingress of this news story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='body' icon='fas fa-quote-right'\n                                type='textarea' rows={20}\n                                title={<Text id='news.body'>Body</Text>}\n                                help={<Text id='news.body-help'>Body of this news story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='image' type='image' icon='fas fa-camera'\n                                stores={this.props.stores}\n                                title={<Text id='news.photo'>Bilder</Text>} \n                                help={<Text id='news.photo-help'>Images for this news story.</Text>}\n                                onInput={this.updateField} updateField={this.updateFieldValue} />\n    \t\t\t\t\t</div>\n    \t\t\t\t</div>\n                )}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NewsEdit;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n"],"sourceRoot":""}