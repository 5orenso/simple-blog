{"version":3,"sources":["webpack:///./components/util/scrollIntoView.js","webpack:///./components/form/files.js","webpack:///./routes/workouts/edit.js"],"names":["initialState","ScrollIntoView","observer","props","state","container","componentDidMount","this","horizontal","vertical","behavior","inline","block","scrollIntoView","render","ref","c","Component","Files","handleAddImage","file","updateField","id","object","field","value","files","uploadStatus","before","after","autoOpen","class","apiUrl","style","height","width","MARGIN_TOP","mu","marginTop","MARGIN_TOP_BACK","marginTopBack","MARGIN_BOTTOM","marginBottom","newWorkout","InputNew","onInput","e","workoutStore","stores","updateObjectKeyValue","target","Date","getTime","updateDuration","name","util","isUndefined","onInputDuration","parseInt","decDuration","closest","dataset","newValue","incDuration","setDateToNow","isoDate","undefined","setTimeToNow","isoTime","setRightValue","rightValueReal","displayValue","type","datalist","min","max","step","title","icon","help","placeholder","rightValue","maxValue","secToHms","checkNested","yr","toJS","instant","details","date","air_temperature","wind_speed","windDirection","wind_from_direction","cloud_area_fraction","air_pressure_at_sea_level","relative_humidity","for","list","aria-describedby","map","el","hh","Math","floor","mi","data-name","onClick","data-field","checked","rows","onKeyUp","resizeTextarea","onFocus","Input","workout","parts","split","isNaN","ss","match","handleImageErrored","image","onerror","setTimeout","src","removeImage","parentElement","removeMainImage","setValue","insertValue","saved","elementtype","asNumber","images","img","s3SmallLink","onError","data-id","data-value","data-type","data-elementtype","Mushers","toggleMusher","musherId","isNew","idx","indexOf","splice","push","mushers","userStore","musher","firstname","lastname","email","Teams","toggleTeam","teamId","dogStore","selectTeam","teams","removeTeam","team","addTeam","setCurrentTeam","isDefined","highlight","isPrimary","isSecondary","isArray","length","hintTeam","role","Tracks","toggleFilter","setState","showAll","toggleSearchField","showSearchField","toggleTrack","trackId","track","types","DAY_OF_WEEK","getDays","user","language","skipTimer","distanceKm","elevation","dayOfWeek","getDay","find","filterText","tracks","filter","trackFilter","RegExp","filteredTracks","linkState","format","hintTrack","Types","updateTextField","toggleType","typeId","raceStore","hasRaces","getSignupByUserEmail","lang","Intensities","intensities","intensity","hintIntensity","Equipments","toggleEquipment","equipmentId","equipments","equipment","RaceInProgress","raceInProgress","activeRace","race","WorkoutsEdit","loadAll","loadDogs","loadWorkout","loadRaceInProgress","lastWorkout","fallbackTeam","lastUsedTracks","dogs","workouts","currentTeam","createNew","load","query","skipUpdate","limit","sort","dogsLeft","dogsRight","duration","rest","rating","sledWeight","w","d","ucfirst","isLoading","deceased","addData","insertWorkout","response","insert","status","PubSub","publish","topics","STATUS_MESSAGE","message","error","resetDog","getInfo","route","data","updateFieldValue","totalDistance","gpx","gpxInfo","maxSpeed","avgSpeed","ascent","decent","startLatlng","endLatlng","updateObject","roundTo","speedmax","speedAvg","save","localObjectValue","datatype","Array","parseFloat","doUpdateField","clearTimeout","updateTimer","dogFilter","back","history","goBack","getYrWeather","firstPoint","midPoint","weather","weatherMid","yrValue","yrDate","workoutDate","getFirstPoint","getMidPoint","getWeather","lat","lon","altitude","temperature","chooseSubmenu","submenu","menu","toggleAdminDebug","showAdminDebug","updateKeyValue","saveField","viewmode","appState","isAdmin","insertStatus","findTeam","raceTeams","isStationary","data-menu","public","showPositions","key","getNestedValue","isLocked","minEpoch","startTime","maxEpoch","endTime","avgMovingSpeeds","avgGpsSpeed","avgGpsMovingSpeed","calculatedTotalDistance","calculatedAscend","calculatedDescend","descent","mapId","geojson","geoJSON"],"mappings":"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","file":"16.chunk.007a2.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nimport PubSub, { topics } from '../../lib/pubsub';\n// import DatePicker from '../../components/form/datePicker';\n// import TimePicker from '../../components/form/timePicker';\nimport Images from '../../components/form/images';\nimport Dogs from '../../components/dog/dogs';\nimport Map from '../../components/map';\nimport Files from '../../components/form/files';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\nconst initialState = {\n    newWorkout: {},\n};\n\n@observer\nclass InputNew extends Component {\n    onInput = (e) => {\n        const { field } = this.props;\n        const value = e.target.value;\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', field, value);\n        workoutStore.updateObjectKeyValue('newWorkout', `updated-${field}`, new Date().getTime());\n    }\n\n    updateDuration = (name, value) => {\n        const { field } = this.props;\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', name, value);\n        const { newWorkout } = workoutStore;\n\n        if (util.isUndefined(newWorkout[`${field}-hours`])) {\n            // const hh = Math.floor(newWorkout[field] / 3600);\n            const hh = 0;\n            workoutStore.updateObjectKeyValue('newWorkout', `${field}-hours`, hh);\n        }\n        if (util.isUndefined(newWorkout[`${field}-minutes`])) {\n            // const mi = Math.floor(newWorkout[field] % 3600 / 60);\n            const mi = 0;\n            workoutStore.updateObjectKeyValue('newWorkout', `${field}-minutes`, mi);\n        }\n        // console.log({ newWorkout, field, name, value });\n        // console.log({ newWorkout, field, name, value });\n        const hours = newWorkout[`${field}-hours`] || 0;\n        const minutes = newWorkout[`${field}-minutes`] || 0;\n        const combinedValue = (hours * 3600) + (minutes * 60);\n        workoutStore.updateObjectKeyValue('newWorkout', field, combinedValue);\n        workoutStore.updateObjectKeyValue('newWorkout', `updated-${field}`, new Date().getTime());\n    }\n\n    onInputDuration = (e) => {\n        const value = parseInt(e.target.value, 10);\n        const name = e.target.name;\n        this.updateDuration(name, value);\n    }\n\n    decDuration = (e) => {\n        const { name } = e.target.closest('button').dataset;\n        const { workoutStore } = this.props.stores;\n        const { newWorkout } = workoutStore;\n        const currentValue = newWorkout[name] || 0\n        const newValue = currentValue - 1;\n        const value = newValue < 0 ? 0 : newValue;\n        // console.log({ name, currentValue, newValue, value });\n        this.updateDuration(name, value);\n    }\n\n    incDuration = (e) => {\n        const { name } = e.target.closest('button').dataset;\n        const { workoutStore } = this.props.stores;\n        const { newWorkout } = workoutStore;\n        const currentValue = newWorkout[name] || 0\n        const newValue = currentValue + 1;\n        const value = newValue < 0 ? 0 : newValue;\n        this.updateDuration(name, value);\n    }\n\n    // selectDate = (value) => {\n    //     const { field } = this.props;\n    //     const { workoutStore } = this.props.stores;\n    //     workoutStore.updateObjectKeyValue('newWorkout', field, util.isoDate(value));\n    // }\n\n    setDateToNow = () => {\n        const { field } = this.props;\n        const value = util.isoDate(undefined, false, false, true);\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', field, value);\n    }\n\n    setTimeToNow = () => {\n        const { field } = this.props;\n        const value = util.isoTime();\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', field, value);\n    }\n\n    setRightValue = () => {\n        const { field, rightValueReal } = this.props;\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', field, rightValueReal);\n    }\n\n    render() {\n        const { type, datalist = [], min, max, step, elementtype, field, title, icon, help, placeholder, rightValue, updateField } = this.props;\n        const { workoutStore } = this.props.stores;\n        const { newWorkout } = workoutStore;\n        let maxValue = max;\n        if (type === 'date') {\n            if (max === 'today') {\n                maxValue = util.isoDate(undefined, false, false, true);\n            }\n        }\n        let displayValue;\n        if (field === 'duration' || field === 'rest') {\n            displayValue = util.secToHms(newWorkout[field], true);\n        }\n        if (field === 'weather' && util.checkNested(newWorkout, 'yr', '0', 'instant', 'details')) {\n            const yr = toJS(newWorkout.yr[0].instant.details);\n            const yrDate = util.isoDate(newWorkout.yr[0].date, false, false, true);\n            const workoutDate = util.isoDate(newWorkout.date, false, false, true);\n            // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n            if (yrDate === workoutDate) {\n                displayValue = `Yr.no: 🌡️ ${yr.air_temperature}°C, 💨 ${yr.wind_speed}m/s 🧭 ${mu.windDirection(yr.wind_from_direction)}, ☁️ ${yr.cloud_area_fraction}%, ${yr.air_pressure_at_sea_level}mb, 💦 ${yr.relative_humidity}%`;\n            }                        \n        }\n        if (field === 'temperature' && util.checkNested(newWorkout, 'yr', '0', 'instant', 'details')) {\n            const yr = toJS(newWorkout.yr[0].instant.details);\n            const yrDate = util.isoDate(newWorkout.yr[0].date, false, false, true);\n            const workoutDate = util.isoDate(newWorkout.date, false, false, true);\n            // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n            if (yrDate === workoutDate) {\n                displayValue = `Yr.no: 🌡️ ${yr.air_temperature}°C`;\n            }                        \n        }\n        if (type === 'datalist') {\n            return (\n                <div class={`form-group mb-1 pb-1 border-bottom`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <input list={`list-${field}`} class={`form-control`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        onInput={this.onInput}\n                        value={newWorkout[field]}\n                    />\n                    <datalist id={`list-${field}`} >\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </datalist>\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n                </div>\n            );\n        }\n        if (type === 'duration') {\n            const hh = Math.floor(newWorkout[field] / 3600);\n            const mi = Math.floor(newWorkout[field] % 3600 / 60);\n            // const ss = Math.floor(newWorkout[field] % 3600 % 60);\n\n            return (\n                <div class={`form-group mb-1 pb-1 border-bottom`}>\n                    <span class='float-right'>\n                        <strong>{displayValue}</strong>\n                    </span>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='form-row'>\n                        <div class='input-group col-5 offset-1 col-xl-3 offset-xl-3'>\n                            <div class='input-group-prepend '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-hours`}\n                                    onClick={this.decDuration}\n                                ><i class='fas fa-minus' /></button>\n                            </div>\n                            <input class={`form-control text-center`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-hours`}\n                                value={hh}\n                                type='number'\n                                min='0'\n                                max='24'\n                            />\n                            <div class='input-group-append '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-hours`}\n                                    onClick={this.incDuration}\n                                ><i class='fas fa-plus' /></button>\n                            </div>\n                        </div>\n                        <div class='input-group col-5 col-xl-3'>\n                            <div class='input-group-prepend '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-minutes`}\n                                    onClick={this.decDuration}\n                                ><i class='fas fa-minus' /></button>\n                            </div>\n                            <input class={`form-control text-center`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-minutes`}\n                                value={mi}\n                                type='number'\n                                min='0'\n                                max='59'\n                            />\n                            <div class='input-group-append '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-minutes`}\n                                    onClick={this.incDuration}\n                                ><i class='fas fa-plus' /></button>\n                            </div>\n                        </div>\n                    </div>\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n                </div>\n            );\n        }\n        if (type === 'toggle') {\n            return (\n                <div class={`form-group mb-1 pb-1 border-bottom`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='custom-control custom-switch'>\n                        <input type='checkbox'\n                            class='custom-control-input'\n                            id={`${field}Input`}\n                            value={newWorkout[field] === 1 ? 0 : 1}\n                            data-field={field}\n                            onInput={this.onInput}\n                            checked={newWorkout[field] == 1 ? 'checked' : ''}\n                        />\n                        <label class='custom-control-label' for={`${field}Input`} />\n                    </div>\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n                </div>\n            );\n        }\n\n        if (type === 'textarea') {\n            return (<> \n                <div class='form-group mb-1 pb-1 border-bottom'>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea\n                        class={`form-control ${type === 'number' || type === 'date' || type === 'time' ? 'text-center' : ''}`}\n                        id={`${field}Input`}\n                        aria-describedby={`${field}Help`}\n                        min={min}\n                        max={maxValue}\n                        step={step}\n                        rows={5}\n                        onInput={this.onInput}\n                        value={newWorkout[field]}\n                        placeholder={placeholder}\n                        onKeyUp={mu.resizeTextarea}\n                        onFocus={mu.resizeTextarea}\n                    />\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n                </div>\n            </>);\n        }\n\n        return (\n            <div class='form-group mb-1 pb-1 border-bottom'>\n                {type === 'date' && <span class='float-right text-muted font-weight-lighter' onClick={this.setDateToNow}>I dag <i class='far fa-check-circle' /></span>}\n                {type === 'time' && <span class='float-right text-muted font-weight-lighter' onClick={this.setTimeToNow}>Nå <i class='far fa-check-circle' /></span>}\n                {rightValue && <span class='float-right text-muted font-weight-lighter' onClick={this.setRightValue}>{rightValue}</span>}\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                {displayValue && <span class='float-right'>\n                    <strong>{displayValue}</strong>\n                </span>}\n                <input\n                    type={type}\n                    class={`form-control ${type === 'number' || type === 'date' || type === 'time' ? 'text-center' : ''}`}\n                    id={`${field}Input`}\n                    aria-describedby={`${field}Help`}\n                    min={min}\n                    max={maxValue}\n                    step={step}\n                    onInput={this.onInput}\n                    value={newWorkout[field]}\n                    placeholder={placeholder}\n                />\n                <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n            </div>\n        );\n    }\n}\n\n@observer\nclass Input extends Component {\n    updateDuration = (name, value) => {\n        const { field, updateField, workout } = this.props;\n\n        const hhmmss = util.secToHms(workout[field]);\n        const parts = hhmmss.split(':');\n        let hh = parseInt(parts[0] || 0, 10);\n        if (isNaN(hh)) {\n            hh = 0;\n        }\n        let mi = parseInt(parts[1] || 0, 10);\n        if (isNaN(mi)) {\n            mi = 0;\n        }\n        let ss = parseInt(parts[2] || 0, 10);\n        if (isNaN(ss)) {\n            ss = 0;\n        }\n        if (name.match(/-hours/)) {\n            if (isNaN(value)) {\n                hh = 0;\n            } else {\n                hh = value;\n            }\n        }\n        if (name.match(/-minutes/)) {\n            if (isNaN(value)) {\n                mi = 0;\n            } else {\n                mi = value;\n            }\n        }\n        if (name.match(/-seconds/)) {\n            if (isNaN(value)) {\n                ss = 0;\n            } else {\n                ss = value;\n            }\n        }\n        const combinedValue = (hh * 3600) + (mi * 60) + ss;\n        updateField({ id: workout.id, field, value: combinedValue });\n\n    }\n\n    onInputDuration = (e) => {\n        const value = parseInt(e.target.value, 10);\n        const name = e.target.name;\n        this.updateDuration(name, value);\n    }\n\n    decDuration = (e) => {\n        const { name } = e.target.closest('button').dataset;\n        const { field, workout } = this.props;\n        const hhmmss = util.secToHms(workout[field]);\n        const parts = hhmmss.split(':');\n        let hh = parseInt(parts[0] || 0, 10);\n        if (isNaN(hh)) {\n            hh = 0;\n        }\n        let mi = parseInt(parts[1] || 0, 10);\n        if (isNaN(mi)) {\n            mi = 0;\n        }\n        let ss = parseInt(parts[2] || 0, 10);\n        if (isNaN(ss)) {\n            ss = 0;\n        }\n        if (name.match(/-hours/)) {\n            const value = hh - 1 < 0 ? 0 : hh - 1;\n            this.updateDuration(name, value);\n        }\n        if (name.match(/-minutes/)) {\n            const value = mi - 1 < 0 ? 0 : mi - 1;\n            this.updateDuration(name, value);\n        }\n        if (name.match(/-seconds/)) {\n            const value = ss - 1 < 0 ? 0 : ss - 1;\n            this.updateDuration(name, value);\n        }\n    }\n\n    incDuration = (e) => {\n        const { name } = e.target.closest('button').dataset;\n        const { field, workout } = this.props;\n        const hhmmss = util.secToHms(workout[field]);\n        const parts = hhmmss.split(':');\n        let hh = parseInt(parts[0] || 0, 10);\n        if (isNaN(hh)) {\n            hh = 0;\n        }\n        let mi = parseInt(parts[1] || 0, 10);\n        if (isNaN(mi)) {\n            mi = 0;\n        }\n        let ss = parseInt(parts[2] || 0, 10);\n        if (isNaN(ss)) {\n            ss = 0;\n        }\n        if (name.match(/-hours/)) {\n            const value = hh + 1 < 0 ? 0 : hh + 1;\n            this.updateDuration(name, value);\n        }\n        if (name.match(/-minutes/)) {\n            const value = mi + 1 < 0 ? 0 : mi + 1;\n            this.updateDuration(name, value);\n        }\n        if (name.match(/-seconds/)) {\n            const value = ss + 1 < 0 ? 0 : ss + 1;\n            this.updateDuration(name, value);\n        }\n\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { workoutStore } = this.props.stores;\n        const { workout } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        workoutStore.removeImage({\n            id: workout.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { workout, field, updateField } = this.props;\n        updateField({ id: workout.id, field, value: {} });\n    }\n\n    setDateToNow = () => {\n        const { field, updateField, workout } = this.props;\n        const value = util.isoDate(undefined, false, false, true);\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, type, isNew = false, skipTimer = false }) => {\n        updateField({ id: workout.id, field, value });\n    }\n\n    setTimeToNow = () => {\n        const { field, updateField, workout } = this.props;\n        const value = util.isoTime();\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, type, isNew = false, skipTimer = false }) => {\n        updateField({ id: workout.id, field, value });\n    }\n\n    setValue = (e) => {\n        const value = e.target.parentElement.dataset.value || e.target.dataset.value;\n        if (value) {\n            const { field, updateField, workout } = this.props;\n            // updateFieldValue = ({ id, field, value, datatype, elementtype, type, isNew = false, skipTimer = false }) => {\n            updateField({ id: workout.id, field, value });\n        }\n    }\n\n    setRightValue = () => {\n        const { field, updateField, workout, rightValueReal } = this.props;\n        updateField({ id: workout.id, field, value: rightValueReal });\n    }\n\n    render() {\n        const { saved, workout, type, datalist = [], min, max, step, elementtype, field, title, icon, help, onInput, updateField, rightValue } = this.props;\n        let value = toJS(workout[field]);\n        let maxValue = max;\n        if (type === 'date') {\n            if (value) {\n                value = util.isoDate(workout[field], false, false, true);\n            }\n            if (max === 'today') {\n                maxValue = util.isoDate(undefined, false, false, true);\n            }\n        }\n        // if (type === 'time') {\n        //     if (value) {\n        //         value = util.isoTime(workout[field]);\n        //     }\n        // }\n        let displayValue;\n        let insertValue;\n        if (field === 'duration' || field === 'rest') {\n            displayValue = util.secToHms(value, true);\n        }\n        if (field === 'weather' && util.checkNested(workout, 'yr', '0', 'instant', 'details')) {\n            const yr = toJS(workout.yr[0].instant.details);\n            const yrDate = util.isoDate(workout.yr[0].date, false, false, true);\n            const workoutDate = util.isoDate(workout.date, false, false, true);\n            // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n            if (yrDate === workoutDate) {\n                displayValue = `Yr.no: 🌡️ ${yr.air_temperature}°C, 💨 ${yr.wind_speed}m/s 🧭 ${mu.windDirection(yr.wind_from_direction)}, ☁️ ${yr.cloud_area_fraction}%, ${yr.air_pressure_at_sea_level}mb, 💦 ${yr.relative_humidity}%`;\n                insertValue = displayValue;\n            }                        \n        }\n        if (field === 'temperature' && util.checkNested(workout, 'yr', '0', 'instant', 'details')) {\n            const yr = toJS(workout.yr[0].instant.details);\n            const yrDate = util.isoDate(workout.yr[0].date, false, false, true);\n            const workoutDate = util.isoDate(workout.date, false, false, true);\n            // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n            if (yrDate === workoutDate) {\n                displayValue = `Yr.no: 🌡️ ${yr.air_temperature}°C`;\n                insertValue = util.asNumber(yr.air_temperature);\n            }                        \n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Files saved={saved} object={workout} field={field} updateField={updateField} />\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'image') {\n            return (\n                <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {/* {workout.image && workout.image.s3SmallLink && <div class='col-3 p-1'>\n                                <img src={workout.image.s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                <button class='btn btn-sm btn-link'\n                                    onClick={this.removeMainImage}\n                                    data-name={workout.image.name}\n                                ><i class='fas fa-trash' /> Remove</button>\n                                <span class='badge badge-success'>Main</span>\n                            </div>} */}\n                            {workout.images && workout.images.map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Remove</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={workout} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'>Endringene er lagret</div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'datalist') {\n            return (\n                <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <input list={`list-${field}`} class={`form-control ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={workout.id}\n                        data-field={field}\n                        onInput={onInput}\n                    />\n                    <datalist id={`list-${field}`} >\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </datalist>\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'duration') {\n            const hh = Math.floor(workout[field] / 3600);\n            const mi = Math.floor(workout[field] % 3600 / 60);\n            const ss = Math.floor(workout[field] % 3600 % 60);\n\n            return (\n                <div class={`form-group mb-1 pb-1 border-bottom`}>\n                    <span class='float-right'>\n                        <strong onClick={this.setValue} data-value={insertValue}>{displayValue}</strong>\n                    </span>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='form-row'>\n                        <div class='input-group col-5 offset-1 col-xl-3 offset-xl-3'>\n                            <div class='input-group-prepend '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-hours`}\n                                    onClick={this.decDuration}\n                                ><i class='fas fa-minus' /></button>\n                            </div>\n                            <input class={`form-control text-center`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-hours`}\n                                value={hh}\n                                type='number'\n                                min='0'\n                                max='24'\n                            />\n                            <div class='input-group-append '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-hours`}\n                                    onClick={this.incDuration}\n                                ><i class='fas fa-plus' /></button>\n                            </div>\n                        </div>\n                        <div class='input-group col-5 col-xl-3'>\n                            <div class='input-group-prepend '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-minutes`}\n                                    onClick={this.decDuration}\n                                ><i class='fas fa-minus' /></button>\n                            </div>\n                            <input class={`form-control text-center`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-minutes`}\n                                value={mi}\n                                type='number'\n                                min='0'\n                                max='59'\n                            />\n                            <div class='input-group-append '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-minutes`}\n                                    onClick={this.incDuration}\n                                ><i class='fas fa-plus' /></button>\n                            </div>\n                        </div>\n                        {/* <div class='form-group col-3'>\n                            <input class={`form-control`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-seconds`}\n                                value={ss}\n                                type='number'\n                                min='0'\n                                max='59'\n                            />\n                        </div> */}\n                    </div>\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'toggle') {\n            return (\n                <div class={`form-group ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='custom-control custom-switch'>\n                        <input type='checkbox'\n                            class='custom-control-input'\n                            id={`${field}Input`}\n                            value={value === 1 ? 0 : 1}\n                            data-id={workout.id}\n                            data-field={field}\n                            onInput={onInput}\n                            checked={value == 1 ? 'checked' : ''}\n                        />\n                        <label class='custom-control-label' for={`${field}Input`} />\n                    </div>\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n\n        if (type === 'textarea') {\n            return (<> \n                <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea\n                        class={`form-control ${type === 'number' || type === 'date' || type === 'time' ? 'text-center' : ''} ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}\n                        id={`${field}Input`}\n                        aria-describedby={`${field}Help`}\n                        min={min}\n                        max={maxValue}\n                        step={step}\n                        rows={5}\n                        value={value}\n                        data-id={workout.id}\n                        data-field={field}\n                        data-type={type}\n                        data-elementtype={elementtype}\n                        onInput={onInput}\n                        onKeyUp={mu.resizeTextarea}\n                        onFocus={mu.resizeTextarea}\n                    />\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            </>);\n        }\n\n        return (\n            <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                {type === 'date' && <span class='float-right text-muted font-weight-lighter' onClick={this.setDateToNow}>I dag <i class='far fa-check-circle' /></span>}\n                {type === 'time' && <span class='float-right text-muted font-weight-lighter' onClick={this.setTimeToNow}>Nå <i class='far fa-check-circle' /></span>}\n                {rightValue && <span class='float-right text-muted font-weight-lighter' onClick={this.setRightValue}>{rightValue}</span>}\n\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                {displayValue && <span class='float-right'>\n                    <strong onClick={this.setValue} data-value={insertValue}>{displayValue}</strong>\n                </span>}\n                <input type={type}\n                    class={`form-control ${type === 'number' || type === 'date' || type === 'time' ? 'text-center' : ''} ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}\n                    id={`${field}Input`}\n                    aria-describedby={`${field}Help`}\n                    min={min}\n                    max={maxValue}\n                    step={step}\n                    value={value}\n                    data-id={workout.id}\n                    data-field={field}\n                    data-type={type}\n                    data-elementtype={elementtype}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n\n@observer\nclass Mushers extends Component {\n    toggleMusher(musherId) {\n        const { workout, type, elementtype, field, updateField, isNew } = this.props;\n        const value = toJS(workout[field]) || [];\n        const idx = value.indexOf(musherId);\n        if (idx > -1) {\n            value.splice(idx, 1);\n        } else {\n            value.push(musherId);\n        }\n        updateField({ id: workout.id, field, value, type, elementtype, isNew} );\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { mushers } = userStore;\n        const { saved, workout, field, title, icon, help } = this.props;\n        const value = toJS(workout[field]) || [];\n        // console.log('Dogs.render: type, elementType, value:', type, elementtype, value);\n        return (\n            <div class={`form-group mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-column pb-2 px-1'\n                            >\n                                {mushers && mushers.map((musher, idx) => (\n                                    <div class='col mb-2 px-1'\n                                        ref={value.indexOf(musher.id) > -1 ? c => this.container = c : null}\n                                    >\n                                        <button\n                                            class={`btn btn-block \n                                                rounded-lg\n                                                btn${value.indexOf(musher.id) > -1 ? '' : '-outline'}-success\n                                                text-nowrap overflow-hidden`}\n                                            style='text-overflow: ellipsis;'\n                                            onClick={() => this.toggleMusher(musher.id)}\n                                        >\n                                            <i class='fas fa-user mr-2' />\n                                            {musher.firstname ? <>\n                                                {musher.firstname} {musher.lastname}\n                                            </> : <>\n                                                {musher.email}\n                                            </>}\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Teams extends Component {\n    toggleTeam(teamId) {\n        const { dogStore, workoutStore } = this.props.stores;\n        const { workout, type, field, updateField, isNew, selectTeam } = this.props;\n        let value = toJS(workout[field]);\n\n        if (value === teamId) {\n            value = null;\n        } else {\n            value = teamId;\n        }\n        if (value === null) {\n            updateField({ id: workout.id, field, value, type, isNew });\n        } else if (workout.teams && workout.teams.indexOf(value) > -1) {\n            workoutStore.removeTeam({ id: workout.id, team: value });\n        } else if (workout.team) {\n            workoutStore.addTeam({ id: workout.id, team: value });\n        } else {\n            dogStore.setCurrentTeam(value);\n\t\t\tworkoutStore.setCurrentTeam(value);\n            updateField({ id: workout.id, field, value, type, isNew });\n            if (util.isDefined(selectTeam)) {\n                selectTeam(teamId);\n            }\n        }        \n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { teams } = userStore;\n        const { saved, workout, field, title, icon, help } = this.props;\n        const value = toJS(workout[field]) || [];\n        const { highlight } = this.props;\n        // console.log('Dogs.render: type, elementType, value:', type, elementtype, value);\n        return (\n            <div class={`form-group mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {teams && teams.map((team, idx) => {\n                                    const isPrimary = value === team.id;\n                                    const isSecondary = workout && util.isArray(workout.teams) && workout.teams.indexOf(team.id) > -1;\n                                    return (\n                                        <div class='col mb-0 px-0'\n                                            ref={(isPrimary || isSecondary) ? c => this.container = c : null}\n                                        >\n                                            <button\n                                                class={`btn btn-block \n            \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === teams.length ? 'rounded-pill-right': '')}\n                                                    btn${(isPrimary || isSecondary) ? '' : '-outline'}-${isSecondary ? 'info' : 'success'}\n                                                    text-nowrap overflow-hidden`}\n                                                style='text-overflow: ellipsis;'\n                                                onClick={() => this.toggleTeam(team.id)}\n                                            >\n                                                {workout.hintTeam === team.id && <span class='float-right text-primary'><i class='fas fa-circle' /></span>}\n                                                <i class='fas fa-users mr-2' />\n                                                {team.name}\n                                                \n                                                {highlight && highlight.indexOf(team.id) > -1 && <>\n                                                    {value === team.id ? <>\n                                                        <i class='fas fa-check float-right' />\n                                                    </> : <>\n                                                        <div class='spinner-grow text-warning float-right' role='status'>\n                                                            <span class='sr-only'>Loading...</span>\n                                                        </div>\n                                                        <i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />   \n                                                    </>}\n                                                </>}\n                                                \n                                                <small>\n                                                    {isPrimary && <span class='badge badge-pill badge-primary'>Primary</span>}\n                                                    {isSecondary && <span class='badge badge-pill badge-secondary'>Secondary</span>}\n                                                </small>\n                                            </button>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Tracks extends Component {\n    toggleTrack(trackId, track) {\n        const { showAll } = this.state;\n        const { workout = {}, type, field, updateField, isNew } = this.props;\n        const { userStore } = this.props.stores;\n        const { types, user } = userStore;\n        const { language } = user;\n\n        const DAY_OF_WEEK = mu.getDays(language);\n\n        let value = toJS(workout[field]);\n        if (value === trackId) {\n            value = null;\n        } else {\n            value = trackId;\n        }\n        const skipTimer = true;\n        updateField({ id: workout.id, field, value, type, isNew, skipTimer });\n        if (!workout.distanceKm) {\n            updateField({ id: workout.id, field: 'distanceKm', value: track.distanceKm, type: 'number', isNew, skipTimer });\n        }\n        if (!workout.elevation) {\n            updateField({ id: workout.id, field: 'elevation', value: track.elevation, type: 'number', isNew, skipTimer });\n        }\n        if (!workout.name) {\n            const date = workout.date ? new Date(workout.date) : new Date();\n            const dayOfWeek = DAY_OF_WEEK[date.getDay()];\n            const type = types.find(e => e.id === workout.type);\n            updateField({\n                id: workout.id,\n                field: 'name',\n                value: `${track.name}: ${dayOfWeek}${type ? ` ${type.name}` : 'stur'}`,\n                type: 'string',\n                isNew,\n                skipTimer,\n            });\n        }\n        this.setState({\n            filterText: '',\n        });\n        if (showAll) {            \n            this.toggleFilter();\n        }\n    }\n\n    toggleFilter = () => {\n        const { showAll } = this.state;\n        this.setState({\n            showAll: showAll ? 0 : 1,\n        });\n    }\n\n    toggleSearchField = () => {\n        const { showSearchField } = this.state;\n        this.setState({\n            showSearchField: showSearchField ? null : 1,\n        });\n    }\n\n    render() {\n        const { showAll, filterText, showSearchField } = this.state;\n        const { userStore } = this.props.stores;\n        const { tracks } = userStore;\n        const { saved, workout, field, title, icon, help, filter = () => true } = this.props;\n        const value = toJS(workout[field]);\n        let trackFilter = showAll ? () => true : filter;\n        if (filterText) {\n            trackFilter = (e) => e.name.match(new RegExp(filterText, 'i')) || workout.track === e.id;\n        }\n        const filteredTracks = tracks.filter(trackFilter);\n\n        return (\n            <div class={`form-group mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <span class='float-right' onClick={this.toggleSearchField}><i class='fas fa-search' /></span>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    {showSearchField && <div class='row'>\n                        <div class='col-12'>\n                            <input class='form-control form-control-sm' type='text' placeholder='Søk etter runder' value={filterText} onInput={linkState(this, 'filterText')} />\n                        </div>\n                    </div>}\n                    <div class='row'>\n                        {filteredTracks && filteredTracks.map(track => (\n                            <div class='col-6 col-sm-6 col-md-6 col-lg-6 mb-2'>\n                                <div class={`border position-relative rounded p-2 pt-3 pb-1 ${value === track.id ? 'bg-success' : ''}`}\n                                    onClick={() => this.toggleTrack(track.id, track)}\n                                    style='line-height: 0.9em; cursor: pointer; pointer-events: inherit;'\n                                >\n                                    <small class='float-right position-absolute' style='top: 0; right: 5px;'>\n                                        <small>\n                                            <i class='fas fa-road' /> {util.format(track.distanceKm, 1)} km\n                                            <i class='fas fa-mountain ml-2' /> {util.format(track.elevation, 0)} m\n                                        </small>\n                                    </small>\n                                    {/* <div style='overflow: hidden; white-space: nowrap;'> */}\n                                    <div style='overflow: hidden;'>\n                                        {workout.hintTrack === track.id && <span class='float-right text-primary'><i class='fas fa-circle' /></span>}\n                                        <small>\n                                            <i class='fas fa-map-marked mr-2' />\n                                            {track.name}\n                                        </small>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                    <div class='row'>\n                        <div class='col-12 text-right'>\n                            {showAll ?\n                                <button class='btn btn-sm btn-link' onClick={this.toggleFilter}><Text id='workouts.show-last-used-tracks'>Vis kun de sist brukte rundene</Text></button> :\n                                <button class='btn btn-sm btn-link' onClick={this.toggleFilter}><Text id='workouts.show-all-tracks'>Vis alle rundene</Text></button>\n                            }\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Types extends Component {\n    toggleType(typeId) {\n        const { workout, type, field, updateField, isNew } = this.props;\n        let value = toJS(workout[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: workout.id, field, value, type, isNew });\n    }\n\n    updateTextField = (e) => {\n        const { type, updateField, isNew } = this.props;\n        const { id, field } = e.target.dataset;\n        const value = e.target.value;\n        updateField({ id: parseInt(id, 10), field, value, type, isNew });\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore, raceStore } = this.props.stores;\n        const { types, user } = userStore;\n        const { language } = user;\n        const { saved, workout, field, title, icon, help, isNew } = this.props;\n        const value = toJS(workout[field]);\n\n        const raceInProgress = raceStore.getSignupByUserEmail(user.email);\n        const hasRaces = raceInProgress.length > 0;\n\n        return (\n            <div class={`form-group mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {types && types.map((type, idx) => (\n                                    <div class='col mb-0 px-0'\n                                        ref={value === type.id ? c => this.container = c : null}\n                                    >\n                                        <button\n                                            class={`btn btn-block \n        \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === types.length ? 'rounded-pill-right': '')}                                    \n                                                btn${value === type.id ? '' : '-outline'}-success\n                                                text-nowrap overflow-hidden`}\n                                            style='text-overflow: ellipsis;'\n                                            onClick={() => this.toggleType(type.id)}\n                                        >\n                                            {type.icon && <i class={type.icon} />} {language && type.lang && type.lang[language] ? type.lang[language] : type.name}\n\n                                            {hasRaces && type.id === 2 && <>\n                                                {value === type.id ? <>\n                                                    <i class='fas fa-check float-right' />\n                                                </> : <>\n                                                    <div class='spinner-grow text-warning float-right' role='status'>\n                                                        <span class='sr-only'>Loading...</span>\n                                                    </div>\n                                                    <i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />\n                                                </>}\n                                            </>}\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    {value === 4 && (\n                        <div class='row'>\n                            {isNew ? \n                                <div class='col-12'>\n                                    <InputNew stores={this.props.stores} field='typeTitle'\n                                        title={<Text id='workouts.other'>Annet</Text>}\n                                        help={<Text id='workouts.other-help'>Hva slags type tur/aktivitet var dette?</Text>} />\n                                </div>\n                                : <div class='col-12'>\n                                    <Input saved={saved} workout={workout} field='typeTitle'\n                                        title={<Text id='workouts.other'>Annet</Text>}\n                                        help={<Text id='workouts.other-help'>Hva slags type tur/aktivitet var dette?</Text>}\n                                        onInput={this.updateTextField} />\n                                </div>}\n                        </div>\n                    )}\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Intensities extends Component {\n    toggleType(typeId) {\n        const { workout, type, field, updateField, isNew } = this.props;\n        let value = toJS(workout[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: workout.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { intensities } = userStore;\n        const { saved, workout, field, title, icon, help } = this.props;\n        const value = toJS(workout[field]);\n        return (\n            <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        {intensities && intensities.map(intensity => (\n                            <div class='col-12 mb-2'>\n                                <button\n                                    class={`btn btn-block btn${value === intensity.id ? '' : '-outline'}-${intensity.class || 'success'} text-nowrap overflow-hidden`}\n                                    style='text-overflow: ellipsis;'\n                                    onClick={() => this.toggleType(intensity.id)}\n                                >\n                                    {workout.hintIntensity === intensity.id && <span class='float-right text-primary'><i class='fas fa-circle' /></span>}\n                                    <span style='font-size: 1.5em;'>{intensity.icon || ''} {intensity.name}</span>\n                                    {intensity.help && <>\n                                        <br />\n                                        <small>{intensity.help}</small>\n                                    </>}\n                                </button>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n\n@observer\nclass Equipments extends Component {\n    toggleEquipment(equipmentId) {\n        const { workout, type, field, updateField, isNew } = this.props;\n        let value = toJS(workout[field]);\n        if (value === equipmentId) {\n            value = null;\n        } else {\n            value = equipmentId;\n        }\n        updateField({ id: workout.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { equipments, user } = userStore;\n        const { language } = user;\n        const { saved, workout, field, title, icon, help } = this.props;\n        const value = toJS(workout[field]);\n        return (\n            <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-column'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {equipments && equipments.map(equipment => (\n                                    <div class='col px-1 mb-1'>\n                                        <button\n                                            class={`btn btn-block btn${value === equipment.id ? '' : '-outline'}-success text-nowrap overflow-hidden`}\n                                            style='text-overflow: ellipsis;'\n                                            onClick={() => this.toggleEquipment(equipment.id)}\n                                        >\n                                            {equipment.icon && <i class={equipment.icon} />} {language && equipment.lang && equipment.lang[language] ? equipment.lang[language] : equipment.name}\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass RaceInProgress extends Component {\n    // loadAll = async () => {\n    //     const { raceStore } = this.props.stores;\n    //     raceStore.loadRaceInProgress();\n    // }\n\n\t// componentDidMount() {\n    //     this.loadAll();\n    // }\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const raceInProgress = raceStore.getSignupByUserEmail(user.email);\n\n        if (raceInProgress && raceInProgress.length > 0) {\n            return (\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                    <div class='alert alert-warning'>\n                        <h5><Text id='races.race-in-progress'>Løp pågår</Text></h5>\n                        <ul>\n                            {raceInProgress.map(activeRace => <li>\n                                {activeRace.race.title}\n                            </li>)}\n                        </ul>\n                        <i class='fas fa-exclamation-triangle' /> <Text id='races.choose-correct-team-and-type'>Velg riktig team og type for løpet.</Text>\n                    </div>\n                </div>\n            );\n        }\n        return '';\n    }\n}\n\n@observer\nclass WorkoutsEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            submenu: props.submenu || 'info',\n        };\n        this.updateTimer = {};\n    }\n\n    loadAll = async () => {\n        await this.loadDogs();\n        await this.loadWorkout();\n\n        const { raceStore } = this.props.stores;\n        raceStore.loadRaceInProgress();\n    }\n\n    loadWorkout = async (team) => {\n\t\tconst { workoutStore, userStore, dogStore } = this.props.stores;\n        const { user } = userStore;\n        const { language } = user;\n        const DAY_OF_WEEK = mu.getDays(language);\n\n        let { workouts = [], newWorkout } = workoutStore;\n        const { currentTeam } = workoutStore;\n        if (this.props.workout === 'new') {\n            this.setState({ createNew: true });\n            workouts = await workoutStore.load({ query: { team: (team || currentTeam) }, skipUpdate: 1, limit: 5, sort: '-createdDate' });\n            let lastWorkout = workouts[0];\n            const fallbackTeam = currentTeam || user.team;\n            if (lastWorkout) {\n                // console.log({ lastWorkout, fallbackTeam, currentTeam });\n                if (!newWorkout.team) {\n                    workoutStore.updateObjectKeyValue('newWorkout', 'team', fallbackTeam);\n                }\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogs', lastWorkout.dogs || []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogsLeft', lastWorkout.dogsLeft || []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogsRight', lastWorkout.dogsRight || []);\n                // workoutStore.updateObjectKeyValue('newWorkout', 'dogsLeft', []);\n                // workoutStore.updateObjectKeyValue('newWorkout', 'dogsRight', []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'mushers', lastWorkout.mushers);\n                // workoutStore.updateObjectKeyValue('newWorkout', 'temperature', lastWorkout.temperature || 5);\n                // workoutStore.updateObjectKeyValue('newWorkout', 'name', lastWorkout.name);\n                workoutStore.updateObjectKeyValue('newWorkout', 'type', lastWorkout.type);\n                workoutStore.updateObjectKeyValue('newWorkout', 'equipment', lastWorkout.equipment);\n                workoutStore.updateObjectKeyValue('newWorkout', 'duration', lastWorkout.duration);\n                workoutStore.updateObjectKeyValue('newWorkout', 'duration-hours', Math.floor(lastWorkout.duration / 3600));\n                workoutStore.updateObjectKeyValue('newWorkout', 'duration-minutes', Math.floor(lastWorkout.duration % 3600 / 60));\n                workoutStore.updateObjectKeyValue('newWorkout', 'rest', lastWorkout.rest || 0);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rest-hours', Math.floor(lastWorkout.rest / 3600) || 0);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rest-minutes', Math.floor(lastWorkout.rest % 3600 / 60) || 0);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rating', lastWorkout.rating || 3);\n                workoutStore.updateObjectKeyValue('newWorkout', 'sledWeight', lastWorkout.sledWeight);\n\n                if (!newWorkout['updated-date']) {\n                    workoutStore.updateObjectKeyValue('newWorkout', 'date', util.isoDate(lastWorkout.date, false,  false, true));\n                }\n                if (!newWorkout['updated-time']) {\n                    workoutStore.updateObjectKeyValue('newWorkout', 'time', util.isoTime(lastWorkout.date));\n                }\n\n                workoutStore.updateObjectKeyValue('newWorkout', 'hintTeam', lastWorkout.team);\n                workoutStore.updateObjectKeyValue('newWorkout', 'hintType', lastWorkout.type);\n                workoutStore.updateObjectKeyValue('newWorkout', 'hintTrack', lastWorkout.track);\n                workoutStore.updateObjectKeyValue('newWorkout', 'hintIntensity', lastWorkout.intensity);\n\n                const lastUsedTracks = workouts.map(w => w.track);\n                this.setState({ lastUsedTracks });\n            } else {\n                const date = new Date();\n                const dayOfWeek = DAY_OF_WEEK[date.getDay()];\n                const dogs = await dogStore.load({ query: { team: (team || currentTeam) }, skipUpdate: 1 });\n                if (!newWorkout.team) {\n                    workoutStore.updateObjectKeyValue('newWorkout', 'team', fallbackTeam);\n                }\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogs', dogs.map(d => d.id) || []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogsLeft', []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogsRight', []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'mushers', [user.id]);\n                workoutStore.updateObjectKeyValue('newWorkout', 'name', util.ucfirst(`${dayOfWeek} - Tur med hundene`));\n                // workoutStore.updateObjectKeyValue('newWorkout', 'temperature', 5);\n                workoutStore.updateObjectKeyValue('newWorkout', 'type', 1);\n                workoutStore.updateObjectKeyValue('newWorkout', 'equipment', 2);\n                workoutStore.updateObjectKeyValue('newWorkout', 'duration', 3600);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rest', 0);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rating', 3);\n                workoutStore.updateObjectKeyValue('newWorkout', 'date', util.isoDate(undefined, false,  false, true));\n                workoutStore.updateObjectKeyValue('newWorkout', 'time', util.isoTime());\n            }\n            workoutStore.updateObjectKeyValue('newWorkout', 'temperature', -1);\n        } else {\n            workoutStore.load(this.props.workout);\n        }\n    }\n\n    loadDogs = async () => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { dogStore } = this.props.stores;\n\t\t// const { currentTeam } = dogStore;\n\t\t// await dogStore.load({ query: { team: currentTeam }, addData: ['workoutSummary'] });\n\t\tawait dogStore.load({ query: { deceased: 0 }, addData: ['workoutSummary'] });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tresetDog() {\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateKeyValue('newWorkout', {});\n\t}\n\n\tinsertWorkout = async () => {\n\t\tconst { workoutStore, userStore } = this.props.stores;\n\t\tconst { newWorkout } = workoutStore;\n\t\tconst response = await workoutStore.insert({ ...newWorkout });\n        if (response.status === 422) {\n            PubSub.publish(topics.STATUS_MESSAGE, {\n\t\t\t\tmessage: 'Mangler tittel på treningsøkten',\n\t\t\t\ttype: 'warning',\n\t\t\t\ticon: 'fas fa-exclamation-triangle',\n\t\t\t});\n        } else if (response.status >= 500) {\n            PubSub.publish(topics.STATUS_MESSAGE, {\n\t\t\t\tmessage: response.message || response.error,\n\t\t\t\ttype: 'danger',\n\t\t\t\ticon: 'fas fa-exclamation-triangle',\n\t\t\t});\n        } else {\n            this.resetDog();\n            userStore.getInfo();\n            route(`/workouts/${response.data.id}`);\n        }\n\t}\n\n    updateField = (e) => {\n        const { id, field, type, elementtype, isNew } = e.target.dataset;\n        const { value, type: fieldType, min, max } = e.target;\n        // console.log({ id, field, fieldType, type, elementtype, value, min, max });\n        if (fieldType === 'date') {\n            if (min && max) {\n                if (value >= min && value <= max) {\n                    this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n                }\n            } else {\n                this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n            }\n        } else {\n            this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n        }\n    }\n\n    updateFieldValue = async ({ id, field, value, datatype, elementtype, type, isNew = false, skipTimer = false }) => {\n        const { workoutStore } = this.props.stores;\n        let newValue = value;\n        let localObjectValue = value;\n        const { workout } = workoutStore;\n        if (field === 'images') {\n            if (Array.isArray(workout.images) && Array.isArray(value)) {\n                localObjectValue = [...workout.images, ...value];\n            }\n        }\n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n        if (isNew) {\n            workoutStore.updateObjectKeyValue('newWorkout', field, value);\n        } else {\n            workoutStore.updateField(id, field, localObjectValue);\n            if (skipTimer) {\n                await this.doUpdateField(id, field, newValue);\n            } else {\n                clearTimeout(this.updateTimer[field]);\n                this.updateTimer[field] = setTimeout(async () => {\n                    this.doUpdateField(id, field, newValue);\n                }, 500);\n            }\n        }\n\n        // GPX update stuff\n        if (field === 'gpx' && workout && util.checkNested(workout, 'gpx', 'gpxInfo')) {\n            const { totalDistance, maxSpeed, avgSpeed, ascent, decent, duration, rest, startLatlng, endLatlng } = workout.gpx.gpxInfo;\n            const updateObject = {};\n            if (duration) {\n                workoutStore.updateField(id, 'duration', duration);\n                updateObject.duration = duration;\n            }\n            if (rest) {\n                workoutStore.updateField(id, 'rest', rest);\n                updateObject.rest = rest;\n            }\n            if (totalDistance) {\n                workoutStore.updateField(id, 'distanceKm', util.roundTo(totalDistance, 10));\n                updateObject.distanceKm = util.roundTo(totalDistance, 10);\n            }\n            if (maxSpeed) {\n                workoutStore.updateField(id, 'speedmax', util.roundTo(maxSpeed, 10));\n                updateObject.speedmax = util.roundTo(maxSpeed, 10);\n            }\n            if (avgSpeed) {\n                workoutStore.updateField(id, 'speedAvg', util.roundTo(avgSpeed, 10));\n                updateObject.speedAvg = util.roundTo(avgSpeed, 10);\n            }\n            if (ascent) {\n                workoutStore.updateField(id, 'elevation', ascent);\n                updateObject.elevation = ascent;\n            }\n            if (decent) {\n                workoutStore.updateField(id, 'decent', decent);\n                updateObject.decent = decent;\n            }\n            if (startLatlng) {\n                workoutStore.updateField(id, 'startLatlng', startLatlng);\n                updateObject.startLatlng = startLatlng;\n            }\n            if (endLatlng) {\n                workoutStore.updateField(id, 'endLatlng', endLatlng);\n                updateObject.endLatlng = endLatlng;\n            }\n            await workoutStore.save(updateObject, workout.id);\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { workoutStore } = this.props.stores;\n        if (id && field) {\n            await workoutStore.saveField(id, field, value);\n        }\n    }\n\n    dogFilter = (e) => {\n        const { workoutStore } = this.props.stores;\n        const { workout } = workoutStore;\n        if (workout && workout.dogs) {\n            return (e.team === workout.team || workout.dogs.indexOf(e.id) > -1);\n        }\n        return false;\n    }\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n    getYrWeather = async (position) => {\n        const { createNew } = this.state;\n        const { workoutStore, userStore } = this.props.stores;\n\t\tconst { workout = {}, newWorkout } = workoutStore;\n\n        const firstPoint = mu.getFirstPoint(workout);\n        const midPoint = mu.getMidPoint(workout, 0.5);\n        // const endPoint = mu.getMidPoint(workout, 1);\n\n        const weather = await userStore.getWeather({ lat: firstPoint[0], lon: firstPoint[1], altitude: firstPoint[2] });\n        const weatherMid = await userStore.getWeather({ lat: midPoint[0], lon: midPoint[1], altitude: midPoint[2] });\n\n        if (createNew) {\n            this.updateFieldValue({ id: newWorkout.id, field: 'yr', value: weather, isNew: true, skipTimer: false });\n            this.updateFieldValue({ id: newWorkout.id, field: 'yrMid', value: weatherMid, isNew: true, skipTimer: false });\n            if (util.checkNested(newWorkout, 'yr', '0', 'instant', 'details') && !newWorkout.weather) {\n                let yrValue = '';\n                const yr = toJS(newWorkout.yr[0].instant.details);\n                // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n                yrValue = `Yr.no: 🌡️ ${yr.air_temperature}°C, 💨 ${yr.wind_speed}m/s 🧭 ${mu.windDirection(yr.wind_from_direction)}, ☁️ ${yr.cloud_area_fraction}%, ${yr.air_pressure_at_sea_level}mb, 💦 ${yr.relative_humidity}%`;\n                // console.log({ yrValue });\n                this.updateFieldValue({ id: newWorkout.id, field: 'weather', value: yrValue, isNew: true, skipTimer: false });\n                if (!newWorkout.temperature) {\n                    this.updateFieldValue({ id: newWorkout.id, field: 'temperature', value: yr.air_temperature, isNew: true, skipTimer: false });\n                }\n            }\n\n        } else {\n            this.updateFieldValue({ id: workout.id, field: 'yr', value: weather, isNew: false, skipTimer: false });\n            this.updateFieldValue({ id: workout.id, field: 'yrMid', value: weatherMid, isNew: false, skipTimer: false });\n            if (util.checkNested(workout, 'yr', '0', 'instant', 'details')) {\n                let yrValue = '';\n                const yr = toJS(workout.yr[0].instant.details);\n                const yrDate = util.isoDate(workout.yr[0].date, false, false, true);\n                const workoutDate = util.isoDate(workout.date, false, false, true);\n                // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n                if (yrDate === workoutDate && (!workout.weather || workout.weather === '')) {\n                    yrValue = `Yr.no: 🌡️ ${yr.air_temperature}°C, 💨 ${yr.wind_speed}m/s 🧭 ${mu.windDirection(yr.wind_from_direction)}, ☁️ ${yr.cloud_area_fraction}%, ${yr.air_pressure_at_sea_level}mb, 💦 ${yr.relative_humidity}%`;\n                    // console.log({ yrValue, yrDate, workoutDate });\n                    this.updateFieldValue({ id: workout.id, field: 'weather', value: yrValue, isNew: false, skipTimer: false });\n                    if (!workout.temperature) {\n                        this.updateFieldValue({ id: workout.id, field: 'temperature', value: yr.air_temperature, isNew: true, skipTimer: false });\n                    }\n                }\n            }\n        }\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n    toggleAdminDebug = () => {\n        const { showAdminDebug } = this.state;\n        this.setState({ showAdminDebug: !showAdminDebug });\n    }\n\n\tcomponentDidMount() {\n        this.loadAll();\n    }\n\n\trender() {\n        const { createNew, lastUsedTracks, submenu, showAdminDebug = true } = this.state;\n\t\tconst { workoutStore, userStore, appState, raceStore } = this.props.stores;\n        const { viewmode } = appState;\n        const { isAdmin, user } = userStore;\n\t\tconst { insertStatus, saved, workout = {}, newWorkout = {}, workoutLocations, isTracking } = workoutStore;\n        const { currentTeam: currentTeamId } = workoutStore;\n        const currentTeam = userStore.findTeam(workout.team || currentTeamId, true);\n\n        const raceInProgress = raceStore.getSignupByUserEmail(user.email);\n        const raceTeams = raceInProgress.map(e => parseInt(e.musher.team, 10));\n\n        const { name, gpxInfo = {}, gpx = { gpxInfo: {} } } = workout;\n\n        let isStationary = false;\n        if (createNew) {\n            isStationary = [6, 8].indexOf(newWorkout.type) > -1;\n        } else {\n            isStationary = [6, 8].indexOf(workout.type) > -1;\n        }\n\n        if (createNew) {\n            return (\n                <div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                    <button class='btn btn-link float-left pl-0 fixed-top text-primary'\n                        style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                        onClick={this.back}\n                    >\n                        <i class='fas fa-arrow-circle-left' />\n                    </button>\n                    <div class='row'>\n                        <RaceInProgress stores={this.props.stores} />\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3' style='padding-left: 35px;'>\n                            <div> \n                                <h5><Text id='workouts.add-new'>Legg til ny treningstur</Text></h5>\n                            </div>\n                        </div>\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <div class='row'>\n                                <div class='w-100 overflow-hidden'>\n                                    <div\n                                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                                    >\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='info'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-info-circle' /> <Text id='workouts.info'>Info</Text></button>\n                                            {submenu === 'info' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='team'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-users' /> <Text id='workouts.team'>Team</Text></button>\n                                            {submenu === 'team' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'user' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='user'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-user' /> <Text id='workouts.user'>Musher</Text></button>\n                                            {submenu === 'user' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'images' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='images'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-images' /> <Text id='workouts.images'>Bilder</Text></button>\n                                            {submenu === 'images' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'gps' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='gps'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-map-marker-alt' /> <Text id='workouts.gps'>GPS</Text></button>\n                                            {submenu === 'gps' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'equipment' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='equipment'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-sleigh' /> <Text id='workouts.equipment'>Equipment</Text></button>\n                                            {submenu === 'equipment' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'advanced' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='advanced'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-cogs' /> <Text id='workouts.advanced'>advanced</Text></button>\n                                            {submenu === 'advanced' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        {submenu === 'info' && <>\n                            {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                        <Types stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='type' icon='fas fa-running'\n                                            title={<Text id='workouts.type'>Type tur</Text>}\n                                            help={<Text id='workouts.type-help'>Type treningstur. 'trening', 'konkurranse', 'tur'.</Text>}\n                                            updateField={this.updateFieldValue} />\n                                </div>\n                            </>}\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='name' icon='fas fa-heading'\n                                    title={<Text id='workouts.title'>Tittel</Text>}\n                                    help={<Text id='workouts.title-help'>Tittel på denne turen. 'Fin høsttur i øsende regn...'</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='comment' type='textarea'\n                                    title={<Text id='workouts.comment'>Kommentar</Text>}\n                                    help={<Text id='workouts.comment-help'>Kommentar til turen. Hvordan gikk det?</Text>}\n                                />\n                            </div>\n                            {currentTeam && currentTeam.public > 0 && <>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <InputNew stores={this.props.stores} field='private' icon='fas fa-eye' type='toggle'\n                                        title={<Text id='workouts.private'>Skjul treningsturen</Text>}\n                                        help={<Text id='workouts.private-help'>Skal denne turen være skjult for de som følger teamet ditt?</Text>}\n                                    />\n                                </div>\n                            </>}\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='date' icon='fas fa-calendar' type='date' min='2010-01-01' max='today'\n                                    title={<Text id='workouts.date'>Dato</Text>}\n                                    help={<Text id='workouts.date-help'>Dato for turen. Format på dato er: 'YYYY-MM-DD'.</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='time' icon='fas fa-clock' type='time'\n                                    title={<Text id='workouts.time'>Klokka</Text>}\n                                    help={<Text id='workouts.time-help'>Klokkeslett for turen. Format: 'HH:MI'.</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='duration' type='duration' icon='fas fa-stopwatch'\n                                    title={<Text id='workouts.duration'>Varighet på treningen</Text>}\n                                    help={<Text id='workouts.duration-help'>Hvor lenge var du ute? (HH:MI)</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='rest' type='duration' icon='fas fa-stopwatch'\n                                    title={<Text id='workouts.rest'>Hviletid på treningen</Text>}\n                                    help={<Text id='workouts.rest-help'>Hvor lenge stod du stille? (HH:MI)</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                    <InputNew stores={this.props.stores} field='speedAvg'\n                                        rightValue={`${util.format(mu.speedAvg({\n                                            duration: newWorkout.duration,\n                                            rest: newWorkout.rest,\n                                            distanceKm: newWorkout.distanceKm,\n                                        }), 1, '.', ' ')} km/t`}\n                                        rightValueReal={mu.speedAvg({\n                                            duration: newWorkout.duration,\n                                            rest: newWorkout.rest,\n                                            distanceKm: newWorkout.distanceKm,\n                                        })}\n                                        updateField={this.updateFieldValue}\n                                        icon='fas fa-tachometer-alt'\n                                        type='number' min='0' max='100' step='0.1'\n                                        title={<Text id='workouts.avg-speed'\n                                    >Gjennomsnittsfart</Text>}\n                                        help={<Text id='workouts.avg-speed-help'>Gjennomsnittsfart når du var i bevegelse. Dersom du ikke vet dette så legger du bare inn distanse og varighet så blir dette regnet ut.</Text>} />\n                                </>}\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <div class='row px-0'>\n                                    <div class='col-6'>\n                                        <InputNew stores={this.props.stores} field='distanceKm' icon='fas fa-road'\n                                            title={<Text id='workouts.distance'>Distanse i km</Text>}\n                                            type='number' min='0' max='300' step='1'\n                                            help={<Text id='workouts.distance-help'>Hvor lang var turen i km.</Text>}\n                                        />\n                                    </div>\n                                    <div class='col-6'>\n                                        <InputNew stores={this.props.stores} field='elevation' icon='fas fa-mountain'\n                                            title={<Text id='workouts.ascend'>Høydemeter</Text>}\n                                            type='number' min='0' max='3000' step='1'\n                                            help={<Text id='workouts.ascend-help'>Høydemeter du klatret på denne turen.</Text>}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </>}\n\n                        {submenu === 'team' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Teams stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='team' icon='fas fa-users'\n                                    title={<Text id='workouts.team'>Team</Text>}\n                                    help={<Text id='workouts.team-help'>Teamet som er på tur.</Text>}\n                                    updateField={this.updateFieldValue} selectTeam={this.loadWorkout}\n                                    highlight={raceTeams}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Dogs stores={this.props.stores} isNew={1} saved={saved} object={newWorkout} type='array' icon='fas fa-dog' elementtype='number' field='dogs'\n                                    title={<Text id='workouts.dogs'>Hunder</Text>}\n                                    help={<Text id='workouts.dogs-help'>Hvilke hunder var med på turen.</Text>}\n                                    updateField={this.updateFieldValue} filter={(e) => (e.team === newWorkout.team || (newWorkout.dogs && newWorkout.dogs.indexOf(e.id) > -1))}\n                                    showPositions={isStationary ? false : ['beta', 'advanced', 'normal'].indexOf(viewmode) > -1}\n                                    currentTeam={currentTeam}\n                                    key={`dogs-${util.getNestedValue(currentTeam, 'id')}`}\n                                />\n                            </div>\n                        </>}\n\n                        {submenu === 'user' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Mushers stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='array' elementtype='number' field='mushers' icon='fas fa-user'\n                                    title={<Text id='workouts.mushers'>Kjørere</Text>}\n                                    help={<Text id='workouts.mushers-help'>Hvem av kjørerne var med på turen.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>                        \n                        </>}\n\n                        {submenu === 'images' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <div class='text-center text-muted'>\n                                    <div class='display-1'><i class='fas fa-images' /></div>\n                                    <Text id='workouts.save-to-add-images'>Please save workout and then go into edit mode to add images.</Text>\n                                </div>                                \n                            </div>\n                        </>}\n\n                        {submenu === 'gps' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <div class='text-center text-muted mb-3'>\n                                    <div class='display-1'><i class='fas fa-map-marker-alt' /></div>\n                                    <Text id='workouts.save-to-add-gpx'>Please save workout and then you will be able to upload a GPX-file if you like.</Text>\n                                </div> \n\n                                <Tracks stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='track' icon='fas fa-map-marked'\n                                    title={<Text id='workouts.track'>Runde</Text>}\n                                    help={<Text id='workouts.track-help'>Hvilken treningsrunde er dette.</Text>}\n                                    updateField={this.updateFieldValue} filter={(e) => (e.id === newWorkout.track || (lastUsedTracks && lastUsedTracks.indexOf(e.id) > -1))}\n                                />\n                            </div>\n                        </>}\n\n                        {submenu === 'equipment' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Equipments stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='equipment' icon='fas fa-sleigh'\n                                    title={<Text id='workouts.equipment'>Utstyr</Text>}\n                                    help={<Text id='workouts.equipment-help'>Utstyr som ble brukt. 'trollvogn', 'atv', 'slede'.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='sledWeight' icon='fas fa-sleigh'\n                                    title={<Text id='workouts.sledWeight'>Sledevekt</Text>}\n                                    help={<Text id='workouts.sledWeight-help'>Vekt på sleden denne turen.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                        </>}\n\n                        {submenu === 'advanced' && <>\n                            {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <InputNew stores={this.props.stores} field='weather' icon='fas fa-cloud-sun-rain'\n                                        title={<Text id='workouts.weather'>Været på turen</Text>}\n                                        help={<Text id='workouts.weather-help'>Hvordan var været.</Text>}\n                                    />\n                                </div>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <InputNew stores={this.props.stores} field='temperature' icon='fas fa-temperature-low'\n                                        title={<Text id='workouts.temperature'>Temperatur</Text>}\n                                        type='number' min='-40' max='20' step='0.5'\n                                        help={<Text id='workouts.temperature-help'>Hvilken temperatur var det.</Text>}\n                                    />\n                                </div>\n                            </>}\n                            {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <InputNew stores={this.props.stores} field='rating' icon='fas fa-dice'\n                                        title={<Text id='workouts.rating'>Rating av turen</Text>}\n                                        type='number' min='0' max='6' step='1'\n                                        help={<Text id='workouts.rating-help'>Din rating av turen. 1-6</Text>}\n                                    />\n                                </div>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <Intensities stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='intensity' icon='fas fa-dumbbell'\n                                        title={<Text id='workouts.intensity'>Intensitet</Text>}\n                                        help={<Text id='workouts.intensity-help'>Hvor stor belastning var denne turen?</Text>}\n                                        updateField={this.updateFieldValue}\n                                    />\n                                </div>\n                            </>}\n                        </>}\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <div class={`form-group mb-1 pb-1 border-bottom`}>\n                                <button type='button' class='btn btn-block btn-primary'\n                                    onClick={this.insertWorkout}\n                                >\n                                    <Text id='workouts.add-save-new'>Lagre treningstur</Text>\n                                </button>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    {insertStatus && <div class='alert alert-success mt-4 col-12' role='alert'>\n\t\t\t\t\t\t<Text id='workouts.workout-saved'>Treningen er lagret.</Text>\n\t\t\t\t\t</div>}\n\n                </div>\n            );\n        }\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link float-left pl-0 fixed-top'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}\n                >\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\t\t\t\t<div class='row'>\n                    <RaceInProgress stores={this.props.stores} />\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3' style='padding-left: 35px;'>                       \n                        <div>\n                            <h5><Text id='workouts.edit-workout'>Endre trening</Text>: {name}                                \n                                {workout.isLocked === 1 && <i class='fas fa-lock text-danger ml-3' />}\n                            </h5>\n                        </div>\n                    </div>\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                        <div class='row'>\n                            <div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='info'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-info-circle' /> <Text id='workouts.info'>Info</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='team'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-users' /> <Text id='workouts.team'>Team</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'user' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='user'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-user' /> <Text id='workouts.user'>Musher</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'images' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='images'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-images' /> <Text id='workouts.images'>Bilder</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'gps' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='gps'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-map-marker-alt' /> <Text id='workouts.gps'>GPS</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'equipment' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='equipment'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-sleigh' /> <Text id='workouts.equipment'>Equipment</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'advanced' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='advanced'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-cogs' /> <Text id='workouts.advanced'>advanced</Text></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {submenu === 'info' && <>\n                        {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Types stores={this.props.stores} saved={saved} workout={workout} type='number' field='type' icon='fas fa-running'\n                                    title={<Text id='workouts.type'>Type tur</Text>}\n                                    help={<Text id='workouts.type-help'>Type treningstur. 'trening', 'konkurranse', 'tur'.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                        </>}\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='name' icon='fas fa-heading'\n                                title={<Text id='workouts.title'>Tittel</Text>}\n                                help={<Text id='workouts.title-help'>Tittel på denne turen. 'Fin høsttur i øsende regn...'</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='comment' type='textarea'\n                                title={<Text id='workouts.comment'>Kommentar</Text>}\n                                help={<Text id='workouts.comment-help'>Kommentar til turen. Hvordan gikk det?</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            {currentTeam && currentTeam.public > 0 && <Input stores={this.props.stores} saved={saved} workout={workout} field='private' icon='fas fa-eye' type='toggle'\n                                title={<Text id='workouts.private'>Skjul treningsturen</Text>}\n                                help={<Text id='workouts.private-help'>Skal denne turen være skjult for de som følger teamet ditt?</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />}\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input stores={this.props.stores} saved={saved} workout={workout} field='date' icon='fas fa-calendar' type='date' min='2010-01-01' max='today'\n                                title={<Text id='workouts.date'>Dato</Text>}\n                                help={<Text id='workouts.date-help'>Dato for turen. Format på dato er: 'YYYY-MM-DD'.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                            {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                {isAdmin && gpxInfo.minEpoch > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.minEpoch: {util.isoDate(gpxInfo.minEpoch, true, true)} <br />\n                                </small>}\n                                {isAdmin && gpx.gpxInfo && gpx.gpxInfo.startTime > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpx.gpxInfo.startTime {util.isoDate(gpx.gpxInfo.startTime, true, true)} <br />\n                                </small>}\n                            </div>}\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input stores={this.props.stores} saved={saved} workout={workout} field='time' icon='fas fa-clock' type='time'\n                                title={<Text id='workouts.time'>Klokka</Text>}\n                                help={<Text id='workouts.time-help'>Klokkeslett for turen. Format: 'HH:MI'.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='duration' type='duration' icon='fas fa-stopwatch'\n                                title={<Text id='workouts.duration'>Varighet på treningen</Text>}\n                                help={<Text id='workouts.duration-help'>Hvor lenge var du ute? (HH:MI)</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                            {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                {isAdmin && gpxInfo.minEpoch > 0 && gpxInfo.maxEpoch > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.maxEpoch-minEpoch: {util.secToHms(gpxInfo.maxEpoch - gpxInfo.minEpoch)} <br />\n                                </small>}\n                                {isAdmin && gpxInfo.duration > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.duration: {util.secToHms(gpxInfo.duration)} <br />\n                                </small>}\n                                {isAdmin && gpx.gpxInfo && gpx.gpxInfo.endTime > 0 && gpx.gpxInfo.startTime > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpx.gpxInfo.endTime-startTime: {util.secToHms((gpx.gpxInfo.endTime - gpx.gpxInfo.startTime) / 1000)} <br />\n                                </small>}\n                                {isAdmin && gpx.gpxInfo && gpx.gpxInfo.duration > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpx.gpxInfo.duration: {util.secToHms(gpx.gpxInfo.duration)} <br />\n                                </small>}\n                            </div>}\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='rest' type='duration' icon='fas fa-stopwatch'\n                                title={<Text id='workouts.rest'>Hviletid på treningen</Text>}\n                                help={<Text id='workouts.rest-help'>Hvor lenge stod du stille? (HH:MI)</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                            {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                {isAdmin && gpxInfo.minEpoch > 0 && gpxInfo.maxEpoch > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.maxEpoch-minEpoch: {util.secToHms(gpxInfo.rest)} <br />\n                                </small>}\n                                {isAdmin && gpxInfo.rest > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.rest: {util.secToHms(gpxInfo.rest)} <br />\n                                </small>}\n                                {isAdmin && gpx.gpxInfo && gpx.gpxInfo.rest > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpx.gpxInfo.rest: {util.secToHms(gpx.gpxInfo.rest)} <br />\n                                </small>}\n                            </div>}\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            {!isStationary && <>\n                                {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                    <Input saved={saved} workout={workout} field='speedAvg'\n                                        rightValue={`${util.format(mu.speedAvg({\n                                            duration: workout.duration,\n                                            rest: workout.rest,\n                                            distanceKm: workout.distanceKm,\n                                        }), 1, '.', ' ')} km/t`}\n                                        rightValueReal={mu.speedAvg({\n                                            duration: workout.duration,\n                                            rest: workout.rest,\n                                            distanceKm: workout.distanceKm,\n                                        })}\n                                        updateField={this.updateFieldValue}\n                                        icon='fas fa-tachometer-alt'\n                                        title={<Text id='workouts.avg-speed'>Gjennomsnittsfart</Text>}\n                                        type='number' min='0' max='100' step='0.1'\n                                        help={<Text id='workouts.avg-speed-help'>Gjennomsnittsfart når du var i bevegelse. Dersom du ikke vet dette så legger du bare inn distanse og varighet så blir dette regnet ut.</Text>}\n                                        onInput={this.updateField}\n                                    />\n                                    {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                        {isAdmin && gpxInfo.avgMovingSpeeds > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                            gpxInfo.avgMovingSpeeds {util.format(gpxInfo.avgMovingSpeeds * 3.6, 2)} km/t <br />\n                                        </small>}\n                                        {isAdmin && gpxInfo.avgGpsSpeed > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                            gpxInfo.avgGpsSpeed {util.format(gpxInfo.avgGpsSpeed * 3.6, 2)} km/t <br />\n                                        </small>}\n                                        {isAdmin && gpxInfo.avgGpsMovingSpeed > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                            gpxInfo.avgGpsMovingSpeed {util.format(gpxInfo.avgGpsMovingSpeed * 3.6, 2)} km/t <br />\n                                        </small>}\n                                        {isAdmin && gpx.gpxInfo && gpx.gpxInfo.avgSpeed > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                            gpx.gpxInfo.avgSpeed {util.format(gpx.gpxInfo.avgSpeed * 3.6, 2)} km/t <br />\n                                        </small>}\n                                    </div>}\n                                </>}\n                            </>}\n                        </div>\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <div class='row px-0'>\n                                {!isStationary && <>\n                                    <div class='col-6'>\n                                        <Input saved={saved} workout={workout} field='distanceKm' icon='fas fa-road'\n                                            title={<Text id='workouts.distance'>Distanse i km</Text>}\n                                            type='number' min='0' max='300' step='1'\n                                            help={<Text id='workouts.distance-help'>Hvor lang var turen i km.</Text>}\n                                            onInput={this.updateField}\n                                            updateField={this.updateFieldValue}\n                                        />\n                                        {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                            {isAdmin && gpxInfo.calculatedTotalDistance > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpxInfo.calculatedTotalDistance: {util.format(gpxInfo.calculatedTotalDistance, 2)} km <br />\n                                            </small>}\n                                            {isAdmin && gpx.gpxInfo && gpx.gpxInfo.totalDistance > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpx.gpxInfo.totalDistance: {util.format(gpx.gpxInfo.totalDistance, 2)} km <br />\n                                            </small>}\n                                        </div>}\n                                    </div>\n                                    <div class='col-6'>\n                                        <Input saved={saved} workout={workout} field='elevation' icon='fas fa-mountain'\n                                            title={<Text id='workouts.ascend'>Høydemeter</Text>}\n                                            type='number' min='0' max='3000' step='1'\n                                            help={<Text id='workouts.ascend-help'>Høydemeter du klatret på denne turen.</Text>}\n                                            onInput={this.updateField}\n                                            updateField={this.updateFieldValue}\n                                        />\n                                        {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                            {isAdmin && gpxInfo.calculatedAscend > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpxInfo.calculatedAscend: {util.format(gpxInfo.calculatedAscend, 0)} m <br />\n                                            </small>}\n                                            {isAdmin && gpxInfo.calculatedDescend > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpxInfo.calculatedDescend: {util.format(gpxInfo.calculatedDescend, 0)} m <br />\n                                            </small>}\n                                            {isAdmin && gpx.gpxInfo && gpx.gpxInfo.ascent > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpx.gpxInfo.ascent: {util.format(gpx.gpxInfo.ascent, 0)} m <br />\n                                            </small>}\n                                            {isAdmin && gpx.gpxInfo && gpx.gpxInfo.descent > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpx.gpxInfo.descent: {util.format(gpx.gpxInfo.descent, 0)} m <br />\n                                            </small>}\n                                        </div>}\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n\n                    </>}\n\n                    {submenu === 'team' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Teams stores={this.props.stores} saved={saved} workout={workout} type='number' field='team' icon='fas fa-users'\n                                title={<Text id='workouts.team'>Team</Text>}\n                                help={<Text id='workouts.team-help'>Teamet som er på tur.</Text>}\n                                updateField={this.updateFieldValue}\n                                highlight={raceTeams}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Dogs stores={this.props.stores} saved={saved} object={workout} type='array' elementtype='number' field='dogs' icon='fas fa-dog'\n                                title={<Text id='workouts.dogs'>Hunder</Text>}\n                                help={<Text id='workouts.dogs-help'>Hvilke hunder var med på turen.</Text>}\n                                updateField={this.updateFieldValue}  filter={this.dogFilter}\n                                showPositions={isStationary ? false : ['beta', 'advanced', 'normal'].indexOf(viewmode) > -1}\n                                currentTeam={currentTeam}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'user' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Mushers stores={this.props.stores} saved={saved} workout={workout} type='array' elementtype='number' field='mushers' icon='fas fa-user'\n                                title={<Text id='workouts.mushers'>Kjørere</Text>}\n                                help={<Text id='workouts.mushers-help'>Hvem av kjørerne var med på turen.</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'images' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='image' type='image'\n                                stores={this.props.stores}\n                                title={<Text id='workouts.photos'>Bilder</Text>}\n                                help={<Text id='workouts.photos-help'>Legg til bilde fra treningen.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'gps' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            {gpx && <div style='height: 300px;'>\n                                <Map stores={this.props.stores} mapId={workout.id} geojson={gpx.geoJSON} gpxInfo={gpx.gpxInfo} height={300} />\n                            </div>}\n                            <Input saved={saved} workout={workout} field='gpx' type='file'\n                                title={<Text id='workouts.gpx'>Gpx</Text>}\n                                help={<Text id='workouts.gpx-help'>Gpx til denne treningen.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Tracks stores={this.props.stores} saved={saved} workout={workout} type='number' field='track' icon='fas fa-map-marked'\n                                title={<Text id='workouts.track'>Runde</Text>}\n                                help={<Text id='workouts.track-help'>Hvilken treningsrunde er dette.</Text>}\n                                updateField={this.updateFieldValue}\n                                filter={(e) => (e.id === workout.track)}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'equipment' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Equipments stores={this.props.stores} saved={saved} workout={workout} type='number' field='equipment' icon='fas fa-sleigh'\n                                title={<Text id='workouts.equipment'>Utstyr</Text>}\n                                help={<Text id='workouts.equipment-help'>Utstyr som ble brukt. 'trollvogn', 'atv', 'slede'.</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='sledWeight' type='number' step='1' icon='fas fa-sleigh'\n                                title={<Text id='workouts.sledWeight'>Sledevekt</Text>}\n                                help={<Text id='workouts.sledWeight-help'>Vekt på sleden denne turen.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'advanced' && <>\n                        {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                {!util.checkNested(workout, 'yr', '0', 'instant', 'details') && <button class='btn btn-sm float-right btn-secondary' onClick={this.getYrWeather}>\n                                    <Text id='workouts.fetch-weather'>Hent fra yr</Text>\n                                </button>}\n                                <Input saved={saved} workout={workout} field='weather' icon='fas fa-cloud-sun-rain'\n                                    title={<Text id='workouts.weather'>Været på turen</Text>}\n                                    help={<Text id='workouts.weather-help'>Hvordan var været.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Input saved={saved} workout={workout} field='temperature' icon='fas fa-temperature-low'\n                                    title={<Text id='workouts.temperature'>Temperatur</Text>}\n                                    type='number' min='-40' max='20' step='0.5' \n                                    help={<Text id='workouts.temperature-help'>Hvilken temperatur var det.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                        </>}\n                        {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Input saved={saved} workout={workout} field='rating' type='number' min='0' max='6' step='1' icon='fas fa-dice'\n                                    title={<Text id='workouts.rating'>Rating av turen</Text>}\n                                    help={<Text id='workouts.rating-help'>Din rating av turen. 1-6</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Intensities stores={this.props.stores} saved={saved} workout={workout} type='number' field='intensity' icon='fas fa-dumbbell'\n                                    title={<Text id='workouts.intensity'>Intensitet</Text>}\n                                    help={<Text id='workouts.intensity-help'>Hvor stor belastning var denne turen?</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                        </>}\n                    </>}\n\n\n                </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default WorkoutsEdit;\n"],"sourceRoot":""}