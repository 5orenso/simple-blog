{"version":3,"sources":["webpack:///./routes/workouts/index.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","SUB_MENU_MARGIN_TOP","subMenuMarginTop","initialState","isLoading","Workouts","observer","props","loadWorkouts","setState","userStore","stores","workoutStore","currentTeam","loadWorkoutSummary","loadWorkoutPlans","getNotifications","currentMonth","currentYear","seasonStart","workoutPlanCurrent","year","Date","getMonth","util","getYear","parseInt","workoutPlanStore","updateItem","resetGraphPlanWeekDistanceCurrent","load","query","team","seasonYear","seasonMonth","workoutPlans","id","prepareWeekGraphs","state","this","getWorkoutSummary","componentDidMount","componentWillReceiveProps","nextProps","month","render","workoutPlan","darkmode","appState","workouts","getLatests","class","style","href","callback","key","length","basehref","fields","total","map","workout","Component"],"mappings":"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","file":"route-workouts.chunk.bcdad.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport Workout from '../../components/workout';\nimport WorkoutSummary from '../../components/workout/summary';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutCalendar from '../../components/workout/calendar';\nimport Teams from '../../components/team/teams';\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Workouts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tloadWorkouts = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { workoutStore, userStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\t// const currentMonth = new Date().getMonth() + 1;\n        // const { month = currentMonth, year = util.getYear(), team = currentTeam, dog = {} } = props;\n\n\t\t// const { year } = props;\n\t\t// await workoutStore.load({ query: { team: currentTeam, year } });\n\t\tawait this.loadWorkoutSummary(props);\n\t\tawait this.loadWorkoutPlans(props);\n\t\tawait userStore.getNotifications();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tloadWorkoutPlans = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { year } = props;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst seasonStart = parseInt(year || (currentMonth < 6 ? currentYear - 1 : currentYear), 10);\n\t\tconst { workoutPlanStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\tworkoutPlanStore.updateItem('workoutPlans', []);\n\t\tworkoutPlanStore.updateItem('workoutPlan', {});\n\t\tworkoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t\tseasonMonth: 6,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year });\n\t\t\t}\n\t\t}\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\t// loadDogs = async () => {\n\t// \tconst { dogStore } = this.props.stores;\n\t// \tconst { currentTeam } = dogStore;\n\t// \tawait dogStore.load({ query: { team: currentTeam }, addData: ['workoutSummary'] });\n\t// }\n\n\t// async loadTracks() {\n\t// \tconst { trackStore } = this.props.stores;\n\t// \tawait trackStore.load();\n\t// }\n\n\tasync loadWorkoutSummary(props = this.props) {\n\n\t\tconst { userStore, workoutStore } = props.stores;\n\t\tconst { year } = props;\n\t\tconst { currentTeam } = workoutStore;\n        await userStore.getWorkoutSummary({ team: currentTeam, year });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadWorkouts();\n\t\t// this.loadDogs();\n\t\t// this.loadTracks();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.month !== this.props.month\n            || nextProps.year !== this.props.year\n            || nextProps.team !== this.props.team) {\n            this.loadWorkouts(nextProps);\n        }\n    }\n\n\trender() {\n\t\tconst { isLoading } = this.state;\n\t\tconst { userStore, appState, workoutStore, workoutPlanStore } = this.props.stores;\n\t\tconst { workoutPlan, workoutPlans } = workoutPlanStore;\n\n\t\tconst { month, year } = this.props;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\tconst { darkmode } = appState;\n\t\tconst workouts = workoutStore.getLatests();\n\t\tconst { workoutSummaryWeek = [] } = userStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row mb-4 fixed-top' style={`margin-top: ${SUB_MENU_MARGIN_TOP}; background-color: ${darkmode ? '#191d21' : '#f8f9fa'};`}>\n\t\t\t\t\t<div class='col text-center border-bottom border-primary'>\n\t\t\t\t\t\t<a href='/workouts/' class='text-primary stretched-link'><i class='fas fa-chart-line' /> <Text id='workout.index.dashboard'>Oversikt</Text></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center'>\n\t\t\t\t\t\t<a href='/workouts/list' class='text-secondary stretched-link'><i class='fas fa-list' /> <Text id='workout.index.list'>Liste</Text></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center'>\n\t\t\t\t\t\t<a href='/workouts/plan' class='text-secondary stretched-link'><i class='fas fa-calendar-alt' /> <Text id='workout.index.plan'>Plan</Text></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadWorkouts} key={`teams-${currentTeam}`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t<a class='btn btn-primary btn-sm float-right'\n\t\t\t\t\t\t\thref='/workouts/edit/new'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i class='fas fa-plus' /> <Text id='workout.index.add-workout'>Legg til treningstur</Text>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t<WorkoutGraph stores={this.props.stores} isLoading={isLoading} year={year} key={`graph-${workoutPlan.id}-${workoutPlans.length}`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} team={currentTeam} basehref={`/workouts/`} month={month} year={year} key={`calendar-${workoutPlan.id}-${workoutPlans.length}`} />\n\t\t\t\t</div>\n\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{workouts && workouts.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4'>\t\t\n\t\t\t\t\t\t\t<h5><Text id='workout.index.last-workouts' fields={{ total: workouts.length }}>Nyeste treningsturer - {workouts.length} stk</Text></h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{workouts && workouts.map(workout => (\n\t\t\t\t\t\t\t<Workout stores={this.props.stores} workout={workout} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\n\n\n\t\t\t\t{1 === 2 && <div class='row'>\n\t\t\t\t\t{workoutSummaryWeek && workoutSummaryWeek.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n\t\t\t\t\t\t\t<h5 class='mt-4'><Text id='workout.index.workout-overview'>Treningsoversikt</Text></h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* {JSON.stringify(workoutSummaryWeek)} */}\n\t\t\t\t\t\t{workoutSummaryWeek && workoutSummaryWeek.reverse().map(summary => (\n\t\t\t\t\t\t\t<WorkoutSummary stores={this.props.stores} summary={summary} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>}\n\t\t\t\t</div>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Workouts;\n"],"sourceRoot":""}