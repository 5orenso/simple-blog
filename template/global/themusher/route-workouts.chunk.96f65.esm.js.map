{"version":3,"sources":["webpack:///./routes/workouts/index.js","webpack:///./components/workout/table.js","webpack:///./components/gauge/style.css","webpack:///./components/gauge/index.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","SUB_MENU_MARGIN_TOP","subMenuMarginTop","initialState","isLoading","submenu","workoutFilter","Workouts","observer","Component","constructor","props","super","loadWorkouts","async","setState","workoutStore","userStore","stores","currentTeam","currentMonth","Date","getMonth","currentYear","util","getYear","month","year","Promise","all","load","query","team","loadWorkoutSummary","loadWorkoutPlans","getNotifications","loadStravaActivities","loadGarminActivities","seasonStart","parseInt","workoutPlanStore","updateItem","resetGraphPlanWeekDistanceCurrent","seasonYear","seasonMonth","workoutPlans","workoutPlanCurrent","id","prepareWeekGraphs","chooseSubmenu","e","this","target","parentElement","dataset","menu","chooseDay","day","dd","mm","yyyy","state","console","log","w","date","d","getDate","m","y","getFullYear","stravaActivityStore","hideImported","garminActivityDetailsStore","getWorkoutSummary","getWorkoutSummaryDay","daysBack","componentDidMount","componentWillReceiveProps","nextProps","render","appState","workoutPlan","user","language","MONTHS","getMonths","darkmode","workouts","workoutSummaryWeek","workoutsFiltered","filter","planMonth","sumWorkoutPlanMonth","summaryMonth","findWorkoutSummaryMonth","percentComplete","Math","floor","totalCountMonth","totalDistanceKmMonth","totalDurationMonth","totalSpeedavgMonth","stravaActivities","garminActivityDetails","class","style","href","callback","key","chooseDayFunction","length","hideTable","hideSummary","skipLoadSummary","radius","percent","prefix","total","completed","format","secToHms","basehref","showNavigation","showHeader","data-menu","onClick","strava","map","act","activity","garmin","fields","workout","WorkoutTable","withText","week","distance","ascend","plan","seasonMonths","monthRange","prevSeasonMonths","xTicksAll","weekRange","wo","partSize","xTicks","i","l","push","scope","module","exports","mouseData","Gauge","svgRef","color","strokeWidth","innerRadius","strokeWidthGauge","circumference","PI","arc","dashArray","transform","offset","min","max","textSize","textSizeSmall","xmlns","svg","width","height","preserveAspectRatio","ref","c","gaugeBackground","cx","cy","r","strokeDasharray","strokeLinecap","gauge","stroke","strokeDashoffset","transition","gaugeText","x","dominant-baseline","text-anchor","font-size","secondary"],"mappings":"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","file":"route-workouts.chunk.96f65.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport Workout from '../../components/workout';\nimport WorkoutSummary from '../../components/workout/summary';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutTable from '../../components/workout/table';\nimport WorkoutCalendar from '../../components/workout/calendar';\nimport Teams from '../../components/team/teams';\nimport Gauge from '../../components/gauge';\nimport CalendarPlan from '../../components/workout/calendarPlan';\nimport Strava from '../../components/strava';\nimport Garmin from '../../components/garmin';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'totals',\n\tworkoutFilter: () => true,\n};\n\n@observer\nclass Workouts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tloadWorkouts = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { workoutStore, userStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\t// const currentMonth = new Date().getMonth() + 1;\n        // const { month = currentMonth, year = util.getYear(), team = currentTeam, dog = {} } = props;\n\n\t\t// const { year } = props;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n\t\tawait Promise.all([\n\t\t\tworkoutStore.load({ query: { team: currentTeam, year, month } }),\n\t\t\tthis.loadWorkoutSummary(props),\n\t\t\tthis.loadWorkoutPlans(props),\n\t\t\tuserStore.getNotifications(),\n\t\t\tthis.loadStravaActivities(),\n\t\t\tthis.loadGarminActivities(),\n\t\t]);\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tasync loadStravaActivities() {\n\t\tconst { stravaActivityStore } = this.props.stores;\n\t\tstravaActivityStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tasync loadGarminActivities() {\n\t\tconst { garminActivityDetailsStore } = this.props.stores;\n\t\tgarminActivityDetailsStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tloadWorkoutPlans = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { year } = props;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst seasonStart = parseInt(year || (currentMonth < 6 ? currentYear - 1 : currentYear), 10);\n\t\tconst { workoutPlanStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\tworkoutPlanStore.updateItem('workoutPlans', []);\n\t\tworkoutPlanStore.updateItem('workoutPlan', {});\n\t\tworkoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t\tseasonMonth: 6,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year });\n\t\t\t}\n\t\t}\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\t// loadDogs = async () => {\n\t// \tconst { dogStore } = this.props.stores;\n\t// \tconst { currentTeam } = dogStore;\n\t// \tawait dogStore.load({ query: { team: currentTeam }, addData: ['workoutSummary'] });\n\t// }\n\n\t// async loadTracks() {\n\t// \tconst { trackStore } = this.props.stores;\n\t// \tawait trackStore.load();\n\t// }\n\n\tasync loadWorkoutSummary(props = this.props) {\n\t\tconst { userStore, workoutStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n\t\tconst { currentTeam } = workoutStore;\n        await userStore.getWorkoutSummary({ team: currentTeam, year });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year, team: currentTeam });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year: year - 1, team: currentTeam });\n\t\tawait userStore.getWorkoutSummaryDay({ daysBack: 500, team: currentTeam });\n    }\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tchooseDay = ({ day, month, year }) => {\n\t\tconst { dd, mm, yyyy } = this.state;\n\t\tconsole.log({ day, month, year });\n\t\tconsole.log({ dd, mm, yyyy });\n\n\t\tif (dd === day && mm === month && yyyy === year) {\n\t\t\treturn this.setState({\n\t\t\t\tworkoutFilter: () => true,\n\t\t\t\tdd: null,\n\t\t\t\tmm: null,\n\t\t\t\tyyyy: null,\n\t\t\t});\n\t\t}\n\t\tthis.setState({\n\t\t\tdd: day,\n\t\t\tmm: month,\n\t\t\tyyyy: year,\n\t\t\tworkoutFilter: (w) => {\n\t\t\t\tconst date = new Date(w.date);\n\t\t\t\tconst d = date.getDate();\n\t\t\t\tconst m = date.getMonth() + 1;\n\t\t\t\tconst y = date.getFullYear();\n\t\t\t\treturn d === parseInt(day, 10) && m === parseInt(month, 10) && y === parseInt(year, 10);\n\t\t\t},\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadWorkouts();\n\t\t// this.loadDogs();\n\t\t// this.loadTracks();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.month !== this.props.month\n            || nextProps.year !== this.props.year\n            || nextProps.team !== this.props.team) {\n            this.loadWorkouts(nextProps);\n        }\n    }\n\n\trender() {\n\t\tconst { isLoading, submenu } = this.state;\n\t\tconst { userStore, appState, workoutStore, workoutPlanStore,\n\t\t\tstravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n\t\tconst { workoutPlan, workoutPlans } = workoutPlanStore;\n\n\t\tconst { user } = userStore;\n        const { language = 'no' } = user;\n        const MONTHS = mu.getMonths(language);\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\n\t\tconst { month = currentMonth, year = currentYear } = this.props;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\tconst { darkmode } = appState;\n\t\tconst { workouts } = workoutStore;\n\t\tconst { workoutSummaryWeek = [] } = userStore;\n\n\t\tconst { workoutFilter } = this.state;\n\t\tconst workoutsFiltered = workouts.filter(workoutFilter);\n\n\t\tconst planMonth = workoutPlanStore.sumWorkoutPlanMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tconst summaryMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tlet percentComplete;\n\t\tif (planMonth) {\n\t\t\tpercentComplete = Math.floor(summaryMonth / planMonth * 100);\n\t\t}\n\t\tconst totalCountMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'count', true) || 0;\n\t\tconst totalDistanceKmMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'distanceKm', true) || 0;\n\t\tconst totalDurationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'duration', true) || 0;\n\t\tconst totalSpeedavgMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'speedAvg', true) || 0;\n\t\tconst totalElevationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'elevation', true) || 0;\n\n\t\tconst seasonStart = parseInt(year || (currentMonth < 6 ? currentYear - 1 : currentYear), 10);\n\n\t\tconst { stravaActivities } = stravaActivityStore;\n\t\tconst { garminActivityDetails } = garminActivityDetailsStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row mb-4 fixed-top' style={`margin-top: ${SUB_MENU_MARGIN_TOP}; background-color: ${darkmode ? '#191d21' : '#f8f9fa'};`}>\n\t\t\t\t\t<div class='col text-center border-bottom border-primary subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/' class='text-primary stretched-link'><nobr><i class='fas fa-chart-line' /> <Text id='workout.index.dashboard'>Oversikt</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/list' class='text-secondary stretched-link'><nobr><i class='fas fa-list' /> <Text id='workout.index.list'>Liste</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/plan' class='text-secondary stretched-link'><nobr><i class='fas fa-calendar-alt' /> <Text id='workout.index.plan'>Plan</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadWorkouts} key={`teams-${currentTeam}`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t<a class='btn btn-primary btn-sm float-right'\n\t\t\t\t\t\t\thref='/workouts/edit/new'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i class='fas fa-plus' /> <Text id='workout.index.add-workout'>Legg til treningstur</Text>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\tkey={`calendar-header-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{submenu === 'totals' && <>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t{planMonth >= 0 && <Gauge key={`gauge-${percentComplete}`} radius={55} percent={percentComplete} prefix='%' total={`${planMonth} km`} completed={`${summaryMonth} km`} />}<br />\n\t\t\t\t\t\t\t\t\t<small class='text-muted'><Text id='workout.index.plan'>Treningsplan</Text></small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-road' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>{util.format(totalDistanceKmMonth, 0)} <small><small><small>km</small></small></small></h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.distance'>Distanse</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-tachometer-alt ml-3' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>{util.format(totalSpeedavgMonth, 1)} <small><small><small>km/t</small></small></small></h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.avg-speed'>Gj.snittsfart</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-12 text-center'>\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-running' /> </span> {totalCountMonth}\n\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-clock ml-3' /></span> {util.secToHms(totalDurationMonth)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'analysis' && <>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutGraph stores={this.props.stores} isLoading={isLoading} year={year} key={`graph-${workoutPlan.id}-${workoutPlans.length}`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'table' && <>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTable stores={this.props.stores} isLoading={isLoading} year={year} key={`table-${workoutPlan.id}-${workoutPlans.length}`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'workoutplan' && <>\n\t\t\t\t\t\t<CalendarPlan stores={this.props.stores}\n\t\t\t\t\t\t\tbasehref='/workouts/'\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tkey={`${workoutPlan.id || seasonStart}-${currentTeam}-${month}-${year}`}\n\t\t\t\t\t\t\tshowNavigation={false}\n\t\t\t\t\t\t\tshowHeader={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.totals'>Totaler</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'analysis' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='analysis'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-chart-area' /> <Text id='workouts.analysis'>Analyser</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'table' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='table'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-table' /> <Text id='workouts.table'>Tabell</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'workoutplan' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='workoutplan'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.workoutplan'>Treningsplan</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'calendar' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='calendar'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.workoutplan'>Kalender</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\n\t\t\t\t</div>\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{user && user.strava && stravaActivities && stravaActivities.length > 0 && (\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2'>\n\t\t\t\t\t\t\t<h5><Text id='workout.index.strava-workouts'>Strava workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t{stravaActivities && stravaActivities.map(act =>\n\t\t\t\t\t\t\t\t<Strava stores={this.props.stores} activity={act} key={`strava-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{user && user.garmin && garminActivityDetails && garminActivityDetails.length > 0 && (\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2'>\n\t\t\t\t\t\t\t<h5><Text id='workout.index.garmin-workouts'>Garmin workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t{garminActivityDetails && garminActivityDetails.map(act =>\n\t\t\t\t\t\t\t\t<Garmin stores={this.props.stores} activity={act} key={`garmin-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{workoutsFiltered && workoutsFiltered.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4'>\t\t\n\t\t\t\t\t\t\t<h5><Text id='workout.index.last-workouts' fields={{ total: workoutsFiltered.length, month: MONTHS[month - 1], year }}>Treningsturer {MONTHS[month - 1]} {year} - {workoutsFiltered.length} stk</Text></h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{workoutsFiltered && workoutsFiltered.map(workout => (\n\t\t\t\t\t\t\t<Workout stores={this.props.stores} workout={workout} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{!workouts || workouts.length === 0 && <div class='col-12 mb-4 text-center pt-5 pb-5'>\n\t\t\t\t\t\t<h1 class='text-muted'><i class='fas fa-running' /></h1>\n\t\t\t\t\t\t<h5 class='text-muted font-weight-lighter'>\n\t\t\t\t\t\t\t<Text id='workouts.no-workouts' fields={{ month: MONTHS[month - 1], year }}>Ingen treningsturer registrert...</Text>\n\t\t\t\t\t\t</h5>\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\n\n\n\t\t\t\t{1 === 2 && <div class='row'>\n\t\t\t\t\t{workoutSummaryWeek && workoutSummaryWeek.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n\t\t\t\t\t\t\t<h5 class='mt-4'><Text id='workout.index.workout-overview'>Treningsoversikt</Text></h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* {JSON.stringify(workoutSummaryWeek)} */}\n\t\t\t\t\t\t{workoutSummaryWeek && workoutSummaryWeek.reverse().map(summary => (\n\t\t\t\t\t\t\t<WorkoutSummary stores={this.props.stores} summary={summary} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>}\n\t\t\t\t</div>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Workouts;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass WorkoutTable extends Component {\n    render() {\n        const { userStore } = this.props.stores;\n        const { isLoading, year } = this.props;\n        const {\n            user,\n\t\t} = userStore;\n        const { language = 'no' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n        const currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst seasonStart = parseInt(year || (currentMonth < 6 ? currentYear - 1 : currentYear), 10);\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonMonths = util.monthRange(`${seasonStart}-06-01`, `${seasonStart + 1}-05-31`);\n        const prevSeasonMonths = util.monthRange(`${seasonStart - 1}-06-01`, `${seasonStart}-05-31`);\n        const seasonWeeks = util.weekRange(`${seasonStart}-06-01`, `${seasonStart + 1}-05-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = xTicksAll.length % 6;\n        const partSize = Math.floor(xTicksAll.length / parts);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += partSize) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        return (\n            <>\n                <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5>\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <small class='mb-4'><small>\n                        <table class='table table-sm font-weigth-lighter border-bottom'>\n                            <thead>\n                                <tr>\n                                    <th style='padding: .15rem;'><Text id='workout.graph.season'>Sesong</Text></th>\n                                    {seasonMonths.map(m => (\n                                        <th class='text-right' style='padding: .15rem;'><a href={`/workouts/month/${m.month}/${m.year}`}>{MONTHS[m.month - 1]}</a></th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart - 1} - {seasonStart}</th>\n                                    {prevSeasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    {/* <nobr>{summaryMonth.distance}</nobr><br /> */}\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart} - {seasonStart + 1}</th>\n                                    {seasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </small></small>\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WorkoutTable;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gaugeBackground\":\"gaugeBackground__1UGxt\",\"gauge\":\"gauge__2ZDxd\",\"success\":\"success__3UQxg\",\"primary\":\"primary__3pPV6\",\"secondary\":\"secondary__-Vrk_\",\"info\":\"info__3t5zs\",\"warning\":\"warning__1jHlR\",\"danger\":\"danger__BLVC9\",\"gaugeText\":\"gaugeText__1on-w\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport style from './style.css';\n\nconst initialState = {\n    mouseData: {},\n};\n\n@observer\nclass Gauge extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.svgRef = null;\n    }\n\n    render() {\n        const { radius = 50, percent = 0, color = 'success', total = '', completed = '', prefix = '' } = this.props;\n        const strokeWidth = radius * 0.3;\n        const innerRadius = radius - strokeWidth / 2;\n\n        const strokeWidthGauge = radius * 0.3;\n\n        const circumference = innerRadius * 2 * Math.PI;\n        const arc = circumference * (270 / 360);\n        const dashArray = `${arc} ${circumference}`;\n        const transform = `rotate(135, ${radius}, ${radius})`;\n\n        const percentNormalized = Math.min(Math.max(percent, 0), 100);\n        const offset = arc - (percentNormalized / 100) * arc;\n\n        const textSize = radius / 2.5;\n        const textSizeSmall = radius / 5;\n\n        return (\n            <>\n                <svg xmlns='http://www.w3.org/2000/svg' class={style.svg}\n                    // viewBox={`0 0 ${radius * 2} ${radius * 2}`}\n                    width={radius * 2}\n                    height={radius * 2}\n                    preserveAspectRatio='none'\n                    ref={c => this.svgRef = c}\n                >\n\n                    <circle\n                        class={`${style.gaugeBackground}`}\n                        cx={radius}\n                        cy={radius}\n                        r={innerRadius}\n                        strokeWidth={strokeWidth}\n                        strokeDasharray={dashArray}\n                        strokeLinecap='round'\n                        transform={transform}\n                    />\n                    \n                    <circle\n                        class={`${style[color]} ${style.gauge}`}\n                        cx={radius}\n                        cy={radius}\n                        r={innerRadius}\n                        stroke='url(#grad)'\n                        strokeDasharray={dashArray}\n                        strokeDashoffset={offset}\n                        strokeLinecap='round'\n                        strokeWidth={strokeWidthGauge}\n                        style={{\n                            transition: 'stroke-dashoffset 0.3s',\n                        }}\n                        transform={transform}\n                    />\n                     \n                    <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x='50%'\n                        y='50%'\n                        dominant-baseline='middle'\n                        text-anchor='middle'\n                        font-size={textSize}\n                    >{percent} {prefix}</text>\n\n                    <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x='50%'\n                        y='65%'\n                        dominant-baseline='middle'\n                        text-anchor='middle'\n                        font-size={textSizeSmall}\n                    >{completed}</text>\n\n                    <text\n                        class={`${style.gaugeText} ${style.secondary}`}\n                        x='50%'\n                        y='90%'\n                        dominant-baseline='middle'\n                        text-anchor='middle'\n                        font-size={textSizeSmall}\n                    >{total}</text>\n\n                </svg>\n            </>\n        );\n    }\n}\n\nexport default Gauge;\n"],"sourceRoot":""}