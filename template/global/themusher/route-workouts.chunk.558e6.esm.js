(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{B7Gj:function(t,e,s){"use strict";s.r(e),function(t){function o(t,e){var s=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),s.push.apply(s,o)}return s}function a(t,e,s){return e in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}var r,n=s("hosL"),l=s("Utv1"),c=s("/eY4"),i=s("OhSV"),h=s("ZOvn"),b=s("JWe/"),d=(s("3pQw"),s("0SNj")),u=s("9Bb9"),m=s("WAWY"),p=s("azdc"),O=s("3UPq"),j=s("pJjI"),f=s("wanP"),y=s("K9Qx"),g=s("bUJL"),w=s("4imK"),k=s("epqT"),v=s("yHBq");const S=h.a.marginTop(!0),x=h.a.marginBottom(),D=h.a.subMenuMarginTop(),$={isLoading:!1,submenu:"totals",workoutFilter:()=>!0,sessionid:(new Date).getTime()},T=["id","type","user","team","title"];let I=Object(c.a)(r=class extends n.Component{constructor(e){var s;super(e),s=this,this.loadWorkouts=async function(t=s.props){s.setState({isLoading:!0});const{workoutStore:e,userStore:o}=t.stores,{currentTeam:a}=e,r=(new Date).getMonth()+1,n=(new Date).getFullYear(),{month:l=r,year:c=n}=t;await Promise.all([e.load({query:{team:a,year:c,month:l}}),s.loadWorkoutSummary(t),s.loadWorkoutPlans(t),o.getNotifications(),s.loadStravaActivities(),s.loadGarminActivities(),s.loadTeams(t)]),s.setState({isLoading:!1})},this.loadWorkoutPlans=async function(t=s.props){s.setState({isLoading:!0});const e=(new Date).getMonth()+1,o=(new Date).getFullYear(),{year:a=o,month:r=e}=t,n=r<8?a-1:a,{workoutPlanStore:l,workoutStore:c}=t.stores,{currentTeam:i}=c;if(i){await l.load({query:{team:i,seasonYear:n},addData:["tips"]});const{workoutPlans:t}=l,e=t[0]||{};e.id?(await l.load(e.id),l.prepareWeekGraphs({year:a})):(l.updateKeyValue("workoutPlan",{}),l.updateKeyValue("workoutPlans",[]),l.resetGraphPlanWeekDistanceCurrent())}s.setState({isLoading:!1})},this.chooseSubmenu=t=>{this.setState({submenu:t.target.parentElement.dataset.menu||t.target.dataset.menu})},this.chooseDay=({day:t,month:e,year:s})=>{const{dd:o,mm:a,yyyy:r}=this.state;if(o===t&&a===e&&r===s)return this.setState({workoutFilter:()=>!0,dd:null,mm:null,yyyy:null});this.setState({dd:t,mm:e,yyyy:s,workoutFilter:o=>{const a=new Date(o.date),r=a.getDate(),n=a.getMonth()+1,l=a.getFullYear();return r===parseInt(t,10)&&n===parseInt(e,10)&&l===parseInt(s,10)}})},this.renderContent=({obj:e})=>{const{appState:s}=this.props.stores;return Object(n.h)(t,null,Object(n.h)(b.a,{stores:this.props.stores,workout:e,showDate:!0,wrapperClasses:"w-100",wrapperClassesRow:""}))},this.setupIntersection=()=>{this.setState({handleIntersection:h.a.intersectionObserverCallback});const{workoutStore:t}=this.props.stores;this.scrollViewTimer=setInterval(()=>t.postScrollview(h.a.getIntersectionObserverHistory()),3e4)},this.state=function(t){for(var e=1;e<arguments.length;e++){var s=null!=arguments[e]?arguments[e]:{};e%2?o(Object(s),!0).forEach((function(e){a(t,e,s[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(s)):o(Object(s)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(s,e))}))}return t}({},$)}async loadTeams(t=this.props){const{teamStore:e,workoutStore:s}=t.stores,{currentTeam:o}=s,a=(new Date).getMonth()+1,r=(new Date).getFullYear(),{month:n=a,year:l=r}=t;await e.load({query:{team:o,skipMusherWorkoutSummary:!0,year:l,month:n},addData:["workoutSummary"]})}async loadStravaActivities(){const{stravaActivityStore:t}=this.props.stores;t.load({query:{hideImported:1}})}async loadGarminActivities(){const{garminActivityDetailsStore:t}=this.props.stores;t.load({query:{hideImported:1}})}async loadWorkoutSummary(t=this.props){const{userStore:e,workoutStore:s}=t.stores,o=(new Date).getMonth()+1,a=(new Date).getFullYear(),{month:r=o,year:n=a}=t,{currentTeam:l}=s;await e.getWorkoutSummary({team:l,year:n,month:r}),await e.getWorkoutSummaryDay({daysBack:500,team:l})}componentWillMount(){this.setupIntersection()}componentWillUnmount(){const{workoutStore:t}=this.props.stores;t.postScrollview(h.a.getIntersectionObserverHistory()),clearInterval(this.scrollViewTimer)}componentDidMount(){const{appState:t}=this.props.stores;this.loadWorkouts(),t.checkCordova()}componentWillReceiveProps(t){t.month===this.props.month&&t.year===this.props.year&&t.team===this.props.team||this.loadWorkouts(t)}render(){const{isLoading:e,submenu:s,handleIntersection:o,sessionid:a}=this.state,{userStore:r,appState:c,workoutStore:b,workoutPlanStore:$,stravaActivityStore:I,garminActivityDetailsStore:W}=this.props.stores,{workoutPlan:M,workoutPlans:P}=$,{user:L}=r,{language:F="no"}=L,C=h.a.getMonths(F),A=(new Date).getMonth()+1,Y=(new Date).getFullYear(),{month:q=A,year:G=Y}=this.props,H=parseInt(q<8?G-1:G,10),{currentTeam:V}=b,K=r.findTeam(V,!0),{darkmode:R}=c,{workouts:z,cordovaActiveTrackingParams:B,isRunning:J,totalDistance:N,currentSpeed:U,totalTime:E}=b,{workoutFilter:Q}=this.state,Z=z.filter(Q),X=$.sumWorkoutPlanMonth(parseInt(G,10),parseInt(q,10))||0,_=r.findWorkoutSummaryMonth(parseInt(G,10),parseInt(q,10))||0;let tt;X&&(tt=Math.floor(_/X*100));const et=r.findWorkoutSummaryMonth(parseInt(G,10),parseInt(q,10),"count",!0)||0,st=r.findWorkoutSummaryMonth(parseInt(G,10),parseInt(q,10),"distanceKm",!0)||0,ot=r.findWorkoutSummaryMonth(parseInt(G,10),parseInt(q,10),"duration",!0)||0,at=r.findWorkoutSummaryMonth(parseInt(G,10),parseInt(q,10),"speedAvg",!0)||0,{stravaActivities:rt=[]}=(r.findWorkoutSummaryMonth(parseInt(G,10),parseInt(q,10),"elevation",!0),I),{garminActivityDetails:nt=[]}=W;return Object(n.h)("div",{class:"container-fluid",style:`margin-bottom: ${x}; margin-top: ${S};`},Object(n.h)("div",{class:"row fixed-top",style:`margin-top: ${D}; background-color: ${R?"#191d21":"#f8f9fa"};`},Object(n.h)("div",{class:"col text-center border-bottom border-primary subtopmenu"},Object(n.h)("a",{href:"/workouts/",class:"text-primary stretched-link"},Object(n.h)("nobr",null,Object(n.h)("i",{class:"fas fa-chart-line"})," ",Object(n.h)(i.c,{id:"workout.index.dashboard"},"Oversikt")))),Object(n.h)("div",{class:"col text-center subtopmenu"},Object(n.h)("a",{href:"/workouts/list",class:"text-secondary stretched-link"},Object(n.h)("nobr",null,Object(n.h)("i",{class:"fas fa-list"})," ",Object(n.h)(i.c,{id:"workout.index.list"},"Liste")))),Object(n.h)("div",{class:"col text-center subtopmenu"},Object(n.h)("a",{href:"/workouts/plan",class:"text-secondary stretched-link"},Object(n.h)("nobr",null,Object(n.h)("i",{class:"fas fa-calendar-alt"})," ",Object(n.h)(i.c,{id:"workout.index.plan"},"Plan"))))),J&&B&&Object(n.h)(t,null,Object(n.h)("div",{class:"row"},Object(n.h)("div",{class:"col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4"},Object(n.h)("h1",{class:"text-success font-weight-bold"},"Tracking",Object(n.h)("div",{class:"spinner-grow ml-3",role:"status"})),Object(n.h)("div",{class:"row mb-3"},Object(n.h)("div",{class:"col-4 text-center font-weight-bold",style:"font-size: 1.3em;"},l.a.secToHms(E)),Object(n.h)("div",{class:"col-4 text-center font-weight-bold",style:"font-size: 1.3em;"},l.a.format(3.6*U,1)," km/t"),Object(n.h)("div",{class:"col-4 text-center font-weight-bold",style:"font-size: 1.3em;"},l.a.format(N/1e3,2)," km")),Object(n.h)("a",{class:"btn btn-block btn-danger",href:"/workouts/tracking"},Object(n.h)(i.c,{id:"workouts.go-to-tracking"},"Go to tracking"))))),Object(n.h)("div",{class:"row"},Object(n.h)("div",{class:"col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom"},Object(n.h)(j.a,{stores:this.props.stores,callback:this.loadWorkouts,key:"teams-"+V})),Object(n.h)("div",{class:"col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2"},Object(n.h)("a",{class:"btn btn-primary btn-sm float-right",href:"/workouts/edit/new"},Object(n.h)("i",{class:"fas fa-plus"})," ",Object(n.h)(i.c,{id:"workout.index.add-workout"},"Legg til treningstur"))),Object(n.h)("div",{class:"col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3"},Object(n.h)("div",{class:"row"},Object(n.h)("div",{class:"col px-1 pt-2"},Object(n.h)("button",{class:`btn btn-block ${"totals"===s?"btn-primary":"btn-outline-primary"} text-nowrap`,style:"text-overflow: ellipsis; overflow: hidden;","data-menu":"totals",onClick:this.chooseSubmenu},Object(n.h)("i",{class:"fas fa-tachometer-alt"})," ",Object(n.h)(i.c,{id:"workouts.totals"},"Totaler"))),Object(n.h)("div",{class:"col px-1 pt-2"},Object(n.h)("button",{class:`btn btn-block ${"seasontotals"===s?"btn-primary":"btn-outline-primary"} text-nowrap`,style:"text-overflow: ellipsis; overflow: hidden;","data-menu":"seasontotals",onClick:this.chooseSubmenu},Object(n.h)("i",{class:"fas fa-tachometer-alt"})," ",Object(n.h)(i.c,{id:"workouts.seasontotals"},"Season totals"))),Object(n.h)("div",{class:"col px-1 pt-2"},Object(n.h)("button",{class:`btn btn-block ${"analysis"===s?"btn-primary":"btn-outline-primary"} text-nowrap`,style:"text-overflow: ellipsis; overflow: hidden;","data-menu":"analysis",onClick:this.chooseSubmenu},Object(n.h)("i",{class:"fas fa-chart-area"})," ",Object(n.h)(i.c,{id:"workouts.analysis"},"Analyser"))),Object(n.h)("div",{class:"col px-1 pt-2"},Object(n.h)("button",{class:`btn btn-block ${"table"===s?"btn-primary":"btn-outline-primary"} text-nowrap`,style:"text-overflow: ellipsis; overflow: hidden;","data-menu":"table",onClick:this.chooseSubmenu},Object(n.h)("i",{class:"fas fa-table"})," ",Object(n.h)(i.c,{id:"workouts.table"},"Tabell"))),Object(n.h)("div",{class:"col px-1 pt-2"},Object(n.h)("button",{class:`btn btn-block ${"workoutplan"===s?"btn-primary":"btn-outline-primary"} text-nowrap`,style:"text-overflow: ellipsis; overflow: hidden;","data-menu":"workoutplan",onClick:this.chooseSubmenu},Object(n.h)("i",{class:"fas fa-calendar-alt"})," ",Object(n.h)(i.c,{id:"workouts.workoutplan"},"Treningsplan"))),Object(n.h)("div",{class:"col px-1 pt-2"},Object(n.h)("button",{class:`btn btn-block ${"calendar"===s?"btn-primary":"btn-outline-primary"} text-nowrap`,style:"text-overflow: ellipsis; overflow: hidden;","data-menu":"calendar",onClick:this.chooseSubmenu},Object(n.h)("i",{class:"fas fa-calendar-alt"})," ",Object(n.h)(i.c,{id:"workouts.calendar"},"Kalender"))))),"totals"===s&&Object(n.h)(t,null,Object(n.h)(O.a,{stores:this.props.stores,isLoading:e,year:G,month:q,chooseDayFunction:this.chooseDay,key:`calendar-header-${M.id}-${P.length}`,hideTable:"calendar"===s?0:1,hideSummary:"calendar"===s?0:1,skipLoadSummary:"calendar"===s?0:1}),Object(n.h)("div",{class:"col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2"},Object(n.h)("div",{class:"row"},Object(n.h)("div",{class:"col-4 text-center"},X>=0&&Object(n.h)(f.a,{key:"gauge-"+tt,radius:55,percent:tt,prefix:"%",total:X+" km",completed:_+" km"}),Object(n.h)("br",null),Object(n.h)("small",{class:"text-muted"},Object(n.h)(i.c,{id:"workout.index.plan"},"Treningsplan"))),Object(n.h)("div",{class:"col-4 text-center"},Object(n.h)("h5",null,Object(n.h)("span",{class:"text-muted font-weight-lighter"},Object(n.h)("i",{class:"fas fa-road"}))),Object(n.h)("h3",null,l.a.format(st,0)," ",Object(n.h)("small",null,Object(n.h)("small",null,Object(n.h)("small",null,"km")))),Object(n.h)("small",{class:"text-muted"},Object(n.h)(i.c,{id:"workout.calendar.distance"},"Distanse"))),Object(n.h)("div",{class:"col-4 text-center"},Object(n.h)("h5",null,Object(n.h)("span",{class:"text-muted font-weight-lighter"},Object(n.h)("i",{class:"fas fa-tachometer-alt ml-3"}))),Object(n.h)("h3",null,l.a.format(at,1)," ",Object(n.h)("small",null,Object(n.h)("small",null,Object(n.h)("small",null,"km/t")))),Object(n.h)("small",{class:"text-muted"},Object(n.h)(i.c,{id:"workout.calendar.avg-speed"},"Gj.snittsfart"))),Object(n.h)("div",{class:"col-12 text-center"},Object(n.h)("span",{class:"text-muted font-weight-lighter"},Object(n.h)("i",{class:"fas fa-running"})," ")," ",et,Object(n.h)("span",{class:"text-muted font-weight-lighter"},Object(n.h)("i",{class:"fas fa-clock ml-3"}))," ",l.a.secToHms(ot)))),Object(n.h)("div",{class:"col-12"},Object(n.h)(k.a,{stores:this.props.stores,url:this.props.url,section:s}))),"seasontotals"===s&&Object(n.h)(t,null,Object(n.h)(O.a,{stores:this.props.stores,isLoading:e,year:G,month:q,chooseDayFunction:this.chooseDay,key:`calendar-header-${M.id}-${P.length}`,hideTable:"calendar"===s?0:1,hideSummary:"calendar"===s?0:1,skipLoadSummary:"calendar"===s?0:1}),Object(n.h)("div",{class:"col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3"},Object(n.h)(d.a,{stores:this.props.stores,currentTeam:V,year:G,month:q}),Object(n.h)(u.a,{stores:this.props.stores,currentTeam:V,year:G,month:q})),Object(n.h)("div",{class:"col-12"},Object(n.h)(k.a,{stores:this.props.stores,url:this.props.url,section:s}))),"analysis"===s&&Object(n.h)(t,null,Object(n.h)(O.a,{stores:this.props.stores,isLoading:e,year:G,month:q,chooseDayFunction:this.chooseDay,key:`calendar-header-${M.id}-${P.length}`,hideTable:"calendar"===s?0:1,hideSummary:"calendar"===s?0:1,skipLoadSummary:"calendar"===s?0:1}),Object(n.h)("div",{class:"col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3"},Object(n.h)(m.a,{stores:this.props.stores,isLoading:e,year:G,month:q,key:`graph-${M.id}-${P.length}`})),Object(n.h)("div",{class:"col-12"},Object(n.h)(k.a,{stores:this.props.stores,url:this.props.url,section:s}))),"table"===s&&Object(n.h)(t,null,Object(n.h)(O.a,{stores:this.props.stores,isLoading:e,year:G,month:q,chooseDayFunction:this.chooseDay,key:`calendar-header-${M.id}-${P.length}`,hideTable:"calendar"===s?0:1,hideSummary:"calendar"===s?0:1,skipLoadSummary:"calendar"===s?0:1}),Object(n.h)("div",{class:"col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3"},Object(n.h)(p.a,{stores:this.props.stores,isLoading:e,year:G,month:q,key:`table-${M.id}-${P.length}`})),Object(n.h)("div",{class:"col-12"},Object(n.h)(k.a,{stores:this.props.stores,url:this.props.url,section:s}))),"calendar"===s&&Object(n.h)(t,null,Object(n.h)(O.a,{stores:this.props.stores,isLoading:e,year:G,month:q,chooseDayFunction:this.chooseDay,key:`calendar-header-${M.id}-${P.length}`,hideTable:"calendar"===s?0:1,hideSummary:"calendar"===s?0:1,skipLoadSummary:"calendar"===s?0:1}),Object(n.h)("div",{class:"col-12"},Object(n.h)(k.a,{stores:this.props.stores,url:this.props.url,section:s}))),"workoutplan"===s&&Object(n.h)(t,null,Object(n.h)(y.a,{stores:this.props.stores,basehref:"/workouts/",month:q,year:G,key:`${M.id||H}-${V}-${q}-${G}`,showNavigation:!0,showHeader:!0,currentTeam:V}),Object(n.h)("div",{class:"col-12"},Object(n.h)(k.a,{stores:this.props.stores,url:this.props.url,section:s})))),Object(n.h)("div",{class:"row mt-3"},L&&L.strava&&Object(n.h)(t,null,Object(n.h)(g.a,{stores:this.props.stores,activities:rt,key:`strava-${V}-${rt.length}`})),L&&L.garmin&&Object(n.h)(t,null,Object(n.h)(w.a,{stores:this.props.stores,activities:nt,key:`garmin-${V}-${nt.length}`}))),Object(n.h)("div",{class:"row"},Z&&Z.length>0&&Object(n.h)("div",{class:"col-12 mb-4"},Object(n.h)("div",{class:"col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4"},Object(n.h)("h5",null,Object(n.h)(i.c,{id:"workout.index.last-workouts",fields:{total:Z.length,month:C[q-1],year:G}},"Treningsturer ",C[q-1]," ",G," - ",Z.length," stk"),K&&K.name&&Object(n.h)("div",null,Object(n.h)("small",{class:"font-weight-lighter"},"(",Object(n.h)(i.c,{id:"workout.index.filtered-by"},"Filtered by"),": ",K.name,")")))),Object(n.h)(v.a,{data:Z,wrapperClassNames:"row pb-4",contentClassNames:`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${R?"black":"white"} shadow-sm`,renderContent:this.renderContent,dataFields:T,dataValues:{type:"11"},handleIntersection:o,sessionid:a})),!z||0===z.length&&Object(n.h)("div",{class:"col-12 mb-4 text-center pt-5 pb-5"},Object(n.h)("h1",{class:"text-muted"},Object(n.h)("i",{class:"fas fa-running"})),Object(n.h)("h5",{class:"text-muted font-weight-lighter"},Object(n.h)(i.c,{id:"workouts.no-workouts",fields:{month:C[q-1],year:G}},"Ingen treningsturer registrert...")))))}})||r;e.default=I}.call(this,s("hosL").Fragment)},azdc:function(t,e,s){"use strict";(function(t){var o,a=s("hosL"),r=s("Utv1"),n=s("/eY4"),l=s("OhSV"),c=s("ZOvn");let i=Object(l.d)(()=>({week:Object(a.h)(l.c,{id:"workout.graph.week"}),distance:Object(a.h)(l.c,{id:"workout.graph.distance"}),ascend:Object(a.h)(l.c,{id:"workout.graph.ascend"}),plan:Object(a.h)(l.c,{id:"workout.graph.plan"})}))(o=Object(n.a)(o=class extends a.Component{render(){const{userStore:e}=this.props.stores,s=(new Date).getMonth()+1,o=(new Date).getFullYear(),{year:n=o,month:i=s,showHeader:h=!0}=this.props,b=parseInt(i<8?n-1:n,10),{user:d}=e,{language:u="no"}=d,m=c.a.getMonths(u),p=r.a.monthRange(b+"-08-01",b+1+"-07-31"),O=r.a.monthRange(b-1+"-08-01",b+"-07-31"),j=r.a.weekRange(b+"-08-01",b+1+"-07-31").map(t=>t.week),f=Math.floor(j.length/(j.length%6)),y=[];for(let t=0,e=j.length;t<e;t+=f)y.push(j[t]);return Object(a.h)(t,null,h&&Object(a.h)("h5",null,Object(a.h)(l.c,{id:"workout.graph.title"},"Treningsstatistikk")," ",b," - ",b+1),Object(a.h)("div",{class:"w-100 mt-3 mb-4"},Object(a.h)("small",{class:"mb-4"},Object(a.h)("small",null,Object(a.h)("table",{class:"table table-sm font-weigth-lighter border-bottom"},Object(a.h)("thead",null,Object(a.h)("tr",null,Object(a.h)("th",{style:"padding: .15rem;"},Object(a.h)(l.c,{id:"workout.graph.season"},"Sesong")),p.map(t=>Object(a.h)("th",{class:"text-right",style:"padding: .15rem;"},Object(a.h)("a",{href:`/workouts/month/${t.month}/${t.year}`},m[t.month-1]))))),Object(a.h)("tbody",null,Object(a.h)("tr",null,Object(a.h)("th",{scope:"row",style:"padding: .15rem;"},b-1," - ",b),O.map(s=>Object(a.h)(t,null,Object(a.h)("td",{class:"text-right",style:"padding: .15rem;"},Object(a.h)("nobr",null,e.findWorkoutSummaryMonth(s.year,s.month)),Object(a.h)("br",null),Object(a.h)("nobr",null,e.findWorkoutSummaryMonth(s.year,s.month,"elevation")),Object(a.h)("br",null)))),Object(a.h)("td",{class:"text-muted",style:"padding: .15rem;"},Object(a.h)("nobr",null,Object(a.h)("i",{class:"fas fa-road"})," km"),Object(a.h)("br",null),Object(a.h)("nobr",null,Object(a.h)("i",{class:"fas fa-mountain"})," m"),Object(a.h)("br",null))),Object(a.h)("tr",null,Object(a.h)("th",{scope:"row",style:"padding: .15rem;"},b," - ",b+1),p.map(s=>Object(a.h)(t,null,Object(a.h)("td",{class:"text-right",style:"padding: .15rem;"},Object(a.h)("nobr",null,e.findWorkoutSummaryMonth(s.year,s.month)),Object(a.h)("br",null),Object(a.h)("nobr",null,e.findWorkoutSummaryMonth(s.year,s.month,"elevation")),Object(a.h)("br",null)))),Object(a.h)("td",{class:"text-muted",style:"padding: .15rem;"},Object(a.h)("nobr",null,Object(a.h)("i",{class:"fas fa-road"})," km"),Object(a.h)("br",null),Object(a.h)("nobr",null,Object(a.h)("i",{class:"fas fa-mountain"})," m"),Object(a.h)("br",null)))))))))}})||o)||o;e.a=i}).call(this,s("hosL").Fragment)}}]);
//# sourceMappingURL=route-workouts.chunk.558e6.esm.js.map