{"version":3,"sources":["webpack:///./components/data/distance.js","webpack:///./components/style.css","webpack:///./components/track/commentReply.js","webpack:///./components/data/temperature.js","webpack:///./components/modal/index.js","webpack:///./components/data/weight.js","webpack:///./components/track/commentAdd.js","webpack:///./components/data/elevation.js","webpack:///./components/track/comments.js","webpack:///./components/data/speed.js","webpack:///./components/form/images.js","webpack:///./components/form/dragNdropFileupload.js","webpack:///./components/track/index.js"],"names":["displayDistance","distance","util","format","Distance","observer","render","this","props","value","smallUnit","stores","userStore","user","settings","imperial","kmToMiles","class","Component","module","exports","TrackCommentReply","commentTrack","response","callback","track","state","comment","trackStore","commentReplyTrack","id","commentId","status","setState","inputRef","displayNameShort","firstname","ucfirst","lastname","email","userImage","image","images","undefined","style","s3SmallLink","for","type","placeholder","onInput","linkState","ref","onClick","Temperature","celciusToFahrenheit","Modal","toggleDate","showDate","touchStart","e","stopPropagation","startY","touches","pageY","touchEnd","readyToRefresh","touchMove","appContainer","scrollTop","refreshing","close","imagexxl","thumb","name","title","date","formatDate","locale","formatDistance","Date","src","onTouchstart","onTouchend","onTouchmove","c","target","rel","href","download","Weight","kgToPounds","TrackAdd","inputRefObject","showAddImage","body","mu","resizeTextarea","addImage","addImages","push","handleImageErrored","onerror","setTimeout","data-id","isArray","map","img","onError","removeImage","data-name","object","updateField","autoOpen","Elevation","meterToFeet","initialState","showAddComment","showAllComments","showAllReplies","viewImageIdx","likeComment","likeReply","TrackComments","parentElement","dataset","likeTrackComment","likeTrackCommentReply","replyId","replyComment","focus","toggleComments","toggleReplies","col","offset","compact","currentUser","language","filteredComments","totalComments","diplayedComments","comments","length","slice","Math","max","reverse","displayName","hasLikedComment","likes","findIndex","filteredReplises","totalReplies","diplayedReplies","max_comments","imgs","toJS","imageIdx","currentImage","markdown","replaceImages","markdownOpts","getMarkdownOptions","onDblclick","addLikeComment","loading","s3LargeLink","idx","viewImage","data-idx","createdDate","reply","hasLikedReply","data-comment","fields","more","Speed","kmtToMph","Images","handleAddImage","file","addToImages","field","skipTimer","files","uploadStatus","before","after","apiUrl","height","width","DragNDropFileupload","dropRef","createRef","handleDrag","preventDefault","handleDragIn","dragCounter","dataTransfer","items","drag","handleDragOut","handleDrop","i","l","readLocalFile","handleAddFiles","event","el","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","getApiServer","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","total","readyState","JSON","parse","responseText","data","addFileToUpload","fileInput","loadingProgress","uploadedFiles","componentDidMount","div","current","click","componentWillUnmount","removeEventListener","position","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","Object","keys","key","isImage","match","result","formatBytes","role","aria-valuenow","aria-valuemin","aria-valuemax","children","MAX_LOADINDEX","getMaxLoadIndex","Track","likeTrack","toggleAddComment","showModal","displayModal","currentImageXXL","closeModal","updateTimer","showUser","isPublic","gpxInfo","loadIndex","hasLikedNews","place","getLoadIndexColor","normalizeBetween","floor","getLoadIndexText","public","users","garminId","stravaId","distanceKm","elevation","gpx","data-image","data-imagexxl","s3XXLargeLink","data-thumb","data-title","data-date"],"mappings":"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","file":"29.chunk.08368.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distance) {\n\tif (distance < 5) {\n\t\treturn util.format(distance, 2);\n\t}\n\tif (distance < 10) {\n\t\treturn util.format(distance, 1);\n\t}\n\treturn util.format(distance, 1);\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Distance extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n\t\t\t\t\t{displayDistance(kmToMiles(value))} {smallUnit ? <><small><small><small class='ml-0 text-muted'>mi</small></small></small></> : <>mi</>}\n\t\t\t\t</nobr>\n            </>);\n        }\n\n\t\treturn (<>\n\t\t\t<nobr>\n\t            {displayDistance(value)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>km</small></small></small></> : <>km</>}\n\t\t\t</nobr>\n\t    </>);\n    }\n}\n\nexport default Distance;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__1mJGJ\",\"hoverElement\":\"hoverElement__axh3O\",\"hoverelementhide\":\"hoverelementhide__1k_qH\",\"progress-bar-vertical\":\"progress-bar-vertical__1B2sC\",\"progress-bar\":\"progress-bar__pnsVj\",\"dragged\":\"dragged__QXO46\",\"over\":\"over__1re3x\",\"list\":\"list__q_emZ\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass TrackCommentReply extends Component {\n    commentTrack = async () => {\n        const { callback = () => {}, commentId } = this.props;\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n        const { comment = '' } = this.state;\n\t\tconst response = await trackStore.commentReplyTrack({ id: track.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            });\n            callback({ track, response });\n\t\t}\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <input\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-sm btn-primary mb-2'\n                                    onClick={this.commentTrack}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TrackCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass Temperature extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(celciusToFahrenheit(value), 0)}°F\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)}°C\n            </nobr>\n        </>);\n    }\n}\n\nexport default Temperature;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\n@observer\nclass Modal extends Component {\n    toggleDate = () => {\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startY: e.touches[0].pageY,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startY: undefined,\n            readyToRefresh: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        const { close } = this.props;\n        const { startY, refreshing } = this.state;\n        const scrollDistance = 30;\n        const y = e.touches[0].pageY;\n        if (this.appContainer) {\n            const { scrollTop } = this.appContainer;\n            if (scrollTop === 0 && y > startY + scrollDistance && !refreshing) {\n                close();\n            }\n        }\n    }\n\n    render() {\n        const { showDate } = this.state;\n        const { image, imagexxl, close, thumb, name, title, date } = this.props;\n        return (\n            <div class='fixed-top bg-dark text-center pt-2' style='width: 100vw; height: 100vh;'>\n                <button class='btn btn-secondary float-right mr-2' onClick={close}>X</button>\n\n                    <div class='d-flex mb-2 px-2'>\n                        {/* {JSON.stringify(dog, null, 4)} */}\n                        {thumb && <div class={`text-center border rounded-circle imageRounded imageRoundedSmall`} style={thumb ? `background-image: url(\"${thumb}\");` : ''}>\n                            &nbsp;\n                        </div>}\n                        <div class='flex-grow-1 pl-3 pr-2 text-left' style='line-height: 1.3em;'>\n                            {name && <strong class='mr-2'>{name}:</strong>}\n                            {title}<br />\n                            <small class='text-muted'>\n                                {date && <small onClick={this.toggleDate}>\n                                    {showDate ? util.formatDate(date, { locale: 'no-NB' }) : util.formatDistance(date, new Date(), { locale: 'no-NB' })}\n                                </small>}\n                            </small>\n                        </div>\n                    </div>\n\n\n                <img src={image}\n                    class='img-fluid align-middle mt-2 mb-2'\n                    onClick={close}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                    ref={c => this.appContainer = c}\n                />\n\n                <a target='_blank' rel='noopener noreferrer' href={imagexxl || image} download={imagexxl || image}>\n                    <i class='fas fa-download' /> <Text id='modal.download'>Last ned bildet</Text>\n                </a>\n            </div>\n        );\n    }\n}\n\nexport default Modal;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kgToPounds(value) {\n    return 2.20462 * value;\n}\n\n@observer\nclass Weight extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kgToPounds(value), 0)} lb\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} kg\n            </nobr>\n        </>);\n    }\n}\n\nexport default Weight;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass TrackAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n        };\n        this.inputRef = {};\n    }\n\n    commentTrack = async () => {\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n\n\t\tconst response = await trackStore.commentTrack({ id: track.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[track.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ track, response });\n\t\t}\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, track } = this.props;\n        const { comment, showAddImage } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-3 position-relative'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <input\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={track.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-primary mb-2'\n                                    onClick={this.commentTrack}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default TrackAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\n@observer\nclass Elevation extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(meterToFeet(value), 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>ft</small></small></small></> : <>ft</>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>m</small></small></small></> : <>m</>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Elevation;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport TrackReplyComment from '../../components/track/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass TrackComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    likeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n\t\tconst response = await trackStore.likeTrackComment({ id: track.id, commentId });\n\n\t\tif (response && response.status === 200) {\n            callback({ track, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n\n        const replyId = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const commentId = e.target.parentElement.dataset.comment || e.target.dataset.comment;\n\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n\t\tconst response = await trackStore.likeTrackCommentReply({ id: track.id, replyId, commentId });\n\n        if (response && response.status === 200) {\n            callback({ track, commentId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, likeComment } = this.state;\n\t\tconst { track, callback = () => {}, col = 12, offset = 0, compact = false  } = this.props;\n        const { userStore } = this.props.stores;\n        const { user: currentUser, language = 'en', isAdmin } = userStore;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (track.comments) {\n            totalComments = track.comments.length;\n            if (showAllComments) {\n                filteredComments = track.comments;\n            } else {\n                // filteredComments = track.comments.slice(0, MAX_COMMENTS);\n                const max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = track.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3`}>\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0 mb-2'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n                {track && filteredComments && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n    \n                    const { currentLocationGeocode = {} } = comment;\n\n                    return (\n                        <div class='row'>\n                            <div class='col-12 d-flex mb-2 position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded-lg'>\n                                        <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                        <Markdown markdown={mu.replaceImages(comment.comment, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </div>\n                                    <div>\n                                        <div class='container-fluid px-3 mt-1'>\n                                            {currentImage && <div class='clearfix row position-relative'>\n                                                <div\n                                                    class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                    style={`max-height: 60vh;`}\n                                                    onDblclick={this.addLikeComment}\n                                                    data-id={comment.id}\n                                                >\n                                                    <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                </div>\n                                                {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                    <i class='fas fa-heart likeStory' />\n                                                </span>}\n                                            </div>}\n                                            {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                {util.isArray(images) && images.map((img, idx) => {\n                                                    return (<>\n                                                        <div\n                                                            class={`col px-0 overflow-hidden`}\n                                                            style={`max-height: 100px; min-width: 100px;`}\n                                                        >\n                                                            <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                        </div>\n                                                    </>);\n                                                })}\n                                            </div>}\n                                        </div>\n                                    </div>\n\n                                    <small>\n                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.likeComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.like'>Lik</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-11 offset-1 mb-2'>\n\n                                {comment && filteredReplises && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div \n                                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg'>\n                                                        <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                                        {reply.comment}\n                                                    </div>\n                                                    <small>\n                                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                        >\n                                                            <Text id='comments.like'>Lik</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <TrackReplyComment stores={this.props.stores} track={track}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default TrackComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Speed extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kmtToMph(value), 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.mph'>mph</Text></small></small></small></> : <><Text id='workouts.mph'>mph</Text></>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.kmt'>km/t</Text></small></small></small></> : <><Text id='workouts.kmt'>km/t</Text></>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Speed;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport Modal from '../modal';\nimport TrackComments from '../../components/track/comments';\nimport TrackAddComment from '../../components/track/commentAdd';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\nconst MAX_LOADINDEX = mu.getMaxLoadIndex();\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass Track extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n    likeTrack = async () => {\n\t\tconst { trackStore } = this.props.stores;\n        const { track } = this.props;\n\t\tconst response = await trackStore.likeTrack({ id: track.id });\n\n        if (response.status === 200) {\n\t\t\t\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst id = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAddComment } = this.state;\n\t\tthis.setState({\n\t\t\tshowAddComment: !showAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[id]) {\n\t\t\t\tthis.inputRef[id].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    showModal = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const img = e.target.dataset.image;\n        const imgXXL = e.target.dataset.imagexxl;\n        const thumb = e.target.dataset.thumb;\n        const name = e.target.dataset.name;\n        const title = e.target.dataset.title;\n        const date = e.target.dataset.date;\n        this.setState({\n            displayModal: true,\n            currentImage: img,\n            currentImageXXL: imgXXL,\n            thumb,\n            name,\n            title,\n            date,\n        });\n    }\n\n    closeModal = () => {\n        this.setState({\n            displayModal: false,\n        });\n    }\n\n    toggleDate = () => {\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n    render() {\n        const { displayModal, currentImage, currentImageXXL, showDate, thumb, name, title, date, showAddComment } = this.state;\n\n        const { track, showUser = false, isPublic = false } = this.props;\n        const image = track.image && track.image.s3SmallLink ? track.image : null;\n        const { gpxInfo = {} } = track;\n\t\tconst { loadIndex = 0 } = gpxInfo;\n\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n        const { likes = [], comments = [] } = track;\n\t\tconst hasLikedNews = track.likes && track.likes.findIndex(e => e.user === user.id) > -1;\n\n        return (\n            <div class='w-100 mb-3'>\n                <div class='row'>\n                    {displayModal && <Modal close={this.closeModal} image={currentImage} imagexxl={currentImageXXL} thumb={thumb} name={name} title={title} date={date} />}\n\n                    <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 d-flex mb-0 position-relative'>\n                        {/* {JSON.stringify(track, null, 4)} */}\n\n                        <div class={`text-center border rounded-circle imageRounded`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                            {!image && <i class='fas fa-map-marked text-muted mt-3' style='font-size: 40px;' />}\n                        </div>\n                        <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                            <a class='stretched-link' href={`/tracks/${track.id}${isPublic ? '/public' : ''}`}>\n                                <h5 class='mb-1' style='line-height: 1.0em;'>{track.name}</h5>\n                                <div class='text-muted font-weight-lighter'><small>{track.place}</small></div>\n                            </a>\n                            <div>\n                                <small>\n                                    {loadIndex > 0 && <span class={`ml-2 text-${mu.getLoadIndexColor(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))}`}>\n                                        <i class='fas fa-hand-rock mr-1' />\n                                        {Math.floor(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))} -&nbsp;\n                                        {mu.getLoadIndexText(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))}\n                                    </span>}\n                                </small>\n                            </div>\n                            <div>\n                                {track.public === 1 && <span class='badge badge-success'>Is public</span>}\n                                {showUser && <span class='text-muted font-weight-lighter ml-3'>{mu.displayName(track.users)}</span>}\n                            </div>\n                            <small class='text-muted'>\n                                {track.date && <small onClick={this.toggleDate}>\n                                    {showDate ? util.formatDate(track.date, { locale: 'no-NB' }) : util.formatDistance(track.date, new Date(), { locale: 'no-NB' })}<br />\n                                </small>}\n                            </small>\n                            <small class='text-muted'>\n                                {track.garminId > 0 && <div class={`float-left mr-2 text-center border rounded-circle imageRounded imageRoundedIcon`} style={`background-image: url(\"./assets/garmin-connect.png\");`} />}\n                                {track.stravaId > 0&& <div class={`float-left mr-2 text-center border rounded-circle imageRounded imageRoundedIcon`} style={`background-image: url(\"./assets/strava-icon.png\");`} />}\n\n                                <i class='fas fa-road' /> <Distance stores={this.props.stores} value={track.distanceKm} />\n                                <i class='fas fa-mountain ml-2' /> <Elevation stores={this.props.stores} value={track.elevation} />\n                                {track.gpx && <i class='fas fa-map-marked-alt ml-2' />}\n                            </small>\n                        </div>\n                    </div>\n\n                    <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-1' style='padding-left: 122px;'>\n                        <div class='row'>\n                            {track.images && track.images.map(img => (\n                                <div class={`text-center border rounded imageRounded imageRoundedSmall`}\n                                    style={img ? `background-image: url(\"${img.s3SmallLink}\");` : ''}\n                                    onClick={this.showModal}\n                                    data-image={img.s3LargeLink}\n                                    data-imagexxl={img.s3XXLargeLink}\n                                    data-thumb={track.image && track.image.s3SmallLink}\n                                    data-title={track.name}\n                                    data-date={track.date}\n                                >\n                                    &nbsp;\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n\n                        <div class='col-10 offset-2 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                            {likes && likes.length > 0 && <small class='bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                            </small>}\n                            {comments && comments.length > 0 && <small class='float-right bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                <i class='fas fa-comment text-primary' /> {comments.length}\n                            </small>}\n                        </div>\n\n                        <div class='col-10 offset-2 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-3'>\n                            <div class='row'>\n                                <div class='col-6 text-center'>\n                                    <button type='button' class={`btn btn-sm btn-outline-${hasLikedNews ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedNews ? 'text-primary' : ''}`}\n                                        onClick={this.likeTrack}\n                                        // disabled={hasLikedNews}\n                                    >\n                                        <i class={`${hasLikedNews ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> Like\n                                    </button>\n                                </div>\n                                <div class='col-6 text-center'>\n                                    <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block'\n                                        data-id={track.id}\n                                        onClick={this.toggleAddComment}\n                                    >\n                                        <i class='fas fa-comment' /> Comment\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n\n                        {showAddComment && <TrackAddComment\n                            stores={this.props.stores}\n                            track={track}\n                            inputRef={c => this.inputRef[track.id] = c}\n                        />}\n                        <TrackComments stores={this.props.stores} track={track} col={10} offset={2} compact={true} />\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Track;\n"],"sourceRoot":""}