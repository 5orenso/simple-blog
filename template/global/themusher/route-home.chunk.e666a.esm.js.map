{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///./components/workout/status.js","webpack:///./components/team/publicFeed.js","webpack:///./components/user/updateSettings.js","webpack:///./components/workout/table.js","webpack:///./components/races/index.js","webpack:///./components/notifications/index.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","SUB_MENU_MARGIN_TOP","subMenuMarginTop","initialState","isLoading","submenu","Home","observer","Component","constructor","props","super","loadTeamInfo","async","loadWorkoutSummary","loadWorkoutPlans","year","currentMonth","Date","getMonth","currentYear","util","getYear","seasonStart","parseInt","workoutPlanStore","workoutStore","userStore","stores","team","currentTeam","id","load","query","seasonYear","seasonMonth","workoutPlans","workoutPlanCurrent","prepareWeekGraphs","updateItem","resetGraphPlanWeekDistanceCurrent","loadDogs","dogStore","addData","chooseSubmenu","e","this","setState","target","parentElement","dataset","menu","state","appState","getFingerprint","getInfo","getNotifications","Promise","all","loadTeams","teamStore","skipMusherWorkoutSummary","getFeed","getWorkoutSummary","componentDidMount","loadAll","render","stravaActivityStore","garminActivityDetailsStore","workoutPlan","darkmode","viewmode","workouts","teams","tracks","isAdmin","dogs","totalTeams","length","totalDogs","totalTracks","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","currentTeamObject","findTeam","workoutSummary","workoutSummary2019","findWorkoutSummary","findWorkoutSummaryTotal","workoutSummary2020","user","stravaActivities","garminActivityDetails","class","style","href","role","secToHms","format","callback","key","indexOf","showHeader","url","data-menu","onClick","distancekm","currentSeason","prevSeason","strava","map","act","activity","garmin","fields","total","name","workout","WorkoutStatus","language","MONTHS","getMonths","months","monthRange","lastPlanMonth","month","planMonth","sumWorkoutPlanMonth","percCompleted","findWorkoutSummaryMonth","height","aria-valuenow","aria-valuemin","aria-valuemax","showAddComment","TeamPublicFeed","toggleDate","stopPropagation","preventDefault","showDate","likeWorkout","workoutId","closest","response","status","addLikeToFeed","data","addCommentToFeed","type","commentId","replyId","console","log","addLikeToComment","addLikeToCommentReply","addCommentToWorkoutComment","addCommentToWorkout","addLikeToWorkout","toggleAddComment","inputRef","focus","loadPublicFeed","loadTeamsPublicFeed","publicTeamsFeed","feed","findPublicTeam","image","s3SmallLink","images","likes","comments","hasLikedWorkout","findIndex","date","formatDate","locale","hour12","hour","minute","formatDistance","equipment","findEquipment","distanceKm","elevation","speedAvg","track","dogsLeft","dogsRight","sledWeight","kcalBurnedTotal","kcalMeatGramsTotal","kcalSalmonGramsTotal","kcalFatGramsTotal","gpxInfo","svgMap","viewBox","d","svgElevation","data-id","c","col","offset","compact","toggleSetting","field","settings","updateSetting","hideSettings","forceShow","summaryEmails","infoEmails","partnerEmails","onInput","checked","for","WorkoutTable","withText","week","distance","ascend","plan","seasonMonths","prevSeasonMonths","xTicksAll","weekRange","wo","partSize","Math","floor","xTicks","i","l","push","m","scope","replaceImages","line","isString","text","match","RegExp","exec","parsedLanguageText","replace","p1","p2","isObject","s3XXLargeLink","MARKDOWN_OPTIONS","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","Races","raceStore","loadRace","componentWillReceiveProps","nextProps","newsStore","notifications","races","newsList","sort","a","b","startDate","reverse","race","today","endDate","signupStartDate","signupEndDate","active","title","src","s3MediumLink","markdown","ingress","markdownOpts","classes","currentClass","profile","main","searchText","Notifications","unread","filter","read"],"mappings":"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","file":"route-home.chunk.e666a.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport Workout from '../../components/workout';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutTable from '../../components/workout/table';\n// import DogStatus from '../../components/dog/status';\nimport InviteFriend from '../../components/user/invite';\nimport UserUpdate from '../../components/user/updateSettings';\nimport Install from '../../components/install';\nimport Races from '../../components/races';\nimport Notifications from '../../components/notifications';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport Strava from '../../components/strava';\nimport Garmin from '../../components/garmin';\nimport Teams from '../../components/team/teams';\nimport TeamPublicFeed from '../../components/team/publicFeed';\nimport Ad from '../../components/ad/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'lastWorkouts',\n};\n\n@observer\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { appState, userStore, workoutStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        await appState.getFingerprint();\n        await userStore.getInfo();\n\t\tawait userStore.getNotifications();\n\t\t// await this.loadFeed();\n\t\tawait this.loadWorkoutSummary();\n\t\t// await this.loadDogs();\n\t\tawait Promise.all([\n\t\t\tthis.loadWorkoutPlans(),\n\t\t\tthis.loadTeams(),\n\t\t]);\n\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tloadTeamInfo = async () => {\n\t\tawait this.loadWorkoutSummary();\n\t\tawait this.loadWorkoutPlans();\n\t\t// await this.loadTeams();\n\t}\n\n\tasync loadTeams(props = this.props) {\n\t\tconst { teamStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true }, addData: ['workoutSummary'] });\n\t}\n\n\tasync loadFeed() {\n\t\tconst { userStore } = this.props.stores;\n        await userStore.getFeed({});\n    }\n\n\tasync loadWorkoutSummary() {\n\t\tconst { userStore, workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\t// await workoutStore.load({ query: { team: currentTeam } });\n        await userStore.getWorkoutSummary({ team: currentTeam });\n    }\n\n\tloadWorkoutPlans = async (props = this.props) => {\n\t\tconst { year } = props;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst seasonStart = parseInt(year || (currentMonth < 6 ? currentYear - 1 : currentYear), 10);\n\t\tconst { workoutPlanStore, workoutStore, userStore } = props.stores;\n\t\tconst { team } = userStore;\n\t\tconst { currentTeam = team.id } = workoutStore;\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t\tseasonMonth: 6,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year });\n\t\t\t}\n\t\t} else {\n\t\t\tworkoutPlanStore.updateItem('workoutPlans', []);\n\t\t\tworkoutPlanStore.updateItem('workoutPlan', {});\n\t\t\tworkoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\t\t}\n\t}\n\n\tloadDogs = async () => {\n\t\tconst { dogStore } = this.props.stores;\n\t\tconst { currentTeam } = dogStore;\n\n\t\tawait dogStore.load({ query: { team: currentTeam }, addData: ['workoutSummary'] });\n\t}\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n\trender() {\n\t\tconst { isLoading, submenu } = this.state;\n\t\tconst { userStore, dogStore, appState, workoutPlanStore, teamStore, workoutStore,\n\t\t\tstravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n\t\tconst { workoutPlan, workoutPlans } = workoutPlanStore;\n\t\tconst { darkmode, viewmode } = appState;\n\t\tconst {\n\t\t\tworkouts,\n\t\t\tteams, tracks, isAdmin, dogs,\n\t\t} = userStore;\n\t\t// const { dogs } = dogStore;\n\t\t// const dogsInjured = dogStore.findDogsByStatus(2);\n\t\t// const dogsPregnant = dogStore.findDogsByStatus(4);\n\t\t// const dogsMedication = dogStore.findDogsByStatus(8);\n\t\t// const dogsSick = dogStore.findDogsByStatus(9);\n\t\t// const dogsWithStatus = dogStore.findDogsByStatus([2, 4, 8, 9]);\n\t\t// const dogsWithNeeds = dogStore.findDogsWithNeeds();\n\n\t\tconst totalTeams = teams.length;\n\t\tconst totalDogs = dogs.length;\n\t\tconst totalTracks = tracks.length;\n\n\t\tconst { currentTeam, cordovaActiveTrackingParams, isRunning, totalDistance, currentSpeed, totalTime } = workoutStore;\n\n\t\tconst currentTeamObject = userStore.findTeam(currentTeam, true);\n\t\tconst { workoutSummary } = teamStore;\n\t\tconst workoutSummary2019 = (currentTeam ? teamStore.findWorkoutSummary(currentTeam, 2019) : teamStore.findWorkoutSummaryTotal(2019)) || {};\n        const workoutSummary2020 = (currentTeam ? teamStore.findWorkoutSummary(currentTeam, 2020) : teamStore.findWorkoutSummaryTotal(2020)) || {};\n\n\t\tconst { user } = userStore;\n\t\tconst { stravaActivities } = stravaActivityStore;\n\t\tconst { garminActivityDetails } = garminActivityDetailsStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row mb-4 fixed-top' style={`margin-top: ${SUB_MENU_MARGIN_TOP}; background-color: ${darkmode ? '#191d21' : '#f8f9fa'};`}>\n\t\t\t\t\t{isAdmin && <div class={`col text-center subtopmenu`}>\n\t\t\t\t\t\t<a href='/admin' class='text-secondary stretched-link'><nobr><i class='fas fa-user-shield' /> <Text id='home.admin'>Admin</Text></nobr></a>\n\t\t\t\t\t</div>}\n\t\t\t\t\t<div class={`col text-center subtopmenu border-bottom border-primary`}>\n\t\t\t\t\t\t<a href='/' class='text-primary stretched-link'><nobr><i class='fas fa-chart-line' /> <Text id='home.dashboard'>Dashboard</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class={`col text-center subtopmenu`}>\n\t\t\t\t\t\t<a href='/feed' class='text-secondary stretched-link'><nobr><i class='fas fa-rss' /> <Text id='home.feed'>Feed</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class={`col text-center subtopmenu`}>\n\t\t\t\t\t\t<a href='/todo' class='text-secondary stretched-link'><nobr><i class='fas fa-list' /> <Text id='home.todo'>Todo</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(currentSpeed * 3.6, 1)} km/t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(totalDistance / 1000, 2)} km</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t\t{/* {JSON.stringify(cordovaActiveTrackingParams)}\n\t\t\t\t\t\t\t{JSON.stringify(isRunning)} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t{isAdmin && <>\n\t\t\t\t\t<h3>Feed</h3>\n\t\t\t\t\t<TeamPublicFeed stores={this.props.stores} />\t\t\t\t\t\n\t\t\t\t</>}\n\n\t\t\t\t{/* {!isLoading && <UserUpdate stores={this.props.stores} />} */}\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadTeamInfo} key={`teams-${currentTeam}`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t{/* {isLoading && <div class='text-center mt-5 mb-5'>\n\t\t\t\t\t\t\t<div class='spinner-border text-primary' role='status'>\n\t\t\t\t\t\t\t\t<span class='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>} */}\n\n\t\t\t\t\t\t{!isLoading && workoutSummary && workoutSummary.length === 0 && (\n\t\t\t\t\t\t\t<div class='mb-5 py-3 border-top border-bottom'>\n\t\t\t\t\t\t\t\t<div class='text-center'>\n\t\t\t\t\t\t\t\t\t<div class='display-4'>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-paw' />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-title'>Velkommen til The Musher.</Text>\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-body-1'>The Musher er en app som er kontinuerlig under utvikling.\n\t\t\t\t\t\t\t\t\t\tAlle ideer/innspill/kommentarer mottas med stor takk på Facebooksiden vår 😃</Text>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-body-2'>Fokus til appen er enkel registrering av hunder, team, treninger og hendelser rundt hundene.\n\t\t\t\t\t\t\t\t\t\tNår man har mange hunder så er det ofte vanskelig å holde styr på løpetid, vaksiner, treninger,\n\t\t\t\t\t\t\t\t\t\tskader, vetrinærbesøk, chiplister, osv.</Text>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-body-3'>Alle data lagres sentralt i skyen hos AWS (Amazon Web Services) og det vil derfor være mulig å bruke appen fra flere telefoner\n\t\t\t\t\t\t\t\t\t\tog datamaskiner samtidig. Dette kan være fint dersom det er flere som trener og følger opp hundene.</Text>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t<Text id='home.howto-title'>Slik kommer du i gang:</Text>\n\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t{totalTeams < 1 && <li><a class='btn btn-info mt-3' href='/teams/'><Text id='home.howto-step-1'>Legg inn teamene dine.</Text></a></li>}\n\t\t\t\t\t\t\t\t\t{totalDogs < 1 && <li><a class='btn btn-info mt-3' href='/dogs/'><Text id='home.howto-step-2'>Legg inn hundene dine.</Text></a></li>}\n\t\t\t\t\t\t\t\t\t{totalTracks < 1 && <li><a class='btn btn-info mt-3' href='/tracks/'><Text id='home.howto-step-3'>Legg inn rundene dine.</Text></a></li>}\n\t\t\t\t\t\t\t\t\t<li><a class='btn btn-info mt-3' href='/workouts/'><Text id='home.howto-step-4'>Begynn å registrere treningene.</Text></a></li>\n\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<WorkoutGraph stores={this.props.stores} isLoading={isLoading} key={`graph-${workoutPlan.id}-${workoutPlans.length}`} />\n\t\t\t\t\t\t{['beta', 'advanced'].indexOf(viewmode) > -1 && <>\n\t\t\t\t\t\t\t<WorkoutTable\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tkey={`workout-table-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t\tshowHeader={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>}\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} />\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n\t\t\t\t\t\t<div class='row'>\n\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'races' ? 'btn-danger' : 'btn-outline-danger'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='races'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-dog' /> <Text id='home.races'>Løp</Text></button>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'lastWorkouts' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='lastWorkouts'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-running' /> <Text id='home.workouts'>Treninger</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-equals' /> <Text id='home.totals'>Totaler</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'workoutplanStatus' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='workoutplanStatus'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-chart-line' /> <Text id='home.status'>Status</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{submenu === 'races' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t<Races stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\t\t\t\t\t{submenu === 'lastWorkouts' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t<Install />\n\t\t\t\t\t\t<InviteFriend stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\t\t\t\t\t{submenu === 'totals' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t<WorkoutTotals stores={this.props.stores} key={`totals-${workoutSummary2020.distancekm}`} currentSeason={workoutSummary2020} prevSeason={workoutSummary2019} />\n\t\t\t\t\t</div>}\n\t\t\t\t\t{submenu === 'workoutplanStatus' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t<WorkoutStatus stores={this.props.stores} key={`status-${workoutSummary2020.distancekm}`} currentSeason={workoutSummary2020} prevSeason={workoutSummary2019} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t</div>\n\n\t\t\t\t<Notifications stores={this.props.stores} />\n\n\t\t\t\t{/* <div class='row'>\n\t\t\t\t\t{dogsWithStatus && dogsWithStatus.length > 0 && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-4'>\n\t\t\t\t\t\t<h5><Text id='home.dogs-follow-up'>Hunder som trenger oppfølging</Text></h5>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t{dogsWithStatus && dogsWithStatus.map(d => <DogStatus stores={this.props.stores} dog={d} />)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>}\t\t\t\t\t\n\t\t\t\t\t{dogsWithNeeds && dogsWithNeeds.length > 0 && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-4'>\n\t\t\t\t\t\t<h5><Text id='home.dogs-special-needs'>Hunder med spesielle behov</Text></h5>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t{dogsWithNeeds && dogsWithNeeds.map(d => <DogStatus stores={this.props.stores} dog={d} />)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>}\n\t\t\t\t</div> */}\n\n\t\t\t\t{submenu === 'lastWorkouts' && <div class='row'>\n\n\t\t\t\t\t{user && user.strava && stravaActivities && stravaActivities.length > 0 && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2 overflow-auto'\n\t\t\t\t\t\t\tstyle='max-height: 30vh;'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<h5><Text id='workout.index.strava-workouts'>Strava workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t{stravaActivities && stravaActivities.map(act =>\n\t\t\t\t\t\t\t\t<Strava stores={this.props.stores} activity={act} key={`strava-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{user && user.garmin && garminActivityDetails && garminActivityDetails.length > 0 && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2 overflow-auto'\n\t\t\t\t\t\t\tstyle='max-height: 30vh;'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<h5><Text id='workout.index.garmin-workouts'>Garmin workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t{garminActivityDetails && garminActivityDetails.map(act =>\n\t\t\t\t\t\t\t\t<Garmin stores={this.props.stores} activity={act} key={`garmin-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{workouts && workouts.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4'>\t\t\n\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t<Text id='home.last-workouts' fields={{ total: workouts.length }}>Siste treningsturer - {workouts.length} stk</Text>\n\t\t\t\t\t\t\t\t{currentTeamObject && currentTeamObject.name && <div>\n\t\t\t\t\t\t\t\t\t<small class='font-weight-lighter'>(<Text id='workout.index.filtered-by'>Filtered by</Text>: {currentTeamObject.name})</small>\n\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{workouts && workouts.map(workout => (\n\t\t\t\t\t\t\t<Workout stores={this.props.stores} workout={workout} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>}\n\t\t\t\t</div>}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutStatus extends Component {\n    render() {\n\t\tconst { currentSeason, prevSeason } = this.props;\n        const { userStore, workoutPlanStore, teamStore } = this.props.stores;\n        const { user } = userStore;\n        const { language = 'no' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n\t\tconst { team } = teamStore;\n\n        const { year } = this.props;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = year || util.getYear();\n\t\tconst seasonStart = parseInt(currentMonth < 6 ? currentYear - 1 : currentYear, 10);\n        const months = util.monthRange(`${seasonStart}-06-01`, `${seasonStart + 1}-05-31`);\n        let lastPlanMonth;\n\n        return (\n            <div class='container-fluid mb-2'>\n                <div class='row mt-2'>\n                    <div class='col-12'>\n                        <h5>\n                            <Text id='workout.totals.title'>Treningsplanstatus</Text>\n                        </h5>\n                    </div>\n                </div>\n                <div class='row mt-2 border-bottom pb-2'>\n                    {months && months.map((month) => {\n                        if (month.year > currentYear || (month.year === currentYear && month.month >= currentMonth)) {\n                            return '';\n                        }\n                        const planMonth = workoutPlanStore.sumWorkoutPlanMonth(month.year, month.month + 1);\n                        if (!planMonth) {\n                            return '';\n                        }\n                        lastPlanMonth = planMonth;\n                        const summaryMonth = userStore.findWorkoutSummaryMonth(month.year, month.month + 1);\n                        const percCompleted = summaryMonth / planMonth * 100;\n                        const height = percCompleted > 100 ? 100 : util.format(percCompleted, 0);\n                        return (\n                            <div class='col-3 text-center'>\n                                {/* <div class='w-100 mt-1'>\n                                    <small class='text-muted'>\n                                        {planMonth}km\n                                    </small>\n                                    <small class='text-info'>\n                                        {summaryMonth}km\n                                    </small>\n                                </div> */}\n                                <div class='px-auto w-100 clearfix'>\n                                    <div class={`progress ${style['progress-bar-vertical']}`}\n                                        style={' margin-left: calc(50% - 20px);'}\n                                    >\n                                        <div class='progress-bar progress-bar-striped bg-success' role='progressbar'\n                                            style={`height: ${height}%; width: 40px;`}\n                                            aria-valuenow={height} aria-valuemin='0' aria-valuemax='100'\n                                        >\n                                            {util.format(percCompleted, 0)}%\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class='w-100 mt-1'>\n                                    {MONTHS[month.month]} {month.year}\n                                </div>\n                            </div>\n                        );\n                    })}\n                    {!lastPlanMonth && <div class='col-12 text-center'>\n                        <h3>\n                            <Text id='workout.plan.no-workout-plan-found' fields={{ name: team.name }}>Ingen treningsplaner funnet for team {team.name}.</Text>\n                        </h3>\n                    </div>}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default WorkoutStatus;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport ImageSlider from '../imageSlider';\nimport WorkoutComments from '../workout/comments';\nimport WorkoutAddComment from '../workout/commentAdd';\n\nfunction displayDistance(distanceKm) {\n\tif (distanceKm < 5) {\n\t\treturn util.format(distanceKm, 2);\n\t}\n\tif (distanceKm < 10) {\n\t\treturn util.format(distanceKm, 1);\n\t}\n\treturn util.format(distanceKm, 1);\n}\n\nconst initialState = {\n\tshowAddComment: {},\n};\n\n@observer\nclass TeamPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\n\tlikeWorkout = async (e) => {\n        const workoutId = parseInt(e.target.closest('button').dataset.id, 10);\n\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst response = await workoutStore.likeWorkout({ id: workoutId });\n        if (response.status === 200) {\n            this.addLikeToFeed(workoutId, response.data);\n\t\t}\n\t}\n\n    addCommentToFeed = ({ type, workout, response, commentId, replyId }) => {\n        console.log('addCommentToFeed', { workout, response, commentId });\n        const { teamStore } = this.props.stores;\n        switch (type) {\n            case 'likeComment':\n                teamStore.addLikeToComment({ id: workout.id, data: response.data, commentId });\n                break;\n            case 'likeReply':\n                teamStore.addLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                break;\n        \n            default:\n                if (commentId) {\n                    teamStore.addCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                } else {\n                    teamStore.addCommentToWorkout({ id: workout.id, data: response.data });\n                }\n                break;\n        }\n    }\n\n    addLikeToFeed = (id, data) => {\n        const { teamStore } = this.props.stores;\n        teamStore.addLikeToWorkout({ id, data });\n    }\n\n\ttoggleAddComment = (e) => {\n\t\tconst workoutId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[workoutId]) {\n            delete showAddComment[workoutId];\n        } else {\n            showAddComment[workoutId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[workoutId]) {\n\t\t\t\tthis.inputRef[workoutId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    async loadTeamsPublicFeed(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n\t\tawait teamStore.loadPublicFeed();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadTeamsPublicFeed();\n\t}\n\n    render() {\n        const { showAddComment, showDate } = this.state;\n        const { teamStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const { publicTeamsFeed } = teamStore;\n\n        return (\n            <div class='w-100 mb-3'>\n                {publicTeamsFeed && publicTeamsFeed.map((feed) => {\n                    const team = teamStore.findPublicTeam(feed.team) || {};\n                    let image;\n                    if (team.image && team.image.s3SmallLink) {\n                        image = team.image;\n                    } else if (team.images && team.images[0] && team.images[0].s3SmallLink) {\n                        image = team.images[0];\n                    }\n                    const { likes, comments } = feed;\n                    const hasLikedWorkout = feed.likes && feed.likes.findIndex(e => e.user === user.id) > -1;\n\n                    return (<>\n                        <div class='row pb-5'>\n                            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 d-flex mb-0 position-relative'>\n                                <div class={`text-center border rounded-circle imageRounded`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                    {!image && <i class='fas fa-users text-muted mt-3' style='font-size: 40px;' />}\n                                </div>\n                                <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                                    <h5 class='mb-1' style='line-height: 1.0em;'>{team.name}</h5>\n                                    <div>\n                                        {feed.date && <small class='text-muted' onClick={this.toggleDate}>\n                                            {showDate ? util.formatDate(feed.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(feed.date, new Date(), { locale: 'no-NB' })}\n                                        </small>}\n                                        <small class='text-muted'>\n                                            {feed.equipment > 0 && <><i class='fas fa-tools' /> {userStore.findEquipment(feed.equipment) || feed.equipment}</>}\n                                            {feed.distanceKm > 0 && <><i class='fas fa-road ml-2' /> {displayDistance(feed.distanceKm)}km</>}\n                                            {feed.elevation > 0 && <><i class='fas fa-mountain ml-2' /> {util.format(feed.elevation, 0)}m</>}\n                                            {feed.speedAvg > 0 && <><i class='fas fa-tachometer-alt ml-2' /> {util.format(feed.speedAvg, 1)}km/t</>}\n                                            {feed.dogs > 0 && <><i class='fas fa-dog ml-2' /> {feed.dogs.length}</>}\n                                            {feed.track > 0 && <><i class={`fas fa-map-marked text-${feed.track > 0 ? 'success' : 'danger'} ml-2`} /></>}\n                                            {feed.dogsLeft > 0 && <><i class={`fas fa-crosshairs text-${feed.dogsLeft && feed.dogsRight ? 'success' : 'danger'} ml-2`} /></>}\n                                            {feed.sledWeight > 0 && <>\n                                                <i class='fas fa-sleigh ml-2' /> {util.format(feed.sledWeight, 0)} kg\n                                            </>}\n                                            {feed.kcalBurnedTotal && <><i class='fas fa-balance-scale' /> {util.format(feed.kcalBurnedTotal)} kcal</>}\n                                            {feed.kcalMeatGramsTotal && <><i class='fas fa-drumstick-bite ml-2' /> {util.format(feed.kcalMeatGramsTotal / 1000, 1)} kg</>}\n                                            {feed.kcalSalmonGramsTotal && <><i class='fas fa-fish ml-2' /> {util.format(feed.kcalSalmonGramsTotal / 1000, 1)} kg</>}\n                                            {feed.kcalFatGramsTotal && <><i class='fas fa-piggy-bank ml-2' /> {util.format(feed.kcalFatGramsTotal / 1000, 1)} kg</>}\n                                        </small>\n                                    </div>\n\n                                    {feed.name}\n\n                                    <div class='row mb-3'>\n                                        {feed.gpxInfo && feed.gpxInfo.svgMap && <>\n                                            <div class='col-6 mt-auto text-center'>\n                                                <svg viewBox='0 0 300 300' style='width: 150px; height: 150px;'>\n                                                    <path d={`${feed.gpxInfo.svgMap}`} style='fill: none; stroke: #0275d8; stroke-width: 5; opacity: 0.5;' />\n                                                </svg>\n                                                <small class='text-muted'>Track</small>\n                                            </div>\n                                        </>}\n                                        {feed.gpxInfo && feed.gpxInfo.svgElevation && <>\n                                            <div class='col-6 mt-auto text-center'>\n                                                <svg viewBox='0 0 300 200' style='width: 150px; height: 100px;'>\n                                                    <path d={`${feed.gpxInfo.svgElevation}`} style='fill: none; stroke: #5cb85c; stroke-width: 5; opacity: 0.5;' />\n                                                </svg>\n                                                <small class='text-muted'>Elevation</small>\n                                            </div>\n                                        </>}\n                                    </div>\n\n                                </div>\n                            </div>\n\n                            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 position-relative'>\n                                <div class='d-flex mx-0'>\n                                    {feed.images && <ImageSlider images={feed.images} />}\n                                </div>\n                            </div>\n                            <div class='col-10 offset-2 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                                {likes && likes.length > 0 && <small class='bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                                </small>}\n                                {comments && comments.length > 0 && <small class='float-right bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-comment text-primary' /> {comments.length}\n                                </small>}\n                            </div>\n\n                            <div class='col-10 offset-2 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-3'>\n                                <div class='row'>\n                                    <div class='col-6 text-center'>\n                                        <button type='button' class={`btn btn-sm btn-outline-${hasLikedWorkout ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedWorkout ? 'text-primary' : ''}`}\n                                            data-id={feed.id}\n                                            onClick={this.likeWorkout}\n                                            // disabled={hasLikedWorkout}\n                                        >\n                                            <i class={`${hasLikedWorkout ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                                        </button>\n                                    </div>\n                                    <div class='col-6 text-center'>\n                                        <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block'\n                                            data-id={feed.id}\n                                            onClick={this.toggleAddComment}\n                                        >\n                                            <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {showAddComment[feed.id] && <WorkoutAddComment\n                                stores={this.props.stores}\n                                workout={feed}\n                                inputRef={c => this.inputRef[feed.id] = c}\n                                col='10'\n                                offset='2'\n                                callback={this.addCommentToFeed}\n                            />}\n                            <WorkoutComments\n                                stores={this.props.stores}\n                                workout={feed}\n                                col='10'\n                                offset='2'\n                                compact={true}\n                                callback={this.addCommentToFeed}\n                            />\n\n                        </div>\n                    </>);\n                })}\n            </div>\n        );\n    }\n}\n\nexport default TeamPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\n@observer\nclass UserSettings extends Component {\n    toggleSetting= async (field) => {\n        const { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n        await userStore.updateSetting({ [`settings.${field}`]: settings[field] === 1 ? 0 : 1 });\n    }\n\n    hideSettings = async () => {\n        const { userStore } = this.props.stores;\n        await userStore.updateSetting({ 'settings.hideSettings': 1 });\n        this.setState({\n            hideSettings: true,\n        });\n    }\n\n    render() {\n        const { hideSettings } = this.state;\n\t\tconst { userStore } = this.props.stores;\n        const { forceShow } = this.props;\n        const { user } = userStore;\n        const { settings = {} } = user;\n        if (hideSettings || settings.hideSettings) {\n            return '';\n        }\n        if (!forceShow && settings.summaryEmails && settings.infoEmails && settings.partnerEmails) {\n            return '';\n        }\n        return (\n           <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-4 mb-4 pt-4 pb-4 border-bottom border-top'>\n                <h5><Text id='users.settings'>Brukerinnstillinger</Text></h5>\n\n                {!settings.summaryEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-summary-email'>Oppsummeringer</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsSummaryEmails' onInput={() => this.toggleSetting('summaryEmails')} checked={settings.summaryEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsSummaryEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-summary-email'>Motta oppsummeringer via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.infoEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-info-email'>Info</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsInfoEmails' onInput={() => this.toggleSetting('infoEmails')} checked={settings.infoEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsInfoEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-info-email'>Motta info via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.partnerEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-partner-email'>Partners</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsPartnerEmails' onInput={() => this.toggleSetting('partnerEmails')} checked={settings.partnerEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsPartnerEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-partner-email'>Motta tilbud fra våre partnere via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted'>\n                        <small>\n                            <a href='/users'>\n                                <i class='fas fa-sliders-h' /> <Text id='users.settings-text-info'>Innstillingene finner du inne på profilen din.</Text>\n                            </a>\n                        </small>\n                    </div>\n                </div>\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted text-right'>\n                        <small>\n                            <button type='button' class='btn btn-sm btn-link mb-2' onClick={this.hideSettings}>\n                                <i class='fas fa-eye-slash' /> <Text id='users.hide-settings'>Skjul innstillingene</Text>\n                            </button>\n                        </small>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserSettings;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass WorkoutTable extends Component {\n    render() {\n        const { userStore } = this.props.stores;\n        const { isLoading, year, month, showHeader = true } = this.props;\n        const {\n            user,\n\t\t} = userStore;\n        const { language = 'no' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n        const currentMonth = month || new Date().getMonth() + 1;\n\t\tconst currentYear = year || util.getYear();\n\t\tconst seasonStart = parseInt(currentMonth < 6 ? currentYear - 1 : currentYear, 10);\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonMonths = util.monthRange(`${seasonStart}-06-01`, `${seasonStart + 1}-05-31`);\n        const prevSeasonMonths = util.monthRange(`${seasonStart - 1}-06-01`, `${seasonStart}-05-31`);\n        const seasonWeeks = util.weekRange(`${seasonStart}-06-01`, `${seasonStart + 1}-05-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = xTicksAll.length % 6;\n        const partSize = Math.floor(xTicksAll.length / parts);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += partSize) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        return (\n            <>\n                {showHeader && <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5>}\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <small class='mb-4'><small>\n                        <table class='table table-sm font-weigth-lighter border-bottom'>\n                            <thead>\n                                <tr>\n                                    <th style='padding: .15rem;'><Text id='workout.graph.season'>Sesong</Text></th>\n                                    {seasonMonths.map(m => (\n                                        <th class='text-right' style='padding: .15rem;'><a href={`/workouts/month/${m.month}/${m.year}`}>{MONTHS[m.month - 1]}</a></th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart - 1} - {seasonStart}</th>\n                                    {prevSeasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    {/* <nobr>{summaryMonth.distance}</nobr><br /> */}\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart} - {seasonStart + 1}</th>\n                                    {seasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </small></small>\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WorkoutTable;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nconst MARKDOWN_OPTIONS = {\n\tpedantic: false,\n\tgfm: true,\n\tbreaks: true,\n\tsanitize: false,\n\tsmartLists: true,\n\tsmartypants: true,\n\txhtml: true,\n};\n\nimport mu from '../../lib/musher-util';\n\nfunction replaceImages(line = '', images, language = 'no') {\n    function imageReplacer(match, p1, p2, p3, offset, string) {\n        // console.log({ match, p1, p2, p3, offset, string })\n        if (util.isObject(images[p1])) {\n            return `<img src=${images[p1].s3XXLargeLink} class='img-fluid float-right' style='width: ${p2 || 40}%;' />`;\n        }\n        return '';\n    }\n\n    if (util.isString(line)) {\n\t\tlet text = line;\n        const regex = new RegExp(`<${language}>(.*?)</${language}>`, 's');\n\t\tconst match = regex.exec(text);\n\t\tif (match) {\n\t\t\tconst parsedLanguageText = match[0];\n\t\t\tif (parsedLanguageText) {\n\t\t\t\ttext = parsedLanguageText;\n\t\t\t}\n\t\t}\n        return text.replace(/\\{\\{img\\.(\\d+)\\s*(\\d*)\\}\\}/g, imageReplacer);\n    }\n    return line;\n}\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Races extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadRace(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore } = props.stores;\n\t\tconst query = {};\n\t\tawait raceStore.load({ query });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    componentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.loadRace(nextProps);\n\t}\n\n    render() {\n        const { appState, userStore, raceStore, newsStore } = this.props.stores;\n\t\tconst { allUsers, isAdmin, user, notifications = [] } = userStore;\n\t\tconst { races } = raceStore;\n\t\tconst { newsList } = newsStore;\n\t\tconst news = newsList && newsList[0] ? newsList[0] : null;\n\t\tconst { darkmode, language = 'no' } = appState;\n\t\tconst { showNews } = this.state;\n\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <h5><Text id='races.homerun'>Homerun races</Text></h5>\n                </div>\n\n                {(races || races.length === 0) && <div class='col-12 text-center py-5'>\n                    <h5>No upcoming races!</h5>\n                    Take a look at the previous races:<br />\n                    <a href='https://homerunrace.no/'>homerunrace.no</a>\n                </div>}\n\n                {races && races.sort((a, b) => a.startDate - b.startDate).reverse().map(race =>  {\n                    const today = new Date();\n                    let status = '';\n                    if (today >= new Date(race.startDate) && today <= new Date(race.endDate)) {\n                        status = 'race';\n                    } else if (today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate)) {\n                        status = 'signup';\n                    } else if (today > new Date(race.endDate)) {\n                        return (<></>);\n                    }\n\n                    return (<>\n                        <div class='col-12 col-sm-12 col-md-6 col-lg-6 mb-3'>\n\n                            <div class='card position-relative'>\n                                <h5 class='position-absolute' style='top: 10px; right: 10px;'>\n                                    {status === 'signup' && <>\n                                        <div class='spinner-grow text-primary' role='status' />\n                                    </>}\n                                    {status === 'race' && <>\n                                        <div class='spinner-grow text-danger' role='status' />\n                                    </>}\n                                    {status === 'done' && <>\n                                        <span><i class='fas fa-check text-success' /></span>\n                                    </>}\n                                </h5>\n                                <h5 class='card-header'>\n                                    {isAdmin && <i class={`fas fa-eye${race.active ? ' text-success' : '-slash text-danger'} float-right`} />}\n                                    {race.title}\n                                </h5>\n                                <div class='list-thumb d-flex align-items-center position-relative'>\n                                    <h5 class='position-absolute' style='top: 3px; right: 5px;'>\n                                        {status === 'signup' && <>\n                                            <span class='badge badge-primary border border-white ml-2'><Text id='races.signup-open'>Påmelding åpen</Text></span>\n                                        </>}\n                                        {status === 'race' && <>\n                                            <span class='badge badge-danger border border-white ml-2'><Text id='races.race-in-progress'>Løp pågår</Text></span>\n                                        </>}\n                                        {status === 'done' && <>\n                                            <span class='badge badge-success border border-white ml-2'><Text id='races.race-finished'>Løp avsluttet</Text></span>\n                                        </>}\n                                    </h5>\n                                    {(race.images && race.images[0]) ? <img src={race.images[0].s3MediumLink} class='card-img-top' /> : ''}\n                                </div>\n                                <div class='card-body'>\n                                    <p class='card-text'>\n                                        <Markdown markdown={replaceImages(race.ingress, race.images, language)} markdownOpts={MARKDOWN_OPTIONS} />\t\t\t\t\t\t\t\t\n                                    </p>\n                                    {race.classes && <>\n                                        <div class='mb-3'>\n                                            <small class='font-weight-lighter mr-2'><Text id='races.classes'>Klasser</Text>: </small><br />\n                                            {race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                <span class='badge badge-pill badge-light mr-2 font-weight-light'>\n                                                    {currentClass.title}\n                                                    {/* <span class='badge badge-info ml-2 font-weight-light'>{currentClass.contestants.length}</span> */}\n                                                </span>\n                                            </>)}\t\t\t\t\t\t\t\t\t\t\t\n                                        </div>\n                                    </>}\n                                    <a href={`/app-races/${race.id}`} class='btn btn-primary stretched-link'><Text id='races.read-more'>Les mer</Text></a>\n                                </div>\n                                <div class='card-footer'>\n                                    <small class='text-muted'>\n                                        <Text id='races.race-days'>Løpsdager</Text>: {race.startDate && <>{util.formatDate(race.startDate, { locale: language })}</>}\n                                        {race.endDate && <> - {util.formatDate(race.endDate, { locale: language })}</>}\n                                    </small>\n                                </div>\n                            </div>\n\n                        </div>\t\t\t\t\t\t\n                    </>);\n                })}\n\n\n            </div>\n        );\n    }\n}\n\nexport default Races;\n","import { h, Component } from 'preact';\nimport { Link } from 'preact-router/match';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\n\nconst initialState = {\n    menu: {\n\t\tprofile: false,\n\t\tmain: false,\n\t},\n\tsearchText: '',\n};\n\n@observer\nclass Notifications extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n\t\tconst { notifications = [] } = userStore;\n\t\tconst unreadNotificatins = notifications.filter(e => !e.read);\n\t\tconst unread = unreadNotificatins.length || 0;\n\n        if (unread < 3) {\n            return '';\n        }\n\n\t\treturn (\n            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-4 mb-4 clearfix px-0'>\n                <div class='alert alert-danger' role='alert'>\n                    <a href='/users/notifications' class='text-dark'>\n                        <i class='fas fa-bell mr-2 text-dark' />\n                        <span class='badge badge-pill badge-danger'>{unread}</span> <Text id='notifications.unread'>Uleste varslinger. Klikk her for å se alle...</Text>\n                    </a>\n                </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Notifications;\n"],"sourceRoot":""}