{"version":3,"sources":["webpack:///./components/inbox/messages.js","webpack:///./components/form/images.js","webpack:///./components/inbox/scrollIntoView.js","webpack:///./routes/inbox/detail.js","webpack:///./components/form/dragNdropFileupload.js"],"names":["initialState","likeMessage","InboxUser","observer","Component","constructor","props","super","addLike","async","e","stopPropagation","preventDefault","messageId","target","closest","dataset","id","messageStore","stores","state","setState","setTimeout","this","render","message","messageUser","userStore","user","language","isMyMessage","uuidv4","fromUser","shortname","mu","displayNameShort","userImage","image","images","undefined","class","style","length","util","isArray","map","img","idx","loading","src","s3MediumLink","onClick","viewImage","data-id","data-idx","s3SmallLink","onDblclick","markdown","replaceImages","body","markdownOpts","getMarkdownOptions","likes","readDate","formatDistance","sentDate","Date","locale","Images","handleAddImage","file","addToImages","updateField","object","field","value","skipTimer","push","files","uploadStatus","before","after","autoOpen","apiUrl","height","width","ScrollIntoView","container","componentDidMount","scrollIntoView","behavior","block","ref","c","MARGIN_TOP","marginTop","MARGIN_BOTTOM","marginBottom","InboxDetail","markAsRead","fromuser","unread","markAsReadTimer","to","sendMessage","sendButtonEnabled","showAddImage","resizeTextarea","inputRef","addImage","addImages","beforeImagesUploaded","afterImagesUploaded","handleImageErrored","onerror","backIndicate","absXDiff","marginLeft","back","history","goBack","isLoading","getNotifications","getUnReadMessages","loadConversation","componentWillMount","loadMessages","componentWillUnmount","appState","setSwipeRight","setSwipeRightIndicate","startY","startX","xUp","yUp","xDiff","yDiff","absYDiff","darkmode","conversationUser","messages","filteredMessages","filter","name","displayName","teamImage","teamName","teamUuidv4","place","country","href","for","onInput","linkState","onKeyUp","onFocus","type","disabled","onError","removeImage","data-name","DragNDropFileupload","dropRef","createRef","handleDrag","handleDragIn","dragCounter","dataTransfer","items","drag","handleDragOut","handleDrop","i","l","readLocalFile","handleAddFiles","event","el","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","getApiServer","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","total","readyState","status","JSON","parse","responseText","data","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","current","click","removeEventListener","position","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","Object","keys","key","isImage","match","result","formatBytes","role","aria-valuenow","aria-valuemin","aria-valuemax","children"],"mappings":"whBAQA,MAAMA,EAAe,CACjBC,YAAa,I,IAIXC,EADLC,Y,EAAD,cACwBC,YACpBC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAOnBE,QAAUC,eAAOC,GACbA,EAAEC,kBACFD,EAAEE,iBACF,MAAMC,EAAYH,EAAEI,OAAOC,QAAQ,gBAAgBC,QAAQC,IAC3D,aAAEC,GAAiB,EAAKZ,MAAMa,QAExB,YAAElB,GAAgB,EAAKmB,MAU7B,OATAnB,EAAYY,IAAa,EACzB,EAAKQ,SAAS,CAAEpB,gBAChBqB,WAAW,KACP,MAAM,YAAErB,GAAgB,EAAKmB,aACtBnB,EAAYY,GACnB,EAAKQ,SAAS,CAAEpB,iBACjB,YAEHiB,EAAajB,YAAY,CAAEY,eACpB,GArBPU,KAAKH,M,+VAAL,IACOpB,GAuBdwB,SACO,MAAM,YAAEvB,GAAgBsB,KAAKH,OACvB,QAAEK,EAAU,GAAZ,YAAgBC,GAAgBH,KAAKjB,OACrC,UAAEqB,GAAcJ,KAAKjB,MAAMa,QACjC,KAAES,GAASD,GACL,SAAEE,EAAW,MAASD,EACtBE,EAAcF,EAAKG,SAAWN,EAAQO,SAEtCC,EAAYC,IAAGC,iBAAiBT,GAChCU,EAAYV,EAAYW,QAAUX,EAAYY,OAASZ,EAAYY,OAAO,QAAKC,GAC/ED,EAASb,EAAQa,QAAU,GAEvC,OACU,mBAAKE,MAAM,qBACP,mBAAKA,MAAQ,WAASV,EAAc,sBAAwB,0BACxD,mBAAKU,MAAM,qDAAqDC,MAAM,mBAE7DH,GAAUA,EAAOI,OAAS,GAAK,mBAC5B,mBAAKF,MAAQ,qBAAqBC,MAAQ,IAAEX,EAAc,GAAK,uBAC1Da,IAAKC,QAAQN,IAAWA,EAAOO,IAAI,CAACC,EAAKC,IAC9B,mBACJ,mBACIP,MAAQ,kCACRC,MAAQ,qBAER,mBAAKO,QAAQ,OAAOR,MAAQ,8BAA8BS,IAAKH,EAAII,aAAcC,QAAS5B,KAAK6B,UAAWC,UAAS5B,EAAQM,OAAQuB,WAAUP,SAOrK,mBAAKP,MAAQ,kDAAgDV,EAAc,iBAAmB,MACxFA,GAAe,mBACbU,MAAQ,wFACRC,OAAUL,EAAa,0BAAyBA,EAAUmB,yCAA2C,IAA7F,sDAENnB,GAAa,oBAAMI,MAAM,sBAAsBC,MAAM,oBAAoBR,IAG/E,mBAAKO,MAAM,sBACP,mBACIA,MAAQ,sDAAqDV,EAAc,wBAA0B,4CACrGW,MAAM,kBACNY,UAAS5B,EAAQM,OACjByB,WAAY1B,EAAc,KAAOP,KAAKf,SAEtC,YAAC,IAAD,CAAUiD,SAAUvB,IAAGwB,cAAcjC,EAAQkC,KAAMlC,EAAQa,OAAQT,GAAU,GAAQ+B,aAAc1B,IAAG2B,uBACrG5D,EAAYwB,EAAQM,SAAW,oBAAMS,MAAM,mDAAmDC,MAAM,+EACjG,iBAAGD,MAAM,6BAIjB,mBAAKA,MAAQ,mDACRf,EAAQqC,OAASrC,EAAQqC,MAAMpB,OAAS,GAAK,mBAC1C,mBACIF,MAAQ,gCACRC,MAAQ,2CAA0CX,EAAc,OAAS,UAEzE,iBAAGU,MAAM,oCAGfV,GAAeL,EAAQsC,UAAa,mBAClC,mBACIvB,MAAQ,iHACRC,OAAUL,EAAa,0BAAyBA,EAAUmB,yCAA2C,IAA7F,iFAENnB,GAAa,oBAAMI,MAAM,iCAAiCC,MAAM,oBAAoBR,KAI9F,qBAAOO,MAAM,mBACRG,IAAKqB,eAAevC,EAAQwC,SAAU,IAAIC,KAAQ,CAAEC,OAAQ,qB,EAatFjE,Q,qICrHTkE,EADLjE,Y,EAAD,cACqBC,YACjBC,YAAYC,GACRC,MAAMD,GADS,KAOnB+D,eAAkBC,IACd,MAAM,YAAEC,GAAc,GAAShD,KAAKjB,OAI9B,YACFkE,EADE,OAEFC,EAFE,MAGFC,GACAnD,KAAKjB,MAUT,GARIoE,GACAF,EAAY,CAAEvD,GAAIwD,EAAOxD,GAAIyD,QAAOC,MAAOL,EAAMM,WAAW,IAO5DL,EAAa,CACb,MAAMjC,EAAS,GACfA,EAAOuC,KAAKP,GACZE,EAAY,CAAEvD,GAAIwD,EAAOxD,GAAIyD,MAAO,SAAUC,MAAOrC,EAAQsC,WAAW,MA3B5ErD,KAAKH,MAAQ,CACT0D,MAAO,IAiCftD,SACI,MAAM,aAAEuD,EAAe,SAAjB,OAA2BC,EAAS,SAApC,MAA8CC,EAAQ,SAAtD,SAAgEC,GAAW,GAAS3D,KAAKjB,MAC/F,OACI,mBAAKkC,MAAM,OACP,mBAAKA,MAAM,UACP,YAAC,IAAD,CACI6B,eAAgB9C,KAAK8C,eACrBU,aAAcA,EACdI,OAAQ,kBACRH,OAAQA,EACRC,MAAOA,EACPC,SAAUA,GAEV,mBAAKzC,MAAO,CAAE2C,OAAQ,GAAIC,MAAO,iB,EAoB1CjB,O,kaC1Ef,MAAMpE,EAAe,G,IAGfsF,EADLnF,Y,EAAD,cAC6BC,YACzBC,YAAYC,GACRC,MAAMD,GACNiB,KAAKH,M,+VAAL,IACOpB,GAEPuB,KAAKgE,UAAY,KAGrBC,oBACFjE,KAAKgE,UAAUE,eAAe,CAAEC,SAAU,SAAUC,MAAO,UAGzDnE,SACI,OACI,mBAAKgB,MAAM,cAAcoD,IAAKC,GAAKtE,KAAKgE,UAAYM,GAApD,S,EAKGP,O,6fCff,MAAMQ,EAAa5D,IAAG6D,WAAU,GAC1BC,EAAgB9D,IAAG+D,eAEnBjG,EAAe,G,IAGfkG,EADL/F,Y,EAAD,cAC0BC,YACtBC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAwBnB6F,WAAa,KACT,MAAM,SAAEC,GAAa7E,KAAKjB,OACpB,aAAEY,EAAF,UAAgBS,GAAcJ,KAAKjB,MAAMa,QACzC,KAAES,GAASD,GACX,OAAE0E,GAAWnF,EACfmF,EAAS,IACT9E,KAAK+E,gBAAkBhF,WAAW,IAAMJ,EAAaiF,WAAW,CAAEI,GAAIH,EAAUxE,SAAS,OA9B9E,KAkCnB4E,YAAc/F,iBACV,MAAM,SAAE2F,GAAa,EAAK9F,OACpB,QAAEmB,EAAF,kBAAWgF,GAAsB,EAAKrF,MAC5C,IAAKqF,EACD,OAAO,EAEX,EAAKpF,SAAS,CAAEoF,mBAAmB,IACnC,MAAM,aAAEvF,GAAiB,EAAKZ,MAAMa,aACpCD,EAAasF,YAAY,CAAE/E,UAAS8E,GAAIH,IACxC,EAAK/E,SAAS,CACVqF,cAAc,EACdjF,QAAS,CACLkC,KAAM,GACNrB,OAAQ,IAEZmE,mBAAmB,GACpB,KACCvE,IAAGyE,eAAe,EAAKC,aAnDZ,KAuDnBC,SAAW,KACP,MAAM,aAAEH,GAAiBnF,KAAKH,MAC9BG,KAAKF,SAAS,CACVqF,cAAeA,KA1DJ,KA8DnBI,UAAY,EAAGnC,YAEX,MAAM,QAAElD,GAAYF,KAAKH,MACzBK,EAAQa,OAAOuC,QAAQF,GACvBpD,KAAKF,SAAS,CAAEI,aAlED,KAqEnBsF,qBAAuB,KACnBxF,KAAKF,SAAS,CAAEoF,mBAAmB,KAtEpB,KAyEnBO,oBAAsB,KAClBzF,KAAKF,SAAS,CAAEoF,mBAAmB,KA1EpB,KA6EnBQ,mBAAsBvG,IAClB,MAAM2B,EAAQ3B,EAAEI,OAChBuB,EAAM6E,QAAU,KAChB5F,WAAW,KACPe,EAAMY,KAAQ,IAAG,IAAIiB,MACtB,MAlFY,KA2GnBiD,aAAe,CAACzG,GAA6C0G,eACzD7F,KAAKF,SAAS,CAAEgG,WAAYD,KA5Gb,KAgHnBE,KAAO,KACH,MAAM,QAAEC,GAAYhG,KAAKjB,MAAMa,OAC/BoG,EAAQC,UAhHRjG,KAAKH,M,+VAAL,EACIK,QAAS,CACLkC,KAAM,GACNrB,OAAQ,IAEZmE,mBAAmB,GAChBzG,GAEPuB,KAAKqF,SAAW,KAGpB,qBACI,MAAM,SAAER,GAAa7E,KAAKjB,MAChCiB,KAAKF,SAAS,CAAEoG,WAAW,IAC3B,MAAM,aAAEvG,EAAF,UAAgBS,GAAcJ,KAAKjB,MAAMa,aACnCQ,EAAU+F,yBACVxG,EAAayG,0BACnBzG,EAAa0G,iBAAiB,CAAErB,GAAIH,IAC1C7E,KAAKF,SAAS,CAAEoG,WAAW,IACrBlG,KAAK4E,aAgET0B,qBACFtG,KAAKuG,eAGHC,uBACI,MAAM,SAAEC,GAAazG,KAAKjB,MAAMa,OAChC6G,EAASC,gBACTD,EAASE,wBAGb1C,oBACI,MAAM,KAAE8B,EAAO/F,KAAK+F,KAAd,aAAoBH,EAAe5F,KAAK4F,cAAiB5F,KAAKjB,OAC9D,SAAE0H,GAAazG,KAAKjB,MAAMa,OAChC6G,EAASC,cAAc,KACnBD,EAASC,gBACTX,MAEJU,EAASE,sBAAsB,CAACxH,GAAKyH,SAAQC,SAAQC,MAAKC,MAAKC,QAAOC,QAAOpB,WAAUqB,eACnFtB,EAAazG,EAAG,CAAEyH,SAAQC,SAAQC,MAAKC,MAAKC,QAAOC,QAAOpB,WAAUqB,eAc5EjH,SACI,MAAM,QAAEC,EAAF,aAAWiF,EAAX,WAAyBW,EAAzB,kBAAqCZ,GAAsBlF,KAAKH,OAChE,SAAEgF,GAAa7E,KAAKjB,OAEpB,aAAEY,EAAF,SAAgB8G,GAAazG,KAAKjB,MAAMa,QACxC,SAAEuH,GAAaV,GACbW,iBAAkB/G,EAAO,GAA3B,SAA+BgH,EAAW,IAAO1H,EACjD2H,EAAmBD,EAASE,OAAOpI,GAAK0F,IAAa1F,EAAEkB,MAAQwE,IAAa1F,EAAEsB,UAE9EC,EAAYC,IAAGC,iBAAiBP,GAChCmH,EAAO7G,IAAG8G,YAAYpH,GAAM,GAC5BQ,EAAYR,EAAKS,QAAUT,EAAKU,OAASV,EAAKU,OAAO,QAAKC,IAAcX,EAAKqH,UAE7EC,EAAWtH,EAAKsH,SAChBC,EAAavH,EAAKuH,WAExB,OAAQ,mBACH9B,EAAa,GAAK,mBAAK7E,MAAM,0DAC1B,mBAAKA,MAAM,cACP,mBAAKA,MAAM,kCACP,iBAAGA,MAAM,+BAEb,YAAC,IAAD,CAAMvB,GAAG,iBAAT,aAIjB,mBAAKuB,MAAQ,yCAAuCkG,EAAW,WAAa,aAAejG,MAAQ,kBAAiBuD,kBAA8BF,mBAA4BuB,yBACjK,mBAAK7E,MAAM,yBAAyBC,MAAQ,eAAcqD,MACtD,mBACItD,MAAM,kEAGN,sBAAQW,QAAS5B,KAAK+F,KAAM9E,MAAM,mCAAmCC,MAAM,yCAAwC,iBAAGD,MAAM,uBAE5H,mBAAKA,MAAM,gDAAgDC,MAAM,mBAC7D,mBACID,MAAQ,wEACRC,OAAUL,EAAa,0BAAyBA,EAAUmB,yCAA2C,IAA7F,mCAENnB,GAAa,oBAAMI,MAAM,sBAAsBC,MAAM,oBAAoBR,IAE/E,mBAAKO,MAAM,yBACP,mBAAKA,MAAM,iBACP,0BAASuG,IAEb,mBAAKvG,MAAM,iBACNZ,EAAKwH,MAAWxH,EAAKwH,MAAP,KAAmB,GADtC,IAC2CxH,EAAKyH,SAE/CH,GAAY,mBAAK1G,MAAM,iBACpB,iBAAG8G,KAAO,iBAAgBH,GAAeD,QAO7D,mBAAK1G,MAAM,MAAMC,MAAQ,sBACpBoG,GAAoBA,EAAiBhG,IAAI,CAACpB,EAASsB,IAAQ,mBACxD,mBAAKP,MAAM,kEACP,YAAC,IAAD,CAAerB,OAAQI,KAAKjB,MAAMa,OAAQM,QAASA,EAASC,YAAaE,KAE5EiH,EAAiBnG,OAAS,IAAMK,GAAO,YAAC,IAAD,SAE1C8F,GAAgD,IAA5BA,EAAiBnG,QAAgB,mBACnD,mBAAKF,MAAM,kEACP,mBAAKA,MAAM,yBACP,mBAAKA,MAAM,wBACP,iBAAGA,MAAM,qBAEb,sBACI,YAAC,IAAD,CAAMvB,GAAG,uBAAT,+BAEJ,oBAAMuB,MAAM,cACR,YAAC,IAAD,CAAMvB,GAAG,4BAAT,oDAA2F,4BAO/G,mBAAKuB,MAAM,wCAAwCC,MAAQ,wBACvD,mBAAKD,MAAM,kEAEP,mBAAKA,MAAM,gDAAgDC,MAAM,mBAC7D,mBAAKD,MAAM,oBACP,qBAAOA,MAAM,UAAU+G,IAAI,eAAc,YAAC,IAAD,CAAMtI,GAAG,gBAAT,WAEzC,mBAAKuB,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACNgH,QAASC,YAAUlI,KAAM,gBACzBmI,QAASxH,IAAGyE,eACZgD,QAASzH,IAAGyE,eACZlE,MAAM,iBACNkC,MAAOlD,EAAQkC,KACfiC,IAAKC,GAAKtE,KAAKqF,SAAWf,KAGlC,mBAAKrD,MAAM,oBAAoBC,MAAM,+CACjC,iBAAGD,MAAM,6BACLW,QAAS5B,KAAKsF,cAO9B,mBAAKrE,MAAM,uBACP,sBACIoH,KAAK,SACLpH,MAAM,uBACNW,QAAS5B,KAAKiF,YACdqD,UAAWpD,GACd,iBAAGjE,MAAM,0BAGjBkE,GAAgB,mBACb,mBAAKlE,MAAM,2BACP,mBAAKA,MAAM,mBACP,mBAAKA,MAAM,OACNG,IAAKC,QAAQnB,EAAQa,SAAWb,EAAQa,OAAOO,IAAIC,GAChD,mBAAKN,MAAM,aACP,mBAAKS,IAAKH,EAAIS,YAAaf,MAAM,YAAYsH,QAASvI,KAAK0F,qBAC3D,sBAAQzE,MAAM,sBACVW,QAAS5B,KAAKwI,YACdC,YAAWlH,EAAIiG,MAClB,iBAAGvG,MAAM,iBAHV,YAQhB,YAAC,IAAD,CAAQiC,OAAQhD,EAAS+C,YAAajD,KAAKuF,UAAW9B,OAAQzD,KAAKwF,qBAAsB9B,MAAO1D,KAAKyF,oBAAqB9B,UAAU,c,EAUrJgB,a,2HC7QT+D,EADL9J,Y,EAAD,cACkCC,YAC9BC,YAAYC,GACRC,MAAMD,GADS,KAUnB4J,QAAUC,sBAVS,KAYnBC,WAAc1J,IACVA,EAAEE,iBACFF,EAAEC,mBAda,KAiBnB0J,aAAgB3J,IACZA,EAAEE,iBACFF,EAAEC,kBACFY,KAAK+I,cACD5J,EAAE6J,aAAaC,OAAS9J,EAAE6J,aAAaC,MAAM9H,OAAS,GACtDnB,KAAKF,SAAS,CAAEoJ,MAAM,KAtBX,KA0BnBC,cAAiBhK,IACbA,EAAEE,iBACFF,EAAEC,kBACFY,KAAK+I,cACoB,IAArB/I,KAAK+I,aACL/I,KAAKF,SAAS,CAAEoJ,MAAM,KA/BX,KAmCnBE,WAAcjK,IAOV,GAHAA,EAAEE,iBACFF,EAAEC,kBACFY,KAAKF,SAAS,CAAEoJ,MAAM,IAClB/J,EAAE6J,aAAazF,OAASpE,EAAE6J,aAAazF,MAAMpC,OAAS,EAAG,CAGzD,IAAK,IAAIkI,EAAI,EAAGC,EAAInK,EAAE6J,aAAazF,MAAMpC,OAAQkI,EAAIC,EAAGD,GAAK,EAAG,CAG5DrJ,KAAKuJ,cAFSpK,EAAE6J,aAAazF,MAAM8F,IAKvCrJ,KAAK+I,YAAc,IAnDR,KAwDnBS,eAAkBC,IACdA,EAAMpK,iBACN,MAAMqK,EAAKD,EAAMlK,OAIjB,IAAK,IAAI8J,EAAI,EAAGC,EAAII,EAAGnG,MAAMpC,OAAQkI,EAAIC,EAAGD,GAAK,EAAG,CAGhDrJ,KAAKuJ,cAFSG,EAAGnG,MAAM8F,MA/DZ,KAsEnBM,YAAc,KA3EJ,GAKS,KA8EnBC,aAAgBC,IAKZ,MAAM,aAAErG,EAAe,SAAjB,OAA2BC,EAAS,SAApC,MAA8CC,EAAQ,UAAa1D,KAAKjB,MAC9EyE,GAAa,GAETpC,IAAK0I,WAAWrG,IAChBA,IAGJ,MAAMsG,EAAW,IAAIC,SACrBD,EAASE,OAAO,UAAWJ,GAC3B,MAAMK,EAAa,CACfC,SAAU,GAGdD,EAAWE,IAAM,IAAIC,eAErBH,EAAWE,IAAIE,OAAOC,iBAAiB,WAAad,IAEhDzJ,KAAKwK,eAAef,EADJI,KAGpBK,EAAWE,IAAIG,iBAAiB,YAAcd,IAE1CzJ,KAAK2J,YAAYF,EADDI,KAGpBK,EAAWE,IAAIG,iBAAiB,OAASd,IAErCzJ,KAAK2J,YAAYF,EADDI,KAGpBK,EAAWE,IAAIG,iBAAiB,UAAYd,IACxC,MAAMgB,EAAUZ,EACZzI,IAAK0I,WAAWpG,IAChBA,IAEJ1D,KAAK2J,YAAYF,EAAOgB,KAE5BP,EAAWE,IAAIG,iBAAiB,WAAad,IAEzCzJ,KAAK2J,YAAYF,EADDI,KAGpBK,EAAWE,IAAIG,iBAAiB,QAAUd,IAEtCzJ,KAAK2J,YAAYF,EADDI,KAGpBK,EAAWE,IAAIG,iBAAiB,QAAUd,IAEtCzJ,KAAK2J,YAAYF,EADDI,KAGpBK,EAAWE,IAAIG,iBAAiB,mBAAqBd,IAEjDzJ,KAAK0K,WAAWjB,EADAI,KAIpBK,EAAWE,IAAIO,KAAK,OAAS,GAAEvJ,IAAKwJ,iBAAiB5K,KAAKjB,MAAM6E,UAChEsG,EAAWE,IAAIS,iBAAiB,gBAAkB,UAASzJ,IAAK0J,eAChEZ,EAAWE,IAAIW,KAAKhB,GAEpB,MAAMiB,EAAWnB,EAAWrC,KACtByD,EAAoBjL,KAAKH,MAAMoL,kBAChCA,EAAkBD,KACnBC,EAAkBD,GAAY,IAElCC,EAAkBD,GAAUd,WAAaA,EACzCe,EAAkBD,GAAUE,SAAWlL,KAAKH,MAAMqL,SAClDlL,KAAKF,SAAS,CAAEmL,uBAjJD,KAqJnB1B,cAAiBM,GACN,IAAIsB,QAAQ,CAACC,EAASC,KACzB,MAAMC,EAAS,IAAIC,WAEnBD,EAAOf,iBAAiB,QAAUiB,IAI9BH,EAAOG,KAGXF,EAAOf,iBAAiB,OAASd,IAK7B,MAAMgC,EAAQ5B,EACRmB,EAAWS,EAAMjE,KACjByD,EAAoBjL,KAAKH,MAAMoL,kBAChCA,EAAkBD,KACnBC,EAAkBD,GAAY,IAElCC,EAAkBD,GAAUvB,MAAQA,EACpCzJ,KAAKF,SAAS,CAAEmL,sBAChBjL,KAAK4J,aAAa6B,GAClBL,EAAQ3B,KAGZ6B,EAAOI,cAAc7B,KAjLV,KAqLnBW,eAAiB,CAACf,EAAOI,KACrB,GAAIJ,EAAMkC,iBAAkB,CACxB,MAAMX,EAAWnB,EAAWrC,KACtByD,EAAoBjL,KAAKH,MAAMoL,kBAC/BW,EAAmBnC,EAAMoC,OAASpC,EAAMqC,MAAS,IA9LrD,EAkMFb,EAAkBD,GAAUd,WAAWC,SAAWyB,EAClD5L,KAAKF,SAAS,CAAEmL,wBA9LL,KAkMnBP,WAAa,CAACjB,EAAOI,KACjB,MAAMmB,EAAWnB,EAAWrC,KACtByD,EAAoBjL,KAAKH,MAAMoL,kBAC/Bf,EAAae,EAAkBD,GAAUd,WAO/C,GAAIA,GAA4C,IAA9BA,EAAWE,IAAI2B,YAA8C,MAA1B7B,EAAWE,IAAI4B,OAAgB,CAChF,MACMzI,EADW0I,KAAKC,MAAMhC,EAAWE,IAAI+B,cACpBC,KAAK7I,MAC5B,IAAK,IAAI8F,EAAI,EAAGA,EAAI9F,EAAMpC,OAAQkI,GAAK,EAAG,CAEtCrJ,KAAKqM,gBADQ9I,EAAM8F,IAEnBrJ,KAAKsM,UAAUlJ,MAAQ,MAhN/BpD,KAAKH,MAAQ,CACTqJ,MAAM,EACNqD,gBAAiB,EACjBC,cAAe,GACfvB,kBAAmB,IAiN3BoB,gBAAgBtJ,GAIZ,MAAM,kBAAEkI,GAAsBjL,KAAKH,OAC7B,eAAEiD,EAAF,aAAkBU,EAAe,UAAaxD,KAAKjB,aAElDkM,EAAkBlI,EAAKyE,MAC9BxH,KAAKF,SAAS,CAAEmL,sBAChBnI,EAAeC,GACfS,GAAa,GAIjBS,oBACI,MAAMwI,EAAMzM,KAAK2I,QAAQ+D,QACzBD,EAAIlC,iBAAiB,YAAavK,KAAK8I,cACvC2D,EAAIlC,iBAAiB,YAAavK,KAAKmJ,eACvCsD,EAAIlC,iBAAiB,WAAYvK,KAAK6I,YACtC4D,EAAIlC,iBAAiB,OAAQvK,KAAKoJ,YAElC,MAAM,SAAEzF,GAAa3D,KAAKjB,MAEtB4E,GACA5D,WAAW,KAEPC,KAAKsM,UAAUK,SAChB,IAIXnG,uBACI,MAAMiG,EAAMzM,KAAK2I,QAAQ+D,QACzBD,EAAIG,oBAAoB,YAAa5M,KAAK8I,cAC1C2D,EAAIG,oBAAoB,YAAa5M,KAAKmJ,eAC1CsD,EAAIG,oBAAoB,WAAY5M,KAAK6I,YACzC4D,EAAIG,oBAAoB,OAAQ5M,KAAKoJ,YAGzCnJ,SACI,MAAM,kBAAEgL,GAAsBjL,KAAKH,MAEnC,OACI,mBAAKqB,MAAO,CAAE2L,SAAU,YAAcxI,IAAKrE,KAAK2I,SAC3C3I,KAAKH,MAAMqJ,MACZ,mBAAKhI,MAAO,CACR4L,OAAQ,kBACRC,gBAAiB,uBACjBF,SAAU,WACVG,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,OAAQ,OAER,mBACIlM,MAAO,CACH2L,SAAU,WACVG,IAAK,MACLG,MAAO,EACPD,KAAM,EACNG,UAAW,SACXC,MAAO,OACPC,SAAU,KAGd,uBAAK,YAAC,IAAD,CAAM7N,GAAG,+BAAT,8BAIb,uBACI,qBAAOuB,MAAM,yBAAyBuM,UAAQ,EAC1CnF,KAAK,OACL3I,GAAG,aACH+N,SAAUzN,KAAKwJ,eACfnF,IAAMC,IACFtE,KAAKsM,UAAYhI,MAI7B,uBACKoJ,OAAOC,KAAK1C,GAAmB9J,OAAS,EAAK,sBAAI,YAAC,IAAD,CAAMzB,GAAG,6BAAT,oBAAoE,GACtH,kBAAIuB,MAAM,cACLyM,OAAOC,KAAK1C,GAAmB3J,IAAKsM,IACjC,MAAM,WAAE1D,EAAa,IAAOe,EAAkB2C,GACxCC,EAAUD,EAAIE,MAAM,8CAC1B,OACI,kBAAI7M,MAAM,wEACN,mBAAKA,MAAM,wCACN4M,GAAW,mBAAK5M,MAAM,iBACnBS,IAAKuJ,EAAkB2C,GAAKnE,MAAMlK,OAAOwO,OACzC7M,MAAM,sBAEV,yBAAQ+J,EAAkB2C,GAAKnE,MAAMiB,YACrC,YAAC,IAAD,CAAMhL,GAAG,+BAAT,uBACA,yBAAQ0B,IAAK4M,YAAY/C,EAAkB2C,GAAKnE,MAAMqC,MAAO,KAEjE,mBAAK7K,MAAM,gBAAgBC,MAAM,gBAC7B,mBACID,MAAM,qEACNgN,KAAK,cACL/M,MAAQ,UAASgJ,EAAWC,0BAC5B+D,gBAAehE,EAAWC,SAC1BgE,gBAAc,IACdC,gBAAc,cASzCpO,KAAKjB,MAAMsP,c,EAMb3F","file":"85.chunk.0ebd7.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    likeMessage: {},\n};\n\n@observer\nclass InboxUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    addLike = async (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const messageId = e.target.closest('.inboxBubble').dataset.id;\n\t\tconst { messageStore } = this.props.stores;\n\n        const { likeMessage } = this.state;\n        likeMessage[messageId] = true;\n        this.setState({ likeMessage });\n        setTimeout(() => {\n            const { likeMessage } = this.state;\n            delete likeMessage[messageId];\n            this.setState({ likeMessage });\n        }, 1200);\n\n\t\tawait messageStore.likeMessage({ messageId });\n        return true;\n    }\n\n\trender() {\n        const { likeMessage } = this.state;\n        const { message = {}, messageUser } = this.props;\n        const { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n        const { language = 'en' } = user;\n        const isMyMessage = user.uuidv4 === message.fromUser;\n\n        const shortname = mu.displayNameShort(messageUser);\n        const userImage = messageUser.image || (messageUser.images ? messageUser.images[0] : undefined);\n        const images = message.images || [];\n\n\t\treturn (\n            <div class='position-relative'>\n                <div class={`d-flex ${isMyMessage ? 'justify-content-end' : 'justify-content-start'}`}>\n                    <div class='d-flex align-items-start flex-column overflow-auto' style='max-width: 80%;'>\n\n                            {images && images.length > 0 && <>\n                                <div class={`d-flex flex-column`} style={`${isMyMessage ? '' : 'margin-left: 29px;'}`}>\n                                    {util.isArray(images) && images.map((img, idx) => {\n                                        return (<>\n                                            <div\n                                                class={`px-0 overflow-hidden rounded-lg`}\n                                                style={`max-height: 50vh;`}\n                                            >\n                                                <img loading='lazy' class={`img-fluid border rounded-lg`} src={img.s3MediumLink} onClick={this.viewImage} data-id={message.uuidv4} data-idx={idx} />\n                                            </div>\n                                        </>);\n                                    })}\n                                </div>\n                            </>}\n\n                        <div class={`d-flex flex-row flex-nowrap position-relative ${isMyMessage ? 'align-self-end' : ''}`}>\n                            {!isMyMessage && <div \n                                class={`text-center text-muted border rounded-circle imageRounded imageRoundedThumb pt-0 mr-1`}\n                                style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important; line-height: 15px;`}\n                            >\n                                {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{shortname}</span>}\n                            </div>}\n\n                            <div class='d-flex flex-column'>\n                                <div\n                                    class={`inboxBubble py-2 px-3 rounded-lg position-relative ${isMyMessage ? 'bg-primary text-white' : 'bg-secondary text-white'} overflow-hidden`}\n                                    style='overflow: auto;'\n                                    data-id={message.uuidv4}\n                                    onDblclick={isMyMessage ? null : this.addLike}\n                                >\n                                    <Markdown markdown={mu.replaceImages(message.body, message.images, language, false)} markdownOpts={mu.getMarkdownOptions()} />\n                                    {likeMessage[message.uuidv4] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                        <i class='fas fa-heart likeStory' />\n                                    </span>}\n                                </div>\n\n                                <div class={`flex-fill position-relative ${isMyMessage ? 'align-self-end mr-2' : 'align-self-end mr-2'}`}>\n                                    {message.likes && message.likes.length > 0 && <>\n                                        <div\n                                            class={`position-absolute text-center`}\n                                            style={`line-height: 10px; bottom: 18px; right: ${isMyMessage ? '12px' : '0px'};`}\n                                        >\n                                            <i class='fas fa-thumbs-up text-warning' />\n                                        </div>\n                                    </>}\n                                    {(isMyMessage && message.readDate) && <>\n                                        <div \n                                            class={`position-absolute text-center text-muted border rounded-circle imageRounded imageRoundedIcon pt-0 bg-secondary`}\n                                            style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 1px !important; line-height: 11px; bottom: 18px; right: -8px;`}\n                                        >\n                                            {!userImage && <span class='font-weight-lighter text-white' style='font-size: 10px;'>{shortname}</span>}\n                                        </div>\n                                        {/* <small class='text-muted'><Text id='inbox.read'>Read</Text>: {util.formatDistance(message.readDate, new Date(), { locale: 'no-NB' })}</small> */}\n                                    </>}\n                                    <small class='text-muted ml-2'>\n                                        {util.formatDistance(message.sentDate, new Date(), { locale: 'no-NB' })}\n                                    </small>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default InboxUser;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'start' });\n\t}\n\n    render() {\n        return (\n            <div class='col-12 mb-5' ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport InboxMessages from '../../components/inbox/messages';\nimport ScrollIntoView from '../../components/inbox/scrollIntoView';\n\nimport Images from '../../components/form/images';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nconst initialState = {};\n\n@observer\nclass InboxDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: {\n                body: '',\n                images: [],\n            },\n            sendButtonEnabled: true,\n            ...initialState,\n        };\n        this.inputRef = null;\n    }\n\n    async loadMessages() {\n        const { fromuser } = this.props;\n\t\tthis.setState({ isLoading: true });\n\t\tconst { messageStore, userStore } = this.props.stores;\n        await userStore.getNotifications();\n        await messageStore.getUnReadMessages();\n\t\tawait messageStore.loadConversation({ to: fromuser });\n\t\tthis.setState({ isLoading: false });\n        this.markAsRead();\n\t}\n\n    markAsRead = () => {\n        const { fromuser } = this.props;\n        const { messageStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const { unread } = messageStore;\n        if (unread > 0) {\n            this.markAsReadTimer = setTimeout(() => messageStore.markAsRead({ to: fromuser, user }), 2000);\n        }\n    }\n\n    sendMessage = async () => {\n        const { fromuser } = this.props;\n        const { message, sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        this.setState({ sendButtonEnabled: false });\n        const { messageStore } = this.props.stores;\n\t\tawait messageStore.sendMessage({ message, to: fromuser });\n        this.setState({\n            showAddImage: false,\n            message: {\n                body: '',\n                images: [],\n            },\n            sendButtonEnabled: true,\n        }, () => {\n            mu.resizeTextarea(this.inputRef);\n        });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { message } = this.state;\n        message.images.push(...value);\n        this.setState({ message });\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    componentWillMount() {\n\t\tthis.loadMessages();\n\t}\n\n    componentWillUnmount() {\n        const { appState } = this.props.stores;\n        appState.setSwipeRight();\n        appState.setSwipeRightIndicate();\n    }\n\n    componentDidMount() {\n        const { back = this.back, backIndicate = this.backIndicate } = this.props;\n        const { appState } = this.props.stores;\n        appState.setSwipeRight(() => {\n            appState.setSwipeRight();\n            back();\n        });\n        appState.setSwipeRightIndicate((e, { startY, startX, xUp, yUp, xDiff, yDiff, absXDiff, absYDiff }) => {\n            backIndicate(e, { startY, startX, xUp, yUp, xDiff, yDiff, absXDiff, absYDiff });\n        });\n    }\n\n    backIndicate = (e, { startY, startX, xUp, yUp, xDiff, yDiff, absXDiff, absYDiff }) => {\n        this.setState({ marginLeft: absXDiff });\n        // console.log('backIndicate', { startY, startX, xUp, yUp, xDiff, yDiff, absXDiff, absYDiff })\n    }\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n    render() {\n        const { message, showAddImage, marginLeft, sendButtonEnabled } = this.state;\n        const { fromuser } = this.props;\n\n        const { messageStore, appState } = this.props.stores;\n        const { darkmode } = appState;\n        const { conversationUser: user = {}, messages = [] } = messageStore;\n        const filteredMessages = messages.filter(e => fromuser === e.user || fromuser === e.fromUser);\n\n        const shortname = mu.displayNameShort(user);\n        const name = mu.displayName(user, true);\n        const userImage = user.image || (user.images ? user.images[0] : undefined) || user.teamImage;\n        const imageHeader = user.teamImageHeader;\n        const teamName = user.teamName;\n        const teamUuidv4 = user.teamUuidv4;\n\n        return (<>\n            {marginLeft > 0 && <div class='position-absolute h-100 w-25 d-flex align-items-center'>\n                <div class='text-muted'>\n                    <div class='display-4 align-content-center'>\n                        <i class='fas fa-angle-double-right' />\n                    </div>\n                    <Text id='inbox.go-back'>Go back</Text>\n                </div>\n            </div>}\n\n\t\t\t<div class={`container-fluid position-relative bg-${darkmode ? 'darkmode' : 'lightmode'}`} style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP}; margin-left: ${marginLeft}px; transition: .2s;`}>\n                <div class='row fixed-top bg-light' style={`margin-top: ${MARGIN_TOP};`}>\n                    <div\n                        class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mx-2'\n                        // style={`${imageHeader ? `background-image: url(\"${imageHeader.s3SmallLink}\"); background-size: cover;` : ''} background-position: 50% 50%;`}\n                    >\n                        <button onClick={this.back} class='p-0 btn btn-link float-left mr-3' style='font-size: 2.8em; line-height: 1.0em;'><i class='fas fa-angle-left' /></button>\n\n                        <div class='d-flex flex-row flex-nowrap position-relative' style='overflow: auto;'>\n                            <div \n                                class={`text-center border rounded-circle imageRounded imageRoundedSmall pt-0`}\n                                style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                            >\n                                {!userImage && <span class='font-weight-lighter' style='font-size: 20px;'>{shortname}</span>}\n                            </div>\n                            <div class='flex-grow-1 pl-3 pt-0'>\n                                <div class='text-overflow'>\n                                    <strong>{name}</strong>\n                                </div>\n                                <div class='text-overflow'>\n                                    {user.place ? `${user.place}, ` : ''} {user.country}\n                                </div>\n                                {teamName && <div class='text-overflow'>\n                                    <a href={`/teams/public/${teamUuidv4}`}>{teamName}</a>\n                                </div>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class='row' style={`margin-top: 110px;`}>\n                    {filteredMessages && filteredMessages.map((message, idx) => <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                            <InboxMessages stores={this.props.stores} message={message} messageUser={user}  />\n                        </div>\n                        {filteredMessages.length - 1 === idx && <ScrollIntoView />}\n                    </>)}\n                    {!filteredMessages || filteredMessages.length === 0 && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                            <div class='mb-5 py-3 text-center'>\n                                <div class='display-1 text-muted'>\n                                    <i class='far fa-comments' />\n                                </div>\n                                <h3>\n                                    <Text id='inbox.write-message'>Write the first message 😃</Text>\n                                </h3>\n                                <span class='text-muted'>\n                                    <Text id='inbox.write-message-help'>Use the message field at the bottom of the page.</Text><br />\n                                </span>\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                \n                <div class='fixed-bottom w-100 px-1 py-1 bg-light' style={`margin-bottom: 60px;`}>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0'>\n\n                        <div class='d-flex flex-row flex-nowrap position-relative' style='overflow: auto;'>\n                            <div class='flex-grow-1 pb-2'>\n                                <label class='sr-only' for='inboxSearch'><Text id='inbox.search'>Search</Text></label>\n\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            onInput={linkState(this, 'message.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={message.body}\n                                            ref={c => this.inputRef = c}\n                                        />\n                                    </Localizer>\n                                    <div class='position-absolute' style='bottom: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n\n\n                            </div>\n                            <div class='align-self-end ml-1'>\n                                <button\n                                    type='button'\n                                    class='btn btn-primary mb-2'\n                                    onClick={this.sendMessage}\n                                    disabled={!sendButtonEnabled}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n                        {showAddImage && <>\n                            <div class='col-12 text-center mt-2'>\n                                <div class='container-fluid'>\n                                    <div class='row'>\n                                        {util.isArray(message.images) && message.images.map(img => (\n                                            <div class='col-3 p-1'>\n                                                <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                <button class='btn btn-sm btn-link'\n                                                    onClick={this.removeImage}\n                                                    data-name={img.name}\n                                                ><i class='fas fa-trash' /> Del</button>\n                                            </div>\n                                        ))}\n                                    </div>\n                                </div>\n                                <Images object={message} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                            </div>\n                        </>}\n                    </div>\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default InboxDetail;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n"],"sourceRoot":""}