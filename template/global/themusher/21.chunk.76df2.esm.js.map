{"version":3,"sources":["webpack:///./components/imageSlider/index.js","webpack:///./components/story/commentAdd.js","webpack:///./components/story/commentReply.js","webpack:///./components/story/comments.js","webpack:///./components/team/publicFeedLine.js","webpack:///./components/story/publicStory.js","webpack:///./components/story/storyPoll.js"],"names":["observer","Component","constructor","props","super","touchStart","e","stopPropagation","this","setState","startX","touches","pageX","touchEnd","undefined","sliding","touchMove","totalImages","state","scrollDistance","x","prevImage","nextImage","images","imageContainer","currentImage1","currentImage2","currentIdx","length","imageDots","Array","fill","map","y","nextImageContainer","nextIdx","componentWillReceiveProps","nextProps","nextImages","render","img","curImage","htmlImageRatio","height","width","imgHeight","imgWidth","dimensions","orientation","imageRatio","class","style","onTouchstart","onTouchend","onTouchmove","loading","src","s3LargeLink","ref","c","image1","image2","i","StoryAdd","beforeImagesUploaded","sendButtonEnabled","afterImagesUploaded","commentStory","async","callback","inputRefObject","story","storyStore","stores","comment","showAddImage","response","id","status","body","mu","resizeTextarea","addImage","addImages","value","push","handleImageErrored","image","target","onerror","setTimeout","Date","inputRef","userStore","user","displayNameShort","userImage","displayName","s3SmallLink","for","type","placeholder","onInput","linkState","onKeyUp","onFocus","data-id","onClick","disabled","util","isArray","onError","removeImage","data-name","name","object","updateField","before","after","autoOpen","StoryCommentReply","commentId","commentReplyStory","componentDidMount","initCall","initialState","showAddComment","showAllComments","showAllReplies","viewImageIdx","likeComment","likeReply","showOriginal","StoryComments","addLikeComment","closest","dataset","likeStoryComment","replyId","likeStoryCommentReply","replyComment","parentElement","focus","toggleComments","toggleReplies","toggleMenu","showMenu","showDeleteComment","showEdit","toggleEdit","commentEditText","toggleDeleteComment","deleteComment","deleteCommentStory","deleteCommentReply","commentid","deleteCommentReplyStory","saveComment","editCommentStory","saveCommentReply","editCommentReplyStory","viewImage","idx","translate","preventDefault","replyid","translatedText","key","translateCommentReply","translateComment","displayTeam","teamId","appState","openDrawer","openInbox","fromuser","compact","currentUser","language","max_comments","filteredComments","totalComments","diplayedComments","comments","slice","Math","max","reverse","teams","findPublicTeamByMembers","hasLikedComment","likes","findIndex","filteredReplises","totalReplies","diplayedReplies","imgs","toJS","imageIdx","currentImage","currentLocationGeocode","translation","getCommentTranslations","targetLang","data-comment","uuidv4","href","filter","public","t","markdown","replaceImages","markdownOpts","getMarkdownOptions","onDblclick","data-idx","data-commentid","formatDistance","createdDate","locale","updatedDate","reply","hasLikedReply","replyTranslation","getCommentReplyTranslations","replyBody","data-replyid","fields","more","likeWorkout","idxSuggestion","idxAd","limit","offset","hasFollowSugguestions","hasAd","sessionid","getTime","TeamPublicFeedLine","toggleDate","showDate","workoutId","parseInt","workoutStore","addLikeToFeed","data","addCommentToFeed","workout","holdingStore","teamStore","addLikeToComment","addLikeToCommentReply","addCommentToWorkoutComment","addCommentToWorkout","workoutsAddLikeToComment","workoutsAddLikeToCommentReply","workoutsAddCommentToWorkoutComment","workoutsAddCommentToWorkout","addLikeToWorkout","workoutsAddLikeToWorkout","toggleAddComment","toggleAdminDetails","showAdminDetails","reportWorkout","adminRemoveWorkout","adminHideWorkout","shareLink","url","title","text","shareUrl","showWorkoutDetail","localName","console","log","route","feed","translatedTextName","field","translatedTextComment","containerRef","onTeamClick","onUserClick","onDogClick","isAdmin","hasShareApi","publicDogs","team","publicUser","findPublicTeam","findPublicUser","teamPublicDogs","storyPublicDogs","findTeamAmbition","ambition","ambitions","findTeamType","isTeamAdmin","members","some","m","getImage","priority","reports","hasLikedWorkout","isYourTeam","indexOf","isFollowing","followers","hasRequestedFollow","followRequests","workoutEquipment","findEquipment","equipment","workoutEquipmentIcon","gpxInfo","shortname","username","userLink","settings","hideProfile","mapImage","yrWeather","views","getViews","statistics","adminData","getAdminData","translationName","getTranslation","feedName","feedComment","buttonOnly","simple","classNames","date","formatDate","hour12","hour","minute","dogs","track","sledWeight","temperature","format","formattedCounty","moonIllumination","phaseIcon","formatted_address","deviceInfo","count","ranking","isNumber","rankingTrend","getClassForTrend","durationAvg","durationAvgTrend","statisticsCurrent","totalInteractions","shadowTags","tag","dblClick","likeRef","allDogs","distanceKm","elevation","duration","secToHms","speedAvg","avgGpsMovingSpeed","data-url","data-title","rel","data-native","col","showAvatar","extraClass","showTeamSetting","likeStory","StoryEditInline","saveStory","storyBody","saveField","publicFeedUpdate","storyType","saveStoryField","subfield","subvalue","clearTimeout","updateTimer","doUpdateField","query","updateFieldValue","skipTimer","newValue","localObjectValue","textareaRef","createRef","opts","current","data-subfield","data-subvalue","pinned","isoDate","checked","selected","urlText","code","country","region","currency","price","StoryTypeRegular","showStoryDetail","setSelectedImage","selectedImageIdx","components","finalBody","getInlineComponents","offline","component","storyId","params","content","StoryTypeAd","componentWillMount","asUrl","currencty","StoryTypeArticle","StoryPublicFeed","likeIds","Object","keys","closeAllAddComments","toggleShowTeamSetting","showDeleteStory","toggleDeleteStory","reportStory","adminRemoveStory","adminHideStory","deleteStory","doneEdit","hashtag","loadPublicFeed","hasLikedStory","totalFollowers","role","StoryPoll","pollStory","line","toggleResult","viewResult","lines","split","trim","replace","hasPolledStory","polls","totalPolls","maxPercent","forEach","percent","md5","voteDays","days","finishDate","addDays","isExpired","hasImageRegexp","RegExp","hasPolledLine","aria-valuenow","aria-valuemin","aria-valuemax","extended","test","data-line"],"mappings":"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","file":"21.chunk.76df2.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\n@observer\nclass ImageSlider extends Component {\n    constructor(props) {\n        super(props);\n        const { images = [] } = props;\n        this.state = {\n            imageContainer: 1,\n            currentImage1: images[0] || {},\n            currentImage2: {},\n            currentIdx: 0,\n            totalImages: images.length || 0,\n            imageDots: [...Array(images.length || 0).fill(1).map((x, y) => x + y)],\n        };\n    }\n\n    nextImage() {\n        // console.log('next');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx + 1;\n        if (nextIdx > totalImages -1) {\n            nextIdx = 0;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: nextImageContainer,\n        });\n    }\n\n    prevImage() {\n        // console.log('prev');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx - 1;\n        if (nextIdx < 0) {\n            nextIdx = totalImages - 1;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: imageContainer === 1 ? 2 : 1,\n        });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: e.touches[0].pageX,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: undefined,\n            sliding: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        // e.preventDefault();\n        const { totalImages } = this.state;\n        if (totalImages > 1) {\n            const { startX, sliding } = this.state;\n            const scrollDistance = 50;\n            const x = e.touches[0].pageX;\n            if (!sliding) {\n                if (x > startX + scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.prevImage();\n                } else if (x < startX - scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.nextImage();\n                }\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.images !== this.props.images) {\n            const { images: nextImages = [] } = nextProps;\n            this.setState({\n                imageContainer: 1,\n                currentImage1: nextImages.length > 0 ? nextImages[0] : {},\n                currentImage2: {},\n                currentIdx: 0,\n                totalImages: nextImages.length || 0,\n                imageDots: [...Array(nextImages.length || 0).fill(1).map((x, y) => x + y)],\n            });\n        }\n    }\n\n    render() {\n        const { currentImage1, currentImage2, imageContainer, totalImages, imageDots, currentIdx } = this.state;\n        const img = this[`image${imageContainer}`];\n        const curImage = imageContainer === 1 ? currentImage1 : currentImage2;\n        const htmlImageRatio = img && img.height ? img.width / img.height : 4 / 3;\n        let imgHeight;\n        let imgWidth;\n        if (curImage.dimensions) {\n            const { width, height, orientation } = curImage.dimensions;\n            if (orientation > 4 && orientation < 9) {\n                imgHeight = width;\n                imgWidth = height;\n            } else {\n                imgHeight = height;\n                imgWidth = width;\n            }\n        }\n        const imageRatio = curImage.dimensions ? imgWidth / imgHeight : htmlImageRatio;\n        if (totalImages <= 0) {\n            return '';\n        }\n\n        return (\n            <div class='w-100'>\n                <div class='border rounded position-relative w-100'\n                    style={`height: calc(85vw / ${imageRatio}); overflow: hidden; transition: all .3s ease-in-out;`}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                >\n                    {totalImages > 1 && <span class='position-absolute' style='top:0px; right: 5px; z-index: 2000;'><small>{currentIdx + 1}/{totalImages}</small></span>}\n                    {currentImage1 && <div class='position-absolute' style={`${imageContainer === 1 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage1.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image1 = c}\n                        />\n                    </div>}\n                    {currentImage2 && <div class='position-absolute' style={`${imageContainer === 2 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage2.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image2 = c}\n                        />\n                    </div>}\n                </div>\n                {imageDots.length > 1 && <div class='w-100 text-center'>{imageDots.map(i => <span style={`color: ${i === currentIdx + 1 ? '#ffffff' : '#808080'};`}>&bull;</span>)}</div>}\n            </div>\n        );\n    }\n}\n\nexport default ImageSlider;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentStory({ id: story.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[story.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ story, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, story } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={story.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryCommentReply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentReplyStory({ id: story.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ story, response, commentId });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    componentDidMount() {\n        const { initCall = () => {} } = this.props;\n        initCall();\n    }\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport StoryReplyComment from '../../components/story/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n    showOriginal: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass StoryComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            showAllComments: props.showAllComments,\n        };\n        this.inputRef = {};\n    }\n\n    addLikeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.closest('.commentContainer').dataset.id;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeComment } = this.state;\n        likeComment[commentId] = true;\n        this.setState({ likeComment });\n        setTimeout(() => {\n            const { likeComment } = this.state;\n            delete likeComment[commentId];\n            this.setState({ likeComment });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryComment({ id: story.id, commentId });\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', story, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n        const replyId = e.target.closest('.replyContainer').dataset.id;\n        const commentId = e.target.closest('.replyContainer').dataset.comment;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeReply } = this.state;\n        likeReply[replyId] = true;\n        this.setState({ likeReply });\n        setTimeout(() => {\n            const { likeReply } = this.state;\n            delete likeReply[replyId];\n            this.setState({ likeReply });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryCommentReply({ id: story.id, replyId, commentId });\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', story, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id, comment: commentEditText } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n\t\t\tshowEdit,\n            showMenu: {},\n            commentEditText,\n\t\t});\n\t}\n\n    toggleDeleteComment = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteComment = {} } = this.state;\n        showDeleteComment[id] = !showDeleteComment[id];\n\t\tthis.setState({\n\t\t\tshowDeleteComment,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    deleteComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentStory({ id: story.id, commentId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentReplyStory({ id: story.id, commentId, replyId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\n    }\n\n    saveComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentStory({ id: story.id, commentId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    saveCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentReplyStory({ id: story.id, commentId, replyId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await storyStore.translateCommentReply({ commentid, replyid, story, user });\n        } else {\n            translatedText[key] = await storyStore.translateComment({ commentid, story, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    displayTeam = (e, teamId) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('publicTeam', { teamId, height: '80vh' });\n\t}\n\n    openInbox = (e, fromuser) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('inboxDetail', { fromuser, height: '80vh' });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showMenu = {}, showEdit = {},\n            showDeleteComment = {}, commentEditText, likeComment, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { story, callback = () => {}, initCall = () => {}, compact = false } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (story.comments) {\n            totalComments = story.comments.length;\n            if (showAllComments) {\n                filteredComments = story.comments;\n            } else {\n                // filteredComments = story.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = story.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {story && util.isArray(filteredComments) && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                    const translation = storyStore.getCommentTranslations({\n                        story,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg position-relative'>\n\n                                        {currentUser.id === user.id && <>\n                                            <span class='float-right font-weight-lighter text-muted'>\n                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={comment.id} />\n                                            </span>\n                                        </>}\n                                        {showMenu[comment.id] && <>\n                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={comment.id} data-comment={comment.comment}><i class='fas fa-edit' /> Edit</button>\n                                                <hr />\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                            </div>\n                                        </>}\n\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`} onClick={(e) => this.openInbox(e, user.uuidv4)}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                    {teams && teams.length > 0 && <>\n                                                        <span class='font-weight-lighter text-muted ml-1'>\n                                                            {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                - <a href={`/teams/public/${t.uuidv4}`} onClick={(e) => this.displayTeam(e, t.uuidv4)}>{t.name}</a>\n                                                            </>)}\n                                                        </span>\n                                                    </>}\n                                                </h5>\n\n\n                                                {showEdit[comment.id] ? <>\n                                                    <div class='d-flex bd-highlight'>\n                                                        <div class='p-0 w-100 bd-highlight'>\n                                                            <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                            <div class='border rounded rounded-lg position-relative'>\n                                                                <Localizer>\n                                                                    <textarea\n                                                                        class='form-control-plaintext px-2'\n                                                                        type='text'\n                                                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                        onInput={linkState(this, 'commentEditText')}\n                                                                        onKeyUp={mu.resizeTextarea}\n                                                                        onFocus={mu.resizeTextarea}\n                                                                        style='height: 2.3em;'\n                                                                        value={commentEditText}\n                                                                    />\n                                                                </Localizer>\n                                                           </div>\n                                                        </div>\n                                                        <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                            <button type='button' class='btn btn-primary mb-2'\n                                                                onClick={this.saveComment}\n                                                                data-id={comment.id}\n                                                            ><i class='fas fa-paper-plane' /></button>\n                                                        </div>\n                                                    </div>\n                                                </> : <>\n                                                    <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </>}\n                                                {showDeleteComment[comment.id] && <div class='clearfix mt-3 mb-3'>\n                                                    <button class='btn btn-danger float-left' onClick={this.deleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                </div>}\n\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row position-relative'>\n                                                    <div\n                                                        class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 60vh;`}\n                                                        onDblclick={this.addLikeComment}\n                                                        data-id={comment.id}\n                                                    >\n                                                        <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                    {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                        <i class='fas fa-heart likeStory' />\n                                                    </span>}\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {util.isArray(images) && images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`commentContainer btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.addLikeComment}\n                                            data-id={comment.id}\n                                            disabled={hasLikedComment}\n                                        >\n                                            {hasLikedComment ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && util.isArray(filteredReplises) && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = mu.displayNameShort(user);\n                                    const displayName = mu.displayName(user);\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n                                    const { currentLocationGeocode = {} } = reply;\n\n                                    const replyTranslation = storyStore.getCommentReplyTranslations({\n                                        story,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div\n                                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg position-relative'>\n                                                    {currentUser.id === user.id && <>\n                                                            <span class='float-right font-weight-lighter text-muted'>\n                                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={reply.id} />\n                                                            </span>\n                                                        </>}\n                                                        {showMenu[reply.id] && <>\n                                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={reply.id} data-comment={reply.comment}><i class='fas fa-edit' /> Edit</button>\n                                                                <hr />\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                            </div>\n                                                        </>}\n\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                                {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                                    <a href={`/inbox/${user.uuidv4}`} onClick={(e) => this.openInbox(e, user.uuidv4)}>{displayName}</a>\n                                                                </> : <>\n                                                                    {displayName}\n                                                                </>}\n                                                                {teams && teams.length > 0 && <>\n                                                                    <span class='font-weight-lighter text-muted ml-2'>\n                                                                        {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                            - <a href={`/teams/public/${t.uuidv4}`} class='mr-2' onClick={(e) => this.displayTeam(e, t.uuidv4)}> {t.name}</a>\n                                                                        </>)}\n                                                                    </span>\n                                                                </>}\n                                                            </h5>\n\n\n                                                            {showEdit[reply.id] ? <>\n                                                                <div class='d-flex bd-highlight'>\n                                                                    <div class='p-0 w-100 bd-highlight'>\n                                                                        <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                                        <div class='border rounded rounded-lg position-relative'>\n                                                                            <Localizer>\n                                                                                <textarea\n                                                                                    class='form-control-plaintext px-2'\n                                                                                    type='text'\n                                                                                    placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                                    onInput={linkState(this, 'commentEditText')}\n                                                                                    onKeyUp={mu.resizeTextarea}\n                                                                                    onFocus={mu.resizeTextarea}\n                                                                                    style='height: 2.3em;'\n                                                                                    value={commentEditText}\n                                                                                />\n                                                                            </Localizer>\n                                                                    </div>\n                                                                    </div>\n                                                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                                        <button type='button' class='btn btn-primary mb-2'\n                                                                            onClick={this.saveCommentReply}\n                                                                            data-commentid={comment.id}\n                                                                            data-id={reply.id}\n                                                                        ><i class='fas fa-paper-plane' /></button>\n                                                                    </div>\n                                                                </div>\n                                                            </> : <>\n                                                                <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                            </>}\n                                                            {showDeleteComment[reply.id] && <div class='clearfix mt-3 mb-3'>\n                                                                <button class='btn btn-danger float-left' onClick={this.deleteCommentReply} data-id={reply.id} data-commentid={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                            </div>}\n\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`replyContainer btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                            disabled={hasLikedReply}\n                                                        >\n                                                            {hasLikedReply ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                            {reply.updatedDate && <>\n                                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(reply.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                                            </>}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <StoryReplyComment stores={this.props.stores} story={story}\n                                    initCall={initCall}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                    key={`story-commentreply-${comment.id}`}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default StoryComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport { route } from 'preact-router';\n\nimport ImageScroller from '../imageScroller';\nimport DogScroller from '../dog/scroller';\nimport WorkoutComments from '../workout/comments';\nimport WorkoutAddComment from '../workout/commentAdd';\n\nimport PublicTeam from '../team/public';\n\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport Speed from '../data/speed';\nimport Elevation from '../data/elevation';\nimport Weight from '../data/weight';\nimport Distance from '../data/distance';\nimport Temperature from '../data/temperature';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distanceKm) {\n\tif (distanceKm < 5) {\n\t\treturn util.format(distanceKm, 2);\n\t}\n\tif (distanceKm < 10) {\n\t\treturn util.format(distanceKm, 1);\n\t}\n\treturn util.format(distanceKm, 1);\n}\n\nconst initialState = {\n\tshowAddComment: {},\n    // viewImageIdx: {},\n    likeWorkout: {},\n    idxSuggestion: 0,\n    idxAd: 4,\n    limit: 15,\n    offset: 0,\n    hasFollowSugguestions: false,\n    hasAd: false,\n    sessionid: new Date().getTime(),\n};\n\n@observer\nclass TeamPublicFeedLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n        this.containerRef = null;\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeWorkout = async (e) => {\n        const workoutId = parseInt(e.target.closest('.imageContainer').dataset.id, 10);\n\t\tconst { workoutStore } = this.props.stores;\n\n        const { likeWorkout } = this.state;\n        likeWorkout[workoutId] = true;\n        this.setState({ likeWorkout });\n        setTimeout(() => {\n            const { likeWorkout } = this.state;\n            delete likeWorkout[workoutId];\n            this.setState({ likeWorkout });\n        }, 1200);\n\n\t\tconst response = await workoutStore.likeWorkout({ id: workoutId });\n        if (response && response.status === 200) {\n            this.addLikeToFeed(workoutId, response.data);\n\t\t}\n\t}\n\n    addCommentToFeed = ({ type, workout, response, commentId, replyId }) => {\n        // console.log('addCommentToFeed', { workout, response, commentId });\n        const { holdingStore = 'team' } = this.props;\n        if (holdingStore === 'team') {\n            const { teamStore } = this.props.stores;\n            switch (type) {\n                case 'likeComment':\n                    teamStore.addLikeToComment({ id: workout.id, data: response.data, commentId });\n                    break;\n                case 'likeReply':\n                    teamStore.addLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                    break;\n\n                default:\n                    if (commentId) {\n                        teamStore.addCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                    } else {\n                        teamStore.addCommentToWorkout({ id: workout.id, data: response.data });\n                    }\n                    break;\n            }\n        } else if (holdingStore === 'story') {\n            const { storyStore } = this.props.stores;\n            switch (type) {\n                case 'likeComment':\n                    storyStore.workoutsAddLikeToComment({ id: workout.id, data: response.data, commentId });\n                    break;\n                case 'likeReply':\n                    storyStore.workoutsAddLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                    break;\n\n                default:\n                    if (commentId) {\n                        storyStore.workoutsAddCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                    } else {\n                        storyStore.workoutsAddCommentToWorkout({ id: workout.id, data: response.data });\n                    }\n                    break;\n            }\n        }\n    }\n\n    addLikeToFeed = (id, data) => {\n        const { holdingStore = 'team' } = this.props;\n        if (holdingStore === 'team') {\n            const { teamStore } = this.props.stores;\n            teamStore.addLikeToWorkout({ id, data });\n        } else if (holdingStore === 'story') {\n            const { storyStore } = this.props.stores;\n            storyStore.workoutsAddLikeToWorkout({ id, data });\n        }\n    }\n\n\ttoggleAddComment = (e) => {\n\t\tconst workoutId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[workoutId]) {\n            delete showAddComment[workoutId];\n        } else {\n            showAddComment[workoutId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[workoutId]) {\n\t\t\t\tthis.inputRef[workoutId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleAdminDetails = () => {\n        const { showAdminDetails } = this.state;\n        this.setState({\n            showAdminDetails: !showAdminDetails,\n        });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    reportWorkout = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        await teamStore.reportWorkout({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    adminRemoveWorkout = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        await teamStore.adminHideWorkout({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    showWorkoutDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const target = e.target.closest('#workoutDetail');\n        if (target) {\n            const { id } = target.dataset;\n            if (id) {\n            console.log({ target, id });\n                route(`/workouts/public/${id}`);\n            }\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { feed = {} } = this.props;\n        const { userStore, teamStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedTextName = await teamStore.translate({ object: feed, user, field: 'name' });\n        let translatedTextComment;\n        if (feed.comment) {\n            translatedTextComment = await teamStore.translate({ object: feed, user, field: 'comment' });\n        }\n        this.setState({ showOriginal: 0, translatedTextName, translatedTextComment });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    displayTeam = (e, teamId) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('publicTeam', { teamId, height: '80vh' });\n\t}\n\n    openInbox = (e, fromuser) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('inboxDetail', { fromuser, height: '80vh' });\n    }\n\n    render() {\n        const {\n            showAddComment,\n            showDate,\n            likeWorkout,\n            showOriginal,\n            translatedTextName,\n            translatedTextComment,\n            showAdminDetails,\n            showMenu = {},\n        } = this.state;\n        const {\n            feed,\n            idx,\n            onTeamClick = () => {},\n            onUserClick = () => {},\n            onDogClick = () => {},\n            holdingStore = 'team',\n        } = this.props;\n        const { teamStore, storyStore, userStore, appState } = this.props.stores;\n        const { user, isAdmin } = userStore;\n        const { language = 'en' } = user;\n        const { darkmode, hasShareApi } = appState;\n        let publicDogs;\n\n        let team = {};\n        let publicUser = {};\n        if (holdingStore === 'team') {\n            team = teamStore.findPublicTeam(feed.team);\n            publicUser = teamStore.findPublicUser(feed.user) || {};\n            const { publicDogs: teamPublicDogs } = teamStore;\n            publicDogs = teamPublicDogs;\n        } else if (holdingStore === 'story') {\n            team = storyStore.findPublicTeam(feed.team);\n            publicUser = storyStore.findPublicUser(feed.user) || {};\n            const { publicDogs: storyPublicDogs } = storyStore;\n            publicDogs = storyPublicDogs;\n        }\n        const teamAmbition = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n        const teamType = userStore.findTeamType({ type: team.type, language });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === user.id) : false;\n\n        const image = mu.getImage({ user: publicUser, team, object: feed, priority: 'user' });\n\n        const { likes, comments, reports = [] } = feed;\n        const hasLikedWorkout = feed.likes && feed.likes.findIndex(e => e.user === user.id) > -1;\n        const totalFollowers = team && team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n        const isFollowing = team && team.followers && team.followers.indexOf(user.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n        const workoutEquipment = userStore.findEquipment({ equipment: feed.equipment, language });\n        const workoutEquipmentIcon = userStore.findEquipment({ equipment: feed.equipment, field: 'icon' });\n\t\tconst { gpxInfo = {} } = feed;\n\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (publicUser) {\n            shortname = mu.displayNameShort(publicUser);\n            name = mu.displayName(publicUser);\n            username = mu.displayName(publicUser);\n            if (publicUser.settings && publicUser.uuidv4 !== user.uuidv4) {\n                userLink = publicUser.settings.hideProfile ? null : `/inbox/${publicUser.uuidv4}`;\n            }\n        }\n\n        const images = [];\n        if (feed.mapImage) {\n            images.push({\n                ...feed.mapImage,\n                type: 'map',\n            });\n        }\n        if (feed.images) {\n            const imgs = toJS(feed.images);\n            images.push(...imgs);\n        }\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = feed;\n        const views = mu.getViews(feed.statistics);\n        const adminData = mu.getAdminData(feed.statistics);\n\n        if (!team || !team.name) {\n            return '';\n        }\n\n        const translationName = mu.getTranslation({\n            object: feed,\n            targetLang: language,\n            field: 'name',\n        }) || translatedTextName;\n        let feedName = translationName || feed.name;\n        const translationComment = mu.getTranslation({\n            object: feed,\n            targetLang: language,\n            field: 'comment',\n        }) || translatedTextComment;\n        let feedComment = translationComment || feed.comment;\n\n        if (showOriginal) {\n            feedName = feed.name;\n            feedComment = feed.comment;\n        }\n\n        return (<>\n            {(isAdmin || (user.id === feed.user)) ? <>\n                <span class='float-right font-weight-lighter text-muted'>\n                    <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={feed.uuidv4} />\n                </span>\n            </> : <>\n                {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                    <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                </span>}\n            </>}\n            {showMenu[feed.uuidv4] && <>\n                <div class='position-absolute bg-light p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                    <button class='btn btn-link btn-block text-left' onClick={this.reportWorkout} data-id={feed.uuidv4}><i class='fas fa-flag' /> Report</button>\n                    {isAdmin && <>\n                        <hr />\n                        <button class='btn btn-link btn-block text-left text-danger' onClick={this.adminRemoveWorkout} data-id={feed.id}>\n                            <i class='fas fa-eraser' /> Remove from feed\n                        </button>\n                    </>}\n                    <button class='btn btn-link btn-block text-left' onClick={this.toggleAdminDetails}>\n                        <i class='fas fa-user-cog' /> Toggle admin details\n                    </button>\n                </div>\n            </>}\n\n            <div class='d-flex position-relative'>\n                <div class='text-center'>\n                    <div\n                        class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                        style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}>\n                        {!image && <i class='fas fa-users text-muted mt-2' style='font-size: 20px;' />}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                    {/* <span class='badge badge-pill badge-secondary float-right'>{teamType}</span> */}\n                    <h5 class='mb-1 position-relative' style='line-height: 1.0em;'>\n                        {team.public ? <>\n                            <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => this.displayTeam(e, team.uuidv4)} class='stretched-link'>{team.name}</a>\n                        </> : <>\n                            {team.name}\n                        </>}\n                    </h5>\n                    \n                    <div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                        {feed.date && <small class='text-muted' onClick={this.toggleDate}>\n                            {showDate ? util.formatDate(feed.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(feed.date, new Date(), { locale: 'no-NB' })}\n                        </small>}\n                        {username && <>\n                            <small class='ml-2 text-muted'>\n                                {userLink ? <>\n                                    <i class='fas fa-user' /> <a href={userLink} onClick={(e) => this.openInbox(e, publicUser.uuidv4)}>{username}</a>\n                                </> : <>\n                                    <i class='fas fa-user' /> {username}\n                                </>}\n                            </small>\n                        </>}\n                        <small class='text-muted'>\n                            {feed.equipment > 0 && <><i class={`${workoutEquipmentIcon} ml-2`} /> {workoutEquipment}</>}\n                            {/* {feed.distanceKm > 0 && <><i class='fas fa-road ml-2' /> {displayDistance(feed.distanceKm)}km</>}\n                            {feed.elevation > 0 && <><i class='fas fa-mountain ml-2' /> {util.format(feed.elevation, 0)}m</>}\n                            {feed.speedAvg > 0 && <><i class='fas fa-tachometer-alt ml-2' /> {util.format(feed.speedAvg, 1)}km/t</>} */}\n                            {feed.dogs > 0 && <><i class='fas fa-dog ml-2' /> {feed.dogs.length}</>}\n                            {feed.track > 0 && <><i class={`fas fa-map-marked text-${feed.track > 0 ? 'success' : 'danger'} ml-2`} /></>}\n                            {/* {feed.dogsLeft > 0 && <><i class={`fas fa-crosshairs text-${feed.dogsLeft && feed.dogsRight ? 'success' : 'danger'} ml-2`} /></>} */}\n                            {feed.sledWeight > 0 && <>\n                                <i class='fas fa-sleigh ml-2' /> <Weight stores={this.props.stores} value={feed.sledWeight} />\n                            </>}\n                            {feed.temperature !== 0 && <>\n                                <i class='fas fa-temperature-low ml-2' /> <Temperature stores={this.props.stores} value={feed.temperature} />\n                            </>}\n                            {feed.dogs && feed.dogs.length > 0 && <>\n                                <i class='fas fa-dog ml-2' /> {util.format(feed.dogs.length, 0)}\n                            </>}\n                            {/* {feed.kcalBurnedTotal && <><i class='fas fa-balance-scale' /> {util.format(feed.kcalBurnedTotal)} kcal</>}\n                            {feed.kcalMeatGramsTotal && <><i class='fas fa-drumstick-bite ml-2' /> {util.format(feed.kcalMeatGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalSalmonGramsTotal && <><i class='fas fa-fish ml-2' /> {util.format(feed.kcalSalmonGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalFatGramsTotal && <><i class='fas fa-piggy-bank ml-2' /> {util.format(feed.kcalFatGramsTotal / 1000, 1)} kg</>} */}\n                            {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                <i class='fas fa-map-marker-alt ml-2' /> {currentLocationGeocode.formattedCounty}\n                            </>}\n                            {feed.moonIllumination && feed.moonIllumination.phaseIcon && <span class='ml-2'>{feed.moonIllumination.phaseIcon}</span>}\n                        </small>\n                    </div>\n\n                    {showAdminDetails && isAdmin && <div\n                        class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                        style='overflow: auto;'\n                    >\n                        <small class='text-muted mr-2'>Adm:</small>\n                        {reports && reports.length > 0 && <>\n                            <small class='text-danger mr-2'>\n                                <i class='fas fa-flag' /> {reports.length}\n                            </small>\n                        </>}\n                        {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                            <small class='text-muted'>\n                                <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                            </small>\n                        </>}\n                        {publicUser.deviceInfo && <>\n                            <span class='badge badge-secondary ml-1 float-right font-weight-light'>\n                                {['platform', 'manufacturer', 'model'].map(e => <>\n                                    <span class='ml-1 text-white'>\n                                        {publicUser.deviceInfo[e]}\n                                    </span>\n                                </>)}\n                            </span>\n                        </>}\n                        {adminData && <>\n                            {/* {JSON.stringify(adminData)}<br /> */}\n                            <small class='ml-2 text-muted'>\n                                V: {adminData.count}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                            </small>\n                            {feed.statisticsCurrent && feed.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                S: {util.format(feed.statisticsCurrent.totalInteractions, 0)}\n                            </small>}\n                            {feed.shadowTags && feed.shadowTags.map(tag => <>\n                                <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                            </>)}\n                        </>}\n                    </div>}\n                </div>\n            </div>\n\n\n            {/* <div class='row'>\n                <div class='row mb-3'>\n                    {feed.gpxInfo && feed.gpxInfo.svgMap && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 300' style='width: 150px; height: 150px;'>\n                                <path d={`${feed.gpxInfo.svgMap}`} style='fill: none; stroke: #0275d8; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Track</small>\n                        </div>\n                    </>}\n                    {feed.gpxInfo && feed.gpxInfo.svgElevation && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 200' style='width: 150px; height: 100px;'>\n                                <path d={`${feed.gpxInfo.svgElevation}`} style='fill: none; stroke: #5cb85c; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Elevation</small>\n                        </div>\n                    </>}\n                </div>\n            </div> */}\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={feed.id} dblClick={this.likeWorkout} likeRef={likeWorkout} />\n                </div>\n            </div>\n\n            {feed.dogs && feed.dogs.length > 0 && <div class='container-fluid px-0 mt-1'>\n                <div class='row pt-2'>\n                    <DogScroller stores={this.props.stores} dogs={feed.dogs} allDogs={publicDogs} onDogClick={onDogClick} />\n                </div>\n            </div>}\n\n            <div class='d-flex justify-content-between bg-light rounded-lg px-2'>\n                {feed.distanceKm > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-road' /> <Text id='workout.calendar.distance'>Distanse</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        <Distance stores={this.props.stores} value={feed.distanceKm} />\n                    </div>\n                </div>}\n                {feed.elevation > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-mountain' /> <Text id='workout.calendar.ascend'>Høydemeter</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        <Elevation stores={this.props.stores} value={feed.elevation} />\n                    </div>\n                </div>}\n                {feed.duration > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-clock' /> <Text id='workout.calendar.duration'>Varighet</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {util.secToHms(feed.duration, true)}\n                    </div>\n                </div>}\n                {feed.speedAvg > 0 && <div class='text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-tachometer-alt' /> <Text id='workout.calendar.avg-speed'>Snittfart</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {gpxInfo && gpxInfo.avgGpsMovingSpeed > 0 ? <>\n                            <Speed stores={this.props.stores} value={gpxInfo.avgGpsMovingSpeed * 3.6} />\n                        </> : <>\n                            <Speed stores={this.props.stores} value={feed.speedAvg} />\n                        </>}\n                    </div>\n                </div>}\n            </div>\n\n            <div class='row mt-2'>\n                <div id='workoutDetail' class='clearfix col-12 font-weight-bold' style='font-size: 1.2em;' onClick={this.showWorkoutDetail} data-id={feed.uuidv4}>\n                    <Markdown markdown={mu.replaceImages(feedName, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n                <div class='clearfix col-12'>\n                    <Markdown markdown={mu.replaceImages(feedComment, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n                {feed.language !== language && <>\n                    {!showOriginal && translationName ? <>\n                        <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                    </> : <>\n                        <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                    </>}\n                </>}\n            </div>\n\n            <div class='mt-2'>\n                <LikesAndComments\n                    stores={this.props.stores}\n                    likes={likes}\n                    comments={comments}\n                    type='team'\n                    onTeamClick={onTeamClick}\n                    onUserClick={onUserClick}\n                />\n            </div>\n\n            {!isYourTeam && !isFollowing && !hasRequestedFollow && <div class='clearfix mb-2'>\n                <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} />\n            </div>}\n\n            <div>\n                <div class='row'>\n                    <div class='col text-center'>\n                        <button type='button' class={`imageContainer btn btn-sm btn-outline-${hasLikedWorkout ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedWorkout ? 'text-primary' : ''} text-overflow`}\n                            data-id={feed.id}\n                            onClick={this.likeWorkout}\n                            // disabled={hasLikedWorkout}\n                        >\n                            <i class={`${hasLikedWorkout ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                        </button>\n                    </div>\n                    <div class='col text-center'>\n                        <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                            data-id={feed.id}\n                            onClick={this.toggleAddComment}\n                        >\n                            <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                        </button>\n                    </div>\n                    {hasShareApi ? <>\n                        <div class='col text-center'>\n                            <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                onClick={this.shareLink}\n                                data-url={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                data-title={`title: ${feed.title}`}\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </button>\n                        </div>\n                    </> : <>\n                        <div class='col text-center'>\n                            <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                href={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                target='_blank'\n                                rel='noreferrer'\n                                data-native\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </a>\n                        </div>\n                    </>}\n                </div>\n            </div>\n\n            {views > 0 && <>\n                <div class='mt-2'>\n                    <Views\n                        stores={this.props.stores}\n                        views={views}\n                        object={feed}\n                        type='team'\n                        isTeamAdmin={isTeamAdmin}\n                        isAdmin={isAdmin}\n                        onTeamClick={onTeamClick}\n                        onUserClick={onUserClick}\n                    />\n                </div>\n            </>}\n\n            <div class='mt-2'>\n                {showAddComment[feed.id] && <WorkoutAddComment\n                    stores={this.props.stores}\n                    workout={feed}\n                    inputRef={c => this.inputRef[feed.id] = c}\n                    inputRefObject={this.inputRef}\n                    col='12'\n                    offset='0'\n                    showAvatar={true}\n                    extraClass='px-0'\n                    callback={this.addCommentToFeed}\n                />}\n                <WorkoutComments\n                    stores={this.props.stores}\n                    workout={feed}\n                    col='12'\n                    offset='0'\n                    compact={false}\n                    callback={this.addCommentToFeed}\n                />\n            </div>\n        </>);\n    }\n}\n\nexport default TeamPublicFeedLine;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\n\nimport ImageSlider from '../imageSlider';\nimport StoryComments from './comments';\nimport StoryAddComment from './commentAdd';\nimport Story from './publicStory';\nimport StoryPoll from './storyPoll';\nimport ImageScroller from '../imageScroller';\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport PublicTeam from '../team/public';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n\tshowTeamSetting: {},\n    viewImageIdx: {},\n    likeStory: {},\n};\n\n@observer\nclass StoryEditInline extends Component {\n    constructor(props) {\n        super(props);\n        this.updateTimer = {};\n        this.textareaRef = createRef();\n        this.state = {\n            sendButtonEnabled: true,\n            storyBody: props.story.body,\n        };\n    }\n\n    saveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyBody: body } = this.state;\n        const { storyStore } = this.props.stores;\n        const { callback = () => true } = this.props;\n        // saveField(id, field, value, updateMemory) {\n        await storyStore.saveField(parseInt(id, 10), 'body', body, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'body', body);\n        this.setState({\n            storyBody: '',\n            storyType: 0,\n\t\t});\n        callback();\n    }\n\n    saveStoryField = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const { value, name } = e.target;\n        const { subfield, subvalue } = e.target.dataset;\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { storyStore } = this.props.stores;\n        storyStore.publicFeedUpdate(id, name, value);\n        clearTimeout(this.updateTimer[name]);\n        this.updateTimer[name] = setTimeout(async () => {\n            this.doUpdateField(id, name, value, {\n                query: {\n                    [subfield]: subvalue,\n                },\n            });\n        }, 1000);\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, skipTimer = false }) => {\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        let newValue = value;\n        let localObjectValue = value;\n        if (field === 'images') {\n            if (Array.isArray(story.images) && Array.isArray(value)) {\n                localObjectValue = [...story.images, ...value];\n            }\n        }\n    \n        storyStore.updateField(id, field, localObjectValue);\n        storyStore.publicFeedUpdate(id, field, localObjectValue);\n\n        if (skipTimer) {\n            this.doUpdateField(id, field, newValue);\n        } else {\n            clearTimeout(this.updateTimer[field]);\n            this.updateTimer[field] = setTimeout(async () => {\n                this.doUpdateField(id, field, newValue);\n            }, 500);\n        }\n    }\n\n    async doUpdateField(id, name, value, opts = {}) {\n        this.setState({ sendButtonEnabled: false });\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), name, value, true, {\n            query: { ...opts.query },\n        });\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    removeImage = async (e) => {\n        const { storyStore } = this.props.stores;\n        const { story } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        storyStore.removeImage({\n            id: story.id,\n            name: imageName,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    componentDidMount() {\n        this.textareaRef.current.focus();\n    }\n\n    render() {\n        const { storyBody, storyType, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\n        const { story } = this.props;\n        const { id } = story;\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <div class='col-12 text-center mt-2'>\n                        <div class='container-fluid'>\n                            <div class='row d-flex align-items-end'>\n                                {util.isArray(story.images) && story.images.map((img, idx) => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> Del</button>\n                                        <small>\n                                            <input\n                                                class='form-control'\n                                                type='text'\n                                                name={`images.title`}\n                                                data-subfield={`name`}\n                                                data-subvalue={story.images[idx].name}\n                                                onInput={this.saveStoryField}\n                                                value={story.images[idx].title}\n                                            />\n                                        </small>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={story} updateField={this.updateFieldValue} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={false} />\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-12 mt-2'>\n                        <label><Text id='story.content'>Content</Text></label>\n                        <div class='border rounded rounded-lg position-relative'>\n                            <Localizer>\n                                <textarea\n                                    class='form-control-plaintext px-2'\n                                    type='text'\n                                    placeholder={<Text id='story.add-content'>Add your text here...</Text>}\n                                    onInput={linkState(this, 'storyBody')}\n                                    // onKeyUp={mu.resizeTextarea}\n                                    onFocus={mu.resizeTextarea}\n                                    style='height: 2.3em;'\n                                    value={storyBody || story.body}\n                                    ref={this.textareaRef}\n                                />\n                            </Localizer>\n                        </div>\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-12 mt-2'>\n                        {isAdmin && <>\n                            <div class='col-12 mt-2'>\n                                <div class='form-group'>\n                                    <small>\n                                        <input\n                                            type='checkbox'\n                                            id={`pinned-${story.id}`}\n                                            name='pinned'\n                                            onInput={this.saveStoryField}\n                                            value={story.pinned ? 'false' : util.isoDate()}\n                                            checked={story.pinned ? 'checked' : ''}\n                                            />\n                                        <label class='ml-2' for={`pinned-${story.id}`}>Pinned to top.</label>\n                                    </small>\n                                </div>\n                            </div>\n                        </>}\n\n                        {isAdmin && <>\n                            <label><Text id='story.type'>Type</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <select\n                                        class='custom-select custom-select-sm'\n                                        id={story.id}\n                                        name='type'\n                                        onInput={this.saveStoryField}\n                                        value={storyType || story.type}\n                                    >\n                                    <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                        <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                        <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                        <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                    </select>\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type >= 2 && <>\n                            <label><Text id='story.url-text'>URL text</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='urlText'\n                                        onInput={this.saveStoryField}\n                                        value={story.urlText}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.url'>URL</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='url'\n                                        onInput={this.saveStoryField}\n                                        value={story.url}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type === 2 && <>\n                            <label><Text id='story.code'>Code</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='code'\n                                        onInput={this.saveStoryField}\n                                        value={story.code}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.country'>Country</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='country'\n                                        onInput={this.saveStoryField}\n                                        value={story.country}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.region'>Region</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='region'\n                                        onInput={this.saveStoryField}\n                                        value={story.region}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.currency'>Currency</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='currency'\n                                        onInput={this.saveStoryField}\n                                        value={story.currency}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.price'>Price</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='price'\n                                        onInput={this.saveStoryField}\n                                        value={story.price}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-12 mt-2'>\n                        <button type='button' class={`btn btn-block btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                            onClick={this.saveStory}\n                            data-id={story.id}\n                        ><i class='fas fa-paper-plane' /> <Text id='story.edit-save'>Save changes</Text></button>\n                    </div>\n                </div>\n            </div>\n        </>)\n    }\n}\n\n@observer\nclass StoryTypeRegular extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedText = await storyStore.translate({ story, user });\n        this.setState({ showOriginal: 0, translatedText });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    setSelectedImage = (imageIdx) => {\n        this.setState({ selectedImageIdx: imageIdx });\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal, translatedText, selectedImageIdx = 0 } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        }) || translatedText;\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n        const { components = [], finalBody = '' } = mu.getInlineComponents(body || '');\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} callback={this.setSelectedImage} />\n                </div>\n            </div>\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(finalBody, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                    {components && components.map((component, idx) => {\n                        if (component.name === 'poll') {\n                            return <StoryPoll\n                                stores={this.props.stores}\n                                story={story}\n                                storyId={story.id}\n                                params={component.params}\n                                opts={component.opts}\n                                content={component.content}\n                                selectedImageIdx={selectedImageIdx}\n                            />;\n                        }\n                    })}\n                </div>\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeAd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    {/* <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}> */}\n                    <div id='storyDetail' data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price > 0) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                            {story.code && <>\n                                <div class='col text-left' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        <span class='font-weight-lighter'><Text id='story.ad-campaign-code'>Kampanjekode</Text>:</span> {story.code}\n                                    </nobr>\n                                </div>\n                            </>}\n                            {story.price > 0 && <>\n                                <div class='col text-right' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        {story.currencty && <span class='font-weight-lighter'>{story.currency}</span>} {util.format(story.price, 2)}\n                                    </nobr>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeArticle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n\n            {/* Flere artikler fra:... */}\n        </>);\n    }\n}\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n        // this.ref = createRef();\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeStory = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const storyId = id;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeStory } = this.state;\n        likeStory[storyId] = true;\n        const likeIds = Object.keys(likeStory);\n        this.setState({ likeStory, likeIds });\n        setTimeout(() => {\n            const { likeStory } = this.state;\n            delete likeStory[storyId];\n            const likeIds = Object.keys(likeStory);\n            this.setState({ likeStory, likeIds });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStory({ id: storyId });\n        if (response && response.status === 200) {\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[storyId]) {\n            delete showAddComment[storyId];\n        } else {\n            showAddComment[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[storyId]) {\n\t\t\t\tthis.inputRef[storyId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    closeAllAddComments = () => {\n        this.setState({\n\t\t\tshowAddComment: {},\n\t\t});\n    }\n\n\ttoggleShowTeamSetting = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showTeamSetting } = this.state;\n        if (showTeamSetting[storyId]) {\n            delete showTeamSetting[storyId];\n        } else {\n            showTeamSetting[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowTeamSetting,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n        const { hashtag } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed({ hashtag });\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n\t\t\tshowEdit,\n            showMenu: {},\n\t\t});\n\t}\n\n    toggleDeleteStory = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteStory = {} } = this.state;\n        showDeleteStory[id] = !showDeleteStory[id];\n\t\tthis.setState({\n\t\t\tshowDeleteStory,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    toggleAdminDetails = () => {\n        const { showAdminDetails } = this.state;\n        this.setState({\n            showAdminDetails: !showAdminDetails,\n        });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    reportStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.reportStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    adminRemoveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.adminHideStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), 'offline', 1, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'offline', 1);\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    doneEdit = () => {\n        this.setState({\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    displayTeam = (e, teamId) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('publicTeam', { teamId, height: '80vh' });\n\t}\n\n    openInbox = (e, fromuser) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('inboxDetail', { fromuser, height: '80vh' });\n\n    }\n\n    // IntersectionObserver\n    // componentDidMount() {\n    //     const { addIntersectionObserver } = this.props;\n    //     if (addIntersectionObserver) {\n    //         addIntersectionObserver(this.ref);\n    //     }\n    // }\n\n    // componentWillUnmount() {\n    //     const { removeIntersectionObserver } = this.props;\n    //     if (removeIntersectionObserver) {\n    //         removeIntersectionObserver(this.ref);\n    //     }\n    // }\n    // /IntersectionObserver\n\n    render() {\n        const {\n            showAddComment,\n            showDate,\n            viewImageIdx,\n            showMenu = {},\n            showEdit = {},\n            showDeleteStory = {},\n            showTeamSetting,\n            likeStory,\n            likeIds,\n            showAdminDetails\n        } = this.state;\n        const { story, showAllComments, sessionid, onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n        const { userStore, storyStore, appState } = this.props.stores;\n        const { user: currentUser = {}, isAdmin } = userStore;\n        const { darkmode, hasShareApi } = appState;\n\n        const team = storyStore.findPublicTeam(story.team) || {};\n        const user = storyStore.findPublicUser(story.user) || {};\n        const image = mu.getImage({ user, team, priority: 'user', object: story });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === currentUser.id) : false;\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n            username = mu.displayName(user);\n            if (user.settings && currentUser.uuidv4 !== user.uuidv4) {\n                userLink = user.settings.hideProfile ? null : `/inbox/${user.uuidv4}`;\n            }\n        } else if (user && user.id) {\n            shortname = mu.displayNameShort(user);\n            name = mu.displayName(user);\n        }\n        const { likes, comments, reports = [] } = story;\n        const hasLikedStory = story.likes && story.likes.findIndex(e => e.user === currentUser.id) > -1;\n        const totalFollowers = team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = story;\n        const views = mu.getViews(story.statistics);\n        const adminData = mu.getAdminData(story.statistics);\n\n        return (<>\n            {/* <div\n                class='row pt-3 pb-3 bg-light'\n                style={`${story.offline ? 'opacity: 0.4;' : ''}`}\n                ref={c => this.ref = c}\n                data-id={story.id}\n                data-type={'story'}\n                data-user={story.user}\n                data-team={story.team}\n                data-title={story.title}\n                data-sessionid={sessionid}\n            >\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}> */}\n                    {(isAdmin || (currentUser.id === user.id)) ? <>\n                        <span class='float-right font-weight-lighter text-muted'>\n                            <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={story.id} />\n                        </span>\n                    </> : <>\n                        {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                            <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                        </span>}\n                    </>}\n                    {showMenu[story.id] && <>\n                        <div class='position-absolute bg-light p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                            {currentUser.id === user.id ? <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={story.id}><i class='fas fa-edit' /> Edit</button>\n                                <hr />\n                                <button class='btn btn-link btn-block text-left text-danger' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                            </> : <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.reportStory} data-id={story.id}><i class='fas fa-flag' /> Report</button>\n                                {isAdmin && <>\n                                    <hr />\n                                    <button class='btn btn-link btn-block text-left text-danger' onClick={this.adminRemoveStory} data-id={story.id}>\n                                        <i class='fas fa-eraser' /> Remove from feed\n                                    </button>\n                                </>}\n                            </>}\n                            <button class='btn btn-link btn-block text-left' onClick={this.toggleAdminDetails}>\n                                <i class='fas fa-user-cog' /> Toggle admin details\n                            </button>\n                        </div>\n                    </>}\n\n                    <div class='d-flex position-relative'>\n                        <div\n                            class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                            style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                        >\n                            {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                        </div>\n                        <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                            <h5 class='mb-1 position-relative' style={`line-height: 1.0em; ${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {team.public ? <>\n                                    <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => this.displayTeam(e, team.uuidv4)} class='stretched-link'>{name}</a>\n                                    {/* <a href={`/stories/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a> */}\n                                </> : <>\n                                    {name}\n                                </>}\n\n                                {isYourTeam && !team.public && <button type='button' class='btn btn-sm btn-link text-muted'\n                                    data-id={story.id}\n                                    onClick={this.toggleShowTeamSetting}\n                                >\n                                    <i class='fas fa-exclamation-triangle' />\n                                </button>}\n                            </h5>\n                            <div class='mb-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {story.pinned && <>\n                                    <small class='text-muted mr-2'>\n                                        <i class='fas fa-thumbtack' />\n                                    </small>\n                                </>}\n                                {story.type === 2 ? <>\n                                    <small class='text-muted'><Text id='story.sponsored'>Sponsored</Text> -</small>\n                                </> : <>\n                                    {story.date && <small class='text-muted' onClick={this.toggleDate}>\n                                        {showDate ? util.formatDate(story.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(story.date, new Date(), { locale: 'no-NB' })}\n                                    </small>}\n                                </>}\n                                {story.public === 1 ? <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-globe-europe' />\n                                    </small>\n                                </> : <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                    </small>\n                                </>}\n                                {username && <>\n                                    <small class='ml-2 text-muted'>\n                                        {userLink ? <>\n                                            <i class='fas fa-user' /> <a href={userLink} onClick={(e) => this.openInbox(e, user.uuidv4)}>{username}</a>\n                                        </> : <>\n                                            <i class='fas fa-user' /> {username}\n                                        </>}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formattedCounty}\n                                    </small>\n                                </>}\n                            </div>\n                            {showAdminDetails && isAdmin && <div\n                                class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                                style='overflow: auto;'\n                            >\n                                <small class='text-muted mr-2'>Adm:</small>\n                                {reports && reports.length > 0 && <>\n                                    <small class='text-danger mr-2'>\n                                        <i class='fas fa-flag' /> {reports.length}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                                    </small>\n                                </>}\n                                {user.deviceInfo && <>\n                                    <span class='badge badge-secondary ml-2 float-right font-weight-light'>\n                                        {['platform', 'manufacturer', 'model'].map(e => <>\n                                            <span class='ml-2 text-white'>\n                                                {user.deviceInfo[e]}\n                                            </span>\n                                        </>)}\n                                    </span>\n                                </>}\n\n                                {adminData && <>\n                                    <small class='ml-2 text-muted'>\n                                        V: {adminData.count}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                                    </small>\n                                    {story.statisticsCurrent && story.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                        S: {util.format(story.statisticsCurrent.totalInteractions, 0)}\n                                    </small>}\n                                    {story.shadowTags && story.shadowTags.map(tag => <>\n                                        <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                                    </>)}\n                                </>}\n                                {/* {story.tags && <>\n                                    {util.isArray(story.tags) && story.tags.map(tag => <>\n                                        <small class='ml-2 text-muted'>\n                                            {tag}\n                                        </small>\n                                    </>)}\n                                </>} */}\n                            </div>}\n                        </div>\n                    </div>\n\n                    {showEdit[story.id] || showDeleteStory[story.id] ? <>\n                        <div class='row mt-2'>\n                            <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {showEdit[story.id] && <>\n                                    <StoryEditInline\n                                        stores={this.props.stores}\n                                        story={story}\n                                        key={`story-edit-${story.id}`}\n                                        callback={this.doneEdit}\n                                    />\n                                </>}\n                                {showDeleteStory[story.id] && <div class='clearfix mt-3 mb-3'>\n                                    <button class='btn btn-danger float-left' onClick={this.deleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                </div>}\n                            </div>\n                        </div>\n                    </> : <>\n\n                        {(!story.type || story.type == 1) && <StoryTypeRegular stores={this.props.stores} story={story} key={`story-regular-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                        {story.type == 2 && <StoryTypeAd stores={this.props.stores} story={story} key={`story-ad-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                        {story.type == 3 && <StoryTypeArticle stores={this.props.stores} story={story} key={`story-article-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n\n                        <div class='d-flex justify-content-between mt-2'>\n                            <div class='mr-2'>\n                                <LikesAndComments\n                                    stores={this.props.stores}\n                                    likes={likes}\n                                    comments={comments}\n                                    type='story'\n                                    onTeamClick={onTeamClick}\n                                    onUserClick={onUserClick}\n                                />\n                            </div>\n                            {views > 0 && <>\n                                <div>\n                                    <Views\n                                        stores={this.props.stores}\n                                        views={views}\n                                        object={story}\n                                        type='story'\n                                        isTeamAdmin={isTeamAdmin}\n                                        isAdmin={isAdmin}\n                                        onTeamClick={onTeamClick}\n                                        onUserClick={onUserClick}\n                                    />\n                                </div>\n                            </>}\n                        </div>\n\n                        {showTeamSetting[story.id] && <>\n                            <small>\n                                <div class='alert alert-info' role='alert'>\n                                    <span class='display-4 float-left'>\n                                        <i class='fas fa-exclamation-triangle mr-3 mb-3' />\n                                    </span>\n                                    <p>\n                                        <Text id='story.alert-text-1'>Your team is not visible and it's not possible to request friendship with your team.</Text>\n                                    </p>\n                                    <p>\n                                        <Text id='story.alert-text-2'>If you want to make your team visible so other can request to follow your team, you can find the setting here:</Text>\n                                    </p>\n                                    <p>\n                                        <a href={`/teams/edit/${team.id}`}><Text id='story.alert-text-3'>Edit team</Text></a>\n                                    </p>\n                                </div>\n                            </small>\n                        </>}\n\n                        <div>\n                            <div class='row'>\n                                <div class='col text-center'>\n                                    <button\n                                        type='button'\n                                        class={`storyImage btn btn-sm btn-outline-${hasLikedStory ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedStory ? 'text-primary' : ''} text-overflow`}\n                                        data-id={story.id}\n                                        onClick={this.likeStory}\n                                    >\n                                        <i class={`${hasLikedStory ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> {hasLikedStory ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                    </button>\n                                </div>\n                                <div class='col text-center'>\n                                    <button\n                                        type='button'\n                                        class='btn btn-sm btn-outline-secondary btn-block text-overflow'\n                                        data-id={story.id}\n                                        onClick={this.toggleAddComment}\n                                    >\n                                        <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                    </button>\n                                </div>\n                                {hasShareApi ? <>\n                                    <div class='col text-center'>\n                                        <button class='btn btn-sm btn-outline-secondary btn-block text-overflow'\n                                            onClick={this.shareLink}\n                                            data-url={`https://themusher.app/share/story/${story.uuidv4}`}\n                                            data-title={`title: ${story.title}`}\n                                        >\n                                            <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                        </button>\n                                    </div>\n                                </> : <>\n                                    <div class='col text-center'>\n                                        <a class='btn btn-sm btn-outline-secondary btn-block text-overflow'\n                                            href={`https://themusher.app/share/story/${story.uuidv4}`}\n                                            target='_blank'\n                                            rel='noreferrer'\n                                            data-native\n                                        >\n                                            <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                        </a>\n                                    </div>\n                                </>}\n\n                            </div>\n                        </div>\n\n                        <div class='mt-2'>\n                            <StoryComments\n                                stores={this.props.stores}\n                                story={story}\n                                col='10'\n                                offset='2'\n                                compact={false}\n                                showAllComments={showAllComments}\n                                initCall={this.closeAllAddComments}\n                            />\n                            {showAddComment[story.id] && <StoryAddComment\n                                stores={this.props.stores}\n                                story={story}\n                                inputRef={c => this.inputRef[story.id] = c}\n                                inputRefObject={this.inputRef}\n                                col='10'\n                                offset='2'\n                                key={`story-comment-${story.id}`}\n                            />}\n                        </div>\n                    </>}\n                {/* </div> */}\n            {/* </div> */}\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryPoll extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {};\n        this.inputRef = {};\n    }\n\n    pollStory = async (e) => {\n        const { storyId } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { line } = e.target.closest('button').dataset;\n\t\tconst response = await storyStore.pollStory({ id: storyId, line });\n\t}\n\n    toggleResult = () => {\n        const { viewResult } = this.state;\n        this.setState({ viewResult: !viewResult });\n    }\n\n    render() {\n        const { viewResult } = this.state;\n        const { story, storyId, params, opts, content, selectedImageIdx } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const lines = content.split('\\n').map(line => line.trim().replace(/^\\-\\s*/g, ''));\n        const hasPolledStory = story.polls && story.polls.findIndex(e => e.user === currentUser.id) > -1;\n        const totalPolls = story.polls ? story.polls.length : 0;\n        let maxPercent = 0;\n        lines.forEach((line) => {\n            const percent = (story.polls ? story.polls.filter(e => e.line === mu.md5(line)).length / totalPolls : 0) * 100;\n            if (percent > maxPercent) {\n                maxPercent = percent;\n            }\n        });\n        const voteDays = opts.days ? parseInt(opts.days, 10) : 7;\n\n        const finishDate = util.addDays(story.date, voteDays);\n        const isExpired = finishDate < new Date();\n        const hasImageRegexp = new RegExp(/{{img\\./i);\n\n        return (<>\n            <div class='w-100 my-4 storyPoll'>\n                {isExpired || hasPolledStory || viewResult ? <>\n                    {lines && lines.map((line, idx) => {\n                        const hasPolledLine = story.polls && story.polls.findIndex(e => e.user === currentUser.id && e.line === mu.md5(line)) > -1;\n                        const totalLinePolls = story.polls ? story.polls.filter(e => e.line === mu.md5(line)).length : 0;\n                        const percent = totalLinePolls / totalPolls * 100;\n                        return (<>\n                            <div class={`progress position-relative my-2 `} style='height: 1.5em; font-size: 1.3em;'>\n                                <span class='position-absolute' style='right: 10px;'> {util.format(percent || 0, 1)}%</span>\n                                <span class='position-absolute' style='left: 10px;'>\n                                    <Markdown markdown={mu.replaceImages(`${line} ${hasPolledLine ? `<i class='fas fa-check-circle' />` : ''}`, story.images, language, false)} markdownOpts={mu.getMarkdownOptions()} />\n                                </span>\n                                <div\n                                    class={`progress-bar ${maxPercent === percent ? 'bg-primary' : 'bg-secondary'}`}\n                                    role=\"progressbar\"\n                                    style={`width: ${percent}%;`}\n                                    aria-valuenow={percent}\n                                    aria-valuemin=\"0\"\n                                    aria-valuemax=\"100\"\n                                />\n                            </div>\n                        </>);\n                    })}\n                    <div class='w-100 mt-3 text-muted d-flex justify-content-start'>\n                        <div>\n                            <small>\n                                {util.format(totalPolls, 0)} {totalPolls === 1 ? <Text id='story.poll'>vote</Text> : <Text id='story.polls'>votes</Text>}\n                            </small>\n                        </div>\n                        {isExpired ? <>\n                            <div class='ml-2'>\n                                <small>\n                                    - <Text id='story.finished'>Finished</Text>\n                                </small>\n                            </div>\n                        </> : <>\n                            <div class='ml-2'>\n                                <small>\n                                    - {util.formatDistance(finishDate, new Date(), {}, { extended: true })} <Text id='story.left'>left</Text>\n                                </small>        \n                            </div>\n                            {!hasPolledStory && <div class='ml-2' onClick={this.toggleResult}>\n                                <small>\n                                    - <Text id='story.view-vote'>View vote</Text>\n                                </small>\n                            </div>}\n                        </>}\n                    </div>\n                </> : <>\n                    {lines && lines.map((line, idx) => <>\n                        <button\n                            class={`btn btn-block ${hasImageRegexp.test(line) && idx === selectedImageIdx ? 'btn-outline-success' : 'btn-outline-primary'} rounded-pill`}\n                            onClick={this.pollStory}\n                            data-line={mu.md5(line)}\n                        >\n                            {hasImageRegexp.test(line) && idx === selectedImageIdx && <span class='float-right'><i class='fas fa-eye' /></span>}\n                            <Markdown markdown={mu.replaceImages(line, story.images, language, false)} markdownOpts={mu.getMarkdownOptions()} />\n                        </button>\n                    </>)}\n\n                    <div class='w-100 mt-3 text-muted d-flex justify-content-start'>\n                        <div>\n                            <small>\n                                {util.format(totalPolls, 0)} {totalPolls === 1 ? <Text id='story.poll'>vote</Text> : <Text id='story.polls'>votes</Text>}\n                            </small>\n                        </div>\n                        {isExpired ? <>\n                            <div class='ml-2'>\n                                <small>\n                                    - <Text id='story.finished'>Finished</Text>\n                                </small>\n                            </div>\n                        </> : <>\n                            <div class='ml-2'>\n                                <small>\n                                    - {util.formatDistance(finishDate, new Date(), {}, { extended: true })} <Text id='story.left'>left</Text>\n                                </small>        \n                            </div>\n                        </>}\n                        <div class='ml-2' onClick={this.toggleResult}>\n                            <small>    \n                                - <Text id='story.view-results'>View results</Text>\n                            </small>\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPoll;\n"],"sourceRoot":""}