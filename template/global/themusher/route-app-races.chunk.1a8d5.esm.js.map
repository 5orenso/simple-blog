{"version":3,"sources":["webpack:///./components/feedback/likesAndComments.js","webpack:///./components/util/scrollIntoView.js","webpack:///./components/imageSlider/index.js","webpack:///./components/story/commentAdd.js","webpack:///./components/story/commentReply.js","webpack:///./lib/icons.js","webpack:///./components/form/links.js","webpack:///./components/data/distance.js","webpack:///./components/loading/index.js","webpack:///./routes/public/race/commentAdd.js","webpack:///./components/dog/editBaseInfo.js","webpack:///./components/map/style.css","webpack:///./components/story/add.js","webpack:///./components/story/comments.js","webpack:///./components/style.css","webpack:///./routes/app-races/tracking.js","webpack:///./components/public/trackmap.js","webpack:///./components/map/index.js","webpack:///./routes/app-races/notifications.js","webpack:///./components/form/achievements.js","webpack:///./components/races/liveAddResult.js","webpack:///./components/story/publicStory.js","webpack:///./routes/app-races/userImages.js","webpack:///./components/data/temperature.js","webpack:///./components/races/liveMusherResult.js","webpack:///./components/form/files.js","webpack:///./routes/app-races/news.js","webpack:///./routes/public/race/commentReply.js","webpack:///./components/data/weight.js","webpack:///./components/team/connect-boxes.js","webpack:///./routes/public/race/comments.js","webpack:///./components/dog/scroller.js","webpack:///./routes/public/race/raceText.js","webpack:///./components/races/liveResults.js","webpack:///./components/drawer/index.js","webpack:///./components/gauge/style.css","webpack:///./components/ad/index.js","webpack:///./components/header/custom.js","webpack:///./components/story/publicFeed.js","webpack:///./components/races/musherInfoHeader.js","webpack:///./routes/app-races/signup.js","webpack:///./components/data/elevation.js","webpack:///./routes/app-races/mushers.js","webpack:///./components/data/speed.js","webpack:///./components/form/images.js","webpack:///./components/team/connect-confirm.js","webpack:///./routes/app-races/index.js","webpack:///./components/form/dragNdropFileupload.js","webpack:///./routes/app-races/classes.js","webpack:///./components/states/index.js","webpack:///./components/feedback/views.js","webpack:///./routes/app-races/results.js","webpack:///./components/gauge/index.js","webpack:///./components/team/fastList.js","webpack:///./components/races/liveCheckpointResult.js","webpack:///./components/public/raceTracking.js"],"names":["initialState","DisplayLikesAndComments","observer","Component","constructor","props","super","toggleLikes","showLikesList","this","state","setState","render","storyStore","teamStore","workoutStore","raceStore","stores","likes","comments","type","onTeamClick","onUserClick","class","length","style","onClick","slice","map","like","user","teams","publicTeam","findPublicUser","findPublicTeamByMembers","util","isArray","find","e","public","mu","getImage","team","priority","displayNameShort","name","displayName","href","uuidv4","title","id","fields","total","image","shortname","ScrollIntoView","container","componentDidMount","horizontal","vertical","behavior","inline","block","scrollIntoView","ref","c","touchStart","stopPropagation","startX","touches","pageX","touchEnd","undefined","sliding","touchMove","totalImages","scrollDistance","x","prevImage","nextImage","images","imageContainer","currentImage1","currentImage2","currentIdx","imageDots","Array","fill","y","nextImageContainer","nextIdx","componentWillReceiveProps","nextProps","nextImages","img","curImage","htmlImageRatio","height","width","imgHeight","imgWidth","dimensions","orientation","imageRatio","onTouchstart","onTouchend","onTouchmove","loading","src","s3LargeLink","image1","image2","i","StoryAdd","beforeImagesUploaded","sendButtonEnabled","afterImagesUploaded","commentStory","async","callback","inputRefObject","story","comment","showAddImage","response","status","body","resizeTextarea","addImage","addImages","value","push","handleImageErrored","target","onerror","setTimeout","Date","inputRef","userStore","userImage","s3SmallLink","for","placeholder","onInput","linkState","onKeyUp","onFocus","data-id","disabled","onError","removeImage","data-name","object","updateField","before","after","autoOpen","StoryCommentReply","commentId","commentReplyStory","initCall","ICONS","adit","Icon","iconUrl","iconSize","iconAnchor","airport","analyse","archaeological","architecture","arrow_up","arrow_up_double","atm","avatar","bag","bar","barracks","battlefield","beach","bicycle","boundary_stone","buddhism","building","burger","bus","bus_stop","cable_car","camera","camp_site","car","caravan_site","cartography","cash","castle","castle_defensive","cave_entrance","cemetery","chapel","christianism","cinema","cinema_alt","city","cityhall","clean","compass","compass_alt","construction","contour","court_house","crown","crucifix","data","database","dentist","dislike","download","drag_lift","drop","eye","facebook","fire","fishing","flag","forbidden","fort","fountain","fuel","fuel_alt","gallery","gear","github","go","golf","heart","helicopter","home","hospital","hostel","hotel","hotel_alt","ice_ring","information","internet","invisible","islamism","island","judaism","laptop","library","lighthouse","linkedin","lion","lock","magnifier","mall","mapkey","mapshakers","marina","marker","market_place","mine","monument","mountain","museum","music","nature","nocamera","nonsmoking","north","north_alt","north_alt_II","north_alt_III","oppositeway","parking","pharmacy","picnic_site","pitch","playground","playground_alt","police","post_office","pub","restaurant","rocks","ruins","saddle","sailboat","school","seal","shelter","sinkhole","skype","smartphone","smoking","sport_centre","spring","square","stadium","star","stop","stupa","supermarket","swimming_pool","telephone","theatre","ticket","toilet","tower","town","traffic_signal","train","tram","tram_stop","tree_cinofer","tree_leaf","triangle","underground","unesco","university","upload","viewpoint","viewtower","village","vineyard","volcano","water_tower","water_well","watermill","waterpark","waterwork","wayside_cross","wind_generator","windmill","zoo","Icons","icon","Object","keys","color","textColor","borderColor","iconWidth","iconHeight","randomPassword","hsl2Rgb","DivIcon","className","html","bib","speed","bearing","rank","iconAnchorX","iconAnchorY","imageCirlceRadius","mapChecked","titlePrefix","dotColor","getRankingColor","mapIsDark","test","imageCircle","dotWidth","dotHeight","Achievements","handleAdd","field","url","removeLink","dogStore","closest","dataset","linkId","showFiles","links","file","isoDate","createdDate","aria-describedby","linkstate","displayDistance","distance","format","Distance","smallUnit","settings","imperial","kmToMiles","marginTop","marginBottom","Loading","goto","gotoTitle","routerName","role","native","RaceAdd","commentRace","race","marginTopBack","Input","retry","parseInt","dog","parentElement","removeFile","saved","datalist","min","max","step","help","refName","showImages","maxValue","files","formatBytes","size","data-field","rows","addToImages","list","el","Teams","toggleType","typeId","isNew","toJS","indexOf","removeTeam","addTeam","highlight","idx","isPrimary","isSecondary","hintTeam","Harnesses","harnesses","language","harness","colorNonstop","lang","Status","toggleStatus","statuses","removeStatus","addStatus","dogstatuses","Position","dogPositions","DogsEdit","insertDog","newDog","insert","resetDog","route","elementtype","fieldType","updateFieldValue","datatype","skipTimer","newValue","localObjectValue","achievements","split","parseFloat","updateObjectKeyValue","doUpdateField","clearTimeout","updateTimer","chooseMother","dogId","motherDog","findDog","chipId","chooseFather","fatherDog","chooseSubmenu","submenu","menu","back","history","goBack","cleanupMemoryDetail","load","addData","createNew","saveField","loadDog","dogFemales","findDogsByGender","dogMales","hasBirthday","birth","daysUntilBirthday","Math","ceil","daysUntilNextBirthday","age","deceased","gender","data-menu","mother","d","father","module","exports","showTeamChange","showChangeVisibility","showChangeType","addStory","hashTags","postfix","topic","tag","join","pinned","urlText","currency","price","code","country","region","startDate","endDate","loadPublicFeed","hashtags","changeVisibility","changePinned","changeType","toggleTeamChange","setPublicTeam","publicTeams","findPublicTeams","setFocus","hasFocus","removeFocus","col","offset","appState","isAdmin","firstname","ucfirst","lastname","email","teamId","findTeam","darkmode","onChange","selected","checked","showAddComment","showAllComments","showAllReplies","viewImageIdx","likeComment","likeReply","showOriginal","StoryComments","addLikeComment","likeStoryComment","replyId","likeStoryCommentReply","replyComment","focus","toggleComments","toggleReplies","toggleMenu","showMenu","showDeleteComment","showEdit","toggleEdit","commentEditText","toggleDeleteComment","deleteComment","deleteCommentStory","deleteCommentReply","commentid","deleteCommentReplyStory","saveComment","editCommentStory","saveCommentReply","editCommentReplyStory","viewImage","translate","preventDefault","replyid","translatedText","key","translateCommentReply","translateComment","compact","currentUser","max_comments","filteredComments","totalComments","diplayedComments","reverse","hasLikedComment","findIndex","filteredReplises","totalReplies","diplayedReplies","imgs","imageIdx","currentImage","currentLocationGeocode","translation","getCommentTranslations","targetLang","data-comment","filter","t","markdown","replaceImages","markdownOpts","getMarkdownOptions","onDblclick","data-idx","data-commentid","formatDistance","locale","updatedDate","reply","hasLikedReply","replyTranslation","getCommentReplyTranslations","replyBody","data-replyid","more","MARGIN_TOP","subMenuMarginTop","isLoading","AppRaceDetailTracking","raceid","Trackmap","showHeatmap","allTeamIds","adminStore","trackStore","selectedClassIds","getPublicHeatmap","trackIds","getTrackIdsByClass","cleanupMemory","loadPublic","query","idin","loadTrack","waypoints","waypoints2","waypoints3","zoomToMarkers","fullscreenMap","onMarkerClick","onMarker2Click","onMarker3Click","showTracks","showDistanceMarkers","groupWaypoints","focusOnMushers","geoJSONs","tracks","publicHeatmap","heatmap","track","geojson","gpx","geoJSON","gpxInfo","minZoom","maxZoom","showTrackProfile","distanceMarkerSteps","showFullscreenControl","MARKDOWN_OPTIONS","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","BaseLayer","Overlay","LayersControl","L","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","shadowUrl","createClusterCustomIcon","cluster","divIcon","getChildCount","point","App","mapRef","createRef","polyRef","handleViewportChanged","mapCenter","center","mapZoom","zoom","handleLocationFound","latlng","hasLocation","onEachFeature","feature","layer","popupContent","totalDistance","maxSpeed","avgSpeed","ascent","calculatedAscend","decent","calculatedDescend","secToHms","duration","bindPopup","handleClick","setLatlng","zoomToGeoJSON","bounds","getBounds","_northEast","err","console","log","markers","force","hasZoomedToMarkers","current","leafletElement","markerBounds","latLngBounds","forEach","extend","lat","lng","fitBounds","zoomToAllMarkers","zoomToFavoriteMarkers","overlayAdd","visibleLayers","overlayRemove","polylineOptions","rangeSteps","maxHslColor","mapColorMode","mapRangeMin","mapRangeMax","newRangeMin","newRangeMax","speeds","floor","range","colors","val","newMin","newMax","normalizeRange","colorValue","r","g","b","setMapRange","setMapColors","polylineOptionIdxFn","latLng","mapRange","altThresholds","meta","polylinetrackPointFactory","dataArray","climbs","item","trkpt","showSpeed","setMapColorMode","handleMarkerClick","opt","handleMarker2Click","handleMarker3Click","baseLayerChange","setMapChecked","whenReadyHandler","on","Windspeed","geoJSONStyle","weight","fillOpacity","fillColor","geoJSONStyleList","componentWillUnmount","mapId","skipGeojson","zoomToWaypoints","showSearch","showZoomControl","showLayersControl","showScaleControl","showRange","layersControlPosition","mapColors","tempGeoJson","asObject","hasWaypoints","startMarker","endMarker","distanceMarkers","distances","currentDistance","steps","captureAllEvents","onScroll","onViewportChanged","onLocationfound","zoomControl","doubleClickZoom","scrollWheelZoom","dragging","Browser","mobile","tap","touchZoom","animate","easeLinearity","onOverlayadd","onOverlayremove","whenReady","position","attribution","subdomains","metric","Temperature","Precipitation","fitBoundsOnLoad","fitBoundsOnUpdate","points","longitudeExtractor","m","latitudeExtractor","intensityExtractor","positions","optionIdxFn","options","lineCap","opacity","smoothFactor","zoomAnimation","gj","onAdd","icons","get","wp","draggable","getDistanceMarker","getSmallMarker","zIndexOffset","maxClusterRadius","iconCreateFunction","getMarker","getRaceMarker","currentState","AppRaceDetailNotifications","subscribeNotificationTopic","notificationTopics","setNotificationTopic","description","removeAchievement","achievementId","date","fieldSorter","a","o","dir","substring","reduce","p","n","RaceLiveAddResult","addResult","direction","classid","checkpointId","currentClass","getClassById","selectedCheckpoint","checkpoints","result","classId","newResult","checkpoint","timestamp","contestants","results","sortContestantsByResult","dogs","message","editResult","resultid","raceClassId","resultId","editClass","localUpdateSignup","deleteResult","selectedResult","raceClassResultDelete","doneEditResult","selectCheckpoint","toggleTimestamp","showTimestamp","selectedMusher","lastResults","sort","startTime","selectResult","sortedContestants","isCheckedIn","isCheckedOut","isScratched","currentResult","currentCheckpoint","data-classid","data-resultid","data-direction","res","cp","requiredRestMin","requiredRestMinutes","timeEqualization","firstOutTime","getTime","formatDate","year","month","hour12","hour","minute","showTeamSetting","likeStory","StoryEditInline","saveStory","storyBody","publicFeedUpdate","storyType","saveStoryField","StoryTypeRegular","showStoryDetail","localName","likeRef","getTranslation","dblClick","offline","StoryTypeAd","componentWillMount","asUrl","rel","currencty","StoryTypeArticle","StoryPublicFeed","toggleDate","showDate","storyId","likeIds","toggleAddComment","closeAllAddComments","toggleShowTeamSetting","showDeleteStory","toggleDeleteStory","reportStory","adminRemoveStory","adminHideStory","deleteStory","doneEdit","shareLink","text","shareUrl","hashtag","hasShareApi","findPublicTeam","isTeamAdmin","members","some","username","userLink","hideProfile","reports","hasLikedStory","totalFollowers","followers","isYourTeam","isFollowing","hasRequestedFollow","followRequests","yrWeather","views","getViews","statistics","adminData","getAdminData","buttonOnly","simple","classNames","formattedCounty","formatted_address","deviceInfo","count","ranking","isNumber","rankingTrend","getClassForTrend","durationAvg","durationAvgTrend","statisticsCurrent","totalInteractions","shadowTags","data-url","data-title","data-native","AppRaceDetailUserImages","addRaceUserImage","newRaceUserImage","addUserImage","newUserImage","updateUserImageUpload","removeRaceUserImage","removeUserImage","userImageId","editRaceUserImage","raceUserImageId","editUserImage","element","scrollHeight","tags","trim","celciusToFahrenheit","RaceLiveMusherResult","onClickNav","selectedMusherIdx","getTeamById","lastResOut","lastResIn","totalMovingTime","totalInCpTime","lastEstTimeOut","nextBib","prevBib","contestant","onDogClick","resIn","resOut","resScratched","timeInCp","deltaSec","movingTime","hasBeenInCp","distanceFromPrev","percentRest","line","estTimeOut","estRest","isStartLine","addDeltaSec","day","estTimeIn","estTimeToNext","estTimeToCpMinutes","estRestMinutes","isFinishLine","Files","handleAddImage","uploadStatus","apiUrl","AppRaceDetailNews","addRaceArticle","newRaceArticle","addArticle","newArticle","editRaceArticle","raceArticleId","editArticle","removeRaceArticle","removeArticle","articleId","updateArticleUpload","RaceCommentReply","commentReplyRace","Weight","kgToPounds","requestSent","requestFollowTeam","followRequest","getButton","isBlocked","blockedFollowers","unFollowTeam","data-team","notfollowing","array","limit","loadTeams","publicTeamsToFollow","place","RaceComments","likeRaceComment","likeRaceCommentReply","deleteCommentRace","deleteCommentReplyRace","editCommentRace","editCommentReplyRace","DogScroller","scrollImages","scrollLeft","clientWidth","nearestInt","round","diff","abs","Number","isInteger","sortByName","allDogs","dogA","dogB","showName","showPosition","finalText","regex","RegExp","replace","RaceLiveResults","reloadLastEpoch","onClickMusher","onClickCheckpoint","selectedCheckpointId","tableClass","thClass","thStyle","tdClass","tdStyle","progressStyle","progressbarStyle","cpIdx","sortOrder","co","coIdx","hasLeftCpPrev","bibIdxOutPrev","estTimeToCpMinutesPrev","data-bib","isoTime","hasLeftCp","hasArrivedCp","hasScratched","bibIdxIn","bibIdxOut","percentDone","aria-valuenow","aria-valuemin","aria-valuemax","cpId","colspan","Drawer","children","onCloseClick","captureEvents","Ad","withText","subject","logClick","adStore","ads","apiServer","getApiServer","section","path","currentTeam","ambitions","postalcode","findTeamAmbition","ambition","findTeamType","page","setTime","loadAd","time","match","ad","HeaderCustom","idxConfirm","idxSuggestion","idxAd","sessionid","dataFields","reloadStories","loadStoriesPublicFeed","appContainerScrollTop","setCheckForNewStories","checkForNewStoriesTimer","setInterval","checkForNewStories","clearCheckForNewStories","clearInterval","insertTopRanked","publicFeed","topRankedStories","topRankedRandomized","shuffleArray","feed","startPosition","now","parseInputDate","endPosition","l","randomPlace","randomInt","isObject","splice","localUpdateField","insertAds","wrapperClassNames","contentClassNames","insertTeamConfirm","insertTeamSuggestions","setLoadMore","unsetLoadMore","teamid","showTeam","hideTeam","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","postScrollview","getIntersectionObserverHistory","renderContent","obj","hasNewStories","MusherInfoHeader","toggleAdminInfo","showAdminInfo","toggleInfo","showInfo","dogid","currentDog","showDog","totalTrackLength","findWaypointByBib","musher","getMusherByBibId","getMusherByBibEmail","totals","getClassByBib","getTotalsByTeamId","inFront","behind","totalDistanceOnTrack","findNearestMushers","headerImage","imageHeader","s3XXLargeLink","sportsClub","data-submenu","findHarness","JSON","stringify","removeMainImage","byMd5","md5","DogLine","vaccineLogStatuses","vac","inKarens","vaccineAgens","durationEnd","karensDaysLeft","AppRaceDetailSignup","signupToRace","signup","addContestant","newContestant","cellphone","instagram","updateSignup","editSignup","contestantid","contestantId","clearSignupValue","toggleDrawer","showDrawer","findDogsByTeam","signupClass","getRaceClassById","today","chosenDogChipIds","getAlphabet","letter","byNotChosen","signupStartDate","signupEndDate","liveRace","signuppayment","paidSignupfee","signupfee","data-contestantid","classes","rules","termsAndAgreement","declaration","declarationDate","chosenDog","Elevation","meterToFeet","byBib","aHas","AppRaceDetailMushers","toggleDisplayDetails","editUserDetails","adminToggleEditUser","getMusherById","getUserByEmail","toggleEditUserDetails","veterinaryToggleEditUser","toggleVeterinaryUserDetails","toggleAdminSendMessage","showAdminSendMessage","toggleAdminSendInboxMessage","showAdminSendInboxMessage","toggleAdminImport","showAdminImport","adminSignupEdit","adminSignupSetValue","sendEmail","raceId","to","raceclassid","emailResponse","resetEmail","sendInboxMessage","inboxMessage","inboxMessageResponse","resetInboxMessage","parseInput","parseInputTimer","doParseInput","lines","String","headers","jsonData","firstLine","values","jsonObject","v","toLowerCase","addMultipleContestants","filterByClass","selectedClassId","toggleSelectedClassId","clearSearchForBib","searchForBib","savePreCheck","chipid","preCheck","dogJournals","dogJournalStore","vetData","dogData","journalData","checkType","getNestedValue","journal","veterinary","displayDetails","raceCheck","isVeterinary","veterinaryUserDetails","filterByBib","selectedUser","selectedUserTeams","scope","hasVaccines","hasMandatoryCheck","mandatoryCheck","raceStatus","raceComment","gpxResultsApproved","alt","asFacebookLink","asInstagramLink","price1","priceSent","price2","price3","dogVaccines","vaccines","vaccineName","dogJournal","veterinaryFirstname","veterinaryLastname","diagnoseId","heartRate","bodyConditionScore","generalFindings","data-chipid","data-shortname","shortName","startOrder","data-value","address","postalplace","countryCode","birthdate","emails","dangerouslySetInnerHTML","__html","$str","data-to","data-raceclassid","data-class","oninput","Speed","kmtToMph","Images","confirmed","deleted","confirmRequest","follow","confirmFollowRequest","followRequestUser","deleteRequest","deleteFollowRequest","hasFollowRequests","reqUser","isDeleted","isConfirmed","data-user","data-follow","MARGIN_TOP_BACK","MARGIN_BOTTOM","likeRace","resizeAllTextareas","textareaList","document","getElementsByTagName","addNavigation","updateKeyValue","getDogs","flat","getAllClassesSortedBy","loadPublicInteractions","loadRace","hasLikedRace","isLiveRace","showSignup","showTracking","countryRegexp","formattedCountry","resultsHide","veterinaryInfo","trailDescription","program","prices","ingress","cols","DragNDropFileupload","dropRef","handleDrag","handleDragIn","dragCounter","dataTransfer","items","drag","handleDragOut","handleDrop","readLocalFile","handleAddFiles","event","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","addEventListener","updateProgress","fileObj","uploadDone","open","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","readyState","parse","responseText","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","click","removeEventListener","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","fontSize","multiple","onchange","isImage","AppRaceDetailClasses","getStateColor","getStateIcon","States","hideDetail","stateDetail","showStateDetail","nextStateDetail","states","nextState","avgspeed","percent","normalizeBetween","prevStateDetail","prevIdx","prevState","showText","currentWidth","data-state","data-duration","data-distance","data-avgspeed","data-percent","toggleViews","showViewList","viewUsersArrays","entries","yearObject","week","weekObject","viewUsers","userId","contentIsNotLoaded","reloadInSec","reloadIsActive","ReloadTimer","initComponent","tickReloadTimeer","tick","reloadPercent","AppRaceDetailResults","lockAllWorkoutsInRace","lockMessage","closeDrawerMusher","closeDrawerCheckpoint","showDrawerCheckpoint","showDrawerMusher","toggleDrawerMusher","selectedMusherBib","selectMusher","toggleDrawerCheckpoint","loadWorkoutSummary","getWorkoutSummaryActiveTeams","reload","RELOAD_INTERVAL_IN_SEC","lastAllowedChangeDate","setHours","getHours","getPillClass","resultsUrl","resultsText","resultDanger","resultWarning","resultSuccess","totalMushers","totalFinished","currentStages","currentResults","completed","normalizedDuration","weightedNormalizedDuration","isDone","finishedDate","totalWorkoutTimeUsedSec","data-email","isLocked","stage","distanceKm","currentEpoch","inDate","setUTCSeconds","viewBox","svgElevation","elevation","speedAvg","rest","avgDogs","lastUpdated","nonstop","totalRest","firstEpoch","firstGpxStartEpoch","lastGpxStartEpoch","mouseData","Gauge","svgRef","radius","heightAdd","showPercentText","prefix","showCenterText","centerText","centerTextSize","centerTextX","centerTextY","totalY","totalX","totalTextAnchor","completedY","completedX","completedTextAnchor","strokeWidth","innerRadius","strokeWidthGauge","circumference","PI","arc","dashArray","transform","textSize","textSizeSmall","xmlns","svg","preserveAspectRatio","gaugeBackground","cx","cy","strokeDasharray","strokeLinecap","gauge","stroke","strokeDashoffset","transition","gaugeText","dominant-baseline","text-anchor","font-size","secondary","FastListLine","containerRef","removeIntersectionObserver","addIntersectionObserver","dataValues","dataProperties","encodeURI","FastList","deleteIntersectionObserver","intersectionObserver","isIntersecting","currentHeight","childNodes","offsetHeight","display","minHeight","setupIntersectionObserver","window","IntersectionObserverEntry","IntersectionObserver","root","rootMargin","threshold","observe","unobserve","wrapperClasses","hasOwnProperty","contentClasses","RaceLiveCheckpointResult","allResultsCp","lastResultsIn","lastResultsOut","lastResultsLegtimes","lastResultsScratched","prevCp","nextCp","prevResultsOut","nextResultsIn","topImage","onCLick","distanceToNext","distanceToFinish","hideResults","prevResOut","timeused","restTime","nextResIn","estTimeInNextCp","cpSortOrder","jwtToken","leaderboardMode","filterByraceClass","showLeaderBoard","showNews","Results","raceClass","restPercent","raceTime","finishTime","diffToFirstFinishTime","distanceToFirst","distanceToForward","distanceToBehind","currentAvgSpeed","MusherInfo","wpData","totalDistancePercent","xTicks","dataLeft","legendLeft","unitLeft","xTicksRange","partSize","windDirection","showXTicks","paddingTop","paddingLeft","yTicksLeftWidth","lineFromXzero","lineFromXmax","dataFillLeft","showYTicksLeft","yTicksLeftPostfix","avgWindowLeft","smoothLeft","TrackingMap","handleHistoryPointIndex","historyIdx","historyPointIndex","timerRunning","updateWaypointPosition","playHistory","replaySpeed","raceTrackerPointTimestamp","getRaceTrackerTimestamp","playingHistory","pauseHistory","loadLiveRaceResults","teamIds","bibs","replayHistory","showDrawerReplay","classInfo","getRaceTrackerData","raceTrackerRace","getRaceTrackerActiveTeams","loadRaceResults","setLeaderboardMode","mode","chooseRaceClass","toggleShowLeaderBoard","hide","toggleShowNews","closeAllDrawers","showResults","onCpMarkerClick","cpData","toggleResults","hideDog","setReplaySpeed","toggleReplayHistory","cleanupMemoryClass","toggleFocusOnMusher","musherId","musherid","toggleBib","checkForEnter","maxPoints","toggleLines","showLines","innerWidth","innerHeight","getWindowDimensions","showHeader","drawerClassNames","drawerWidth","infoOnMushers","selectedClass","wpCheckpoints","data-musherid","data-speed","countryRegexpMessage"],"mappings":"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","file":"route-app-races.chunk.1a8d5.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\nconst MAX_USERS_TO_DISPLAY = 1;\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleLikes = () => {\n        const { showLikesList } = this.state;\n        this.setState({\n            showLikesList: !showLikesList,\n        });\n    }\n\n    render() {\n        const { showLikesList } = this.state;\n        const { storyStore, teamStore, workoutStore, raceStore } = this.props.stores;\n        const { likes, comments, type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\t\treturn (<>\n            <div class='d-flex justify-content-between mb-2'>\n                {likes && likes.length > 0 && <>\n                    <div class='d-flex flex-row flex-nowrap position-relative mr-3' style='overflow: auto;'>\n                        <span\n                            class='text-muted mr-2'\n                            onClick={this.toggleLikes}\n                        >\n                            <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                        </span>\n                        {likes.slice(0, MAX_USERS_TO_DISPLAY).map((like) => {\n                            let user;\n                            let teams;\n                            if (type === 'story') {\n                                user = storyStore.findPublicUser(like.user);\n                                teams = storyStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'team') {\n                                user = teamStore.findPublicUser(like.user);\n                                teams = teamStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'workout') {\n                                user = workoutStore.findPublicUser(like.user);\n                                teams = workoutStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'race') {\n                                user = raceStore.findPublicUser(like.user);\n                                teams = raceStore.findPublicTeamByMembers(like.user);\n                            }\n                            let publicTeam;\n                            if (util.isArray(teams)) {\n                                publicTeam = teams.find(e => e.public === 1);\n                            }\n                            const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                            const shortname = mu.displayNameShort(user);\n                            const name = mu.displayName(user);\n                            return (<>\n                                <span class='font-weight-lighter'>\n                                    {publicTeam ? <>\n                                        <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)}>\n                                            {name}\n                                        </a>\n                                    </> : <>\n                                        {name}\n                                    </>}\n                                </span>\n                            </>);\n                            // return (<>\n                            //     {publicTeam ? <>\n                            //         <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)}>\n                            //             <div\n                            //                 class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                            //                 style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                            //             >\n                            //                 {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            //             </div>\n                            //         </a>\n                            //     </> : <>\n                            //         <div\n                            //             class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                            //             style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            //         >\n                            //             {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            //         </div>\n                            //     </>}\n                            // </>);\n                        })}\n                        {likes.length > MAX_USERS_TO_DISPLAY && <>\n                            <span class='text-muted font-weight-lighter ml-2' onClick={this.toggleLikes}>\n                                <Text id='likes-comments.and' fields={{ total: likes.length - MAX_USERS_TO_DISPLAY }}>and {likes.length - MAX_USERS_TO_DISPLAY} others.</Text>\n                            </span>\n                        </>}\n                    </div>\n                </>}\n\n                {comments && comments.length > 0 && <span class='float-right text-muted'>\n                    <i class='fas fa-comment text-primary' /> {comments.length}\n                </span>}\n            </div>\n            {showLikesList && <div class='mt-3 mb-3'>\n                {likes && likes.map((like) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(like.user);\n                        teams = storyStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(like.user);\n                        teams = teamStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(like.user);\n                        teams = workoutStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'race') {\n                        user = raceStore.findPublicUser(like.user);\n                        teams = raceStore.findPublicTeamByMembers(like.user);\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-light mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                {name} <span class='font-weight-lighter'>- {publicTeam.name}</span>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                {name}\n                            </div>\n                        </>}\n                    </div>);\n                })}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\n@observer\nclass ImageSlider extends Component {\n    constructor(props) {\n        super(props);\n        const { images = [] } = props;\n        this.state = {\n            imageContainer: 1,\n            currentImage1: images[0] || {},\n            currentImage2: {},\n            currentIdx: 0,\n            totalImages: images.length || 0,\n            imageDots: [...Array(images.length || 0).fill(1).map((x, y) => x + y)],\n        };\n    }\n\n    nextImage() {\n        // console.log('next');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx + 1;\n        if (nextIdx > totalImages -1) {\n            nextIdx = 0;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: nextImageContainer,\n        });\n    }\n\n    prevImage() {\n        // console.log('prev');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx - 1;\n        if (nextIdx < 0) {\n            nextIdx = totalImages - 1;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: imageContainer === 1 ? 2 : 1,\n        });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: e.touches[0].pageX,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: undefined,\n            sliding: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        // e.preventDefault();\n        const { totalImages } = this.state;\n        if (totalImages > 1) {\n            const { startX, sliding } = this.state;\n            const scrollDistance = 50;\n            const x = e.touches[0].pageX;\n            if (!sliding) {\n                if (x > startX + scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.prevImage();\n                } else if (x < startX - scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.nextImage();\n                }\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.images !== this.props.images) {\n            const { images: nextImages = [] } = nextProps;\n            this.setState({\n                imageContainer: 1,\n                currentImage1: nextImages.length > 0 ? nextImages[0] : {},\n                currentImage2: {},\n                currentIdx: 0,\n                totalImages: nextImages.length || 0,\n                imageDots: [...Array(nextImages.length || 0).fill(1).map((x, y) => x + y)],\n            });\n        }\n    }\n\n    render() {\n        const { currentImage1, currentImage2, imageContainer, totalImages, imageDots, currentIdx } = this.state;\n        const img = this[`image${imageContainer}`];\n        const curImage = imageContainer === 1 ? currentImage1 : currentImage2;\n        const htmlImageRatio = img && img.height ? img.width / img.height : 4 / 3;\n        let imgHeight;\n        let imgWidth;\n        if (curImage.dimensions) {\n            const { width, height, orientation } = curImage.dimensions;\n            if (orientation > 4 && orientation < 9) {\n                imgHeight = width;\n                imgWidth = height;\n            } else {\n                imgHeight = height;\n                imgWidth = width;\n            }\n        }\n        const imageRatio = curImage.dimensions ? imgWidth / imgHeight : htmlImageRatio;\n        if (totalImages <= 0) {\n            return '';\n        }\n\n        return (\n            <div class='w-100'>\n                <div class='border rounded position-relative w-100'\n                    style={`height: calc(85vw / ${imageRatio}); overflow: hidden; transition: all .3s ease-in-out;`}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                >\n                    {totalImages > 1 && <span class='position-absolute' style='top:0px; right: 5px; z-index: 2000;'><small>{currentIdx + 1}/{totalImages}</small></span>}\n                    {currentImage1 && <div class='position-absolute' style={`${imageContainer === 1 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage1.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image1 = c}\n                        />\n                    </div>}\n                    {currentImage2 && <div class='position-absolute' style={`${imageContainer === 2 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage2.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image2 = c}\n                        />\n                    </div>}\n                </div>\n                {imageDots.length > 1 && <div class='w-100 text-center'>{imageDots.map(i => <span style={`color: ${i === currentIdx + 1 ? '#ffffff' : '#808080'};`}>&bull;</span>)}</div>}\n            </div>\n        );\n    }\n}\n\nexport default ImageSlider;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentStory({ id: story.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[story.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ story, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, story } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={story.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryCommentReply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentReplyStory({ id: story.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ story, response, commentId });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    componentDidMount() {\n        const { initCall = () => {} } = this.props;\n        initCall();\n    }\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryCommentReply;\n","import { DivIcon, Icon } from 'leaflet';\nimport util from 'preact-util';\n\nimport mu from './musher-util';\n\nconst ICONS = {\n\tadit: new Icon({ iconUrl: './assets/svg/adit.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tairport: new Icon({ iconUrl: './assets/svg/airport.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tanalyse: new Icon({ iconUrl: './assets/svg/analyse.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tarchaeological: new Icon({ iconUrl: './assets/svg/archaeological.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tarchitecture: new Icon({ iconUrl: './assets/svg/architecture.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tarrow_up: new Icon({ iconUrl: './assets/svg/arrow_up.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tarrow_up_double: new Icon({ iconUrl: './assets/svg/arrow_up_double.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tatm: new Icon({ iconUrl: './assets/svg/atm.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tavatar: new Icon({ iconUrl: './assets/svg/avatar.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbag: new Icon({ iconUrl: './assets/svg/bag.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbar: new Icon({ iconUrl: './assets/svg/bar.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbarracks: new Icon({ iconUrl: './assets/svg/barracks.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbattlefield: new Icon({ iconUrl: './assets/svg/battlefield.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbeach: new Icon({ iconUrl: './assets/svg/beach.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbicycle: new Icon({ iconUrl: './assets/svg/bicycle.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tboundary_stone: new Icon({ iconUrl: './assets/svg/boundary_stone.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbuddhism: new Icon({ iconUrl: './assets/svg/buddhism.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbuilding: new Icon({ iconUrl: './assets/svg/building.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tburger: new Icon({ iconUrl: './assets/svg/burger.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbus: new Icon({ iconUrl: './assets/svg/bus.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbus_stop: new Icon({ iconUrl: './assets/svg/bus_stop.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcable_car: new Icon({ iconUrl: './assets/svg/cable_car.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcamera: new Icon({ iconUrl: './assets/svg/camera.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcamp_site: new Icon({ iconUrl: './assets/svg/camp_site.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcar: new Icon({ iconUrl: './assets/svg/car.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcaravan_site: new Icon({ iconUrl: './assets/svg/caravan_site.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcartography: new Icon({ iconUrl: './assets/svg/cartography.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcash: new Icon({ iconUrl: './assets/svg/cash.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcastle: new Icon({ iconUrl: './assets/svg/castle.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcastle_defensive: new Icon({ iconUrl: './assets/svg/castle_defensive.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcave_entrance: new Icon({ iconUrl: './assets/svg/cave_entrance.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcemetery: new Icon({ iconUrl: './assets/svg/cemetery.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tchapel: new Icon({ iconUrl: './assets/svg/chapel.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tchristianism: new Icon({ iconUrl: './assets/svg/christianism.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcinema: new Icon({ iconUrl: './assets/svg/cinema.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcinema_alt: new Icon({ iconUrl: './assets/svg/cinema_alt.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcity: new Icon({ iconUrl: './assets/svg/city.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcityhall: new Icon({ iconUrl: './assets/svg/cityhall.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tclean: new Icon({ iconUrl: './assets/svg/clean.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcompass: new Icon({ iconUrl: './assets/svg/compass.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcompass_alt: new Icon({ iconUrl: './assets/svg/compass_alt.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tconstruction: new Icon({ iconUrl: './assets/svg/construction.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcontour: new Icon({ iconUrl: './assets/svg/contour.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcourt_house: new Icon({ iconUrl: './assets/svg/court_house.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcrown: new Icon({ iconUrl: './assets/svg/crown.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcrucifix: new Icon({ iconUrl: './assets/svg/crucifix.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdata: new Icon({ iconUrl: './assets/svg/data.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdatabase: new Icon({ iconUrl: './assets/svg/database.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdentist: new Icon({ iconUrl: './assets/svg/dentist.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdisabled: new Icon({ iconUrl: './assets/svg/disabled.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdislike: new Icon({ iconUrl: './assets/svg/dislike.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdownload: new Icon({ iconUrl: './assets/svg/download.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdrag_lift: new Icon({ iconUrl: './assets/svg/drag_lift.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdrop: new Icon({ iconUrl: './assets/svg/drop.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\teye: new Icon({ iconUrl: './assets/svg/eye.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfacebook: new Icon({ iconUrl: './assets/svg/facebook.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfire: new Icon({ iconUrl: './assets/svg/fire.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfishing: new Icon({ iconUrl: './assets/svg/fishing.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tflag: new Icon({ iconUrl: './assets/svg/flag.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tforbidden: new Icon({ iconUrl: './assets/svg/forbidden.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfort: new Icon({ iconUrl: './assets/svg/fort.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfountain: new Icon({ iconUrl: './assets/svg/fountain.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfuel: new Icon({ iconUrl: './assets/svg/fuel.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfuel_alt: new Icon({ iconUrl: './assets/svg/fuel_alt.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tgallery: new Icon({ iconUrl: './assets/svg/gallery.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tgear: new Icon({ iconUrl: './assets/svg/gear.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tgithub: new Icon({ iconUrl: './assets/svg/github.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tgo: new Icon({ iconUrl: './assets/svg/go.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tgolf: new Icon({ iconUrl: './assets/svg/golf.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\theart: new Icon({ iconUrl: './assets/svg/heart.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\thelicopter: new Icon({ iconUrl: './assets/svg/helicopter.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\thome: new Icon({ iconUrl: './assets/svg/home.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\thospital: new Icon({ iconUrl: './assets/svg/hospital.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\thostel: new Icon({ iconUrl: './assets/svg/hostel.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\thotel: new Icon({ iconUrl: './assets/svg/hotel.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\thotel_alt: new Icon({ iconUrl: './assets/svg/hotel_alt.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tice_ring: new Icon({ iconUrl: './assets/svg/ice_ring.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tinformation: new Icon({ iconUrl: './assets/svg/information.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tinternet: new Icon({ iconUrl: './assets/svg/internet.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tinvisible: new Icon({ iconUrl: './assets/svg/invisible.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tislamism: new Icon({ iconUrl: './assets/svg/islamism.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tisland: new Icon({ iconUrl: './assets/svg/island.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tjudaism: new Icon({ iconUrl: './assets/svg/judaism.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlaptop: new Icon({ iconUrl: './assets/svg/laptop.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlibrary: new Icon({ iconUrl: './assets/svg/library.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlighthouse: new Icon({ iconUrl: './assets/svg/lighthouse.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlike: new Icon({ iconUrl: './assets/svg/like.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlinkedin: new Icon({ iconUrl: './assets/svg/linkedin.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlion: new Icon({ iconUrl: './assets/svg/lion.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlock: new Icon({ iconUrl: './assets/svg/lock.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmagnifier: new Icon({ iconUrl: './assets/svg/magnifier.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmall: new Icon({ iconUrl: './assets/svg/mall.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmap: new Icon({ iconUrl: './assets/svg/map.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmapkey: new Icon({ iconUrl: './assets/svg/mapkey.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmapshakers: new Icon({ iconUrl: './assets/svg/mapshakers.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmarina: new Icon({ iconUrl: './assets/svg/marina.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmarker: new Icon({ iconUrl: './assets/svg/marker.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmarket_place: new Icon({ iconUrl: './assets/svg/market_place.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmine: new Icon({ iconUrl: './assets/svg/mine.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmonument: new Icon({ iconUrl: './assets/svg/monument.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmountain: new Icon({ iconUrl: './assets/svg/mountain.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmuseum: new Icon({ iconUrl: './assets/svg/museum.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmusic: new Icon({ iconUrl: './assets/svg/music.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnature: new Icon({ iconUrl: './assets/svg/nature.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnocamera: new Icon({ iconUrl: './assets/svg/nocamera.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnonsmoking: new Icon({ iconUrl: './assets/svg/nonsmoking.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnorth: new Icon({ iconUrl: './assets/svg/north.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnorth_alt: new Icon({ iconUrl: './assets/svg/north_alt.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnorth_alt_II: new Icon({ iconUrl: './assets/svg/north_alt_II.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnorth_alt_III: new Icon({ iconUrl: './assets/svg/north_alt_III.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\toppositeway: new Icon({ iconUrl: './assets/svg/oppositeway.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tparking: new Icon({ iconUrl: './assets/svg/parking.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tpharmacy: new Icon({ iconUrl: './assets/svg/pharmacy.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tpicnic_site: new Icon({ iconUrl: './assets/svg/picnic_site.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tpitch: new Icon({ iconUrl: './assets/svg/pitch.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tplayground: new Icon({ iconUrl: './assets/svg/playground.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tplayground_alt: new Icon({ iconUrl: './assets/svg/playground_alt.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tpolice: new Icon({ iconUrl: './assets/svg/police.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tpost_office: new Icon({ iconUrl: './assets/svg/post_office.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tpub: new Icon({ iconUrl: './assets/svg/pub.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\trestaurant: new Icon({ iconUrl: './assets/svg/restaurant.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\trocks: new Icon({ iconUrl: './assets/svg/rocks.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\truins: new Icon({ iconUrl: './assets/svg/ruins.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsaddle: new Icon({ iconUrl: './assets/svg/saddle.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsailboat: new Icon({ iconUrl: './assets/svg/sailboat.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tschool: new Icon({ iconUrl: './assets/svg/school.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tseal: new Icon({ iconUrl: './assets/svg/seal.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tshelter: new Icon({ iconUrl: './assets/svg/shelter.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsinkhole: new Icon({ iconUrl: './assets/svg/sinkhole.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tskype: new Icon({ iconUrl: './assets/svg/skype.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsmartphone: new Icon({ iconUrl: './assets/svg/smartphone.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsmoking: new Icon({ iconUrl: './assets/svg/smoking.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsport_centre: new Icon({ iconUrl: './assets/svg/sport_centre.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tspring: new Icon({ iconUrl: './assets/svg/spring.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsquare: new Icon({ iconUrl: './assets/svg/square.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tstadium: new Icon({ iconUrl: './assets/svg/stadium.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tstar: new Icon({ iconUrl: './assets/svg/star.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tstop: new Icon({ iconUrl: './assets/svg/stop.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tstupa: new Icon({ iconUrl: './assets/svg/stupa.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsupermarket: new Icon({ iconUrl: './assets/svg/supermarket.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tswimming_pool: new Icon({ iconUrl: './assets/svg/swimming_pool.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttelephone: new Icon({ iconUrl: './assets/svg/telephone.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttheatre: new Icon({ iconUrl: './assets/svg/theatre.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tticket: new Icon({ iconUrl: './assets/svg/ticket.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttoilet: new Icon({ iconUrl: './assets/svg/toilet.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttower: new Icon({ iconUrl: './assets/svg/tower.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttown: new Icon({ iconUrl: './assets/svg/town.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttraffic_signal: new Icon({ iconUrl: './assets/svg/traffic_signal.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttrain: new Icon({ iconUrl: './assets/svg/train.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttram: new Icon({ iconUrl: './assets/svg/tram.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttram_stop: new Icon({ iconUrl: './assets/svg/tram_stop.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttree_cinofer: new Icon({ iconUrl: './assets/svg/tree_cinofer.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttree_leaf: new Icon({ iconUrl: './assets/svg/tree_leaf.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttriangle: new Icon({ iconUrl: './assets/svg/triangle.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tunderground: new Icon({ iconUrl: './assets/svg/underground.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tunesco: new Icon({ iconUrl: './assets/svg/unesco.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tuniversity: new Icon({ iconUrl: './assets/svg/university.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tupload: new Icon({ iconUrl: './assets/svg/upload.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tviewpoint: new Icon({ iconUrl: './assets/svg/viewpoint.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tviewtower: new Icon({ iconUrl: './assets/svg/viewtower.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tvillage: new Icon({ iconUrl: './assets/svg/village.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tvineyard: new Icon({ iconUrl: './assets/svg/vineyard.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tvolcano: new Icon({ iconUrl: './assets/svg/volcano.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twater_tower: new Icon({ iconUrl: './assets/svg/water_tower.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twater_well: new Icon({ iconUrl: './assets/svg/water_well.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twatermill: new Icon({ iconUrl: './assets/svg/watermill.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twaterpark: new Icon({ iconUrl: './assets/svg/waterpark.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twaterwork: new Icon({ iconUrl: './assets/svg/waterwork.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twayside_cross: new Icon({ iconUrl: './assets/svg/wayside_cross.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twind_generator: new Icon({ iconUrl: './assets/svg/wind_generator.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twindmill: new Icon({ iconUrl: './assets/svg/windmill.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tzoo: new Icon({ iconUrl: './assets/svg/zoo.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n}\n\nclass Icons {\n    static get(icon) {\n        return ICONS[icon];\n    }\n\n    static list() {\n        return Object.keys(ICONS);\n    }\n\n\tstatic getDiv({ icon, title, body, color, textColor = '#333333', borderColor = 0, iconWidth = 150, iconHeight = 70 }) {\n\t\tconst id = `img-${util.randomPassword()}`;\n\t\tconst { r, g, b } = util.hsl2Rgb(color, 100, 60);\n\t\tconst { r: wr, g: wg, b: wb } = util.hsl2Rgb(100 - borderColor, 100, 50);\n\t\treturn new DivIcon({\n\t\t\ticonSize: [iconWidth, iconHeight + 30],\n\t\t\ticonAnchor: [15, iconHeight + 30],\n\t\t\tclassName: 'my-div-icon',\n\t\t\thtml: `<div id='${id}' style='width: ${iconWidth}px; height: ${iconHeight + 30}px; line-height: 1.1em;'>\n\t\t\t\t<style>\n\t\t\t\t\t#${id} .map-marker:after {\n\t\t\t\t\t\tborder-top-color: ${color};\n\t\t\t\t\t}\n\t\t\t\t</style>\n\t\t\t\t<div class='map-marker text-white p-1' style='color: ${textColor}; background-color: ${color}; height: ${iconHeight}px;'>\n\t\t\t\t\t<nobr><strong>${title}</strong></nobr><br />\n\t\t\t\t\t<span class='font-weight-light'><nobr>${body}</nobr></span>\n\t\t\t\t</div>\n\t\t\t</div>`,\n\t\t});\n    }\n\n\tstatic getRaceMarker({\n\t\ticon,\n\t\tbib,\n\t\tspeed = '',\n\t\tbearing = '',\n\t\trank,\n\t\tflag = '',\n\t\timage,\n\t\ttitle,\n\t\tbody,\n\t\tcolor,\n\t\ttextColor = '#333333',\n\t\tborderColor = 0,\n\t\ticonWidth = 180,\n\t\ticonHeight = 15,\n\t\ticonAnchorX = 5,\n\t\ticonAnchorY = 5,\n\t\timageCirlceRadius = 10,\n\t\tmapChecked,\n\t\ttitlePrefix = '',\n\t}) {\n\t\tconst id = `img-${util.randomPassword()}`;\n\t\tconst { r, g, b } = util.hsl2Rgb(color, 100, 60);\n\t\tconst { r: wr, g: wg, b: wb } = util.hsl2Rgb(100 - borderColor, 100, 50);\n\n\t\tconst dotColor = mu.getRankingColor(rank);\n\t\tconst mapIsDark = /dark/i.test(mapChecked);\n\n\t\tconst lineHeight = '0.9em';\n\t\tconst fontSize = '0.9em';\n\t\tconst paddingTop = '3px';\n\t\tconst paddingBottom = '3px';\n\n\t\tlet imageCircle = image ? `\n\t\t\t<div\n\t\t\t\tclass='rounded-circle imageRounded imageRoundedSmallIcon'\n\t\t\t\tstyle='background-image: url(\"${image}\"); background-size: cover; border: 1px ${dotColor} solid;'\n\t\t\t>\n\t\t\t\t&nbsp;\n\t\t\t</div>\n\t\t` : '';\n\t\timageCircle = bib || rank ? `\n\t\t\t<div\n\t\t\t\tclass='px-0 text-center' style='background-color: ${dotColor ? dotColor : ''}'\n\t\t\t>\n\t\t\t\t${bib || rank}\n\t\t\t</div>\n\t\t` : imageCircle;\n\t\treturn new DivIcon({\n\t\t\ticonSize: [iconWidth, iconHeight],\n\t\t\ticonAnchor: [iconAnchorX, iconAnchorY],\n\t\t\tclassName: 'my-div-icon',\n\t\t\thtml: iconAnchorX > 100 ? `\n\t\t\t\t<div class='d-flex flex-nowrap overflow-hidden justify-content-end' id='${id}' style='width: ${iconWidth}px; height: ${iconHeight}px; line-height: ${lineHeight}; font-size: ${fontSize};'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='${mapIsDark ? 'text-white' : 'text-dark'} pl-3 pr-1 rounded-pill-left rounded-none ${mapIsDark ? 'bg-dark' : 'bg-white'} overflow-hidden'\n\t\t\t\t\t\tstyle='padding-top: ${paddingTop}; padding-bottom: ${paddingBottom};'\n\t\t\t\t\t>\n\t\t\t\t\t\t<nobr>\n\t\t\t\t\t\t\t${titlePrefix} <strong>${title}</strong> ${flag}\n\t\t\t\t\t\t</nobr>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='text-white font-weight-bolder pr-2 pl-1 rounded-pill-right rounded-none'\n\t\t\t\t\t\tstyle='background-color: ${dotColor ? dotColor : ''}; padding-top: ${paddingTop}; padding-bottom: ${paddingBottom};'\n\t\t\t\t\t>\n\t\t\t\t\t\t${imageCircle}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='rounded rounded-circle ml-2 mt-1' style='width: ${imageCirlceRadius}px; height: ${imageCirlceRadius}px; background-color: ${dotColor};'>\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t</div>\n\t\t\t\t</div>\t\t\t\n\t\t\t` : `\n\t\t\t\t<div class='d-flex flex-nowrap overflow-hidden' id='${id}' style='width: ${iconWidth}px; height: ${iconHeight}px; line-height: ${lineHeight}; font-size: ${fontSize};'>\n\t\t\t\t\t<div class='rounded rounded-circle mr-2 mt-1' style='width: ${imageCirlceRadius}px; height: ${imageCirlceRadius}px; background-color: ${dotColor};'>\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='text-white font-weight-bolder pl-2 pr-1 rounded-pill-left rounded-none'\n\t\t\t\t\t\tstyle='background-color: ${dotColor ? dotColor : ''}; padding-top: ${paddingTop}; padding-bottom: ${paddingBottom};'\n\t\t\t\t\t>\n\t\t\t\t\t\t${imageCircle}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='${mapIsDark ? 'text-white' : 'text-dark'} pr-3 pl-1 rounded-pill-right rounded-none ${mapIsDark ? 'bg-dark' : 'bg-white'} overflow-hidden'\n\t\t\t\t\t\tstyle='padding-top: ${paddingTop}; padding-bottom: ${paddingBottom};'\n\t\t\t\t\t>\n\t\t\t\t\t\t<nobr>\n\t\t\t\t\t\t\t${flag} <strong>${title}</strong> ${titlePrefix}\n\t\t\t\t\t\t</nobr>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`,\n\t\t});\n\t\t// ${speed ? `${util.format(speed, 1)} km/t` : ''} ${bearing ? mu.windDirection(bearing) : ''}\n    }\n\n\tstatic getDistanceMarker({ title = '', body = '', color, textColor = '#888', borderColor = 0 }) {\n\t\tconst id = `img-${util.randomPassword()}`;\n\t\treturn new DivIcon({\n\t\t\ticonSize: [20, 20],\n\t\t\ticonAnchor: [10, 10],\n\t\t\tclassName: 'my-div-icon',\n\t\t\thtml: `<div id='${id}' class='rounded-circle bg-primary text-white text-center' style='width: 20px; height: 20px;'>\n\t\t\t\t<strong>${title}</strong><br />\n\t\t\t\t<span class='font-weight-light'>${body}</span>\n\t\t\t</div>`,\n\t\t});\n    }\n\n\t// static getMarker({ title = '', body = '', color, textColor = '#888', borderColor = 0 }) {\n\t// \tconst id = `img-${util.randomPassword()}`;\n\t// \treturn new DivIcon({\n\t// \t\ticonSize: [10, 10],\n\t// \t\ticonAnchor: [5, 5],\n\t// \t\tclassName: 'my-div-icon',\n\t// \t\thtml: `<div id='${id}' class='rounded-circle bg-primary text-white text-center' style='width: 10px; height: 10px;'>\n\t// \t\t\t<strong>${title}</strong><br />\n\t// \t\t\t<span class='font-weight-light'>${body}</span>\n\t// \t\t</div>`,\n\t// \t});\n    // }\n\tstatic getMarker({\n\t\ticon,\n\t\tbib,\n\t\trank,\n\t\tflag = '',\n\t\timage,\n\t\ttitle,\n\t\tbody,\n\t\tcolor = '#a0a0a0',\n\t\ttextColor = '#333333',\n\t\tborderColor = 0,\n\t\ticonWidth = 250,\n\t\ticonHeight = 20,\n\t\ticonAnchorX = 7,\n\t\ticonAnchorY = 7,\n\t\tdotWidth = 14,\n\t\tdotHeight = 14,\n\t\tmapChecked,\n\t}) {\n\t\tconst id = `img-${util.randomPassword()}`;\n\t\tconst { r, g, b } = util.hsl2Rgb(color, 100, 60);\n\t\tconst { r: wr, g: wg, b: wb } = util.hsl2Rgb(100 - borderColor, 100, 50);\n\n\t\tconst dotColor = mu.getRankingColor(bib || rank);\n\t\tconst mapIsDark = /dark/i.test(mapChecked);\n\n\t\tlet imageCircle = image ? `\n\t\t\t<div\n\t\t\t\tclass='rounded-circle imageRounded imageRoundedSmallIcon'\n\t\t\t\tstyle='background-image: url(\"${image}\"); background-size: cover; border: 1px ${dotColor} solid;'\n\t\t\t>\n\t\t\t\t&nbsp;\n\t\t\t</div>\n\t\t` : '';\n\t\timageCircle = bib || rank ? `\n\t\t\t<div\n\t\t\t\tclass='rounded-pill-both px-1 text-center ${dotColor ? '' : 'bg-primary'}' style='background-color: ${dotColor ? dotColor : ''}'\n\t\t\t>\n\t\t\t\t${bib || rank}\n\t\t\t</div>\n\t\t` : imageCircle;\n\t\treturn new DivIcon({\n\t\t\ticonSize: [iconWidth, iconHeight],\n\t\t\ticonAnchor: [iconAnchorX, iconAnchorY],\n\t\t\tclassName: 'my-div-icon',\n\t\t\thtml: `\n\t\t\t\t<div class='d-flex flex-nowrap' id='${id}' style='width: ${iconWidth}px; height: ${iconHeight}px; line-height: 1.1em;'>\n\t\t\t\t\t<div class='rounded rounded-circle mr-2 mt-1' style='width: ${dotWidth}px; height: ${dotHeight}px; background-color: ${color};'>\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='text-dark font-weight-bolder pl-2 pr-1 py-1 rounded-pill-left rounded-none bg-info'\n\t\t\t\t\t>\n\t\t\t\t\t\t${imageCircle}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='text-dark p-1 pr-3 rounded-pill-right rounded-none bg-info overflow-hidden'\n\t\t\t\t\t>\n\t\t\t\t\t\t<nobr>${flag} <strong>${title}</strong></nobr>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`,\n\t\t});\n    }\n\n\n\tstatic getSmallMarker({ title = '', body = '', color, textColor = '#888', borderColor = 0 }) {\n\t\tconst id = `img-${util.randomPassword()}`;\n\t\treturn new DivIcon({\n\t\t\ticonSize: [6, 6],\n\t\t\ticonAnchor: [3, 3],\n\t\t\tclassName: 'my-div-icon',\n\t\t\thtml: `<div id='${id}' class='rounded-circle bg-success text-white text-center' style='width: 5px; height: 5px;'>\n\t\t\t\t<strong>${title}</strong><br />\n\t\t\t\t<span class='font-weight-light'>${body}</span>\n\t\t\t</div>`,\n\t\t});\n    }\n\n}\n\nexport default Icons;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\n@observer\nclass Achievements extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n        };\n    }\n    \n    handleAdd = () => {\n        const { data } = this.state;\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: { ...data } });\n        this.setState({\n            data: {\n                name: '',\n                url: '',\n            }\n        });\n    };\n\n    removeLink = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { object } = this.props;\n        const { name, id } = e.target.closest('button').dataset;\n        dogStore.removeLink({\n            id: object.id,\n            name,\n            linkId: id,\n        });\n    }\n\n    render() {\n        const { showFiles = true, object = {} } = this.props;\n\n        return (\n            <div class='row'>\n                <div class='col-12 mt-3'>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!object.links || object.links.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-link' /></div>\n                                        <h3><Text id='dogs.no-links-title'>No links for this dog!</Text></h3>\n                                        <Text id='dogs.no-links-text'>You can add links to this dog. Ie. Links to Facebook page, Instagram page, blogg, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {object.links && object.links.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.createdDate, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='mr-2'>{file.url}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeLink}\n                                            data-name={file.name}\n                                            data-id={file.id}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                <div class='col-12 mt-3'>\n                    <details>\n                        <summary><Text id='dogs.link-add'>Add new link</Text></summary>\n                        <div class='form-group'>\n                            <label for='name'><Text id='dogs.link-name'>Name</Text></label>\n                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp' onInput={linkstate(this, 'data.name')} />\n                            <small id='nameHelp' class='form-text text-muted'><Text id='dogs.link-name-help'>Name of link</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='url'><Text id='dogs.link-url'>Url</Text></label>\n                            <input type='text' class='form-control' id='url' aria-describedby='urlHelp' onInput={linkstate(this, 'data.url')} />\n                            <small id='urlHelp' class='form-text text-muted'><Text id='dogs.link-url-help'>URL of link</Text></small>\n                        </div>\n                        <button class='btn btn-success' onClick={this.handleAdd}>\n                            <Text id='dogs.link-add'>Add link</Text>\n                        </button>\n                    </details>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Achievements;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distance) {\n\tif (distance < 5) {\n\t\treturn util.format(distance, 2);\n\t}\n\tif (distance < 10) {\n\t\treturn util.format(distance, 1);\n\t}\n\treturn util.format(distance, 1);\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Distance extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n\t\t\t\t\t{displayDistance(kmToMiles(value))} {smallUnit ? <><small><small><small class='ml-0 text-muted'>mi</small></small></small></> : <>mi</>}\n\t\t\t\t</nobr>\n            </>);\n        }\n\n\t\treturn (<>\n\t\t\t<nobr>\n\t            {displayDistance(value)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>km</small></small></small></> : <>km</>}\n\t\t\t</nobr>\n\t    </>);\n    }\n}\n\nexport default Distance;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nconst initialState = {};\n\n@observer\nclass Loading extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    render() {\n        const { goto, gotoTitle, routerName } = this.props;\n        return (\n            <div class='row h-100'>\n                <div class='col-12 text-center my-auto'>\n                    <div class='spinner-border text-primary' style='width: 8rem; height: 8rem;' role='status'>\n                        <span class='sr-only'><Text id='home.loading'>Loading...</Text></span>\n                    </div>\n                    <h3 class='mt-4'><Text id='home.loading'>Loading...</Text></h3>\n                    {goto && <>\n                        <a class='my-4 btn btn-primary btn-lg btn-block' native href={goto}>{gotoTitle} <i class='fas fa-angle-double-right ml-2' /></a>\n                        <small class='text-muted'>{routerName}</small>\n                    </>}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loading;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../../../components/form/images';\n\nimport mu from '../../../lib/musher-util';\n\n@observer\nclass RaceAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    commentRace = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await raceStore.commentRace({ id: race.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[race.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ race, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, race } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (<>\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={race.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentRace}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\nexport default RaceAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom(false);\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\nimport Achievements from '../../components/form/achievements';\nimport Links from '../../components/form/links';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n\n        if (!image.dataset.retry) {\n            image.dataset.retry = 0;\n        }\n        image.dataset.retry = parseInt(image.dataset.retry, 10) + 1;\n        if (image.dataset.retry > 5) {\n            return false;\n        }\n\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        dogStore.removeImage({\n            id: dog.id,\n            name: imageName,\n        });\n    }\n\n    removeFile = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = this.props;\n        const fileName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        dogStore.removeFile({\n            id: dog.id,\n            name: fileName,\n        });\n    }\n\n    render() {\n        const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField, refName, showImages = false, showFiles = true } = this.props;\n        let value = dog[field] || '';\n        let maxValue = max;\n        if (type === 'date') {\n            if (value) {\n                value = util.isoDate(dog[field], false, false, true);\n            }\n            if (max === 'today') {\n                maxValue = util.isoDate(undefined, false, false, true);\n            }\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!dog.files || dog.files.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-file' /></div>\n                                        <h3><Text id='dogs.no-files-title'>No files attached to this dog!</Text></h3>\n                                        <Text id='dogs.no-files-text'>You can upload files to this dog inside edit. These files can be of any type. Ie: Certificates, test, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {dog.files && dog.files.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.createdDate, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='font-weight-lighter mr-2'>{util.formatBytes(file.size, 1)}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeFile}\n                                            data-name={file.name}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                    <Files saved={saved} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'textarea') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea type='text' class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                        rows={10}\n                    />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (field === 'links') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Links saved={saved} stores={this.props.stores} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (field === 'achievements') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Achievements saved={saved} stores={this.props.stores} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                    {showImages && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {(!dog.images || dog.images.length === 0) && <>\n                                    <div class='text-center text-muted mb-3'>\n                                        <div class='display-1'><i class='fas fa-images' /></div>\n                                        <h3><Text id='dogs.no-images-title'>No images for this dog!</Text></h3>\n                                        <Text id='dogs.no-images-text'>You can add more images to this dog. Puppy pictures, workout pictures, lazy summer pictures, etc. All is a nice way to create a better profile for this dog.</Text>\n                                    </div>\n                                </>}\n                                {field === 'image' ? <>\n                                    {dog.image && dog.image.s3SmallLink && <div class='col-3 p-1'>\n                                        <img src={dog.image.s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={dog.image.name}\n                                        ><i class='fas fa-trash' /> Remove</button>\n                                        <span class='badge badge-success'>Main</span>\n                                    </div>}\n                                </> : <>\n                                    {dog.images && dog.images.map(img => (\n                                        <div class='col-3 p-1'>\n                                            <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                            <button class='btn btn-sm btn-link'\n                                                onClick={this.removeImage}\n                                                data-name={img.name}\n                                            ><i class='fas fa-trash' /> Remove</button>\n                                        </div>\n                                    ))}\n                                </>}\n\n                            </div>\n                        </div>\n                    </>}\n\n                    {field === 'image' ? <>\n                        <Images saved={saved} object={dog} field={field} updateField={updateField} autoOpen={false} addToImages={false} />\n                    </> : <>\n                        <Images saved={saved} object={dog} field={field} updateField={updateField} autoOpen={false} />\n                    </>}\n\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'datalist') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                    <input list={`list-${field}`} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                        // onInput={e => console.log(e)}\n                        // onChange={e => console.log(e)}\n                    />\n                    <datalist id={`list-${field}`}>\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </datalist>\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'select') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n\n                    <select type={type} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                    >\n                        <option value=''>-- Velg kjønn --</option>\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </select>\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        return (\n            <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label> {refName}\n                <input type={type} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    min={min}\n                    max={maxValue}\n                    step={step}\n                    value={value}\n                    data-id={dog.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Teams extends Component {\n    toggleType(typeId) {\n        const { dogStore } = this.props.stores;\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        if (value === null) {\n            updateField({ id: object.id, field, value, type, isNew });\n        } else if (object.teams.indexOf(value) > -1) {\n            dogStore.removeTeam({ id: object.id, team: value });\n        } else if (object.team) {\n            dogStore.addTeam({ id: object.id, team: value });\n        } else {\n            updateField({ id: object.id, field, value, type, isNew });\n        }\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { teams } = userStore;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        const { highlight } = this.props;\n\n        return (\n            <div class={`form-group mb-4 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {teams && teams.map((team, idx) => {\n                                    const isPrimary = value === team.id;\n                                    const isSecondary = object && util.isArray(object.teams) && object.teams.indexOf(team.id) > -1;\n                                    return (\n                                        <div class='col mb-0 px-0'\n                                            ref={(isPrimary || isSecondary) ? c => this.container = c : null}\n                                        >\n                                            <button\n                                                class={`btn btn-block\n            \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === teams.length ? 'rounded-pill-right': '')}\n                                                    btn${(isPrimary || isSecondary) ? '' : '-outline'}-${isSecondary ? 'info' : 'success'}\n                                                    text-nowrap overflow-hidden`}\n                                                style='text-overflow: ellipsis;'\n                                                onClick={() => this.toggleType(team.id)}\n                                            >\n                                                {object.hintTeam === team.id && <span class='float-right text-primary'><i class='fas fa-circle' /></span>}\n                                                <i class='fas fa-users mr-2' />\n                                                {team.name}\n\n                                                {highlight && highlight.indexOf(team.id) > -1 && <>\n                                                    {value === team.id ? <>\n                                                        <i class='fas fa-check float-right' />\n                                                    </> : <>\n                                                        <div class='spinner-grow text-warning float-right' role='status'>\n                                                            <span class='sr-only'>Loading...</span>\n                                                        </div>\n                                                        <i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />\n                                                    </>}\n                                                </>}\n\n                                                <small>\n                                                    {isPrimary && <span class='badge badge-pill badge-primary'>Primary</span>}\n                                                    {isSecondary && <span class='badge badge-pill badge-secondary'>Secondary</span>}\n                                                </small>\n                                            </button>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Harnesses extends Component {\n    toggleType(typeId) {\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: object.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { harnesses, user } = userStore;\n        const { language = 'en' } = user;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {harnesses && harnesses.map((harness, idx) => (\n                                    <div class='col px-0 mb-2'\n                                        ref={value === harness.id ? c => this.container = c : null}\n                                    >\n                                        <div class={`border\n                                            rounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === harnesses.length ? 'rounded-pill-right': '')}\n                                            p-2 ${value === harness.id ? 'bg-success' : ''}`}\n                                            style={`border-bottom: 3px solid ${harness.colorNonstop} !important;`}\n                                            onClick={() => this.toggleType(harness.id)}\n                                        >\n                                            {harness.lang && harness.lang[language] ? harness.lang[language] : harness.name}\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Status extends Component {\n    // toggleStatus(typeId) {\n    //     const { object, type, field, updateField, isNew } = this.props;\n    //     let value = toJS(object[field]);\n    //     if (value === typeId) {\n    //         value = 0;\n    //     } else {\n    //         value = typeId;\n    //     }\n    //     updateField({ id: object.id, field, value, type, isNew });\n    // }\n\n    toggleStatus(typeId) {\n        const { dogStore } = this.props.stores;\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = 0;\n        } else {\n            value = typeId;\n        }\n        if (value === 0) {\n            updateField({ id: object.id, field, value, type, isNew });\n        } else if (object.statuses.indexOf(value) > -1) {\n            dogStore.removeStatus({ id: object.id, status: value });\n        } else if (object.status) {\n            dogStore.addStatus({ id: object.id, status: value });\n        } else {\n            updateField({ id: object.id, field, value, type, isNew });\n        }\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { dogstatuses, user } = userStore;\n        const { language } = user;\n\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group  mb-4 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {dogstatuses && dogstatuses.map((status, idx) => {\n                                    const isPrimary = value === status.id;\n                                    const isSecondary = object && util.isArray(object.statuses) && object.statuses.indexOf(status.id) > -1;\n                                    return (\n                                        <div class='col mb-2 px-0'\n                                            ref={(isPrimary || isSecondary) ? c => this.container = c : null}\n                                        >\n                                            <button\n                                                class={`btn btn-block\n            \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === dogstatuses.length ? 'rounded-pill-right': '')}\n                                                    btn${(isPrimary || isSecondary) ? '' : '-outline'}-${isSecondary ? 'info' : 'success'}\n                                                    text-nowrap overflow-hidden`}\n                                                style='text-overflow: ellipsis;'\n                                                onClick={() => this.toggleStatus(status.id)}\n                                            >\n                                                {language && status.lang && status.lang[language] ? status.lang[language] : status.name}\n                                            </button>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Position extends Component {\n    toggleStatus(typeId) {\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: object.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { dogPositions } = userStore;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group  mb-4 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        {dogPositions && dogPositions.map(status => (\n                            <div class='offset-2 col-8 mb-2'>\n                                <div class={`border rounded rounded-pill px-3 py-1 bg-${value === status.id ? status.class || 'success' : ''}`}\n                                    onClick={() => this.toggleStatus(status.id)}\n                                    style='line-height: 1.1em; cursor: pointer; pointer-events: inherit;'\n                                >\n                                    <small>\n                                        {status.name}\n                                    </small>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass DogsEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newDog: {},\n            submenu: props.submenu || 'info',\n        };\n        this.updateTimer = {};\n    }\n\n    async loadDog(props = this.props) {\n        const { id } = props;\n\t\tconst { dogStore } = this.props.stores;\n        dogStore.cleanupMemoryDetail();\n        await dogStore.load(id, false, { addData: ['team', 'user', 'workoutSummary', 'vaccineStatuses', 'historyStatuses', 'vaccineLogStatuses', 'allDogs'] });\n    }\n\n\tresetDog() {\n\t\tthis.setState({\n            newDog: {},\n            createNew: false,\n        });\n\t}\n\n\tinsertDog = async () => {\n\t\tconst { newDog } = this.state;\n\t\tconst { dogStore } = this.props.stores;\n\t\tawait dogStore.insert({ ...newDog });\n        this.resetDog();\n        route(`/dogs/`);\n\t}\n\n    updateField = (e) => {\n        const { id, field, type, elementtype, isNew } = e.target.dataset;\n        const { value, type: fieldType, min, max } = e.target;\n        // console.log({ id, field, fieldType, type, elementtype, value, min, max });\n        if (fieldType === 'date') {\n            if (min && max) {\n                if (value >= min && value <= max) {\n                    this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n                }\n            } else {\n                this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n            }\n        } else {\n            this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n        }\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const { dogStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { dog } = dogStore;\n        if (field === 'images') {\n            if (Array.isArray(dog.images) && Array.isArray(value)) {\n                localObjectValue = [...dog.images, ...value];\n            }\n        }\n        if (field === 'files') {\n            if (Array.isArray(dog.files)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.files, ...value];\n                } else {\n                    localObjectValue = [...dog.files, value];\n                }\n            }\n        }\n        if (field === 'achievements') {\n            if (Array.isArray(dog.achievements)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.achievements, ...value];\n                } else {\n                    localObjectValue = [...dog.achievements, value];\n                }\n            }\n        }\n        if (field === 'links') {\n            if (Array.isArray(dog.links)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.links, ...value];\n                } else {\n                    localObjectValue = [...dog.links, value];\n                }\n            }\n        }\n\n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n        if (isNew) {\n            dogStore.updateObjectKeyValue('newDog', field, value);\n        } else {\n            dogStore.updateField(id, field, localObjectValue);\n            if (skipTimer) {\n                this.doUpdateField(id, field, newValue);\n            } else {\n                clearTimeout(this.updateTimer[field]);\n                this.updateTimer[field] = setTimeout(async () => {\n                    this.doUpdateField(id, field, newValue);\n                }, 500);\n            }\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { dogStore } = this.props.stores;\n        await dogStore.saveField(id, field, value);\n    }\n\n    chooseMother = (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = dogStore;\n        const dogId = parseInt(e.target.value, 10);\n        const motherDog = dogStore.findDog(dogId);\n\n        if (motherDog) {\n            this.updateFieldValue({ id: dog.id, field: 'mother', value: motherDog.id, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'motherName', value: motherDog.name, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'motherChipId', value: motherDog.chipId, skipTimer: true });\n        } else {\n            this.updateFieldValue({ id: dog.id, field: 'mother', value: null, skipTimer: true });\n        }\n    }\n\n    chooseFather = (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = dogStore;\n        const dogId = parseInt(e.target.value, 10);\n        const fatherDog = dogStore.findDog(dogId);\n\n        if (fatherDog) {\n            this.updateFieldValue({ id: dog.id, field: 'father', value: fatherDog.id, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'fatherName', value: fatherDog.name, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'fatherChipId', value: fatherDog.chipId, skipTimer: true });\n        } else {\n            this.updateFieldValue({ id: dog.id, field: 'father', value: null, skipTimer: true });\n        }\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/edit/${dog.id}/${submenu}`);\n\t}\n\n    back = () => {\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/${dog.id}`);\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\tcomponentDidMount() {\n        this.loadDog();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.id !== this.props.id) {\n            this.loadDog(nextProps);\n        }\n    }\n\n\trender() {\n        const { createNew, newDog, submenu } = this.state;\n\t\tconst { dogStore, userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\t\tconst { insertStatus, saved, dog } = dogStore;\n        const dogFemales = dogStore.findDogsByGender('female');\n        const dogMales = dogStore.findDogsByGender('male');\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        const { name } = dog;\n\n\t\treturn (<>\n            <div class='d-flex position-relative'>\n                <div class={`text-center border rounded-circle imageRounded float-right`} style={dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\");` : ''}>\n                    {!dog.image && <i class='fas fa-dog text-muted mt-3' style='font-size: 40px;' />}\n                </div>\n                <div class='flex-grow-1 pl-3'>\n                    <h5>\n                        {name}\n                        {hasBirthday && <>\n                            <i class='fas fa-birthday-cake ml-3' />\n                        </>}\n                    </h5>\n                    <span>\n                        {daysUntilBirthday < 7 && <>\n                            <span class='text-muted mr-2'>\n                                <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                            </span>\n                        </>}\n                        {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                    </span>\n                </div>\n            </div>\n\n            <div\n                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                style='overflow: auto; scroll-snap-type: x mandatory;'\n            >\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='info'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-info-circle' /> <Text id='dogs.info'>Info</Text></button>\n                    {submenu === 'info' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'status' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='status'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-thermometer' /> <Text id='dogs.status'>Status</Text></button>\n                    {submenu === 'status' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'pictures' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='pictures'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-images' /> <Text id='dogs.pictures'>Pictures</Text></button>\n                    {submenu === 'pictures' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='team'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-users' /> <Text id='dogs.team'>Team</Text></button>\n                    {submenu === 'team' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'relations' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='relations'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-project-diagram' /> <Text id='dogs.relations'>Relations</Text></button>\n                    {submenu === 'relations' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'achievements' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='achievements'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-clock' /> <Text id='dogs.achievements'>Achievements</Text></button>\n                    {submenu === 'achievements' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'links' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='links'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-link' /> <Text id='dogs.links'>Links</Text></button>\n                    {submenu === 'links' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'advanced' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='advanced'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-cogs' /> <Text id='dogs.advanced'>Advanced</Text></button>\n                    {submenu === 'advanced' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n            </div>\n\n            <div\n                class='w-100 overflow-auto position-relative'\n                style='max-height: 50vh;'\n            >\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\n                    {submenu === 'info' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='name'\n                                title={<Text id='dogs.full-name'>Fullt navn</Text>}\n                                help={<Text id='dogs.full-name-help'>Fullt navn på hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='shortname'\n                                title={<Text id='dogs.short-name'>Kallenavn</Text>}\n                                help={<Text id='dogs.short-name-help'>Kallenavnet på hunden. Hva roper du på innkalling?</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='gender' type='select'\n                                datalist={[\n                                    ['male', <Text id='dogs.gender-male'>Male</Text>],\n                                    ['female', <Text id='dogs.gender-female'>Female</Text>]\n                                ]}\n                                title={<Text id='dogs.gender'>Kjønn</Text>}\n                                help={<Text id='dogs.gender-help'>Kjønn på hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='chipId'\n                                title={<Text id='dogs.chip-id'>Chip ID</Text>}\n                                help={<Text id='dogs.chip-id-help'>Chip ID på hunden. Står ofte i vetrinærhåndbok eller passet.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='birth' type='date' min='2000-01-01' max='today'\n                                title={<Text id='dogs.birth'>Fødselsdato</Text>}\n                                help={<Text id='dogs.birth-help'>Fødselsdato på hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Harnesses stores={this.props.stores} saved={saved} object={dog} type='number' field='harness'\n                                title={<Text id='dogs.harness-size'>Selestørrelse</Text>}\n                                help={<Text id='dogs.harness-size-help'>Sele til hunden</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                            <Input saved={saved} dog={dog} field='description' icon='fas fa-paragraph' type='textarea'\n                                title={<Text id='dogs.description'>Beskrivelse</Text>}\n                                help={<Text id='dogs.description-help'>Beskrivelse av hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n\n                            {/* <div class='mt-5 pt-5'>\n                                <Input saved={saved} dog={dog} field='deceased' type='date' min='2000-01-01' max='today'\n                                    title={<Text id='dogs.deceased'>Død</Text>}\n                                    help={<Text id='dogs.deceased-help'>Dødsdato for hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n                            </div> */}\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'status' && <>\n                        <Localizer>\n                            <Status stores={this.props.stores} saved={saved} object={dog} type='number' field='status'\n                                title={<Text id='dogs.status'>Status</Text>}\n                                help={<Text id='dogs.status-help'>Status til hunden</Text>}\n                                updateField={this.updateFieldValue} />\n                            <Input saved={saved} dog={dog} field='specialNeeds'\n                                title={<Text id='dogs.special-needs'>Spesielle behov</Text>}\n                                help={<Text id='dogs.special-needs-help'>Har hunden spesielle behov? Trenger ekstra mat, utstyr eller annet? Eks: \"Ekstra fett\", \"Husk ulveklobandasje\", etc.</Text>}\n                                onInput={this.updateField} />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'pictures' && <>\n                        <Localizer>\n                            {/* <Input saved={saved} dog={dog} field='imageOther' type='image' icon='fas fa-camera'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.photo'>Bilde</Text>}\n                                help={<Text id='dogs.photo-help'>Bilder av hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                                showImages={true}\n                            /> */}\n                            <Input saved={saved} dog={dog} field='image' type='image' icon='fas fa-portrait'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.profile-photo'>Profilbilde</Text>}\n                                help={<Text id='dogs.profile-photo-help'>Profilbilde av hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                                showImages={true}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'team' && <>\n                        <Localizer>\n                            <Teams stores={this.props.stores} saved={saved} object={dog} type='number' field='team'\n                                title={<Text id='dogs.team'>Team</Text>}\n                                help={<Text id='dogs.team-help'>Team som hunden er på.</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                            <Position stores={this.props.stores} saved={saved} object={dog} type='number' field='position'\n                                title={<Text id='dogs.position'>Plass i spannet</Text>}\n                                help={<Text id='dogs.position-help'>Foretrukket plass i spannet.</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'relations' && <>\n                        <h5 class='mt-5'><Text id='dogs.mother'>Mor</Text></h5>\n                        <select class='form-control' aria-describedby='fatherHelp'\n                            value={dog.mother}\n                            onInput={this.chooseMother}\n                        >\n                            <option value=''>-- <Text id='dogs.choose-mother'>Velg blant dine hunder</Text> --</option>\n                            {dogFemales && dogFemales.map(d => <option value={d.id}>{d.name} - {util.age(d.birth, d.deceased)}</option>)}\n                        </select>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='motherName' type='text'\n                                title={<Text id='dogs.mother-name'>Navn på mor</Text>}\n                                help={<Text id='dogs.mother-name-help'>Navn på moren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='motherChipId' type='text'\n                                title={<Text id='dogs.mother-chipid'>Chip ID på mor</Text>}\n                                help={<Text id='dogs.mother-chipid-help'>Chip ID til moren til denne hunden. Dersom hunden finnes blant dine hunder, så vil den bli koblet sammen.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='motherComment'\n                                title={<Text id='dogs.mother-comment'>Kommentar til mor</Text>}\n                                help={<Text id='dogs.mother-comment-help'>Kommentar til moren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                        </Localizer>\n\n                        <h5 class='mt-5'><Text id='dogs.father'>Far</Text></h5>\n                        <select class='form-control' aria-describedby='fatherHelp'\n                            value={dog.father}\n                            onInput={this.chooseFather}\n                        >\n                            <option value=''>-- <Text id='dogs.choose-father'>Velg blant dine hunder</Text> --</option>\n                            {dogMales && dogMales.map(d => <option value={d.id}>{d.name} - {util.age(d.birth, d.deceased)}</option>)}\n                        </select>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='fatherName' type='text'\n                                title={<Text id='dogs.father-name'>Navn på far</Text>}\n                                help={<Text id='dogs.father-name-help'>Navn på faren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='fatherChipId' type='text'\n                                title={<Text id='dogs.father-chipid'>Chip ID på far</Text>}\n                                help={<Text id='dogs.father-chipid-help'>Chip ID til faren til denne hunden. Dersom hunden finnes blant dine hunder, så vil den bli koblet sammen.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='fatherComment'\n                                title={<Text id='dogs.father-comment'>Kommentar til far</Text>}\n                                help={<Text id='dogs.father-comment-help'>Kommentar til faren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'links' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='links' type='text' icon='fas fa-link'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.links'>Linker</Text>}\n                                help={<Text id='dogs.links-help'>Linker til denne hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'achievements' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='achievements' type='text' icon='fas fa-clock'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.achievements'>Bragder</Text>}\n                                help={<Text id='dogs.achievements-help'>Bragder til denne hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'advanced' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='files' type='file' icon='fas fa-file'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.files'>Files</Text>}\n                                help={<Text id='dogs.files-help'>Filer til denne hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                </div>\n\n\t\t\t</div>\n\t\t</>);\n\t}\n}\n\nexport default DogsEdit;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pointerCursor\":\"pointerCursor__2Gpay\",\"marker-cluster-custom\":\"marker-cluster-custom__1z-5y\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddImage: false,\n    showTeamChange: false,\n    showChangeVisibility: false,\n    showChangeType: false,\n    sendButtonEnabled: true,\n};\n\n@observer\nclass StoryAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            story: {\n                type: 1,\n                title: '',\n                body: '',\n                images: [],\n                public: 1,\n                urlText: '',\n                url: '',\n                currency: '',\n                price: 0,\n                code: '',\n                country: '',\n                region: '',\n                startDate: '',\n                endDate: '',\n            },\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    addStory = async () => {\n        const { story = {}, showAddImage, sendButtonEnabled } = this.state;\n        const { callback = () => {}, hashTags = [], postfix, topic = `team-${story.team}` } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        if (!sendButtonEnabled) {\n            return false;\n        }\n\n        if (!story.body) {\n            return false;\n        }\n        this.setState({ sendButtonEnabled: false });\n\n        let body = story.body;\n        if (postfix) {\n            body += `\\n\\n${postfix}`;\n        }\n        if (hashTags && hashTags.length > 0) {\n            body += `\\n\\n${hashTags.map(tag => `#${tag}`).join(' ')}`;\n        }\n\n\t\tconst response = await storyStore.insert({\n            type: story.type,\n            title: story.title,\n            body,\n            pinned: story.pinned,\n            images: story.images,\n            public: story.public ? 1 : 0,\n            team: story.team,\n            urlText: story.urlText,\n            url: story.url,\n            currency: story.currency,\n            price: story.price,\n            code: story.code,\n            country: story.country,\n            region: story.region,\n            startDate: story.startDate,\n            endDate: story.endDate,\n            topic,\n        });\n\t\tif (response && response.status === 201) {\n            await storyStore.loadPublicFeed({ hashtags: hashTags });\n            this.setState({\n                story: {\n                    type: 1,\n                    title: '',\n                    body: '',\n                    pinned: null,\n                    images: [],\n                    public: 1,\n                    urlText: '',\n                    url: '',\n                    currency: '',\n                    price: null,\n                    code: '',\n                    country: '',\n                    region: '',\n                    startDate: null,\n                    endDate: null,\n                },\n            }, () => {\n                mu.resizeTextarea(this.inputRef['newStoryBody']);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback(response.data);\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { story } = this.state;\n        story.images.push(...value);\n        this.setState({ story });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    changeVisibility = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changePinned = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changeType = () => {\n        const { showChangeType } = this.state;\n        this.setState({\n            showChangeType: !showChangeType,\n        });\n    }\n\n    toggleTeamChange = () => {\n        const { showTeamChange } = this.state;\n        this.setState({\n            showTeamChange: !showTeamChange,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    setPublicTeam = () => {\n        const { userStore } = this.props.stores;\n        const publicTeams = userStore.findPublicTeams();\n        if (util.isArray(publicTeams) && publicTeams.length > 0) {\n            const { story } = this.state;\n            story.team = publicTeams[0].id;\n            this.setState({ story });\n        }\n    }\n\n    setFocus = (e) => {\n        this.setState({ hasFocus: true });\n        mu.resizeTextarea(e.target);\n    }\n\n    removeFocus = (e) => {\n        this.setState({ hasFocus: false });\n    }\n\n    componentDidMount() {\n        this.setPublicTeam();\n\t}\n\n    render() {\n        const { col = 12, offset = 0, hashTags = [] } = this.props;\n        const { story = {}, showAddImage, showTeamChange, showChangeVisibility, showChangeType, sendButtonEnabled, hasFocus } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { user = {}, isAdmin } = userStore;\n        // const team = userStore.findTeam(story.team || user.team, true) || {};\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        let userImage = user.image || (user.images ? user.images[0] : undefined);\n        if (story.team) {\n            const teamId = parseInt(story.team, 10);\n            const team = userStore.findTeam(teamId, true);\n            userImage = team.image || (team.images ? team.images[0] : undefined);\n        }\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100 px-0'>\n                <div class='row'>\n\n                    <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 rounded rounded-lg pt-3 pb-1 bg-${darkmode ? 'black' : 'white'} shadow-sm mb-1`}>\n                        <div class='d-flex mb-0 position-relative w-100'>\n                            <div class='position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall pointerCursor`}\n                                    style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                                    onClick={this.toggleTeamChange}\n                                >\n                                    {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='position-absolute' style='top: 16px; right: 0px;'>\n                                    <small class='text-white' style='font-size: 1.5em;'>\n                                        <i class='fas fa-caret-down pointerCursor' onClick={this.toggleTeamChange} />\n                                    </small>\n                                </div>\n                            </div>\n                            <div class='col pl-3 pr-0' style='line-height: 1.2em;'>\n                                <div class='d-flex bd-highlight'>\n                                    <div class='p-0 w-100 bd-highlight'>\n                                        <label class='sr-only' for='inlineFormInput'><Text id='story.body'>Story</Text></label>\n                                        <div class='border rounded rounded-lg position-relative'>\n                                            <Localizer>\n                                                <textarea\n                                                    class='form-control-plaintext px-2'\n                                                    type='text'\n                                                    placeholder={<Text id='story.write-body'>Hva tenker du på?..</Text>}\n                                                    onInput={linkState(this, 'story.body')}\n                                                    onKeyUp={mu.resizeTextarea}\n                                                    onFocus={this.setFocus}\n                                                    style='height: 2.3em;'\n                                                    value={story.body}\n                                                    ref={c => this.inputRef['newStoryBody'] = c}\n                                                />\n                                            </Localizer>\n                                            {hasFocus && <div class='position-absolute' style='bottom: 8px; right: 10px; font-size: 1.2em;'>\n                                                <i class='fas fa-image pointerCursor'\n                                                    data-id={story.id}\n                                                    onClick={this.addImage}\n                                                />\n                                                <i class={`fas fa-${story.public === 1 ? 'globe-europe' : 'users'} pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeVisibility}\n                                                />\n                                                {isAdmin && <i class={`fas fa-cog pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeType}\n                                                />}\n                                            </div>}\n                                        </div>\n                                        {hashTags && hashTags.length > 0 && <>\n                                            {hashTags.map(tag => <>\n                                                <span class='badge badge-secondary mr-2 my-1'>\n                                                    <a href={`/stories/tag/${tag}`} class='text-white'>#{tag}</a>\n                                                </span>\n                                            </>)}\n                                        </>}\n                                    </div>\n                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight pt-auto'>\n                                        <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} ml-1`} disabled={!sendButtonEnabled}\n                                            onClick={this.addStory}\n                                        ><i class='fas fa-paper-plane' /></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class='row'>\n                                {showTeamChange && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.team')}\n                                                    onChange={this.toggleTeamChange}\n                                                >\n                                                    <option value=''>-- <Text id='story.team-choose'>Velg team</Text> --</option>\n                                                    {util.isArray(user.teams) && user.teams.map((teamId) => {\n                                                        const team = userStore.findTeam(teamId, true);\n                                                        if (team && team.public) {\n                                                            return (<option value={team.id} selected={story.team == team.id ? 'selected' : ''}>{team.name}</option>);\n                                                        }\n                                                        return '';\n                                                    })}\n                                                    \n                                                    {!user.teams && <>\n                                                        <option value=''>No public teams</option>\n                                                    </>}\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeVisibility && <>\n                                    {isAdmin && <>\n                                        <div class='col-12 text-center mt-2'>\n                                            <div class='form-group'>\n                                                <small>\n                                                    <label for='pinned'>Pinned to top:</label><input id='pinned' type='checkbox' onInput={linkState(this, 'story.pinned')} value={1} checked={story.pinned ? 1 : 0} />\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </>}\n\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.public')}\n                                                    value={story.public}\n                                                    onChange={this.changeVisibility}\n                                                >\n                                                    <option value={0} selected={story.public == 0 ? 'selected' : ''}>👥 <Text id='story.visibility-followers'>Kun synlig for de som følger deg.</Text></option>\n                                                    <option value={1} selected={story.public == 1 ? 'selected' : ''}>🌍 <Text id='story.visibility-public'>Synlig for alle som bruker appen.</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeType && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.type')}\n                                                    value={story.type}\n                                                    onChange={this.changeType}\n                                                >\n                                                <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                                    <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                                    <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                                    <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showAddImage && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='container-fluid'>\n                                            <div class='row'>\n                                                {util.isArray(story.images) && story.images.map(img => (\n                                                    <div class='col-3 p-1'>\n                                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                        <button class='btn btn-sm btn-link'\n                                                            onClick={this.removeImage}\n                                                            data-name={img.name}\n                                                        ><i class='fas fa-trash' /> Del</button>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                        <Images object={story} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                                    </div>\n                                </>}\n\n                                {story.type > 1 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url-text'>URL text</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='urlText'\n                                                    onInput={linkState(this, 'story.urlText')}\n                                                    value={story.urlText}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url'>URL</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='url'\n                                                    onInput={linkState(this, 'story.url')}\n                                                    value={story.url}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n\n                                {story.type == 2 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.code'>Code</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='code'\n                                                    onInput={linkState(this, 'story.code')}\n                                                    value={story.code}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.region'>Region</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='region'\n                                                    onInput={linkState(this, 'story.region')}\n                                                    value={story.region}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.country'>Country</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='country'\n                                                    onInput={linkState(this, 'story.country')}\n                                                    value={story.country}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-4'>\n                                        <label><Text id='story.currency'>Currency</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='currency'\n                                                    onInput={linkState(this, 'story.currency')}\n                                                    value={story.currency}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-8'>\n                                        <label><Text id='story.price'>Price</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='price'\n                                                    onInput={linkState(this, 'story.price')}\n                                                    value={story.price}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport StoryReplyComment from '../../components/story/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n    showOriginal: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass StoryComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            showAllComments: props.showAllComments,\n        };\n        this.inputRef = {};\n    }\n\n    addLikeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.closest('.commentContainer').dataset.id;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeComment } = this.state;\n        likeComment[commentId] = true;\n        this.setState({ likeComment });\n        setTimeout(() => {\n            const { likeComment } = this.state;\n            delete likeComment[commentId];\n            this.setState({ likeComment });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryComment({ id: story.id, commentId });\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', story, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n        const replyId = e.target.closest('.replyContainer').dataset.id;\n        const commentId = e.target.closest('.replyContainer').dataset.comment;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeReply } = this.state;\n        likeReply[replyId] = true;\n        this.setState({ likeReply });\n        setTimeout(() => {\n            const { likeReply } = this.state;\n            delete likeReply[replyId];\n            this.setState({ likeReply });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryCommentReply({ id: story.id, replyId, commentId });\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', story, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id, comment: commentEditText } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n\t\t\tshowEdit,\n            showMenu: {},\n            commentEditText,\n\t\t});\n\t}\n\n    toggleDeleteComment = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteComment = {} } = this.state;\n        showDeleteComment[id] = !showDeleteComment[id];\n\t\tthis.setState({\n\t\t\tshowDeleteComment,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    deleteComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentStory({ id: story.id, commentId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentReplyStory({ id: story.id, commentId, replyId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\n    }\n\n    saveComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentStory({ id: story.id, commentId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    saveCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentReplyStory({ id: story.id, commentId, replyId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await storyStore.translateCommentReply({ commentid, replyid, story, user });\n        } else {\n            translatedText[key] = await storyStore.translateComment({ commentid, story, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showMenu = {}, showEdit = {},\n            showDeleteComment = {}, commentEditText, likeComment, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { story, callback = () => {}, initCall = () => {}, compact = false } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (story.comments) {\n            totalComments = story.comments.length;\n            if (showAllComments) {\n                filteredComments = story.comments;\n            } else {\n                // filteredComments = story.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = story.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {story && util.isArray(filteredComments) && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                    const translation = storyStore.getCommentTranslations({\n                        story,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg position-relative'>\n\n                                        {currentUser.id === user.id && <>\n                                            <span class='float-right font-weight-lighter text-muted'>\n                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={comment.id} />\n                                            </span>\n                                        </>}\n                                        {showMenu[comment.id] && <>\n                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={comment.id} data-comment={comment.comment}><i class='fas fa-edit' /> Edit</button>\n                                                <hr />\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                            </div>\n                                        </>}\n\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                    {teams && teams.length > 0 && <>\n                                                        <span class='font-weight-lighter text-muted ml-1'>\n                                                            {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                - <a href={`/teams/public/${t.uuidv4}`}>{t.name}</a>\n                                                            </>)}\n                                                        </span>\n                                                    </>}\n                                                </h5>\n\n\n                                                {showEdit[comment.id] ? <>\n                                                    <div class='d-flex bd-highlight'>\n                                                        <div class='p-0 w-100 bd-highlight'>\n                                                            <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                            <div class='border rounded rounded-lg position-relative'>\n                                                                <Localizer>\n                                                                    <textarea\n                                                                        class='form-control-plaintext px-2'\n                                                                        type='text'\n                                                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                        onInput={linkState(this, 'commentEditText')}\n                                                                        onKeyUp={mu.resizeTextarea}\n                                                                        onFocus={mu.resizeTextarea}\n                                                                        style='height: 2.3em;'\n                                                                        value={commentEditText}\n                                                                    />\n                                                                </Localizer>\n                                                           </div>\n                                                        </div>\n                                                        <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                            <button type='button' class='btn btn-primary mb-2'\n                                                                onClick={this.saveComment}\n                                                                data-id={comment.id}\n                                                            ><i class='fas fa-paper-plane' /></button>\n                                                        </div>\n                                                    </div>\n                                                </> : <>\n                                                    <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </>}\n                                                {showDeleteComment[comment.id] && <div class='clearfix mt-3 mb-3'>\n                                                    <button class='btn btn-danger float-left' onClick={this.deleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                </div>}\n\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row position-relative'>\n                                                    <div\n                                                        class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 60vh;`}\n                                                        onDblclick={this.addLikeComment}\n                                                        data-id={comment.id}\n                                                    >\n                                                        <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                    {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                        <i class='fas fa-heart likeStory' />\n                                                    </span>}\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {util.isArray(images) && images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`commentContainer btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.addLikeComment}\n                                            data-id={comment.id}\n                                            disabled={hasLikedComment}\n                                        >\n                                            {hasLikedComment ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && util.isArray(filteredReplises) && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = mu.displayNameShort(user);\n                                    const displayName = mu.displayName(user);\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n                                    const { currentLocationGeocode = {} } = reply;\n\n                                    const replyTranslation = storyStore.getCommentReplyTranslations({\n                                        story,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div\n                                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg position-relative'>\n                                                    {currentUser.id === user.id && <>\n                                                            <span class='float-right font-weight-lighter text-muted'>\n                                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={reply.id} />\n                                                            </span>\n                                                        </>}\n                                                        {showMenu[reply.id] && <>\n                                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={reply.id} data-comment={reply.comment}><i class='fas fa-edit' /> Edit</button>\n                                                                <hr />\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                            </div>\n                                                        </>}\n\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                                {displayName}\n                                                                {teams && teams.length > 0 && <>\n                                                                    <span class='font-weight-lighter text-muted ml-2'>\n                                                                        {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                            - <a href={`/teams/public/${t.uuidv4}`} class='mr-2'> {t.name}</a>\n                                                                        </>)}\n                                                                    </span>\n                                                                </>}\n                                                            </h5>\n\n\n                                                            {showEdit[reply.id] ? <>\n                                                                <div class='d-flex bd-highlight'>\n                                                                    <div class='p-0 w-100 bd-highlight'>\n                                                                        <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                                        <div class='border rounded rounded-lg position-relative'>\n                                                                            <Localizer>\n                                                                                <textarea\n                                                                                    class='form-control-plaintext px-2'\n                                                                                    type='text'\n                                                                                    placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                                    onInput={linkState(this, 'commentEditText')}\n                                                                                    onKeyUp={mu.resizeTextarea}\n                                                                                    onFocus={mu.resizeTextarea}\n                                                                                    style='height: 2.3em;'\n                                                                                    value={commentEditText}\n                                                                                />\n                                                                            </Localizer>\n                                                                    </div>\n                                                                    </div>\n                                                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                                        <button type='button' class='btn btn-primary mb-2'\n                                                                            onClick={this.saveCommentReply}\n                                                                            data-commentid={comment.id}\n                                                                            data-id={reply.id}\n                                                                        ><i class='fas fa-paper-plane' /></button>\n                                                                    </div>\n                                                                </div>\n                                                            </> : <>\n                                                                <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                            </>}\n                                                            {showDeleteComment[reply.id] && <div class='clearfix mt-3 mb-3'>\n                                                                <button class='btn btn-danger float-left' onClick={this.deleteCommentReply} data-id={reply.id} data-commentid={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                            </div>}\n\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`replyContainer btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                            disabled={hasLikedReply}\n                                                        >\n                                                            {hasLikedReply ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                            {reply.updatedDate && <>\n                                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(reply.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                                            </>}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <StoryReplyComment stores={this.props.stores} story={story}\n                                    initCall={initCall}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                    key={`story-commentreply-${comment.id}`}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default StoryComments;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__1mJGJ\",\"hoverElement\":\"hoverElement__axh3O\",\"hoverelementhide\":\"hoverelementhide__1k_qH\",\"progress-bar-vertical\":\"progress-bar-vertical__1B2sC\",\"progress-bar\":\"progress-bar__pnsVj\",\"dragged\":\"dragged__QXO46\",\"over\":\"over__1re3x\",\"list\":\"list__q_emZ\"};","import { h, Component } from 'preact';\nimport { useEffect } from 'preact/hooks';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\n\nimport RaceTracking from '../../components/public/raceTracking.js';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true, false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst initialState = {\n    isLoading: false,\n};\n\n@observer\nclass AppRaceDetailTracking extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    back = () => {\n        // const { history } = this.props.stores;\n        // history.goBack();\n        const { raceid, path } = this.props;\n        route(`/app-races/${raceid}`);\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { user = {}, teams = [], isAdmin } = userStore;\n\n        const { raceid } = this.props;\n\n        return (<>\n            <div class='container-fluid position-relative p-0' style={`margin-top: 0; height: calc(100vh - ${MARGIN_TOP}); z-index: 9999;`}>\n                <RaceTracking stores={this.props.stores} raceid={raceid} />\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailTracking;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { toJS } from 'mobx'\n\nimport Map from '../../components/map';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass Trackmap extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n\tasync loadTrack(props = this.props) {\n        const { showHeatmap, raceid, allTeamIds } = props;\n        const { adminStore, trackStore, raceStore, appState } = props.stores;\n        const { selectedClassIds = [] } = appState;\n\n\t\t// this.setState({ isLoading: true });\n        if (showHeatmap) {\n            await adminStore.getPublicHeatmap(raceid, allTeamIds);\n        }\n\n        // const classId = \n        const trackIds = raceStore.getTrackIdsByClass(selectedClassIds[0]);\n\n        if (trackIds && trackIds.length > 0) {\n            trackStore.cleanupMemory();\n            await trackStore.loadPublic({ query: { idin: trackIds } });\n        }\n\t\t// this.setState({ isLoading: false });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadTrack();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.selectedClassIds !== nextProps.selectedClassIds) {\n            this.loadTrack(nextProps);\n        }\n\t}\n\n    render() {\n        const { trackStore, raceStore, appState, adminStore } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const {\n            waypoints, waypoints2, waypoints3, zoomToMarkers, mapid,\n            fullscreenMap,\n            onMarkerClick, onMarker2Click, onMarker3Click,\n            showHeatmap, showTracks,\n            showDistanceMarkers, groupWaypoints,\n            focusOnMushers, geoJSONs,\n        } = this.props;\n        const { tracks } = trackStore;\n        const { publicHeatmap: heatmap } = adminStore;\n        const track = tracks[0];\n        const trackIds = raceStore.getTrackIdsByClass();\n\n        // const heatmap = publicHeatmap.slice(0, 10);\n        // const heatmap = [[60.4433,8.8996,14],[61.384,9.1152,14],[60.42,8.9422,15]];\n\n        return (\n            <>\n                {/* heatmap: {`map-${mapid}`}<br /> */}\n                {/* {JSON.stringify(showTracks && track && track.gpx ? track.gpx.geoJSON : null)} */}\n                {/* {JSON.stringify(geoJSONs)} */}\n                <Map\n                    stores={this.props.stores}\n                    // mapId={mapid}\n                    heatmap={showHeatmap ? heatmap : null}\n                    track={track}\n                    geojson={showTracks && track && track.gpx ? track.gpx.geoJSON : null}\n                    gpxInfo={showTracks && track && (track.gpx || track.gpxInfo) ? (track.gpxInfo || track.gpx.gpxInfo) : null}\n                    minZoom={2}\n                    maxZoom={18}\n                    height={600}\n                    waypoints={waypoints}\n                    waypoints2={waypoints2}\n                    waypoints3={waypoints3}\n                    geoJSONs={geoJSONs}\n                    zoomToMarkers={zoomToMarkers}\n                    fullscreenMap={fullscreenMap}\n                    onMarkerClick={onMarkerClick}\n                    onMarker2Click={onMarker2Click}\n                    onMarker3Click={onMarker3Click}\n                    showTrackProfile={false}\n                    distanceMarkerSteps={'long'}\n                    showDistanceMarkers={showDistanceMarkers}\n                    groupWaypoints={groupWaypoints}\n                    focusOnMushers={focusOnMushers}\n                    showFullscreenControl={false}\n                    // key={`map-${mapid}-${util.getNestedValue(track, 'id')}-${trackIds.join('-')}-${selectedClassIds.join('-')}`}\n                    // key={`map-${util.getNestedValue(track, 'id')}`}\n                />\n            </>\n        );\n    }\n}\n\nexport default Trackmap;\n","import { h, Component, createRef, useEffect } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport Markdown from 'preact-markdown';\n\nimport ReactLeafletMultiOptionsPolyline from 'react-leaflet-multi-options-polyline';\n\nimport style from './style.css';\n\nimport mu from '../../lib/musher-util';\n\nconst MARKDOWN_OPTIONS = {\n\tpedantic: false,\n\tgfm: true,\n\tbreaks: true,\n\tsanitize: false,\n\tsmartLists: true,\n\tsmartypants: true,\n\txhtml: true,\n};\n\nimport {\n\tCircle,\n\tFeatureGroup,\n\tLayerGroup,\n\tLayersControl,\n\tMap,\n\tMarker,\n\tPopup,\n\tRectangle,\n\tTileLayer,\n\tVideoOverlay,\n\tImageOverlay,\n\tGeoJSON,\n\tWMSTileLayer,\n    useLeaflet,\n\tScaleControl,\n\tPolyline,\n} from 'react-leaflet';\n\nimport HeatmapLayer from 'react-leaflet-heatmap-layer';\n\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport '../../../node_modules/react-leaflet-markercluster/dist/styles.min.css';\n\n// import FullscreenControl from 'react-leaflet-fullscreen';\n// import '../../../node_modules/react-leaflet-fullscreen/dist/styles.css';\n\nimport Control from 'react-leaflet-control';\n\nconst { BaseLayer, Overlay } = LayersControl;\n\nimport icons from '../../lib/icons';\nimport '../../../node_modules/leaflet/dist/leaflet.css';\n\nimport L from 'leaflet';\n\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('../../../node_modules/leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('../../../node_modules/leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('../../../node_modules/leaflet/dist/images/marker-shadow.png')\n});\n\nconst createClusterCustomIcon = function (cluster) {\n  return L.divIcon({\n    html: `<span>${cluster.getChildCount()}</span>`,\n    className: style['marker-cluster-custom'],\n    iconSize: L.point(40, 40, true),\n  });\n};\n\nfunction normalizeRange(val, min, max, newMin, newMax) {\n    return newMin + (val - min) * (newMax - newMin) / (max - min);\n}\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\nconst API_OPEN_WEATHERMAP_KEY = '75cd92317c98db6873031cd2d8de75c5';\nconst INCLINE_STEP = 1;\nconst MAX_HSL_COLOR = 230;\n\n@observer\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasLocation: false,\n\t\t\tvisibleLayers: {\n\t\t\t\tWindspeed: false,\n\t\t\t},\n\t\t\tmapCenter: [],\n\t\t\tmapZoom: 10,\n\t\t\trangeSteps: INCLINE_STEP,\n\t\t\tmaxHslColor: MAX_HSL_COLOR,\n\t\t\thasZoomedToMarkers: false,\n\t\t};\n\t\t// const { waypointStore } = this.props.stores;\n\t\t// waypointStore.load();\n\t}\n\n\tmapRef = createRef();\n\tpolyRef = createRef();\n\n\thandleViewportChanged = (e) => {\n\t\t// console.log('onViewportChanged', e);\n\t\tthis.setState({\n\t\t\tmapCenter: e.center,\n\t\t\tmapZoom: e.zoom,\n\t\t})\n\t}\n\n\thandleLocationFound = (e) => {\n\t\tif (e.latlng) {\n\t\t\tthis.setState({\n\t\t\t\thasLocation: true,\n\t\t\t\tlatlng: e.latlng,\n\t\t\t});\n\t\t}\n\t}\n\n\tgeoJSONStyle() {\n\t\treturn {\n\t\t\tcolor: '#0347A2',\n\t\t\tweight: 5,\n\t\t\tfillOpacity: 0.5,\n\t\t\tfillColor: '#0347A2',\n\t\t}\n\t}\n\n\tgeoJSONStyleList(idx) {\n\t\tconst color = mu.getRankingColor(idx + 1);\n\t\treturn {\n\t\t\tcolor,\n\t\t\tweight: 3,\n\t\t\tfillOpacity: 0.5,\n\t\t\tfillColor: color,\n\t\t}\n\t}\n\n\tonEachFeature = (feature, layer) => {\n\t\tconst { gpxInfo = {} } = this.props;\n\t\tconst popupContent = `<Popup>\n\t\t\t<h5>Details</h5>\n\t\t\t<ul>\n\t\t\t\t<li>Total distance: ${util.format(gpxInfo.totalDistance, 2)} km</li>\n\t\t\t\t<li>Max speed: ${util.format(gpxInfo.maxSpeed, 1)} km/t</li>\n\t\t\t\t<li>Avg speed: ${util.format(gpxInfo.avgSpeed, 1)} km/t</li>\n\t\t\t\t<li>Ascent: ${util.format(gpxInfo.ascent || gpxInfo.calculatedAscend, 0)} m</li>\n\t\t\t\t<li>Descent: ${util.format(gpxInfo.decent || gpxInfo.calculatedDescend, 0)} m</li>\n\t\t\t\t<li>Duration: ${util.secToHms(gpxInfo.duration)}</li>\n\t\t\t</ul>\n\t\t</Popup>`\n\t\tlayer.bindPopup(popupContent)\n\t}\n\n\thandleClick = (e) => {\n\t\tconst { appState } = this.props.stores;\n\t\tappState.setLatlng(e.latlng);\n\t\t// this.setState({ currentPos: e.latlng });\n\t}\n\n\tzoomToGeoJSON = (e) => {\n\t\ttry {\n\t\t\tif (e.target) {\n\t\t\t\tlet bounds = e.target.getBounds();\n\n\t\t\t\tif (bounds && bounds._northEast) {\n\t\t\t\t\tthis.setState({ bounds });\n\t\t\t\t}\n\t\t\t\t// const map = this.mapRef.leafletElement;  //get native Map instance\n\t\t\t\t// map.fitBounds(bounds);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t\t// if (this.geoJSONRef.leafletElement) {\n\t\t// console.log(e);\n\t\t// \tconst map = this.mapRef.leafletElement;  //get native Map instance\n\t\t// \tconst group = this.geoJSONRef.leafletElement; //get native featureGroup instance\n\t\t// \tmap.fitBounds(group.getBounds());\n\t\t// }\n\t}\n\n\tzoomToMarkers = (markers = [], force = false) => {\n\t\tconst { hasZoomedToMarkers } = this.state;\n\t\ttry {\n\t\t\t// console.log('zoomToMarkers', hasZoomedToMarkers, { markers });\n\t\t\tif ((force || !hasZoomedToMarkers) && markers.length && markers.length > 0) {\n\t\t\t\tconst map = this.mapRef.current.leafletElement;  //get native Map instance\n\t\t\t\tconst markerBounds = L.latLngBounds([]);\n\t\t\t\tmarkers.forEach(marker => {\n\t// console.log({ marker });\n\t\t\t\t\tmarkerBounds.extend([marker.lat, marker.lng])\n\t\t\t\t});\n\t// console.log('map.fitBounds');\n\t\t\t\tmap.fitBounds(markerBounds);\n\t\t\t\tthis.setState({ hasZoomedToMarkers: true });\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\tzoomToAllMarkers = () => {\n\t\tconst { waypoints = [] } = this.props;\n\t\tconst markers = waypoints;\n\t\tthis.zoomToMarkers(markers, true);\n\t}\n\n\tzoomToFavoriteMarkers = () => {\n\t\tconst { zoomToMarkers = [], waypoints = [] } = this.props;\n\t\tconst markers = zoomToMarkers.length > 0 ? zoomToMarkers : waypoints;\n\t\tthis.zoomToMarkers(markers, true);\n\t}\n\n\t// componentDidMount() {\n\t// }\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (this.props.zoomToMarkers !== nextProps.zoomToMarkers) {\n\t\t\t// console.log(nextProps.zoomToMarkers)\n\t\t\tthis.zoomToMarkers(nextProps.zoomToMarkers, true);\n        } else if (this.props.waypoints !== nextProps.waypoints) {\n\t\t\tthis.zoomToMarkers(nextProps.waypoints);\n\t\t}\n\n// \t\tconst { zoomToMarkers = [], waypoints = [] } = nextProps;\n// \t\tconst { zoomToMarkers: prevZoomToMarkers = [] } = this.props;\n// // console.log('componentWillReceiveProps', JSON.stringify(zoomToMarkers.length), JSON.stringify(prevZoomToMarkers.length));\n// \t\t// if (zoomToMarkers.length !== prevZoomToMarkers.length) {\n// \t\tconst markers = zoomToMarkers.length > 0 ? zoomToMarkers : waypoints;\n// \t\tthis.zoomToMarkers(markers);\n\t\t// }\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// try {\n\t\t// \tconst map = this.mapRef.current.leafletElement;  //get native Map instance\n\t\t// \tmap.remove()\n\t\t// } catch (err) {\n\t\t// \tconsole.log(err);\n\t\t// }\n\t}\n\n\toverlayAdd = (e) => {\n\t\t// console.log('overlayAdd', e);\n\t\tconst { name } = e;\n\t\tconst { visibleLayers } = this.state;\n\t\tvisibleLayers[name] = true;\n\t\tthis.setState({ visibleLayers });\n\t}\n\toverlayRemove = (e) => {\n\t\tconst { name } = e;\n\t\t// console.log('overlayRemove', e, name)\n\t\tconst { visibleLayers } = this.state;\n\t\tvisibleLayers[name] = false;\n\t\tthis.setState({ visibleLayers });\n\t}\n\n\tpolylineOptions = () => {\n\t\tconst { gpxInfo } = this.props;\n\t\tconst { rangeSteps } = this.state;\n\t\tlet { maxHslColor } = this.state;\n\t\tconst { appState } = this.props.stores;\n\t\tconst { mapColorMode, mapRangeMin, mapRangeMax } = appState;\n\n\t\tlet newRangeMin = mapRangeMin;\n\t\tlet newRangeMax = mapRangeMax;\n\n\t\tif (mapColorMode === 'speed') {\n\t\t\tif (gpxInfo && gpxInfo.speeds && gpxInfo.speeds.length > 0) {\n\t\t\t\tnewRangeMin = Math.floor(Math.min(...gpxInfo.speeds.map(e => e * 3.6)));\n\t\t\t\tnewRangeMax = Math.ceil(Math.max(...gpxInfo.speeds.map(e => e * 3.6)));\n\t\t\t}\n\t\t}\n\n\t\tconst range = util.range(newRangeMin, newRangeMax, rangeSteps);\n\t\tconst colors = range.map((e) => {\n\t\t\tconst val = normalizeRange(e, newRangeMin, newRangeMax, 0, maxHslColor);\n\t\t\tlet colorValue;\n\t\t\tif (mapColorMode === 'speed') {\n\t\t\t\tcolorValue = maxHslColor - val;\n\t\t\t} else {\n\t\t\t\tcolorValue = maxHslColor - val;\n\t\t\t}\n\t\t\tconst { r, g, b } = util.hsl2Rgb(colorValue, 100, 45);\n\t\t\treturn { color: `rgb(${r}, ${g}, ${b})` };\n\t\t});\n\n\t\tappState.setMapRange(range, newRangeMin, newRangeMax);\n\t\tappState.setMapColors(colors);\n\t\treturn colors;\n\t}\n\n\tpolylineOptionIdxFn = (latLng) => {\n\t\tconst { appState } = this.props.stores;\n\t\tconst { mapRange: altThresholds } = appState;\n\t\t// const altThresholds = util.range(MIN_INCLINE, MAX_INCLINE, INCLINE_STEP);\n\t\tfor (let i = 0; i < altThresholds.length; ++i) {\n\t\t\tif (latLng.meta <= altThresholds[i]) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn altThresholds.length;\n\t}\n\n\tpolylinetrackPointFactory = (data) => {\n\t\tconst { gpxInfo } = this.props;\n\t\tconst { appState } = this.props.stores;\n\t\tconst { mapColorMode, mapRangeMin, mapRangeMax } = appState;\n\n\n\t\tlet dataArray = [];\n\t\tif (mapColorMode === 'speed' && gpxInfo.speeds && gpxInfo.speeds.length > 0) {\n\t\t\tdataArray = gpxInfo.speeds.map(e => e * 3.6);\n\t\t} else if (gpxInfo && gpxInfo.climbs) {\n\t\t\tdataArray = gpxInfo.climbs;\n\t\t}\n\n\t\tconst points = data.filter(e => e[0] && e[1] && e[2]).map((item, idx) => {\n\t\t\tconst trkpt = L.latLng(item[1], item[0], item[2]);\n\t\t\tif (dataArray && dataArray.length > 0) {\n\t\t\t\ttrkpt.meta = dataArray[idx] || 0;\n\t\t\t\tif (trkpt.meta > mapRangeMax) {\n\t\t\t\t\ttrkpt.meta = mapRangeMax;\n\t\t\t\t}\n\t\t\t\tif (trkpt.meta < mapRangeMin) {\n\t\t\t\t\ttrkpt.meta = mapRangeMin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttrkpt.meta = 0;\n\t\t\t}\n\t\t\treturn trkpt;\n\t\t});\n\t\treturn points;\n\t}\n\n\tshowSpeed = () => {\n\t\tconst { appState } = this.props.stores;\n\t\tappState.setMapColorMode('speed');\n\t}\n\n\t// handleMarkerClick = ({ title, bib, email, e }) => {\n\thandleMarkerClick = (opt = {}) => {\n\t\tconst { onMarkerClick = ({ title, bib }) => console.log({ title, bib }) } = this.props;\n\t\ttry {\n\t\t\tonMarkerClick({ ...opt });\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\thandleMarker2Click = (opt = {}) => {\n\t\tconst { onMarker2Click = (opt) => console.log(opt) } = this.props;\n\t\ttry {\n\t\t\tonMarker2Click({ ...opt });\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\thandleMarker3Click = (opt = {}) => {\n\t\tconst { onMarker3Click = (opt) => console.log(opt) } = this.props;\n\t\ttry {\n\t\t\tonMarker3Click({ ...opt });\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\tbaseLayerChange = (e) => {\n\t\tconst { name } = e;\n\t\tconsole.log('baseLayerChange event', e);\n\t\tconsole.log({ name });\n\t\tconst { appState } = this.props.stores;\n\t\tappState.setMapChecked(name);\n\t}\n\n\twhenReadyHandler = (e) => {\n\t\tconst { target } = e;\n\t\ttarget.on('baselayerchange', this.baseLayerChange);\n\t}\n\n\trender() {\n\t\tconst { userStore, appState } = this.props.stores;\n\t\tconst { mapChecked } = appState;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n\t\tconst { visibleLayers, mapZoom, bounds = null } = this.state;\n\t\tconst {\n\t\t\twaypoints = [],\n\t\t\twaypoints2 = [],\n\t\t\twaypoints3 = [],\n\t\t\tgeoJSONs = [],\n\t\t\tzoomToMarkers = [],\n\t\t\tgeojson,\n\t\t\tgpxInfo,\n\t\t\tmapId = 1,\n\t\t\tcenter = [61.0779066, 9.800984],\n\t\t\tzoom = 5,\n\t\t\tminZoom = 4,\n\t\t\tmaxZoom = 18,\n\t\t\tdarkmode,\n\t\t\theight = 500,\n\t\t\theatmap = [],\n\t\t\tskipGeojson = false,\n\t\t\tzoomToWaypoints = false,\n\t\t\tfullscreenMap = false,\n\n\t\t\tshowSearch = true,\n\t\t\tshowZoomControl = true,\n\t\t\tshowLayersControl = true,\n\t\t\tshowFullscreenControl = true,\n\t\t\tshowScaleControl = true,\n\t\t\tshowRange = true,\n\t\t\tshowTrackProfile = true,\n\t\t\tdistanceMarkerSteps = 'normal',\n\t\t\tshowDistanceMarkers = true,\n\t\t\tgroupWaypoints = true,\n\n\t\t\tlayersControlPosition = 'topright',\n\t\t} = this.props;\n\t\tconst { mapColorMode, mapRange: range, mapColors: colors, mapRangeMin, mapRangeMax } = appState;\n\n\t\tconst tempGeoJson = toJS(geojson);\n\t\tconst track = util.asObject(tempGeoJson, 'features', 0, 'geometry', 'coordinates');\n\t\tconst hasWaypoints = zoomToMarkers.length > 0 || waypoints.length > 0;\n\t\tconst hasWaypoints2 = waypoints2.length > 0;\n\n\t\tlet startMarker;\n\t\tlet endMarker;\n\t\tconst distanceMarkers = [];\n\t\tif (track && track[0] && track[0][0]) {\n\t\t\tstartMarker = track[0][0] && track[0][0][0] ?  [track[0][0][1], track[0][0][0]] : [track[0][1], track[0][0]];\n\t\t\tendMarker = track[track.length - 1][0] && track[track.length - 1][0][0] ? [track[track.length - 1][0][1], track[track.length - 1][0][0]] : [track[track.length - 1][1], track[track.length - 1][0]];\n\t\t\tif (gpxInfo && gpxInfo.distances) {\n\t\t\t\tlet totalDistance = 0;\n\t\t\t\tlet currentDistance = 0;\n\t\t\t\tlet steps = 10;\n\t\t\t\tswitch (mapZoom) {\n\t\t\t\t\tcase 15:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 3 : 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 14:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 5 : 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 13:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 7 : 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 12:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 10 : 5;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 11:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 15 : 10;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 10:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 15 : 10;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 9:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 20 : 15;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 30 : 20;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 40 : 30;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 70 : 50;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 150 : 100;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 200 : 150;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// console.log({ mapZoom, steps });\n\t\t\t\tgpxInfo.distances.forEach((e, idx) => {\n\t\t\t\t\ttotalDistance += settings.imperial ? kmToMiles(e) : e;\n\t\t\t\t\tcurrentDistance += settings.imperial ? kmToMiles(e) : e;\n\t\t\t\t\tif (currentDistance >= steps) {\n\t\t\t\t\t\tcurrentDistance = 0;\n\t\t\t\t\t\tif (track[idx] && Array.isArray(track[idx])) {\n\t\t\t\t\t\t\tdistanceMarkers.push({\n\t\t\t\t\t\t\t\tlat: track[idx][1],\n\t\t\t\t\t\t\t\tlng: track[idx][0],\n\t\t\t\t\t\t\t\t// icon: wp.icon || 'marker',\n\t\t\t\t\t\t\t\ttitle: Math.floor(totalDistance),\n\t\t\t\t\t\t\t\tbody: '',\n\t\t\t\t\t\t\t\t// color: wp.color,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n        // const mapChecked = darkmode ? 'OpenStreetMap.Dark' : 'OpenStreetMap.Mapnik';\n\t\tconst { isAdmin } = userStore;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div class={`${style.home} w-100 h-100 overflow-hidden position-relative`}\n\t\t\t\t\t// onTouchstart={mu.captureAllEvents}\n\t\t\t\t\t// onTouchend={mu.captureAllEvents}\n\t\t\t\t\tonTouchmove={mu.captureAllEvents}\n\t\t\t\t\tonScroll={mu.captureAllEvents}\n\t\t\t\t>\n\t\t\t\t\t<Map\n\t\t\t\t\t\t// key={mapId}\n\t\t\t\t\t\tbounds={bounds}\n\t\t\t\t\t\tref={this.mapRef}\n\t\t\t\t\t\t// onLoad={(e) => console.log(e)}\n\t\t\t\t\t\tonViewportChanged={this.handleViewportChanged}\n\t\t\t\t\t\tminZoom={minZoom}\n\t\t\t\t\t\tmaxZoom={maxZoom}\n\t\t\t\t\t\t// maxBounds={MAX_BOUNDS}\n\t\t\t\t\t\tcenter={center}\n\t\t\t\t\t\t// onClick={this.handleClick}\n\t\t\t\t\t\tonLocationfound={this.handleLocationFound}\n\t\t\t\t\t\t// onLayeradd={(e) => console.log(e)}\n\t\t\t\t\t\t// onOverlayadd={(e) => console.log(e)}\n\t\t\t\t\t\t// ref={(r) => { this.mapRef = r; }}\n\t\t\t\t\t\tzoom={zoom}\n\t\t\t\t\t\tzoomControl={showZoomControl}\n\t\t\t\t\t\tdoubleClickZoom={true}\n\t\t\t\t\t\tscrollWheelZoom={true}\n\t\t\t\t\t\tdragging={fullscreenMap || !L.Browser.mobile}\n\t\t\t\t\t\t// tap={fullscreenMap || !L.Browser.mobile}\n\t\t\t\t\t\t// tap={!L.Browser.mobile}\n\t\t\t\t\t\ttap={!L.Browser.mobile}\n\t\t\t\t\t\ttouchZoom={L.Browser.mobile ? 'center' : false}\n\t\t\t\t\t\tanimate={true}\n\t\t\t\t\t\teaseLinearity={0.35}\n\t\t\t\t\t\tstyle={`width: 100%; min-height: ${height}px; height: 100%;`} className='h-100'\n\t\t\t\t\t\tonOverlayadd={this.overlayAdd}\n\t\t\t\t\t\tonOverlayremove={this.overlayRemove}\n\t\t\t\t\t\twhenReady={this.whenReadyHandler}\n\t\t\t\t\t>\n\t\t\t\t\t\t{showLayersControl && <LayersControl position={layersControlPosition}>\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === 'OpenStreetMap.Mapnik'} name='OpenStreetMap.Mapnik'>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\t\t\t\t\t\turl='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === 'OpenStreetMap.Dark'}name='OpenStreetMap.Dark'>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tattribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, &copy; Map tiles by Carto, under CC BY 3.0. Data by OpenStreetMap, under ODbL.'\n\t\t\t\t\t\t\t\t\turl='https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\n\t\t\t\t\t\t\t{/* {['matrikkel_bakgrunn', 'topo4', 'topo4graatone', 'europa', 'toporaster3', 'sjokartraster', 'norges_grunnkart',\n\t\t\t\t\t\t\t'norges_grunnkart_graatone', 'egk', 'terreng_norgeskart', 'havbunn_grunnkart', 'bakgrunnskart_forenklet'].map(layer => <>\t\t\t\t\t\t\t */}\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === `Norway Kartverket topo4`} name={`Norway Kartverket topo4`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['opencache', 'opencache2', 'opencache3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://kartverket.no\">Kartverket</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo4&zoom={z}&x={x}&y={y}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === `Norway Kartverket topo4graatone`} name={`Norway Kartverket topo4graatone`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['opencache', 'opencache2', 'opencache3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://kartverket.no\">Kartverket</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo4graatone&zoom={z}&x={x}&y={y}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t{/* <BaseLayer checked={mapChecked === `Norway Kartverket terreng_norgeskart`} name={`Norway Kartverket terreng_norgeskart`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['opencache', 'opencache2', 'opencache3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://kartverket.no\">Kartverket</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=terreng_norgeskart&zoom={z}&x={x}&y={y}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === `Norway Kartverket norges_grunnkart`} name={`Norway Kartverket norges_grunnkart`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['opencache', 'opencache2', 'opencache3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://kartverket.no\">Kartverket</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=norges_grunnkart&zoom={z}&x={x}&y={y}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === `Norway Kartverket norges_grunnkart_graatone`} name={`Norway Kartverket norges_grunnkart_graatone`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['opencache', 'opencache2', 'opencache3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://kartverket.no\">Kartverket</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=norges_grunnkart_graatone&zoom={z}&x={x}&y={y}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer> */}\n\n\t\t\t\t\t\t\t{/* <BaseLayer checked={mapChecked === `Google Satellite`} name={`Google Satellite`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['mt0','mt1','mt2','mt3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://google.com\">Google</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === `Google Roadmap`} name={`Google Roadmap`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['mt0','mt1','mt2','mt3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://google.com\">Google</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer> */}\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === `Google Satellite Text`} name={`Google Satellite Text`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['mt0','mt1','mt2','mt3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://google.com\">Google</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t{/* <BaseLayer name='OpenStreetMap.BlackAndWhite'>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\t\t\t\t\t\turl='https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer> */}\n\t\t\t\t\t\t\t{/* <BaseLayer name='OpenStreetMap.Carto'>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tattribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, &copy; <a href=\"https://carto.com/attribution\">CARTO</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer> */}\n\t\t\t\t\t\t\t{/* <BaseLayer name='OpenStreetMap.Hikemap'>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tattribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, &copy; wmflabs Hike & Bike'\n\t\t\t\t\t\t\t\t\turl='https://tiles.wmflabs.org/hikebike/{z}/{x}/{y}.png'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer> */}\n\t\t\t\t\t\t\t{/* <BaseLayer name='OpenStreetMap.Hiking'>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tattribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, &copy; Map tiles by Carto, under CC BY 3.0. Data by OpenStreetMap, under ODbL.'\n\t\t\t\t\t\t\t\t\turl=' http://{s}.tiles.wmflabs.org/hikebike/{z}/{x}/{y}.png'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer> */}\n\t\t\t\t\t\t\t{/*\n\t\t\t\t\t\t\t<Overlay checked name='Layer group with circles'>\n\t\t\t\t\t\t\t\t<LayerGroup>\n\t\t\t\t\t\t\t\t\t<Circle center={center} fillColor='blue' radius={200} />\n\t\t\t\t\t\t\t\t\t<Circle\n\t\t\t\t\t\t\t\t\t\tcenter={center}\n\t\t\t\t\t\t\t\t\t\tfillColor='red'\n\t\t\t\t\t\t\t\t\t\tradius={100}\n\t\t\t\t\t\t\t\t\t\tstroke={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<LayerGroup>\n\t\t\t\t\t\t\t\t\t\t<Circle\n\t\t\t\t\t\t\t\t\t\t\tcenter={circle2}\n\t\t\t\t\t\t\t\t\t\t\tcolor='green'\n\t\t\t\t\t\t\t\t\t\t\tfillColor='green'\n\t\t\t\t\t\t\t\t\t\t\tradius={100}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</LayerGroup>\n\t\t\t\t\t\t\t\t</LayerGroup>\n\t\t\t\t\t\t\t</Overlay>\n\t\t\t\t\t\t\t<Overlay name='Feature group'>\n\t\t\t\t\t\t\t\t<FeatureGroup color='purple'>\n\t\t\t\t\t\t\t\t\t<Popup>Popup in FeatureGroup</Popup>\n\t\t\t\t\t\t\t\t\t<Circle center={circle2} radius={200} />\n\t\t\t\t\t\t\t\t\t<Rectangle bounds={rectangle} />\n\t\t\t\t\t\t\t\t</FeatureGroup>\n\t\t\t\t\t\t\t</Overlay> */}\n\n\t\t\t\t\t\t\t{/* <Overlay name='Geoportal.gov.pl'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\tlayers={'Raster'}\n\t\t\t\t\t\t\t\t\tformat={'image/png'}\n\t\t\t\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\t\t\t\turl='http://mapy.geoportal.gov.pl/wss/service/img/guest/ORTO/MapServer/WMSServer?'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay>\n\t\t\t\t\t\t\t<Overlay name='Wildfire'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\tlayers={'GWIS'}\n\t\t\t\t\t\t\t\t\tformat={'image/png'}\n\t\t\t\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\t\t\t\turl={'https://ies-ows.jrc.ec.europa.eu/gwis?language=eng&'}\n\t\t\t\t\t\t\t\t\tattribution={'European Commission, Joint Research Centre'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay> */}\n\n\n\t\t\t\t\t\t\t<Overlay name='Windspeed'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\t// layer={'wind_new'}\n\t\t\t\t\t\t\t\t\t// format={'image/png'}\n\t\t\t\t\t\t\t\t\t// transparent={true}\n\t\t\t\t\t\t\t\t\t// url={`https://tile.openweathermap.org/map/{layer}/{z}/{x}/{y}.png?appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\turl={`https://maps.openweathermap.org/maps/2.0/weather/WND/{z}/{x}/{y}?use_norm=false&opacity=0.25&palette=0:0073FF; 2:00AAFF; 3:4BD0D6; 6:8DE7C7; 12:B0F720; 25:F3363B; 50:C60000&arrow_step=64&appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\tattribution={'Open weather maps'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay>\n\t\t\t\t\t\t\t{/* <Overlay checked name='Windspeed2'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\top={'WND'}\n\t\t\t\t\t\t\t\t\t// format={'image/png'}\n\t\t\t\t\t\t\t\t\t// transparent={true}\n\t\t\t\t\t\t\t\t\turl={`http://maps.openweathermap.org/maps/2.0/weather/{op}/{z}/{x}/{y}?appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\tattribution={'Open weather maps'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay> */}\n\t\t\t\t\t\t\t<Overlay name='Temperature'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\t// layer={'temp_new'}\n\t\t\t\t\t\t\t\t\t// format={'image/png'}\n\t\t\t\t\t\t\t\t\t// transparent={true}\n\t\t\t\t\t\t\t\t\t// url={`https://tile.openweathermap.org/map/{layer}/{z}/{x}/{y}.png?appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\turl={`https://maps.openweathermap.org/maps/2.0/weather/TA2/{z}/{x}/{y}?fill_bound=true&opacity=0.35&appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\tattribution={'Open weather maps'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay>\n\t\t\t\t\t\t\t<Overlay name='Snow depth'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\t// layer={'precipitation_new'}\n\t\t\t\t\t\t\t\t\t// format={'image/png'}\n\t\t\t\t\t\t\t\t\t// transparent={true}\n\t\t\t\t\t\t\t\t\turl={`https://maps.openweathermap.org/maps/2.0/weather/SD0/{z}/{x}/{y}?fill_bound=true&opacity=0.35&appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\tattribution={'Open weather maps'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay>\n\t\t\t\t\t\t\t<Overlay name='Precipitation'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\t// layer={'precipitation_new'}\n\t\t\t\t\t\t\t\t\t// format={'image/png'}\n\t\t\t\t\t\t\t\t\t// transparent={true}\n\t\t\t\t\t\t\t\t\turl={`https://maps.openweathermap.org/maps/2.0/weather/PA0/{z}/{x}/{y}?fill_bound=true&opacity=0.35&appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\tattribution={'Open weather maps'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay>\n\t\t\t\t\t\t\t{isAdmin && <Overlay name='Atmospheric pressure'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\t// layer={'precipitation_new'}\n\t\t\t\t\t\t\t\t\t// format={'image/png'}\n\t\t\t\t\t\t\t\t\t// transparent={true}\n\t\t\t\t\t\t\t\t\turl={`https://maps.openweathermap.org/maps/2.0/weather/APM/{z}/{x}/{y}?fill_bound=true&opacity=0.35&appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\tattribution={'Open weather maps'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay>}\n\t\t\t\t\t\t</LayersControl>}\n\n\t\t\t\t\t\t{/* {showFullscreenControl && <FullscreenControl position='topright' />} */}\n\n\t\t\t\t\t\t{showScaleControl && <ScaleControl\n\t\t\t\t\t\t\tmetric={true}\n\t\t\t\t\t\t\timperial={false}\n\t\t\t\t\t\t/>}\n\n\t\t\t\t\t\t{visibleLayers.Windspeed && <Control position='bottomright'>\n\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\tcolor: #48484a;\n\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\t\tpadding: 2pt 4pt;\n\t\t\t\t\t\t\t\tbackground-color: #fff;\n\t\t\t\t\t\t\t\tborder-radius: 4pt;\n\t\t\t\t\t\t\t\tbox-shadow: 0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out,-webkit-box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\tmargin-bottom: 10px;\n\t\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\t\tfont-size: 10px;\n\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t<div>Wind speed, m/s</div>\n\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t\t<div style=\"width: 260px; display: flex; justify-content: space-between;\" class=\"scale-dividers\" >\n\t\t\t\t\t\t\t\t\t\t<div>0</div>\n\t\t\t\t\t\t\t\t\t\t<div>2</div>\n\t\t\t\t\t\t\t\t\t\t<div>3</div>\n\t\t\t\t\t\t\t\t\t\t<div>6</div>\n\t\t\t\t\t\t\t\t\t\t<div>12</div>\n\t\t\t\t\t\t\t\t\t\t<div>25</div>\n\t\t\t\t\t\t\t\t\t\t<div>50</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\t\twidth: 260px;\n\t\t\t\t\t\t\t\t\t\theight: 5px;\n\t\t\t\t\t\t\t\t\t\t// background: rgba(0, 0, 0, 0) linear-gradient(to left, rgb(158, 128, 177), rgba(116, 76, 172, 0.9), rgb(164, 123, 170), rgba(170, 128, 177, 0.84), rgba(176, 128, 177, 0.71), rgba(170, 128, 177, 0.54), rgba(170, 128, 177, 0.44), rgba(255, 255, 0, 0)) repeat scroll 0% 0%;\n\t\t\t\t\t\t\t\t\t\tbackground: linear-gradient(to right, #0073FF,#00AAFF,#4BD0D6,#8DE7C7,#B0F720,#F0B800,#FB5515,#F3363B,#C60000) repeat scroll 0% 0%;\n\t\t\t\t\t\t\t\t\t\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Control>}\n\n\t\t\t\t\t\t{visibleLayers.Temperature && <Control position='bottomright'>\n\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\tcolor: #48484a;\n\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\t\tpadding: 2pt 4pt;\n\t\t\t\t\t\t\t\tbackground-color: #fff;\n\t\t\t\t\t\t\t\tborder-radius: 4pt;\n\t\t\t\t\t\t\t\tbox-shadow: 0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out,-webkit-box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\tmargin-bottom: 10px;\n\t\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\t\tfont-size: 10px;\n\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t<div>Temperature, °C</div>\n\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t\t<div style=\"width: 260px; display: flex; justify-content: space-between;\" class=\"scale-dividers\" >\n\t\t\t\t\t\t\t\t\t\t<div>-40</div><div>-20</div><div>0</div><div>20</div><div>40</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\t\twidth: 260px;\n\t\t\t\t\t\t\t\t\t\theight: 5px;\n\t\t\t\t\t\t\t\t\t\tbackground-image: linear-gradient(to right, rgb(159, 85, 181) 0%, rgb(44, 106, 187) 8.75%, rgb(82, 139, 213) 12.5%, rgb(103, 163, 222) 18.75%, rgb(142, 202, 240) 25%, rgb(155, 213, 244) 31.25%, rgb(172, 225, 253) 37.5%, rgb(194, 234, 255) 43.75%, rgb(255, 255, 208) 50%, rgb(254, 248, 174) 56.25%, rgb(254, 232, 146) 62.5%, rgb(254, 226, 112) 68.75%, rgb(253, 212, 97) 75%, rgb(244, 168, 94) 82.5%, rgb(244, 129, 89) 87.5%, rgb(244, 104, 89) 93.75%, rgb(244, 76, 73) 100%);\n\t\t\t\t\t\t\t\t\t\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Control>}\n\n\t\t\t\t\t\t{visibleLayers.Precipitation && <Control position='bottomright'>\n\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\tcolor: #48484a;\n\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\t\tpadding: 2pt 4pt;\n\t\t\t\t\t\t\t\tbackground-color: #fff;\n\t\t\t\t\t\t\t\tborder-radius: 4pt;\n\t\t\t\t\t\t\t\tbox-shadow: 0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out,-webkit-box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\tmargin-bottom: 10px;\n\t\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\t\tfont-size: 10px;\n\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t<div>Precipitation, mm/h</div>\n\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t\t<div style=\"width: 260px; display: flex; justify-content: space-between;\" class=\"scale-dividers\" >\n\t\t\t\t\t\t\t\t\t\t<div>0</div><div>0.5</div><div>1</div><div>2</div><div>4</div><div>6</div><div>7</div><div>10</div><div>12</div><div>14</div><div>16</div><div>24</div><div>32</div><div>60</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\t\twidth: 260px;\n\t\t\t\t\t\t\t\t\t\theight: 5px;\n\t\t\t\t\t\t\t\t\t\tbackground: rgba(0, 0, 0, 0) linear-gradient(to left, rgb(170, 43, 195), rgb(255, 0, 146), rgb(255, 0, 100), rgb(255, 0, 0), rgb(255, 91, 0), rgb(255, 150, 0), rgb(255, 205, 0), rgb(239, 248, 0), rgb(0, 70, 0), rgb(0, 90, 0), rgb(0, 160, 0), rgb(0, 211, 0), rgb(0, 250, 100), rgba(0, 0, 0, 0)) repeat scroll 0% 0%;\n\t\t\t\t\t\t\t\t\t\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Control>}\n\n\t\t\t\t\t\t{visibleLayers['Snow depth'] && <Control position='bottomright'>\n\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\tcolor: #48484a;\n\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\t\tpadding: 2pt 4pt;\n\t\t\t\t\t\t\t\tbackground-color: #fff;\n\t\t\t\t\t\t\t\tborder-radius: 4pt;\n\t\t\t\t\t\t\t\tbox-shadow: 0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out,-webkit-box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\tmargin-bottom: 10px;\n\t\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\t\tfont-size: 10px;\n\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t<div>Snow depth (m)</div>\n\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t\t<div style=\"width: 260px; display: flex; justify-content: space-between;\" class=\"scale-dividers\" >\n\t\t\t\t\t\t\t\t\t\t<div>0.05</div>\n\t\t\t\t\t\t\t\t\t\t<div>0.4</div>\n\t\t\t\t\t\t\t\t\t\t<div>0.8</div>\n\t\t\t\t\t\t\t\t\t\t<div>1.8</div>\n\t\t\t\t\t\t\t\t\t\t<div>15</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\t\twidth: 260px;\n\t\t\t\t\t\t\t\t\t\theight: 5px;\n\t\t\t\t\t\t\t\t\t\tbackground: linear-gradient(to right, #EDEDED, #D9F0F4, #A5E5EF, #7DDEED, #35D2EA, #00CCE8, #706DCE, #514FCC, #3333CC, #1818CC, #C454B7, #C12CB0, #BF00A8, #85408C, #7F2389, #790087, #E80068) repeat scroll 0% 0%;\n\t\t\t\t\t\t\t\t\t\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Control>}\n\n\t\t\t\t\t\t{visibleLayers['Atmospheric pressure'] && <Control position='bottomright'>\n\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\tcolor: #48484a;\n\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\t\tpadding: 2pt 4pt;\n\t\t\t\t\t\t\t\tbackground-color: #fff;\n\t\t\t\t\t\t\t\tborder-radius: 4pt;\n\t\t\t\t\t\t\t\tbox-shadow: 0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out,-webkit-box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\tmargin-bottom: 10px;\n\t\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\t\tfont-size: 10px;\n\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t<div>Atmospheric pressure (hPa)</div>\n\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t\t<div style=\"width: 260px; display: flex; justify-content: space-between;\" class=\"scale-dividers\" >\n\t\t\t\t\t\t\t\t\t\t<div>940</div>\n\t\t\t\t\t\t\t\t\t\t<div>980</div>\n\t\t\t\t\t\t\t\t\t\t<div>1010</div>\n\t\t\t\t\t\t\t\t\t\t<div>1040</div>\n\t\t\t\t\t\t\t\t\t\t<div>1080</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\t\twidth: 260px;\n\t\t\t\t\t\t\t\t\t\theight: 5px;\n\t\t\t\t\t\t\t\t\t\tbackground: linear-gradient(to right, #0073FF,#00AAFF,#4BD0D6,#8DE7C7,#B0F720,#F0B800,#FB5515,#F3363B,#C60000) repeat scroll 0% 0%;\n\t\t\t\t\t\t\t\t\t\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Control>}\n\n\n\t\t\t\t\t\t{/* <ImageOverlay\n\t\t\t\t\t\t\turl='./assets/515-overlay-v2.png'\n\t\t\t\t\t\t\tbounds={[\n\t\t\t\t\t\t\t\t[52.056765505175235, 15.068457126617433],\n\t\t\t\t\t\t\t\t[52.04421634105194, 15.105557441711428],\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t{heatmap && heatmap.length > 0 && <HeatmapLayer\n\t\t\t\t\t\t\tfitBoundsOnLoad={!hasWaypoints}\n\t\t\t\t\t\t\tfitBoundsOnUpdate={false}\n\t\t\t\t\t\t\tpoints={heatmap}\n\t\t\t\t\t\t\tlongitudeExtractor={m => m[1]}\n\t\t\t\t\t\t\tlatitudeExtractor={m => m[0]}\n\t\t\t\t\t\t\tintensityExtractor={m => parseFloat(m[2])}\n\t\t\t\t\t\t/>}\n\n\t\t\t\t\t\t{showTrackProfile && <>\n\t\t\t\t\t\t\t{track && track.length > 0 && <ReactLeafletMultiOptionsPolyline\n\t\t\t\t\t\t\t\tref={this.polyRef}\n\t\t\t\t\t\t\t\tpositions={this.polylinetrackPointFactory(track)}\n\t\t\t\t\t\t\t\toptionIdxFn={this.polylineOptionIdxFn}\n\t\t\t\t\t\t\t\toptions={this.polylineOptions()}\n\t\t\t\t\t\t\t\tweight={7}\n\t\t\t\t\t\t\t\tlineCap='butt'\n\t\t\t\t\t\t\t\topacity={0.75}\n\t\t\t\t\t\t\t\tsmoothFactor={1}\n\t\t\t\t\t\t\t\tzoomAnimation={true}\n\t\t\t\t\t\t\t\tkey={`${mapColorMode}`}\n\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t{geoJSONs && geoJSONs.length > 0 && geoJSONs.map((gj, idx) => <GeoJSON\n\t\t\t\t\t\t\tdata={gj}\n\t\t\t\t\t\t\tstyle={() => this.geoJSONStyleList(idx)}\n\t\t\t\t\t\t/>)}\n\n\t\t\t\t\t\t{!skipGeojson && geojson && startMarker && <GeoJSON\n\t\t\t\t\t\t\tdata={geojson}\n\t\t\t\t\t\t\tstyle={this.geoJSONStyle}\n\t\t\t\t\t\t\tonEachFeature={this.onEachFeature}\n\t\t\t\t\t\t\tonAdd={zoomToMarkers && zoomToMarkers.length > 0 ? null : this.zoomToGeoJSON}\n\t\t\t\t\t\t/>}\n\n\n\t\t\t\t\t\t{startMarker && <Marker position={startMarker} icon={icons.get('marker')}>\n\t\t\t\t\t\t\t<Popup>\n\t\t\t\t\t\t\t\tStart position: {util.format(startMarker[0], 4)}, {util.format(startMarker[1], 4)}\n\t\t\t\t\t\t\t</Popup>\n\t\t\t\t\t\t</Marker>}\n\t\t\t\t\t\t{endMarker && <Marker position={endMarker} icon={icons.get('flag')}>\n\t\t\t\t\t\t\t<Popup>\n\t\t\t\t\t\t\t\tEnd position: {util.format(endMarker[0], 4)}, {util.format(endMarker[1], 4)}\n\t\t\t\t\t\t\t</Popup>\n\t\t\t\t\t\t</Marker>}\n\n\t\t\t\t\t\t{showDistanceMarkers && distanceMarkers && distanceMarkers.length > 0 && <>\n\t\t\t\t\t\t\t{distanceMarkers.length > 0 && distanceMarkers.map(wp => (\n\t\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\t\tposition={[wp.lat, wp.lng]}\n\t\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\t\ticon={icons.getDistanceMarker({\n\t\t\t\t\t\t\t\t\t\ttitle: wp.title,\n\t\t\t\t\t\t\t\t\t\tbody: wp.body,\n\t\t\t\t\t\t\t\t\t\tcolor: wp.color,\n\t\t\t\t\t\t\t\t\t\ttextColor: darkmode ? '#333' : '#333',\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Popup position={[wp.lat, wp.lng]}>\n\t\t\t\t\t\t\t\t\t\t<h5>{wp.title}</h5>\n\t\t\t\t\t\t\t\t\t\t<Markdown markdown={wp.body} markdownOpts={MARKDOWN_OPTIONS} />\n\t\t\t\t\t\t\t\t\t</Popup>\n\t\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t{waypoints3.length > 0 && waypoints3.reverse().map((wp, idx) => (\n\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\tposition={[wp.lat, wp.lng]}\n\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\ticon={icons.getSmallMarker({\n\t\t\t\t\t\t\t\t\ticon: wp.icon || 'marker',\n\t\t\t\t\t\t\t\t\tbib: wp.bib,\n\t\t\t\t\t\t\t\t\tflag: wp.flag,\n\t\t\t\t\t\t\t\t\ttitle: wp.title,\n\t\t\t\t\t\t\t\t\tbody: wp.body,\n\t\t\t\t\t\t\t\t\tcolor: wp.color,\n\t\t\t\t\t\t\t\t\ttextColor: wp.textColor,\n\t\t\t\t\t\t\t\t\tmapChecked,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tonClick={(e) => this.handleMarker3Click({ ...wp, e })}\n\t\t\t\t\t\t\t\tzIndexOffset={100 + idx}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{/* <Popup position={[wp.lat, wp.lng]}>\n\t\t\t\t\t\t\t\t\t<h5><Markdown markdown={wp.title} markdownOpts={MARKDOWN_OPTIONS} /></h5>\n\t\t\t\t\t\t\t\t\t<Markdown markdown={wp.body} markdownOpts={MARKDOWN_OPTIONS} />\n\t\t\t\t\t\t\t\t</Popup> */}\n\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t{groupWaypoints ? <>\n\t\t\t\t\t\t\t<MarkerClusterGroup\n\t\t\t\t\t\t\t\tmaxClusterRadius={10}\n\t\t\t\t\t\t\t\ticonCreateFunction={createClusterCustomIcon}\n\t\t\t\t\t\t\t\tanimate={true}\n\t\t\t\t\t\t\t\tfitBoundsOnLoad={zoomToWaypoints}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{waypoints2.length > 0 && waypoints2.reverse().map((wp, idx) => (\n\t\t\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\t\t\tposition={[wp.lat, wp.lng]}\n\t\t\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\t\t\ticon={icons.getMarker({\n\t\t\t\t\t\t\t\t\t\t\ticon: wp.icon || 'marker',\n\t\t\t\t\t\t\t\t\t\t\tbib: wp.bib,\n\t\t\t\t\t\t\t\t\t\t\tflag: wp.flag,\n\t\t\t\t\t\t\t\t\t\t\ttitle: wp.title,\n\t\t\t\t\t\t\t\t\t\t\tbody: wp.body,\n\t\t\t\t\t\t\t\t\t\t\tcolor: wp.color,\n\t\t\t\t\t\t\t\t\t\t\ttextColor: wp.textColor,\n\t\t\t\t\t\t\t\t\t\t\tmapChecked,\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => this.handleMarker2Click({ ...wp, e })}\n\t\t\t\t\t\t\t\t\t\tzIndexOffset={200 + idx}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{/* <Popup position={[wp.lat, wp.lng]}>\n\t\t\t\t\t\t\t\t\t\t\t<h5><Markdown markdown={wp.title} markdownOpts={MARKDOWN_OPTIONS} /></h5>\n\t\t\t\t\t\t\t\t\t\t\t<Markdown markdown={wp.body} markdownOpts={MARKDOWN_OPTIONS} />\n\t\t\t\t\t\t\t\t\t\t</Popup> */}\n\t\t\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</MarkerClusterGroup>\n\t\t\t\t\t\t\t<MarkerClusterGroup\n\t\t\t\t\t\t\t\tmaxClusterRadius={10}\n\t\t\t\t\t\t\t\ticonCreateFunction={createClusterCustomIcon}\n\t\t\t\t\t\t\t\tanimate={true}\n\t\t\t\t\t\t\t\tfitBoundsOnLoad={zoomToWaypoints}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{waypoints.length > 0 && waypoints.reverse().map((wp, idx) => (\n\t\t\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\t\t\tposition={[wp.lat, wp.lng]}\n\t\t\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\t\t\ticon={icons.getRaceMarker({\n\t\t\t\t\t\t\t\t\t\t\ticon: wp.icon || 'marker',\n\t\t\t\t\t\t\t\t\t\t\tbib: wp.bib,\n\t\t\t\t\t\t\t\t\t\t\trank: wp.rank,\n\t\t\t\t\t\t\t\t\t\t\tspeed: wp.speed,\n\t\t\t\t\t\t\t\t\t\t\tbearing: wp.bearing,\n\t\t\t\t\t\t\t\t\t\t\temail: wp.email,\n\t\t\t\t\t\t\t\t\t\t\timage: wp.image,\n\t\t\t\t\t\t\t\t\t\t\tflag: wp.flag,\n\t\t\t\t\t\t\t\t\t\t\ttitle: wp.title,\n\t\t\t\t\t\t\t\t\t\t\tbody: wp.body,\n\t\t\t\t\t\t\t\t\t\t\tcolor: wp.color,\n\t\t\t\t\t\t\t\t\t\t\ttextColor: wp.textColor,\n\t\t\t\t\t\t\t\t\t\t\ticonWidth: 170,\n\t\t\t\t\t\t\t\t\t\t\ticonAnchorX: (idx % 2 === 0 ? 7 : 163),\n\t\t\t\t\t\t\t\t\t\t\ttitlePrefix: wp.currentState === 'rest' ? '💤' : '',\n\t\t\t\t\t\t\t\t\t\t\tmapChecked,\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => this.handleMarkerClick({ ...wp, e })}\n\t\t\t\t\t\t\t\t\t\tzIndexOffset={300 + idx}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{/* <Popup position={[wp.lat, wp.lng]}> */}\n\t\t\t\t\t\t\t\t\t\t\t{/* <h5><Markdown markdown={wp.title} markdownOpts={MARKDOWN_OPTIONS} /></h5>\n\t\t\t\t\t\t\t\t\t\t\t<Markdown markdown={wp.body} markdownOpts={MARKDOWN_OPTIONS} /> */}\n\t\t\t\t\t\t\t\t\t\t{/* </Popup> */}\n\t\t\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</MarkerClusterGroup>\n\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t{waypoints2.length > 0 && waypoints2.reverse().map((wp, idx) => (\n\t\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\t\tposition={[wp.lat, wp.lng]}\n\t\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\t\ticon={icons.getMarker({\n\t\t\t\t\t\t\t\t\t\ticon: wp.icon || 'marker',\n\t\t\t\t\t\t\t\t\t\tbib: wp.bib,\n\t\t\t\t\t\t\t\t\t\tflag: wp.flag,\n\t\t\t\t\t\t\t\t\t\ttitle: wp.title,\n\t\t\t\t\t\t\t\t\t\tbody: wp.body,\n\t\t\t\t\t\t\t\t\t\tcolor: wp.color,\n\t\t\t\t\t\t\t\t\t\ttextColor: wp.textColor,\n\t\t\t\t\t\t\t\t\t\ticonHeight: 20,\n\t\t\t\t\t\t\t\t\t\ticonAnchorX: 7,\n\t\t\t\t\t\t\t\t\t\ticonAnchorY: 7,\n\t\t\t\t\t\t\t\t\t\tdotWidth: 14,\n\t\t\t\t\t\t\t\t\t\tdotHeight: 14,\n\t\t\t\t\t\t\t\t\t\tmapChecked,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\tonClick={(e) => this.handleMarker2Click({ ...wp, e })}\n\t\t\t\t\t\t\t\t\tzIndexOffset={200 + idx}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{/* <Popup position={[wp.lat, wp.lng]}>\n\t\t\t\t\t\t\t\t\t\t<h5><Markdown markdown={wp.title} markdownOpts={MARKDOWN_OPTIONS} /></h5>\n\t\t\t\t\t\t\t\t\t\t<Markdown markdown={wp.body} markdownOpts={MARKDOWN_OPTIONS} />\n\t\t\t\t\t\t\t\t\t</Popup> */}\n\t\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{waypoints.length > 0 && waypoints.reverse().map((wp, idx) => (\n\t\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\t\tposition={[wp.lat, wp.lng]}\n\t\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\t\ticon={icons.getRaceMarker({\n\t\t\t\t\t\t\t\t\t\ticon: wp.icon || 'marker',\n\t\t\t\t\t\t\t\t\t\tbib: wp.bib,\n\t\t\t\t\t\t\t\t\t\tspeed: wp.speed,\n\t\t\t\t\t\t\t\t\t\tbearing: wp.bearing,\n\t\t\t\t\t\t\t\t\t\trank: wp.rank,\n\t\t\t\t\t\t\t\t\t\temail: wp.email,\n\t\t\t\t\t\t\t\t\t\timage: wp.image,\n\t\t\t\t\t\t\t\t\t\tflag: wp.flag,\n\t\t\t\t\t\t\t\t\t\ttitle: wp.title,\n\t\t\t\t\t\t\t\t\t\tbody: wp.body,\n\t\t\t\t\t\t\t\t\t\tcolor: wp.color,\n\t\t\t\t\t\t\t\t\t\ttextColor: wp.textColor,\n\t\t\t\t\t\t\t\t\t\ticonWidth: 170,\n\t\t\t\t\t\t\t\t\t\ticonAnchorX: (idx % 2 === 0 ? 7 : 163),\n\t\t\t\t\t\t\t\t\t\ttitlePrefix: wp.currentState === 'rest' ? '💤' : '',\n\t\t\t\t\t\t\t\t\t\tmapChecked,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\tonClick={(e) => this.handleMarkerClick({ ...wp, e })}\n\t\t\t\t\t\t\t\t\tzIndexOffset={300 + idx}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{/* <Popup position={[wp.lat, wp.lng]}> */}\n\t\t\t\t\t\t\t\t\t\t{/* <h5><Markdown markdown={wp.title} markdownOpts={MARKDOWN_OPTIONS} /></h5>\n\t\t\t\t\t\t\t\t\t\t<Markdown markdown={wp.body} markdownOpts={MARKDOWN_OPTIONS} /> */}\n\t\t\t\t\t\t\t\t\t{/* </Popup> */}\n\t\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</>}\n\t\t\t\t\t</Map>\n\n\t\t\t\t\t{/* {showSearch && <div class='position-absolute' style='bottom: 20px; right: 5px; z-index: 999999;'>\n\t\t\t\t\t\t<button type='button' class='btn btn-sm btn-info' onClick={this.zoomToAllMarkers}><i class='fas fa-search' /></button>\n\t\t\t\t\t\t<button type='button' class='btn btn-sm btn-success ml-1' onClick={this.zoomToFavoriteMarkers}><i class='fas fa-search-location' /></button>\n\t\t\t\t\t</div>} */}\n\t\t\t\t\t<div class='position-absolute' style='bottom: 20px; right: 5px; z-index: 999999;'>\n\t\t\t\t\t\t<button type='button' class='btn btn-sm btn-info' onClick={this.zoomToAllMarkers}><i class='fas fa-search' /></button>\n\t\t\t\t\t</div>\n\n\n\n\t\t\t\t</div>\n\t\t\t\t{showRange && range && range.length > 0 && <>\n\t\t\t\t\t<div class='mb-4'>\n\t\t\t\t\t\t<div class='float-right mt-1'>\n\t\t\t\t\t\t\t<div class='px-1 py-0 float-left' style='line-height: 0.8em;'>\n\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t{util.format(mapRangeMin, 0)}<span class='text-muted'>{mapColorMode === 'speed' ? 'km/t' : '%'}</span>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{range && range.length > 0 && range.map((val, idx) => (\n\t\t\t\t\t\t\t\t<div class='float-left'>\n\t\t\t\t\t\t\t\t\t<div style={`background-color: ${colors[idx].color}; height: 13px; width: 10px;`} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t<div class='px-1 py-0 float-left' style='line-height: 0.8em;'>\n\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t{util.format(mapRangeMax, 0)}<span class='text-muted'>{mapColorMode === 'speed' ? 'km/t' : '%'}</span>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div class='float-right mt-1 clearfix'>\n\t\t\t\t\t\t\t<button class='btn btn-link' onClick={this.showSpeed}>Show speed</button>\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailNotifications extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    subscribeNotificationTopic = async (field) => {\n\t\tconst { userStore } = this.props.stores;\n        const { user } = userStore;\n        const { notificationTopics = {} } = user;\n        const value = 1;\n        await userStore.setNotificationTopic({\n            field: `notificationTopics.${field}`,\n            value,\n        });\n    }\n\n    render() {\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n        const { notificationTopics = {} } = user;\n\n\t\tconst { race = {} } = this.props;\n\n        const topic = `race-${race.id}`;\n        if (notificationTopics && notificationTopics[topic]) {\n            return '';\n        }\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <button class='btn btn-block btn-info btn-lg' onClick={() => this.subscribeNotificationTopic(topic)}>\n                        <i class='fas fa-bell' /> <Text id='race.notifications'>Subscribe to race notifications</Text>\n                    </button>\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailNotifications;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\n@observer\nclass Achievements extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n        };\n    }\n    \n    handleAdd = () => {\n        const { data } = this.state;\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: { ...data } });\n        this.setState({\n            data: {\n                name: '',\n                description: '',\n                url: '',\n            }\n        });\n    };\n\n\n    removeAchievement = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { object } = this.props;\n        const { name, id } = e.target.closest('button').dataset;\n        dogStore.removeAchievement({\n            id: object.id,\n            name,\n            achievementId: id,\n        });\n    }\n\n    render() {\n        const { data } = this.state;\n        const { showFiles = true, object = {} } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12 mt-3'>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!object.achievements || object.achievements.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-trophy' /></div>\n                                        <h3><Text id='dogs.no-achievements-title'>No achievements for this dog!</Text></h3>\n                                        <Text id='dogs.no-achievements-text'>You can add achievements to this dog. Ie. Memories, trips, tests, prices, races, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {object.achievements && object.achievements.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.date, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='mr-2'>{file.url}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeAchievement}\n                                            data-name={file.name}\n                                            data-id={file.id}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                <div class='col-12 mt-3'>\n                    <details>\n                        <summary><Text id='dogs.achievement-add'>Add new achievement</Text></summary>\n\n                        <div class='form-group'>\n                            <label for='name'><Text id='dogs.achievement-name'>Name</Text></label>\n                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp' onInput={linkstate(this, 'data.name')} value={data.name} />\n                            <small id='nameHelp' class='form-text text-muted'><Text id='dogs.achievement-name-help'>Name of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='date'><Text id='dogs.achievement-date'>Date</Text></label>\n                            <input type='date' class='form-control' id='date' aria-describedby='dateHelp' onInput={linkstate(this, 'data.date')} value={data.date} />\n                            <small id='dateHelp' class='form-text text-muted'><Text id='dogs.achievement-date-help'>Date of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='description'><Text id='dogs.achievement-description'>Description</Text></label>\n                            <input type='text' class='form-control' id='description' aria-describedby='descriptionHelp' onInput={linkstate(this, 'data.description')} value={data.description} />\n                            <small id='descriptionHelp' class='form-text text-muted'><Text id='dogs.achievement-description-help'>Description of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='url'><Text id='dogs.achievement-url'>Url</Text></label>\n                            <input type='text' class='form-control' id='url' aria-describedby='urlHelp' onInput={linkstate(this, 'data.url')} value={data.url} />\n                            <small id='urlHelp' class='form-text text-muted'><Text id='dogs.achievement-url-help'>URL of achievement</Text></small>\n                        </div>\n                        <button class='btn btn-success' onClick={this.handleAdd}>\n                            <Text id='dogs.achievement-add'>Add achievement</Text>\n                        </button>\n                    </details>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Achievements;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass RaceLiveAddResult extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: {},\n            message: '',\n        };\n        this.updateTimer = {};\n    }\n\n    addResult = async (e) => {\n\t\tconst { raceStore, appState } = this.props.stores;\n        const { direction, classid } = e.target.closest('button').dataset;\n        const { checkpointId, selectedClassIds = [] } = appState;\n\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        const { result } = this.state;\n\t\tconst { race } = raceStore;\n        const raceid = race.id;\n\n\t\tawait raceStore.addResult({\n\t\t\tid: raceid,\n\t\t\tclassId: classid,\n\t\t\tnewResult: {\n                direction,\n                checkpoint: checkpointId,\n                timestamp: new Date(),\n                ...result,\n\t\t\t}\n        });\n\n        const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\n        this.setState({\n            result: {\n                bib: '',\n                dogs: '',\n                timestamp: '',\n            },\n            message: `Added ${result.bib} with ${result.dogs} dogs ${direction} ${direction === 'in' ? 'to' : 'of'} checkpoint ${selectedCheckpoint.name}.`,\n        });\n\n        clearTimeout(this.updateTimer.message);\n        this.updateTimer.message = setTimeout(async () => {\n\t\t\tthis.setState({\n                message: '',\n            });\n\t\t}, 3000);\n\t}\n\n    editResult = (e) => {\n        const { raceStore, appState } = this.props.stores;\n\t\tconst { race } = raceStore;\n        const raceid = race.id;\n\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, resultid } = e.target.dataset;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        const data = {\n\t\t\traceClassId: classid,\n            resultId: resultid,\n\t\t\t[`raceClassResult${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\tawait raceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n            raceStore.localUpdateSignup(field, value);\n\n            const { checkpoints = [], contestants = [], results = [] } = currentClass;\n            raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\t\t}, 500);\n    }\n\n    deleteResult = async () => {\n        const { selectedResult } = this.state;\n        const { appState, raceStore } = this.props.stores;\n\n        const { race } = raceStore;\n        const raceid = race.id;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        const data = {\n\t\t\traceClassId: currentClass.id,\n            resultId: selectedResult,\n\t\t\traceClassResultDelete: 1,\n\t\t};\n        await raceStore.editClass({\n            id: raceid,\n            data,\n        });\n\n        const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\n        this.doneEditResult();\n    }\n\n    selectCheckpoint = (e) => {\n        const checkpointId = e.target.closest('button').dataset.id;\n        const { appState } = this.props.stores;\n        appState.selectCheckpoint(checkpointId)\n    }\n\n    toggleTimestamp = () => {\n        const { showTimestamp, result } = this.state;\n\n        const { appState, raceStore } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const selectedMusher = currentClass.contestants ? currentClass.contestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp'])).reverse().filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n        const lastTimestamp = lastResults && lastResults[0] ? lastResults[0].timestamp : (selectedMusher && selectedMusher.startTime ? selectedMusher.startTime : currentClass.startDate);\n\n        result.timestamp = util.isoDate(lastTimestamp, false, false, false);\n\n        this.setState({\n            showTimestamp: !showTimestamp,\n            result,\n        });\n    }\n\n    doneEditResult = () => {\n        this.setState({\n            selectedResult: '',\n            result: {\n                bib: '',\n                dogs: '',\n                timestamp: '',\n            },\n        });\n    }\n\n    selectResult = (e) => {\n        const resultid = e.target.closest('.resultLine').dataset.resultid;\n        this.setState({\n            selectedResult: resultid,\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // if (this.props.currentClass.id !== nextProps.currentClass.id || this.props.reloadLastEpoch !== nextProps.reloadLastEpoch) {\n        //     const { currentClass } = this.props;\n        //     const { raceStore } = this.props.stores;\n        //     const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        //     raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n        // }\n\t}\n\n    componentDidMount() {\n        this.doneEditResult();\n\t}\n\n    render() {\n        const { result, showTimestamp, message, selectedResult } = this.state;\n        const { appState, raceStore, userStore } = this.props.stores;\n        const { checkpointId } = appState;\n        const { sortedContestants = [] } = raceStore;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n        const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n        const isCheckedIn = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'in');\n        const isCheckedOut = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'out');\n        const isScratched = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'scratched');\n\n        const currentResult = currentClass.results ? currentClass.results.find(e => e.id === selectedResult) : {};\n\n        const { user = {} } = userStore;\n        const { language = 'en' } = user;\n\n        return (<>\n            <div class='mt-5' style='height: 70vh;'>\n                <h1>Admin timing - {currentClass.title}</h1>\n                <div class='w-100 overflow-hidden'>\n                    <div\n                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                    >\n\n                        {currentClass.checkpoints && currentClass.checkpoints.slice().sort(fieldSorter(['sortOrder'])).map((currentCheckpoint, idx) => <>\n                            <div class='col px-0 pt-2'>\n                                <button\n                                    type='button'\n                                    class={`btn btn-block ${idx === 0 && 'rounded-pill-left'} ${idx === currentClass.checkpoints.length - 1 && 'rounded-pill-right'} rounded-none ${checkpointId === currentCheckpoint.id ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                    onClick={this.selectCheckpoint}\n                                    data-id={currentCheckpoint.id}\n                                >\n                                    {currentCheckpoint.name}\n                                </button>\n                            </div>\n                        </>)}\n\n                    </div>\n                </div>\n                <div class='w-100 overflow-hidden'>\n                    {selectedCheckpoint && <>\n                        <h3>\n                            {selectedMusher && <><i class='fas fa-user text-muted' /> {selectedMusher.firstname} {selectedMusher.lastname}</>}\n                        </h3>\n\n                        {currentResult ? <>\n                            {['bib', 'dogs'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}>{field}</label>\n                                    <input type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                        data-classid={currentClass.id}\n                                        data-resultid={currentResult.id}\n                                        data-field={field}\n                                        value={currentResult[field]}\n                                        onInput={this.editResult}\n                                    />\n                                </div>\n                            </>)}\n\n                            {['timestamp'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}>{field}</label>\n                                    <input type='datetime-local' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                        data-classid={currentClass.id}\n                                        data-resultid={currentResult.id}\n                                        data-field={field}\n                                        value={util.isoDate(currentResult[field], false, false, false)}\n                                        onInput={this.editResult}\n                                    />\n                                    <button class='btn btn-link' onClick={this.toggleTimestamp}>Hide timestamp</button>\n                                </div>\n                            </>)}\n\n                            <button class='btn btn-lg btn-danger float-left' onClick={this.deleteResult}>\n                                Delete\n                            </button>\n                            <button class='btn btn-lg btn-info float-right' onClick={this.doneEditResult}>\n                                Done\n                            </button>\n                        </> : <>\n                            {/* bib: String,\n                            position: [],\n                            checkpointIn: String,\n                            checkpointOut: String,\n                            dogs: Number,\n                            timestamp: Date,\n                            addedByUser: Number, */}\n                            {['bib'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}>{field}</label>\n                                    <input type='text' class='form-control form-control-lg' id={field} aria-describedby={`${field}Help`}\n                                        onInput={linkstate(this, `result.${field}`)}\n                                        value={result[field]}\n                                    />\n                                </div>\n                            </>)}\n\n                            {['dogs'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}>{field}</label>\n                                    <input type='text' class='form-control form-control-lg' id={field} aria-describedby={`${field}Help`}\n                                        onInput={linkstate(this, `result.${field}`)}\n                                        value={result[field]}\n                                    />\n                                </div>\n                            </>)}\n\n                            {showTimestamp ? <>\n                                {['timestamp'].map(field => <>\n                                    <div class='form-group'>\n                                        <label for={field}>{field}</label>\n                                        <input type='datetime-local' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                            onInput={linkstate(this, `result.${field}`)}\n                                            value={result[field]}\n                                        />\n                                        <button class='btn btn-link' onClick={this.toggleTimestamp}>Hide timestamp</button>\n                                    </div>\n                                </>)}\n                            </> : <>\n                                <div class='form-group'>\n                                    <button class='btn btn-link' onClick={this.toggleTimestamp}>Show timestamp</button>\n                                </div>\n                            </>}\n\n\n                            {isCheckedIn && isCheckedOut && <>\n                                <div class='alert alert-warning my-2' role='alert'>\n                                    <i class='fas fa-exclamation-triangle' />\n                                    {selectedMusher && <>{selectedMusher.firstname} {selectedMusher.lastname}</>} Has checked in and out of this checkpoint!\n                                </div>\n                            </>}\n\n                            <div class='d-flex justify-content-between'>\n                                <button class='btn btn-lg btn-success float-left' onClick={this.addResult} data-direction='in' data-classid={currentClass.id} disabled={isCheckedIn ? 'disabled' : ''}>\n                                    CP In <i class='fas fa-sign-in-alt ml-2' />\n                                </button>\n                                <div class='text-center'>\n                                    <h3><i class='fas fa-campground text-muted' /> {selectedCheckpoint.name}</h3>\n                                </div>\n                                <button class='btn btn-lg btn-info float-right' onClick={this.addResult} data-direction='out' data-classid={currentClass.id} disabled={isCheckedOut ? 'disabled' : ''}>\n                                    <i class='fas fa-sign-out-alt mr-2' /> CP Out\n                                </button>\n                            </div>\n                        </>}\n\n                    </>}\n                </div>\n                {message && <div class='alert alert-success mt-3' role='alert'>\n                    {message}\n                </div>}\n\n                <div class='overflow-hidden mb-5 mt-3'>\n                    {lastResults && lastResults.map(res => {\n                        const currentCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(cp => cp.id === res.checkpoint) : null;\n                        const requiredRestMin = res.direction === 'in' && currentCheckpoint.requiredRestMinutes ? (\n                            currentCheckpoint.timeEqualization ? selectedMusher.timeEqualization + currentCheckpoint.requiredRestMinutes : currentCheckpoint.requiredRestMinutes\n                        ) : null;\n                        const firstOutTime = new Date(new Date(res.timestamp).getTime() + requiredRestMin * 60000);\n                        return (<>\n                            <div\n                                class='d-flex justify-content-between resultLine'\n                                data-resultid={res.id}\n                                onClick={this.selectResult}\n                            >\n                                <div class=''>\n                                    <nobr>\n                                        <span class='text-muted'><i class='fas fa-clock' /></span> {util.formatDate(res.timestamp, { locale: language, year: '2-digit', month: 'short', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                    </nobr>\n                                </div>\n                                <div class='flex-grow-1'>\n                                    <span class='text-muted ml-3'>\n                                        {res.direction === 'in' && <>\n                                            <i class='fas fa-sign-in-alt mr-2 text-success' />\n                                        </>}\n                                        {res.direction === 'out' && <>\n                                            <i class='fas fa-sign-out-alt mr-2 text-primary' />\n                                        </>}\n                                        {res.direction === 'scratched' && <>\n                                            <i class='fas fa-times mr-2 text-danger' />\n                                        </>}\n                                    </span>\n                                    {currentCheckpoint.name}\n                                    {requiredRestMin && <>\n                                        <div>\n                                            {selectedMusher.timeEqualization ? <>\n                                                <span class='text-muted ml-2'>Req rest:</span> {currentCheckpoint.requiredRestMinutes} + {selectedMusher.timeEqualization} min<br />\n                                                <span class='text-muted ml-2'>First out:</span> {util.formatDate(firstOutTime, { locale: language, year: '2-digit', month: 'short', hour12: false, hour: '2-digit', minute: '2-digit' })}<br />\n                                            </> : <>\n                                                <span class='text-muted ml-2'>Req rest:</span> {currentCheckpoint.requiredRestMinutes} min<br />\n                                                <span class='text-muted ml-2'>First out:</span> {util.formatDate(firstOutTime, { locale: language, year: '2-digit', month: 'short', hour12: false, hour: '2-digit', minute: '2-digit' })}<br />\n                                            </>}\n                                        </div>\n                                    </>}\n                                </div>\n                                <div class='px-0'>\n                                    <nobr>\n                                        <span class='text-muted'><i class='fas fa-dog ml-3' /></span> {res.dogs}<br />\n                                    </nobr>\n                                </div>\n                            </div>\n                        </>);\n                    })}\n                </div>\n\n                <div class='d-flex justify-content-center mt-3 mb-5'>\n                    <button class='btn btn-sm btn-block btn-danger' onClick={this.addResult} data-direction='scratched' data-classid={currentClass.id} disabled={isScratched ? 'disabled' : ''}>\n                        Scratch <i class='fas fa-times ml-2' />\n                    </button>\n                </div>\n\n            </div>\n        </>);\n    }\n}\n\nexport default RaceLiveAddResult;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport ImageSlider from '../imageSlider';\nimport StoryComments from './comments';\nimport StoryAddComment from './commentAdd';\nimport Story from './publicStory';\nimport ImageScroller from '../imageScroller';\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport PublicTeam from '../team/public';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n\tshowTeamSetting: {},\n    viewImageIdx: {},\n    likeStory: {},\n};\n\n@observer\nclass StoryEditInline extends Component {\n    constructor(props) {\n        super(props);\n        this.updateTimer = {};\n    }\n\n    saveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyBody: body } = this.state;\n        const { storyStore } = this.props.stores;\n        const { callback = () => true } = this.props;\n        // saveField(id, field, value, updateMemory) {\n        await storyStore.saveField(parseInt(id, 10), 'body', body, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'body', body);\n        this.setState({\n            storyBody: '',\n            storyType: 0,\n\t\t});\n        callback();\n    }\n\n    saveStoryField = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const { value, name } = e.target;\n\n        clearTimeout(this.updateTimer[name]);\n        this.updateTimer[name] = setTimeout(async () => {\n            this.doUpdateField(id, name, value);\n        }, 1000);\n    }\n\n    async doUpdateField(id, name, value) {\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), name, value, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), name, value);\n    }\n\n    render() {\n        const { storyBody, storyType } = this.state;\n        const { userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\n        const { story } = this.props;\n        return (<>\n            <div class='d-flex bd-highlight'>\n                <div class='p-0 w-100 bd-highlight'>\n                    <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                    <div class='border rounded rounded-lg position-relative'>\n                        <Localizer>\n                            <textarea\n                                class='form-control-plaintext px-2'\n                                type='text'\n                                placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                onInput={linkState(this, 'storyBody')}\n                                // onKeyUp={mu.resizeTextarea}\n                                onFocus={mu.resizeTextarea}\n                                style='height: 2.3em;'\n                                value={storyBody || story.body}\n                            />\n                        </Localizer>\n                    </div>\n\n                    <div class='position-relative mt-3'>\n                        {isAdmin && <>\n                            <div class='col-12 text-center mt-2'>\n                                <div class='form-group'>\n                                    <small>\n                                        <label>Pinned to top:</label>\n                                        <input\n                                            type='checkbox'\n                                            id={story.id}\n                                            name='pinned'\n                                            onInput={this.saveStoryField}\n                                            value={story.pinned ? 0 : 1}\n                                            checked={story.pinned ? 1 : 0}\n                                        />\n                                    </small>\n                                </div>\n                            </div>\n                        </>}\n\n                        {isAdmin && <>\n                            <label><Text id='story.type'>Type</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <select\n                                        class='custom-select custom-select-sm'\n                                        id={story.id}\n                                        name='type'\n                                        onInput={this.saveStoryField}\n                                        value={storyType || story.type}\n                                    >\n                                    <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                        <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                        <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                        <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                    </select>\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type >= 2 && <>\n                            <label><Text id='story.url-text'>URL text</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='urlText'\n                                        onInput={this.saveStoryField}\n                                        value={story.urlText}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.url'>URL</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='url'\n                                        onInput={this.saveStoryField}\n                                        value={story.url}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type === 2 && <>\n                            <label><Text id='story.code'>Code</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='code'\n                                        onInput={this.saveStoryField}\n                                        value={story.code}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.country'>Country</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='country'\n                                        onInput={this.saveStoryField}\n                                        value={story.country}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.region'>Region</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='region'\n                                        onInput={this.saveStoryField}\n                                        value={story.region}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.currency'>Currency</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='currency'\n                                        onInput={this.saveStoryField}\n                                        value={story.currency}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.price'>Price</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='price'\n                                        onInput={this.saveStoryField}\n                                        value={story.price}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n                <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                    <button type='button' class='btn btn-primary mb-2'\n                        onClick={this.saveStory}\n                        data-id={story.id}\n                    ><i class='fas fa-paper-plane' /></button>\n                </div>\n            </div>\n        </>)\n    }\n}\n\n@observer\nclass StoryTypeRegular extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedText = await storyStore.translate({ story, user });\n        this.setState({ showOriginal: 0, translatedText });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal, translatedText } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        }) || translatedText;\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n            <div class='row mt-2'>\n                <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeAd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    {/* <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}> */}\n                    <div id='storyDetail' data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price > 0) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                            {story.code && <>\n                                <div class='col text-left' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        <span class='font-weight-lighter'><Text id='story.ad-campaign-code'>Kampanjekode</Text>:</span> {story.code}\n                                    </nobr>\n                                </div>\n                            </>}\n                            {story.price > 0 && <>\n                                <div class='col text-right' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        {story.currencty && <span class='font-weight-lighter'>{story.currency}</span>} {util.format(story.price, 2)}\n                                    </nobr>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeArticle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n\n            {/* Flere artikler fra:... */}\n        </>);\n    }\n}\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n        // this.ref = createRef();\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeStory = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const storyId = id;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeStory } = this.state;\n        likeStory[storyId] = true;\n        const likeIds = Object.keys(likeStory);\n        this.setState({ likeStory, likeIds });\n        setTimeout(() => {\n            const { likeStory } = this.state;\n            delete likeStory[storyId];\n            const likeIds = Object.keys(likeStory);\n            this.setState({ likeStory, likeIds });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStory({ id: storyId });\n        if (response && response.status === 200) {\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[storyId]) {\n            delete showAddComment[storyId];\n        } else {\n            showAddComment[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[storyId]) {\n\t\t\t\tthis.inputRef[storyId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    closeAllAddComments = () => {\n        this.setState({\n\t\t\tshowAddComment: {},\n\t\t});\n    }\n\n\ttoggleShowTeamSetting = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showTeamSetting } = this.state;\n        if (showTeamSetting[storyId]) {\n            delete showTeamSetting[storyId];\n        } else {\n            showTeamSetting[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowTeamSetting,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n        const { hashtag } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed({ hashtag });\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n\t\t\tshowEdit,\n            showMenu: {},\n\t\t});\n\t}\n\n    toggleDeleteStory = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteStory = {} } = this.state;\n        showDeleteStory[id] = !showDeleteStory[id];\n\t\tthis.setState({\n\t\t\tshowDeleteStory,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    reportStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.reportStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    adminRemoveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.adminHideStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), 'offline', 1, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'offline', 1);\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    doneEdit = () => {\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    // IntersectionObserver\n    // componentDidMount() {\n    //     const { addIntersectionObserver } = this.props;\n    //     if (addIntersectionObserver) {\n    //         addIntersectionObserver(this.ref);\n    //     }\n    // }\n\n    // componentWillUnmount() {\n    //     const { removeIntersectionObserver } = this.props;\n    //     if (removeIntersectionObserver) {\n    //         removeIntersectionObserver(this.ref);\n    //     }\n    // }\n    // /IntersectionObserver\n\n    render() {\n        const { showAddComment, showDate, viewImageIdx, showMenu = {}, showEdit = {}, showDeleteStory = {}, showTeamSetting, likeStory, likeIds } = this.state;\n        const { story, showAllComments, sessionid, onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n        const { userStore, storyStore, appState } = this.props.stores;\n        const { user: currentUser = {}, isAdmin } = userStore;\n        const { darkmode, hasShareApi } = appState;\n\n        const team = storyStore.findPublicTeam(story.team) || {};\n        const user = storyStore.findPublicUser(story.user) || {};\n        const image = mu.getImage({ user, team, priority: 'user', object: story });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === currentUser.id) : false;\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n            username = mu.displayName(user);\n            if (user.settings && currentUser.uuidv4 !== user.uuidv4) {\n                userLink = user.settings.hideProfile ? null : `/inbox/${user.uuidv4}`;\n            }\n        } else if (user && user.id) {\n            shortname = mu.displayNameShort(user);\n            name = mu.displayName(user);\n        }\n        const { likes, comments, reports = [] } = story;\n        const hasLikedStory = story.likes && story.likes.findIndex(e => e.user === currentUser.id) > -1;\n        const totalFollowers = team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = story;\n        const views = mu.getViews(story.statistics);\n        const adminData = mu.getAdminData(story.statistics);\n\n        return (<>\n            {/* <div\n                class='row pt-3 pb-3 bg-light'\n                style={`${story.offline ? 'opacity: 0.4;' : ''}`}\n                ref={c => this.ref = c}\n                data-id={story.id}\n                data-type={'story'}\n                data-user={story.user}\n                data-team={story.team}\n                data-title={story.title}\n                data-sessionid={sessionid}\n            >\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}> */}\n                    {(isAdmin || (currentUser.id === user.id)) ? <>\n                        <span class='float-right font-weight-lighter text-muted'>\n                            <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={story.id} />\n                        </span>\n                    </> : <>                    \n                        {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                            <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                        </span>}\n                    </>}\n                    {showMenu[story.id] && <>\n                        <div class='position-absolute bg-light p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                            {currentUser.id === user.id ? <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={story.id}><i class='fas fa-edit' /> Edit</button>\n                                <hr />\n                                <button class='btn btn-link btn-block text-left text-danger' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                            </> : <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.reportStory} data-id={story.id}><i class='fas fa-flag' /> Report</button>\n                                {isAdmin && <>\n                                    <hr />\n                                    <button class='btn btn-link btn-block text-left text-danger' onClick={this.adminRemoveStory} data-id={story.id}>\n                                        <i class='fas fa-eraser' /> Remove from feed\n                                    </button>\n                                </>}\n                            </>}\n                        </div>\n                    </>}\n\n                    <div class='d-flex position-relative'>\n                        <div\n                            class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                            style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                        >\n                            {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                        </div>\n                        <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                            <h5 class='mb-1 position-relative' style={`line-height: 1.0em; ${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {team.public ? <>\n                                    <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => onTeamClick(e, team.uuidv4)} class='stretched-link'>{name}</a>\n                                    {/* <a href={`/stories/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a> */}\n                                </> : <>\n                                    {name}\n                                </>}\n\n                                {isYourTeam && !team.public && <button type='button' class='btn btn-sm btn-link text-muted'\n                                    data-id={story.id}\n                                    onClick={this.toggleShowTeamSetting}\n                                >\n                                    <i class='fas fa-exclamation-triangle' />\n                                </button>}\n\n                            </h5>\n                            <div class='mb-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {story.pinned && <>\n                                    <small class='text-muted mr-2'>\n                                        <i class='fas fa-thumbtack' />\n                                    </small>\n                                </>}\n                                {story.type === 2 ? <>\n                                    <small class='text-muted'><Text id='story.sponsored'>Sponsored</Text> -</small>\n                                </> : <>\n                                    {story.date && <small class='text-muted' onClick={this.toggleDate}>\n                                        {showDate ? util.formatDate(story.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(story.date, new Date(), { locale: 'no-NB' })}\n                                    </small>}\n                                </>}\n                                {story.public === 1 ? <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-globe-europe' />\n                                    </small>\n                                </> : <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                    </small>\n                                </>}\n                                {username && <>\n                                    <small class='ml-2 text-muted'>\n                                        {userLink ? <>\n                                            <i class='fas fa-user' /> <a href={userLink}>{username}</a>\n                                        </> : <>\n                                            <i class='fas fa-user' /> {username}\n                                        </>}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formattedCounty}\n                                    </small>\n                                </>}\n                            </div>\n                            {isAdmin && <div\n                                class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                                style='overflow: auto;'\n                            >\n                                <small class='text-muted mr-2'>Adm:</small>\n                                {reports && reports.length > 0 && <>\n                                    <small class='text-danger mr-2'>\n                                        <i class='fas fa-flag' /> {reports.length}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                                    </small>\n                                </>}\n                                {user.deviceInfo && <>\n                                    <span class='badge badge-secondary ml-2 float-right font-weight-light'>\n                                        {['platform', 'manufacturer', 'model'].map(e => <>\n                                            <span class='ml-2 text-white'>\n                                                {user.deviceInfo[e]}\n                                            </span>\n                                        </>)}\n                                    </span>\n                                </>}\n\n                                {adminData && <>\n                                    <small class='ml-2 text-muted'>\n                                        V: {adminData.count}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                                    </small>\n                                    {story.statisticsCurrent && story.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                        S: {util.format(story.statisticsCurrent.totalInteractions, 0)}\n                                    </small>}\n                                    {story.shadowTags && story.shadowTags.map(tag => <>\n                                        <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                                    </>)}\n                                </>}\n                                {/* {story.tags && <>\n                                    {util.isArray(story.tags) && story.tags.map(tag => <>\n                                        <small class='ml-2 text-muted'>\n                                            {tag}\n                                        </small>\n                                    </>)}\n                                </>} */}\n                            </div>}\n                        </div>\n                    </div>\n\n                    <div class='row mt-2'>\n                        <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                            {showEdit[story.id] && <>\n                                <StoryEditInline\n                                    stores={this.props.stores}\n                                    story={story}\n                                    key={`story-edit-${story.id}`}\n                                    callback={this.doneEdit}\n                                />\n                            </>}\n                            {showDeleteStory[story.id] && <div class='clearfix mt-3 mb-3'>\n                                <button class='btn btn-danger float-left' onClick={this.deleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-times-circle' /> Cancel</button>\n                            </div>}\n                        </div>\n                    </div>\n\n                    {(!story.type || story.type == 1) && <StoryTypeRegular stores={this.props.stores} story={story} key={`story-regular-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                    {story.type == 2 && <StoryTypeAd stores={this.props.stores} story={story} key={`story-ad-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                    {story.type == 3 && <StoryTypeArticle stores={this.props.stores} story={story} key={`story-article-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n\n                    <div class='d-flex justify-content-between mt-2'>\n                        <div class='mr-2'>\n                            <LikesAndComments\n                                stores={this.props.stores}\n                                likes={likes}\n                                comments={comments}\n                                type='story'\n                                onTeamClick={onTeamClick}\n                                onUserClick={onUserClick}\n                            />\n                        </div>\n                        {views > 0 && <>\n                            <div>\n                                <Views\n                                    stores={this.props.stores}\n                                    views={views}\n                                    object={story}\n                                    type='story'\n                                    isTeamAdmin={isTeamAdmin}\n                                    isAdmin={isAdmin}\n                                    onTeamClick={onTeamClick}\n                                    onUserClick={onUserClick}\n                                />\n                            </div>\n                        </>}\n                    </div>\n\n                    {showTeamSetting[story.id] && <>\n                        <small>\n                            <div class='alert alert-info' role='alert'>\n                                <span class='display-4 float-left'>\n                                    <i class='fas fa-exclamation-triangle mr-3 mb-3' />\n                                </span>\n                                <p>\n                                    <Text id='story.alert-text-1'>Your team is not visible and it's not possible to request friendship with your team.</Text>\n                                </p>\n                                <p>\n                                    <Text id='story.alert-text-2'>If you want to make your team visible so other can request to follow your team, you can find the setting here:</Text>\n                                </p>\n                                <p>\n                                    <a href={`/teams/edit/${team.id}`}><Text id='story.alert-text-3'>Edit team</Text></a>\n                                </p>\n                            </div>\n                        </small>\n                    </>}\n\n                    <div>\n                        <div class='row'>\n                            <div class='col text-center'>\n                                <button\n                                    type='button'\n                                    class={`storyImage btn btn-sm btn-outline-${hasLikedStory ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedStory ? 'text-primary' : ''} text-overflow`}\n                                    data-id={story.id}\n                                    onClick={this.likeStory}\n                                >\n                                    <i class={`${hasLikedStory ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> {hasLikedStory ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                </button>\n                            </div>\n                            <div class='col text-center'>\n                                <button\n                                    type='button'\n                                    class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                    data-id={story.id}\n                                    onClick={this.toggleAddComment}\n                                >\n                                    <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                </button>\n                            </div>\n                            {hasShareApi ? <>\n                                <div class='col text-center'>\n                                    <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                        onClick={this.shareLink}\n                                        data-url={`https://themusher.app/share/story/${story.uuidv4}`}\n                                        data-title={`title: ${story.title}`}\n                                    >\n                                        <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                    </button>\n                                </div>\n                            </> : <>\n                                <div class='col text-center'>\n                                    <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                        href={`https://themusher.app/share/story/${story.uuidv4}`}\n                                        target='_blank'\n                                        rel='noreferrer'\n                                        data-native\n                                    >\n                                        <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                    </a>\n                                </div>\n                            </>}\n\n                        </div>\n                    </div>\n\n                    <div class='mt-2'>\n                        <StoryComments\n                            stores={this.props.stores}\n                            story={story}\n                            col='10'\n                            offset='2'\n                            compact={false}\n                            showAllComments={showAllComments}\n                            initCall={this.closeAllAddComments}\n                        />\n                        {showAddComment[story.id] && <StoryAddComment\n                            stores={this.props.stores}\n                            story={story}\n                            inputRef={c => this.inputRef[story.id] = c}\n                            inputRefObject={this.inputRef}\n                            col='10'\n                            offset='2'\n                            key={`story-comment-${story.id}`}\n                        />}\n                    </div>\n\n                {/* </div> */}\n\n            {/* </div> */}\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport Images from '../../components/form/images';\n\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailUserImages extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newRaceUserImage: {},\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n\taddRaceUserImage = async () => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tconst { newRaceUserImage } = this.state;\n\t\tawait raceStore.addUserImage({ id: raceid, newUserImage: newRaceUserImage });\n\t\tthis.setState({\n\t\t\tnewRaceUserImage: {},\n\t\t});\n\t}\n\n\tupdateUserImageUpload = ({ field, value }) => {\n\t\t// updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n\t\tconst { newRaceUserImage } = this.state;\n\t\tnewRaceUserImage[field] = value;\n\t\tthis.setState({ newRaceUserImage });\n\t}\n\n\tremoveRaceUserImage = async (e) => {\n\t\tconst id = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tawait raceStore.removeUserImage({\n\t\t\tid: raceid,\n\t\t\tuserImageId: id,\n\t\t});\n\t}\n\n\teditRaceUserImage = async (e) => {\n\t\tconst { id, field } = e.target.dataset;\n\t\tconst { value } = e.target;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\t\tconst { raceStore } = this.props.stores;\n\t\tconst data = {\n\t\t\traceUserImageId: id,\n\t\t\t[`raceUserImage${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[`${raceid}-${id}-${field}`]);\n\t\tthis.updateTimer[`${raceid}-${id}-${field}`] = setTimeout(async () => {\n\t\t\traceStore.editUserImage({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 1500);\n\n\t\tthis.resizeTextarea(e.target);\n\t}\n\n    resizeTextarea = (el) => {\n\t\tlet element = el;\n\t\tif (element.target) {\n\t\t\telement = el.target;\n\t\t}\n\t\tconst { scrollHeight } = element;\n\t\telement.style.height = `${scrollHeight}px`;\n\t}\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { newRaceUserImage = {} } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n        const tags = ['photos'];\n        if (race.tag) {\n            race.tag.split(',').forEach(tag => {\n                tags.push(tag.trim());\n            })\n        }\n\n        return (<>\n            {user.id && <StoryAdd stores={this.props.stores} hashTags={tags} postfix={`[🔗 ${race.title}: Images](/app-races/${race.id}/userImages)`} topic={`race-${race.id}`} />}\n\n            <StoryPublicFeed stores={this.props.stores} hashtags={tags} />\n\n            {/* <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.user-images'>User images</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    <div class='row'>\n                        {race.userImages && race.userImages.reverse().map(currentUserImage => <>\n                            <div class='col-12 col-sm-12 col-md-6 col-lg-6 col-xl-4 p-3 position-relative mb-3'>\n                                {isAdmin && <>\n                                    <button class='btn btn-danger position-absolute' style='top:5px; right: 5px;' data-id={currentUserImage.id} onClick={this.removeRaceUserImage}>\n                                        <i class='fas fa-times' />\n                                    </button>\n                                </>}\n\n                                <div class='clearfix'>\n                                    <img src={currentUserImage.image.s3LargeLink} class='img-fluid rounded-lg mb-2' />\n                                </div>\n                                <div class='clearfix'>\n                                    <h5 class='mb-0'>{currentUserImage.title}</h5>\n                                    <small class='text-muted'> {util.formatDate(currentUserImage.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</small><br />\n                                </div>\n                                <div class='clearfix'>\n                                    <Markdown markdown={mu.replaceImages(currentUserImage.body, currentUserImage.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>\n\n                                {isAdmin && <>\n                                    <div class='border-top border-bottom mb-5'>\n                                        <details>\n                                            <summary>Admin edit</summary>\n                                            <h5 class='border-bottom'>Admin UserImage Edit</h5>\n                                            {['title'].map(field => <>\n                                                <div class='form-group '>\n                                                    <label for={field}>{field}</label>\n                                                    <input type='text' class='form-control font-weight-bold' id={field} aria-describedby={`${field}Help`}\n                                                        style='font-size: 1.5em;'\n                                                        data-id={currentUserImage.id}\n                                                        data-field={field}\n                                                        value={currentUserImage[field]}\n                                                        onInput={this.editRaceUserImage}\n                                                    />\n                                                </div>\n                                            </>)}\n                                            {['body'].map(field => <>\n                                                <div class='form-group'>\n                                                    <label for={field}>{field}</label>\n                                                    <textarea type='textarea' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                        data-id={currentUserImage.id}\n                                                        data-field={field}\n                                                        value={currentUserImage[field]}\n                                                        onInput={this.editRaceUserImage}\n                                                        style='height: 3em;'\n                                                    />\n                                                </div>\n                                            </>)}\n                                        </details>\n                                    </div>\n                                </>}\n                            </div>\n                        </>)}\n                        {isAdmin && <>\n                            <div class='col-12 border rounded-lg m-2 p-3 bg-light'>\n                                <h5>Add new user image</h5>\n                                <div class='row'>\n                                    <div class='col'>\n                                        {newRaceUserImage && newRaceUserImage.image && <img src={newRaceUserImage.image.s3LargeLink} class='float-right w-50'  onError={this.handleImageErrored} />}\n                                        {['title'].map(field => <>\n                                            <div class='form-group'>\n                                                <label for={field}>{field}</label>\n                                                <input type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                    onInput={linkstate(this, `newRaceUserImage.${field}`)}\n                                                    value={newRaceUserImage[field]}\n                                                />\n                                            </div>\t\t\t\t\t\t\t\t\t\t\n                                        </>)}\n                                        {['body'].map(field => <>\n                                            <div class='form-group'>\n                                                <label for={field}>{field}</label>\n                                                <textarea type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                    onInput={linkstate(this, `newRaceUserImage.${field}`)}\n                                                    onKeyUp={this.resizeTextarea}\n                                                    style='height: 3em;'\n                                                    value={newRaceUserImage[field]}\n                                                />\n                                            </div>\t\t\t\t\t\t\t\t\t\t\n                                        </>)}\n                                    </div>\n                                </div>\n                                <Images saved={{}} object={{}} field={'image'} updateField={this.updateUserImageUpload} autoOpen={false} />\n                                <button class='btn btn-info' onClick={this.addRaceUserImage}>Add race user image</button>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n            </div> */}\n        </>);\n    }\n}\n\nexport default AppRaceDetailUserImages;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass Temperature extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(celciusToFahrenheit(value), 0)}°F\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)}°C\n            </nobr>\n        </>);\n    }\n}\n\nexport default Temperature;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nimport MusherInfoHeader from '../races/musherInfoHeader';\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass RaceLiveMusherResult extends Component {\n    render() {\n        const { bib, onClickNav = () => {} } = this.props;\n\n        const { appState, raceStore, userStore } = this.props.stores;\n        const { user: currentUser = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n        const { checkpointId } = appState;\n        const { sortedContestants = [] } = raceStore;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        const { checkpoints = [], contestants = [], results = [] } = currentClass;\n\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n        let selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(bib, 10)) : null;\n        selectedMusher = selectedMusher ? selectedMusher : {};\n        const selectedMusherIdx = sortedContestants ? sortedContestants.findIndex(e => e.bib === parseInt(bib, 10)) : null;\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(bib, 10)) : null;\n\n        const team = raceStore.getTeamById(selectedMusher.team);\n        const user = team.members ? team.members.find(m => m.email === selectedMusher.email) : {};\n        const image = mu.getImage({ user, team, priority: 'user' });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(selectedMusher);\n\n        let lastResOut;\n        let lastResIn;\n        let totalDistance = 0;\n        let totalMovingTime = 0;\n        let totalInCpTime = 0;\n        let lastEstTimeOut = currentClass.startDate;\n\n        const nextBib = selectedMusherIdx > -1 && sortedContestants[selectedMusherIdx + 1] ? sortedContestants[selectedMusherIdx + 1].bib : null;\n        const prevBib = selectedMusherIdx > -1 && sortedContestants[selectedMusherIdx - 1] ? sortedContestants[selectedMusherIdx - 1].bib : null;\n\n        const locale = 'en-GB';\n\n        return (<>\n            {nextBib && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(nextBib)}>\n                <i class='fas fa-angle-right' />\n            </button>}\n            {prevBib && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(prevBib)}>\n                <i class='fas fa-angle-left' />\n            </button>}\n\n            <MusherInfoHeader\n                stores={this.props.stores}\n                contestant={selectedMusher}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n                onDogClick={this.onDogClick}\n                onClickNav={onClickNav}\n                rank={selectedMusherIdx + 1}\n            >\n                {/* {\n                    \"id\": \"305e720b-12bc-4be3-8244-47a2529c1a26\",\n                    \"user\": 679,\n                    \"Løp\": \"Finnmarksløpet 1200\",\n                    \"bib\": 32,\n                    \"firstname\": \"Thomas\",\n                    \"lastname\": \"Wærner\",\n                    \"cellphone\": \"48176051\",\n                    \"email\": \"thomas.waerner@icloud.com\",\n                    \"country\": \"NO\",\n                    \"flag\": \"🇳🇴\",\n                    \"team\": 2278,\n                    \"startTime\": \"2019-03-08T18:32:00.000Z\",\n                    \"maxStartTime\": 1552071480000,\n                    \"startEpoch\": 1552069920000,\n                    \"timeEqualization\": 26,\n                    \"cpId\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                    \"cpDirection\": \"out\",\n                    \"cpDogs\": 13,\n                    \"cpTimestamp\": \"2019-03-13T00:08:00.000Z\",\n                    \"cpSortOrder\": 8\n                } */}\n                {/* [\n                    {\n                        \"position\": [],\n                        \"id\": \"d9f3d1b6-55e0-4185-b051-e96f1d4eaead\",\n                        \"bib\": 32,\n                        \"checkpoint\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                        \"direction\": \"out\",\n                        \"dogs\": 13,\n                        \"timestamp\": \"2019-03-13T00:08:00.000Z\"\n                    },\n                    {\n                        \"position\": [],\n                        \"id\": \"1503b852-3a61-4b91-8323-5e4f862c4399\",\n                        \"bib\": 32,\n                        \"checkpoint\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                        \"direction\": \"in\",\n                        \"dogs\": 13,\n                        \"timestamp\": \"2019-03-12T19:49:00.000Z\"\n                    }, */}\n                    {/* {\n                        \"position\":[],\n                        \"polygon\":[],\n                        \"id\":\"fa914e06-c56c-4b5b-9719-2dc6ee12c05d\",\n                        \"name\":\"Jergul\",\n                        \"distanceFromStart\":101,\n                        \"sortOrder\":3,\n                        \"distanceFromPrev\":101,\n                        \"estTimeToCpMinutes\":484\n                    } */}\n\n                    {/* <h3>RaceLiveMusherResult</h3> */}\n                    {/* <h5>{bib} {selectedMusher.lastname}</h5> */}\n                    {/* <xmp>{JSON.stringify(team.imageHeader, null, 4)}</xmp> */}\n                    {/* <xmp>{JSON.stringify(user, null, 4)}</xmp> */}\n                    {/* <xmp>{JSON.stringify(image, null, 4)}</xmp> */}\n                <div class='table-responsive'>\n                    <table class='table table-striped table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Checkpoint</th>\n                                <th class='text-center'>In</th>\n                                <th class='text-center'>Out</th>\n                                <th class='text-center'>Moving time</th>\n                                <th class='text-center'>Avg speed</th>\n                                <th class='text-center'>Total moving time</th>\n                                <th class='text-center'>Rest</th>\n                                <th class='text-center'>Total rest</th>\n                                <th class='text-center'>% rest</th>\n                                <th class='text-center'>Distance</th>\n                                <th class='text-center'>Total distance</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {checkpoints && checkpoints.slice().sort(fieldSorter(['sortOrder'])).map((cp, cpIdx) => {\n                                const resIn = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'in') || {};\n                                const resOut = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'out') || {};\n                                const resScratched = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'scratched') || {};\n                                let timeInCp = 0;\n                                if (resIn && resOut && resIn.timestamp && resOut.timestamp) {\n                                    timeInCp = mu.deltaSec(resIn.timestamp, resOut.timestamp);\n                                }\n                                let movingTime = 0;\n                                if (lastResOut && resIn && lastResOut.timestamp && resIn.timestamp) {\n                                    movingTime = mu.deltaSec(lastResOut.timestamp, resIn.timestamp);\n                                }\n\n                                let hasBeenInCp = false;\n                                let avgSpeed = 0;\n                                if (resIn && resIn.timestamp) {\n                                    hasBeenInCp = true;\n                                    avgSpeed = cp.distanceFromPrev / (movingTime / 3600);\n                                }\n                                totalDistance += cp.distanceFromPrev ? parseInt(cp.distanceFromPrev, 10) : 0;\n                                totalMovingTime += movingTime ? movingTime : 0;\n                                totalInCpTime += timeInCp ? timeInCp : 0;\n                                const percentRest = totalInCpTime / totalMovingTime * 100;\n\n                                let line;\n                                if (hasBeenInCp) {\n                                    let estTimeOut;\n                                    let estRest;\n                                    if (!resOut || !resOut.timestamp) {\n                                        if (cp.isStartLine) {\n                                            estRest = 0;\n                                        } else if (cp.requiredRestMinutes && cp.timeEqualization && selectedMusher.timeEqualization) {\n                                            estRest = cp.requiredRestMinutes * 60 + selectedMusher.timeEqualization * 60;\n                                        } else if (cp.requiredRestMinutes > 0) {\n                                            estRest = cp.requiredRestMinutes * 60;\n                                        } else {\n                                            estRest = 180 * 60;\n                                        }\n                                        estTimeOut = mu.addDeltaSec(resIn.timestamp, estRest);\n                                        lastEstTimeOut = estTimeOut;\n                                    }\n\n                                    line = (<>\n                                        <tr>\n                                            <td><nobr>{cp.name}</nobr></td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(resIn.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(resIn.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    <i class='fas fa-dog text-muted ml-2' /> {resIn.dogs}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {resOut.timestamp && <nobr>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(resOut.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(resOut.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    <i class='fas fa-dog text-muted ml-2' /> {resOut.dogs}\n                                                </nobr>}\n                                                {!resScratched.timestamp && estTimeOut && <nobr class='text-muted font-weight-lighter'>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(estTimeOut, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(estTimeOut, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                </nobr>}\n                                                {resScratched.timestamp && <nobr class='text-danger'>\n                                                    <i class='fas fa-times' />\n                                                    <span class='text-muted mr-1'>{mu.formatDate(resScratched.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(resScratched.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.secToHms(movingTime, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.secToHms(totalMovingTime, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <>                                                \n                                                    {estRest > 0 ? <>\n                                                        <nobr class='text-muted font-weight-lighter'>\n                                                            {util.secToHms(estRest, true)}\n                                                        </nobr>\n                                                    </> : <>\n                                                        <nobr>\n                                                            {util.secToHms(timeInCp, true)}\n                                                        </nobr>\n                                                    </>}                                                \n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <>\n                                                    <nobr>\n                                                        {util.secToHms(totalInCpTime, true)}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {util.format(percentRest || 0, 0)} <span class='text-muted font-weight-lighter'>%</span>\n                                                </nobr>\n                                            </td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {cp.distanceFromPrev || 0} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {totalDistance} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                        </tr>\n                                    </>);\n                                    if (resOut && resOut.timestamp) {\n                                        lastEstTimeOut = resOut.timestamp;\n                                    }\n                                } else {\n                                    let estTimeIn;\n                                    let estTimeOut;\n                                    let estRest;\n                                    let estTimeToNext = cp.estTimeToCpMinutes || 0;\n                                    if (lastEstTimeOut) {\n                                        estTimeIn = mu.addDeltaSec(lastEstTimeOut, estTimeToNext * 60);\n                                        // requiredRestMinutes: Number,\n                                        // estTimeToCpMinutes: Number,\n                                        // timeEqualization: Number,\n                                        if (cp.isStartLine) {\n                                            estRest = 0;\n                                        } else if (cp.requiredRestMinutes && cp.timeEqualization && selectedMusher.timeEqualization) {\n                                            estRest = cp.requiredRestMinutes * 60 + selectedMusher.timeEqualization * 60;\n                                        } else if (cp.requiredRestMinutes > 0) {\n                                            estRest = cp.requiredRestMinutes * 60;\n                                        } else {\n                                            estRest = (cp.estRestMinutes || 180) * 60;\n                                        }\n                                        estTimeOut = mu.addDeltaSec(estTimeIn, estRest);\n                                        lastEstTimeOut = estTimeOut;\n                                    }\n                                    avgSpeed = cp.distanceFromPrev / (estTimeToNext * 60 / 3600);\n                                    line = (\n                                        <tr>\n                                            <td>{cp.name}</td>\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isStartLine && estTimeIn && <nobr>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(estTimeIn, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(estTimeIn, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isFinishLine && estTimeOut && <nobr>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(estTimeOut, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(estTimeOut, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.secToHms(cp.estTimeToCpMinutes * 60, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isStartLine && !cp.isFinishLine && <nobr>\n                                                    {util.secToHms(estRest, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {cp.distanceFromPrev || 0} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                        </tr>\n                                    );\n                                }\n                                lastResOut = resOut;\n                                lastResIn = resIn;\n                                return line;\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n\n                {/* <xmp>{JSON.stringify(selectedMusher, null, 4)}</xmp> */}\n                {/* <xmp>{JSON.stringify(currentClass, null, 4)}</xmp> */}\n                {/* <xmp>{JSON.stringify(lastResults, null, 4)}</xmp> */}\n            </MusherInfoHeader>\n        </>);\n    }\n}\n\nexport default RaceLiveMusherResult;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport Images from '../../components/form/images';\n\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailNews extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newRaceArticle: {},\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    addRaceArticle = async () => {\n\t\tconst { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tconst { newRaceArticle } = this.state;\n\t\tawait raceStore.addArticle({ id: raceid, newArticle: newRaceArticle });\n\t\tthis.setState({\n\t\t\tnewRaceArticle: {},\n\t\t});\n\t}\n\n    editRaceArticle = async (e) => {\n\t\tconst { id, field } = e.target.dataset;\n\t\tconst { value } = e.target;\n\t\tconst { race = {} } = this.props;\n        const raceid = race.id;\n\t\tconst { raceStore } = this.props.stores;\n\t\tconst data = {\n\t\t\traceArticleId: id,\n\t\t\t[`raceArticle${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[`${raceid}-${id}-${field}`]);\n\t\tthis.updateTimer[`${raceid}-${id}-${field}`] = setTimeout(async () => {\n\t\t\traceStore.editArticle({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 1500);\n\n\t\tthis.resizeTextarea(e.target);\n\t}\n\n    removeRaceArticle = async (e) => {\n\t\tconst id = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tawait raceStore.removeArticle({\n\t\t\tid: raceid,\n\t\t\tarticleId: id,\n\t\t});\n\t}\n\n    updateArticleUpload = ({ field, value }) => {\n\t\t// updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n\t\tconst { newRaceArticle } = this.state;\n\t\tnewRaceArticle[field] = value;\n\t\tthis.setState({ newRaceArticle });\n\t}\n\n    resizeTextarea = (el) => {\n\t\tlet element = el;\n\t\tif (element.target) {\n\t\t\telement = el.target;\n\t\t}\n\t\tconst { scrollHeight } = element;\n\t\telement.style.height = `${scrollHeight}px`;\n\t}\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { newRaceArticle } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n\n        const tags = ['news'];\n        if (race.tag) {\n            race.tag.split(',').forEach(tag => {\n                tags.push(tag.trim());\n            })\n        }\n\n        return (<>\n            {user.id && <StoryAdd stores={this.props.stores} hashTags={tags} postfix={`[🔗 ${race.title}: News](/app-races/${race.id}/news)`} topic={`race-${race.id}`} />}\n\n            <StoryPublicFeed stores={this.props.stores} hashtags={tags} />\n\n            {/* <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.news'>Nyheter</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    <div class='row'>\n                        {race.articles && race.articles.reverse().map(currentArticle => <>\n                            <div class='col-12 col-sm-12 col-md-6 col-lg-6 col-xl-4 p-3 position-relative mb-3'>\n                                <h5 class='mb-0'>{mu.replaceImages(currentArticle.title, race.images, language, false)}</h5>\n                                <small class='text-muted'> {util.formatDate(currentArticle.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</small><br />\n                                {currentArticle.image && <img src={currentArticle.image.s3LargeLink} class='float-right w-50 rounded-lg ml-2' />}\n                                <div class='font-weight-bold'>\n                                    <Markdown markdown={mu.replaceImages(currentArticle.ingress, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>\n                                <div class='clearfix'>\n                                    <Markdown markdown={mu.replaceImages(currentArticle.body, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>\n\n                                {isAdmin && <>\n                                    <div class='border-top border-bottom mb-5'>\n                                        <details>\n                                            <summary>Admin edit</summary>\n                                            <h5 class='border-bottom'>Admin News Edit</h5>\n                                            {['title'].map(field => <>\n                                                <div class='form-group'>\n                                                    <label for={field}>{field}</label>\n                                                    <input type='text' class='form-control font-weight-bold' id={field} aria-describedby={`${field}Help`}\n                                                        style='font-size: 1.5em;'\n                                                        data-id={currentArticle.id}\n                                                        data-field={field}\n                                                        value={currentArticle[field]}\n                                                        onInput={this.editRaceArticle}\n                                                    />\n                                                </div>\n                                            </>)}\n                                            {['ingress', 'body'].map(field => <>\n                                                <div class='form-group'>\n                                                    <label for={field}>{field}</label>\n                                                    <textarea type='textarea' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                        data-id={currentArticle.id}\n                                                        data-field={field}\n                                                        value={currentArticle[field]}\n                                                        onInput={this.editRaceArticle}\n                                                        style='height: 3em;'\n                                                    />\n                                                </div>\n                                            </>)}\n                                        </details>\n                                    </div>\n                                </>}\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n                {isAdmin && <>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                        <h5>Add new article</h5>\n                        {newRaceArticle && newRaceArticle.image && <img src={newRaceArticle.image.s3LargeLink} class='float-right w-50'  onError={this.handleImageErrored} />}\n\n                        {['title'].map(field => <>\n                            <div class='form-group'>\n                                <label for={field}>{field}</label>\n                                <input type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                    onInput={linkstate(this, `newRaceArticle.${field}`)}\n                                    value={newRaceArticle[field]}\n                                />\n                            </div>\t\t\t\t\t\t\t\t\t\t\n                        </>)}\n                        {['ingress', 'body'].map(field => <>\n                            <div class='form-group'>\n                                <label for={field}>{field}</label>\n                                <textarea type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                    onInput={linkstate(this, `newRaceArticle.${field}`)}\n                                    onKeyUp={this.resizeTextarea}\n                                    style='height: 3em;'\n                                    value={newRaceArticle[field]}\n                                />\n                            </div>\t\t\t\t\t\t\t\t\t\t\n                        </>)}\n                        <Images saved={{}} object={{}} field={'image'} updateField={this.updateArticleUpload} autoOpen={false} />\n                        <button class='btn btn-info' onClick={this.addRaceArticle}>Add race article</button>\n                    </div>\n                </>}\n            </div> */}\n        </>);\n    }\n}\n\nexport default AppRaceDetailNews;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport mu from '../../../lib/musher-util';\n\n@observer\nclass RaceCommentReply extends Component {\n    commentRace = async () => {\n        const { callback = () => {}, commentId } = this.props;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n        const { comment = '' } = this.state;\n\t\tconst response = await raceStore.commentReplyRace({ id: race.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            });\n            callback({ race, response });\n\t\t}\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <Localizer>\n                                    <textarea\n                                        class='form-control rounded-lg'\n                                        type='text'\n                                        placeholder={<Text id='comments.write-reply'>Write a reply...</Text>}\n                                        onInput={linkState(this, 'comment')}\n                                        onKeyUp={mu.resizeTextarea}\n                                        onFocus={mu.resizeTextarea}\n                                        style='height: 2.3em;'\n                                        value={comment}\n                                        ref={inputRef}\n                                    />\n                                </Localizer>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-sm btn-primary mb-2'\n                                    onClick={this.commentRace}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RaceCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kgToPounds(value) {\n    return 2.20462 * value;\n}\n\n@observer\nclass Weight extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kgToPounds(value), 0)} lb\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} kg\n            </nobr>\n        </>);\n    }\n}\n\nexport default Weight;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\trequestSent: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadTeams() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { teamStore } = this.props.stores;\n\t\tawait teamStore.loadPublic({ query: { notfollowing: 1, array: 1 }, limit: 15 });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\trequestFollowTeam = (e) => {\n        const { teamStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const { team } = e.target.closest('button').dataset;\n        teamStore.followRequest(parseInt(team, 10), user);\n\t\tconst { requestSent } = this.state;\n\t\trequestSent[team] = true;\n        this.setState({ requestSent });\n    }\n\n    getButton = (team) => {\n        const { requestSent } = this.state;\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n        const isYourTeam = team.members && team.members.findIndex(e => e.id === user.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(user.id) > -1;\n        const isBlocked = team.blockedFollowers && team.blockedFollowers.indexOf(user.id) > -1;\n        const hasRequestedFollow = requestSent[team.id] || team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n        if (isYourTeam) {\n            return (\n                <i class='fas fa-home' />\n            );\n        }\n        if (isFollowing) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    onClick={this.unFollowTeam}\n                    disabled='true'\n                    data-team={team.id}\n                >\n                    <i class='fas fa-link mr-2' />\n                    <Text id='teams.connect.is-following'>Følger</Text>\n                </button>\n            );\n        }\n        if (isBlocked) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hand-paper mr-2' />\n                    <Text id='teams.connect.is-blocked'>Blokkert</Text>\n                </button>\n            );\n        }\n        if (hasRequestedFollow) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hourglass-half mr-2' />\n                    <Text id='teams.connect.has-requested'>Venter på godkjenning</Text>\n                </button>\n            );\n        }\n        return (\n            <button\n                class={`btn btn-sm btn-block btn-outline-success float-right`}\n                onClick={this.requestFollowTeam}\n                data-team={team.id}\n            >\n                <i class='far fa-hand-point-right mr-2' />\n                <Text id='teams.connect.follow'>Følg</Text>\n            </button>\n        );\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { publicTeamsToFollow } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!publicTeamsToFollow || publicTeamsToFollow.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n\t\t\t<div class='row pb-1 bg-light'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\t\t\t\t\t<div class='container-fluid'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<h5><Text id='teams.connect.teams-to-follow'>Team du kan følge</Text>:</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n\t\t\t\t\t\t\t\t{util.isArray(publicTeamsToFollow) && publicTeamsToFollow.map((team) => {\n\t\t\t\t\t\t\t\t\tconst image = team.image && team.image.s3SmallLink ? team.image : null;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div class='mr-2' style='width: 110px;'>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclass={`text-center border rounded-lg`}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={image ? `background-image: url(\"${image.s3SmallLink}\"); background-size: cover; width: 110px; height: 100px;` : 'width: 110px; height: 100px;'}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{!image && <i class='fas fa-users text-muted mt-3' style='font-size: 40px;' />}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{team.name}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{team.place ? `${team.place}, ` : ''} {team.country} &nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.dogs && <span class=''><i class='fas fa-dog' /> {team.dogs.length}</span>} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.followers && <span class='ml-2'><i class='fas fa-user' /> {team.followers.length}</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.getButton(team)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport RaceReplyComment from './commentReply';\n\nimport mu from '../../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n    showOriginal: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass RaceComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    addLikeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.closest('.commentContainer').dataset.id;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n\n        const { likeComment } = this.state;\n        likeComment[commentId] = true;\n        this.setState({ likeComment });\n        setTimeout(() => {\n            const { likeComment } = this.state;\n            delete likeComment[commentId];\n            this.setState({ likeComment });\n        }, 1200);\n\n\t\tconst response = await raceStore.likeRaceComment({ id: race.id, commentId });\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', race, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n        const replyId = e.target.closest('.replyContainer').dataset.id;\n        const commentId = e.target.closest('.replyContainer').dataset.comment;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n\n        const { likeReply } = this.state;\n        likeReply[replyId] = true;\n        this.setState({ likeReply });\n        setTimeout(() => {\n            const { likeReply } = this.state;\n            delete likeReply[replyId];\n            this.setState({ likeReply });\n        }, 1200);\n\n\t\tconst response = await raceStore.likeRaceCommentReply({ id: race.id, replyId, commentId });\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', race, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id, comment: commentEditText } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n\t\t\tshowEdit,\n            showMenu: {},\n            commentEditText,\n\t\t});\n\t}\n\n    toggleDeleteComment = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteComment = {} } = this.state;\n        showDeleteComment[id] = !showDeleteComment[id];\n\t\tthis.setState({\n\t\t\tshowDeleteComment,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    deleteComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.deleteCommentRace({ id: race.id, commentId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.deleteCommentReplyRace({ id: race.id, commentId, replyId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\n    }\n\n    saveComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.editCommentRace({ id: race.id, commentId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    saveCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.editCommentReplyRace({ id: race.id, commentId, replyId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { race } = this.props;\n        const { userStore, raceStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await raceStore.translateCommentReply({ commentid, replyid, race, user });\n        } else {\n            translatedText[key] = await raceStore.translateComment({ commentid, race, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showMenu = {}, showEdit = {},\n            showDeleteComment = {}, commentEditText, likeComment, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { race, callback = () => {}, initCall = () => {}, col = 12, offset = 0, compact = false  } = this.props;\n        const { userStore, raceStore } = this.props.stores;\n        const { user: currentUser } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (race.comments) {\n            totalComments = race.comments.length;\n            if (showAllComments) {\n                filteredComments = race.comments;\n            } else {\n                // filteredComments = race.comments.slice(0, MAX_COMMENTS);\n                const max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = race.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n\n        return (\n            <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3`}>\n                {race && util.isArray(filteredComments) && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = raceStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                    const translation = raceStore.getCommentTranslations({\n                        race,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg position-relative'>\n\n                                        {currentUser.id === user.id && <>\n                                            <span class='float-right font-weight-lighter text-muted'>\n                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={comment.id} />\n                                            </span>\n                                        </>}\n                                        {showMenu[comment.id] && <>\n                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={comment.id} data-comment={comment.comment}><i class='fas fa-edit' /> Edit</button>\n                                                <hr />\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                            </div>\n                                        </>}\n\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                    {teams && teams.length > 0 && <>\n                                                        <span class='font-weight-lighter text-muted ml-1'>\n                                                            {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                - <a href={`/teams/public/${t.uuidv4}`}>{t.name}</a>\n                                                            </>)}\n                                                        </span>\n                                                    </>}\n                                                </h5>\n\n\n                                                {showEdit[comment.id] ? <>\n                                                    <div class='d-flex bd-highlight'>\n                                                        <div class='p-0 w-100 bd-highlight'>\n                                                            <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                            <div class='border rounded rounded-lg position-relative'>\n                                                                <Localizer>\n                                                                    <textarea\n                                                                        class='form-control-plaintext px-2'\n                                                                        type='text'\n                                                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                        onInput={linkState(this, 'commentEditText')}\n                                                                        onKeyUp={mu.resizeTextarea}\n                                                                        onFocus={mu.resizeTextarea}\n                                                                        style='height: 2.3em;'\n                                                                        value={commentEditText}\n                                                                    />\n                                                                </Localizer>\n                                                           </div>\n                                                        </div>\n                                                        <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                            <button type='button' class='btn btn-primary mb-2'\n                                                                onClick={this.saveComment}\n                                                                data-id={comment.id}\n                                                            ><i class='fas fa-paper-plane' /></button>\n                                                        </div>\n                                                    </div>\n                                                </> : <>\n                                                    <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </>}\n                                                {showDeleteComment[comment.id] && <div class='clearfix mt-3 mb-3'>\n                                                    <button class='btn btn-danger float-left' onClick={this.deleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                </div>}\n\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row position-relative'>\n                                                    <div\n                                                        class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 60vh;`}\n                                                        onDblclick={this.addLikeComment}\n                                                        data-id={comment.id}\n                                                    >\n                                                        <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                    {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                        <i class='fas fa-heart likeStory' />\n                                                    </span>}\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {util.isArray(images) && images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`commentContainer btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.addLikeComment}\n                                            data-id={comment.id}\n                                            disabled={hasLikedComment}\n                                        >\n                                            {hasLikedComment ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && util.isArray(filteredReplises) && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = raceStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = mu.displayNameShort(user);\n                                    const displayName = mu.displayName(user);\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n                                    const { currentLocationGeocode = {} } = reply;\n\n                                    const replyTranslation = raceStore.getCommentReplyTranslations({\n                                        race,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div\n                                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg position-relative'>\n                                                    {currentUser.id === user.id && <>\n                                                            <span class='float-right font-weight-lighter text-muted'>\n                                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={reply.id} />\n                                                            </span>\n                                                        </>}\n                                                        {showMenu[reply.id] && <>\n                                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={reply.id} data-comment={reply.comment}><i class='fas fa-edit' /> Edit</button>\n                                                                <hr />\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                            </div>\n                                                        </>}\n\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                                {displayName}\n                                                                {teams && teams.length > 0 && <>\n                                                                    <span class='font-weight-lighter text-muted ml-2'>\n                                                                        {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                            - <a href={`/teams/public/${t.uuidv4}`} class='mr-2'> {t.name}</a>\n                                                                        </>)}\n                                                                    </span>\n                                                                </>}\n                                                            </h5>\n\n\n                                                            {showEdit[reply.id] ? <>\n                                                                <div class='d-flex bd-highlight'>\n                                                                    <div class='p-0 w-100 bd-highlight'>\n                                                                        <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                                        <div class='border rounded rounded-lg position-relative'>\n                                                                            <Localizer>\n                                                                                <textarea\n                                                                                    class='form-control-plaintext px-2'\n                                                                                    type='text'\n                                                                                    placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                                    onInput={linkState(this, 'commentEditText')}\n                                                                                    onKeyUp={mu.resizeTextarea}\n                                                                                    onFocus={mu.resizeTextarea}\n                                                                                    style='height: 2.3em;'\n                                                                                    value={commentEditText}\n                                                                                />\n                                                                            </Localizer>\n                                                                    </div>\n                                                                    </div>\n                                                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                                        <button type='button' class='btn btn-primary mb-2'\n                                                                            onClick={this.saveCommentReply}\n                                                                            data-commentid={comment.id}\n                                                                            data-id={reply.id}\n                                                                        ><i class='fas fa-paper-plane' /></button>\n                                                                    </div>\n                                                                </div>\n                                                            </> : <>\n                                                                <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                            </>}\n                                                            {showDeleteComment[reply.id] && <div class='clearfix mt-3 mb-3'>\n                                                                <button class='btn btn-danger float-left' onClick={this.deleteCommentReply} data-id={reply.id} data-commentid={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                            </div>}\n\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`replyContainer btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                            disabled={hasLikedReply}\n                                                        >\n                                                            {hasLikedReply ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                            {reply.updatedDate && <>\n                                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(reply.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                                            </>}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <RaceReplyComment stores={this.props.stores} race={race}\n                                    initCall={initCall}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                    key={`race-commentreply-${comment.id}`}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default RaceComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DogSimplePublic from './simplePublic';\n\n@observer\nclass DogScroller extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageIdx: 0,\n        };\n    }\n\n    scrollImages = (e) => {\n        const { dogs } = this.props;\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const imageStep = clientWidth;\n        const imageIdx = scrollLeft / imageStep;\n        // console.log({ e, imageStep, imageIdx, scrollLeft, scrollWidth, clientWidth });\n\n        const nearestInt = Math.round(imageIdx);\n        const diff = Math.abs(nearestInt - imageIdx);\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(imageIdx) || diff < 0.1) {\n            this.setState({\n                imageIdx: nearestInt,\n            });\n        }\n    }\n\n    sortByName = (a, b) => {\n        const { allDogs = [] } = this.props;\n        const dogA = allDogs.find(e => e.id === a);\n        const dogB = allDogs.find(e => e.id === b);\n        if (dogA && dogB) {\n            if (dogA.name > dogB.name) {\n                return 1;\n            }\n        }\n        return -1;\n    }\n\n    render() {\n        const { imageIdx } = this.state;\n        const { dogs, allDogs = [], size = 'medium', onDogClick = () => {} } = this.props;\n\n        return (\n            <div class='w-100'>\n                <div\n                    class='d-flex flex-row flex-nowrap no-scrollbar'\n                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                    onScroll={this.scrollImages}\n                >\n                    {dogs && dogs.sort(this.sortByName).map((dogId, idx) => {\n                        const dog = allDogs.find(e => e.id === dogId);\n                        if (!dog) {\n                            return '';\n                        }\n                        return (\n                            <div class='col clearfix position-relative p-0 mx-2'>\n                                <div\n                                    class={`w-100 h-100 text-center rounded-lg imageContainer d-flex justify-content-center align-items-center`}\n                                    style={`\n                                        flex-wrap: wrap;\n                                        overflow-y: hidden;\n                                    `}\n                                    onTouchstart={(e) => { e.stopPropagation(); }}\n                                    onTouchend={(e) => { e.stopPropagation(); }}\n                                    onTouchmove={(e) => { e.stopPropagation(); }}\n                                >\n                                    <DogSimplePublic\n                                        stores={this.props.stores}\n                                        dog={dog}\n                                        dogs={allDogs.filter(d => dogs.indexOf(d.id) > -1).sort((a, b) => a.name > b.name ? 1 : -1)}\n                                        className='mx-auto'\n                                        showName={true}\n                                        showPosition={false}\n                                        size={size}\n                                        onDogClick={onDogClick} \n                                    />\n                                    {/* <xmp>{JSON.stringify(img, null, 4)}</xmp> */}\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DogScroller;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {\n};\n\n@observer\nclass RaceText extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    render() {\n\t\tconst { appState } = this.props.stores;\n\t\tconst { text } = this.props;\n\t\tconst { darkmode, language = 'en' } = appState;\n\n        let finalText = text;\n\n        const regex = new RegExp(`/<${language}>(.*?)<\\/${language}>/`);\n        const parsedText = text.replace(regex, '$1');\n        if (parsedText) {\n            finalText = text;\n        }\n\n\t\treturn (\n\t\t\t<>\n                {finalText}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default RaceText;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tisLoading: false,\n};\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass RaceLiveResults extends Component {\n    componentWillReceiveProps(nextProps) {\n        if (this.props.currentClass.id !== nextProps.currentClass.id || this.props.reloadLastEpoch !== nextProps.reloadLastEpoch) {\n            const { currentClass } = this.props;\n            const { raceStore } = this.props.stores;\n            const { checkpoints = [], contestants = [], results = [] } = currentClass;\n            raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n        }\n\t}\n\n    componentDidMount() {\n        const { currentClass } = this.props;\n        const { raceStore } = this.props.stores;\n        const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\t}\n\n    render() {\n        const widthCp = 20;\n        const width = 40;\n\t\tconst {\n            race,\n            currentClass,\n            onClickMusher = () => {},\n            onClickCheckpoint = () => {},\n            selectedCheckpointId,\n            limit = 100,\n            tableClass = 'table-striped table-sm',\n            thClass,\n            thStyle,\n            tdClass,\n            tdStyle,\n            progressStyle = 'height: 20px;',\n            progressbarStyle,\n        } = this.props;\n        const { checkpoints = [], results = [] } = currentClass;\n        const { raceStore } = this.props.stores;\n        const { sortedContestants = [] } = raceStore;\n        const dotColor = '#808080';\n\n\t\treturn (<>\n            <div class='table-responsive'>\n                <table class={`table ${tableClass}`}>\n                    <thead>\n                        <tr>\n                            <th class={thClass} style={thStyle}>\n                                <div class='' style={`width: ${width}px;`}>\n                                    <i class='fas fa-flag' />\n                                </div>\n                            </th>\n                            {checkpoints && checkpoints.slice().sort(fieldSorter(['sortOrder'])).map((cp, cpIdx) => <>\n                                {cpIdx > 0 && <th class={thClass} style={thStyle}>\n                                    <div class='' style={`width: ${width}px;`}>\n                                        &nbsp;\n                                    </div>\n                                </th>}\n                                <th class={thClass} style={thStyle}>\n                                    <div\n                                        class={`checkpoint position-relative ${selectedCheckpointId === cp.id ? 'text-primary' : ''}`}\n                                        style={`width: ${widthCp}px; font-size: 1.1em;`}\n                                        onClick={onClickCheckpoint}\n                                        data-id={cp.id}\n                                    >\n                                        <i class='fas fa-campground' />\n\n                                        <div\n                                            class={`rounded-pill-both px-1 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                                            style={`bottom: 0px; right: -20px; font-size: 0.6em; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                                        >\n                                            {cp.sortOrder && cp.sortOrder !== 'n/a' && <>{cp.sortOrder}</>}\n                                        </div>\n\n                                    </div>\n                                </th>\n                            </>)}\n                            <th class={thClass} style={thStyle}>\n                                <div class='' style={`width: ${widthCp}px;`}>\n                                    <i class='fas fa-flag-checkered' />\n                                </div>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {sortedContestants && sortedContestants.slice(0, limit).map((co, coIdx) => {\n                            let cpIdx = 0;\n                            let hasLeftCpPrev;\n                            let bibIdxOutPrev;\n                            let estTimeToCpMinutesPrev;\n                            return(<>\n                                <tr class='musher' onClick={onClickMusher} data-bib={co.bib}>\n                                    <td class={tdClass} style={tdStyle}>\n                                        {co.startTime ? util.isoTime(co.startTime) : ''}\n                                    </td>\n                                    {checkpoints && checkpoints.slice().sort(fieldSorter(['sortOrder'])).map((cp, idx) => {\n                                        const res = results.slice().sort(fieldSorter(['timestamp'])).filter(e => parseInt(e.bib, 10) == co.bib && e.checkpoint === cp.id);\n                                        const hasLeftCp = res.find(e => e.direction === 'out');\n                                        const hasArrivedCp = res.find(e => e.direction === 'in');\n                                        const hasScratched= res.find(e => e.direction === 'scratched');\n\n                                        const allResultsIn = results.slice().sort(fieldSorter(['timestamp'])).filter(e => e.direction === 'in' && e.checkpoint === cp.id);\n                                        const bibIdxIn = allResultsIn.findIndex(e => parseInt(e.bib, 10) == co.bib);\n\n                                        const allResultsOut = results.slice().sort(fieldSorter(['timestamp'])).filter(e => e.direction === 'out' && e.checkpoint === cp.id);\n                                        const bibIdxOut = allResultsOut.findIndex(e => parseInt(e.bib, 10) == co.bib);\n\n                                        if (bibIdxIn === -1)  {\n                                            if (hasLeftCpPrev) {\n                                                const timeUsedOnStage = Math.floor(new Date(hasLeftCpPrev.timestamp).getTime() / 1000 / 60);\n                                                let percentDone = timeUsedOnStage / estTimeToCpMinutesPrev * 100;\n                                                percentDone = percentDone > 95 ? 95 : percentDone;\n                                                const line = (<>\n                                                    <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                                        <div class='progress' style={`${progressStyle}`}>\n                                                            <div\n                                                                class={`progress-bar progress-bar-striped progress-bar-animated`}\n                                                                role='progressbar'\n                                                                style={`width: ${percentDone}%; ${progressbarStyle}`}\n                                                                aria-valuenow={percentDone}\n                                                                aria-valuemin='0'\n                                                                aria-valuemax='100'\n                                                            >{bibIdxOutPrev + 1 > 0 ? bibIdxOutPrev + 1 : ''}</div>\n                                                        </div>\n\n                                                        {/* estTimeToCpMinutesPrev: {estTimeToCpMinutesPrev}\n                                                        timeUsedOnStage: {timeUsedOnStage}\n                                                        percentDone: {percentDone} */}\n                                                        {co.cpId && res.length > 0 && <>\n                                                            {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                                            {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                                            {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                                        </>}\n                                                    </td>\n                                                </>);\n                                                bibIdxOutPrev = bibIdxOut;\n                                                hasLeftCpPrev = hasLeftCp;\n                                                estTimeToCpMinutesPrev = cp.estTimeToCpMinutes;\n                                                return line;\n                                            }\n                                            return '';\n                                        }\n                                        cpIdx = idx;\n                                        bibIdxOutPrev = bibIdxOut;\n                                        hasLeftCpPrev = hasLeftCp;\n                                        estTimeToCpMinutesPrev = cp.estTimeToCpMinutes;\n                                        return (<>\n                                            {hasArrivedCp && idx > 0 && <>\n                                                <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                                    <div class='progress' style={`${progressStyle}`}>\n                                                        <div\n                                                            class={`progress-bar`}\n                                                            role='progressbar'\n                                                            style={`width: 100%; ${progressbarStyle}`}\n                                                            aria-valuenow='10'\n                                                            aria-valuemin='0'\n                                                            aria-valuemax='100'\n                                                        />\n                                                    </div>\n                                                    {co.cpId && res.length > 0 && <>\n                                                        {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                                        {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                                        {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                                    </>}\n                                                </td>\n                                            </>}\n                                            <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                                <div class='progress' style={`${progressStyle}`}>\n                                                    <div\n                                                        class={`progress-bar ${hasScratched ? 'bg-danger' : 'bg-success'}`}\n                                                        role='progressbar'\n                                                        style={`width: 100%; ${progressbarStyle}`}\n                                                        aria-valuenow='10'\n                                                        aria-valuemin='0'\n                                                        aria-valuemax='100'\n                                                    >{bibIdxIn + 1 > 0 ? bibIdxIn + 1 : ''}</div>\n                                                </div>\n                                                {co.cpId && res.length > 0 && <>\n                                                    {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                                    {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                                    {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                                </>}\n                                            </td>\n                                        </>);\n                                    })}\n                                    <td colspan={checkpoints.length * 2 - cpIdx} class={tdClass} style={tdStyle}>\n                                        <div class='d-flex flex-nowrap'>\n                                            <div\n                                                class='text-white font-weight-bolder pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                                style={`background-color: ${mu.getRankingColor(coIdx + 1)}; width: 45px;`}\n                                            >\n                                                {co.bib}\n                                            </div>\n                                            <div>\n                                                <nobr>\n                                                    {co.flag} {co.lastname}\n                                                </nobr>\n                                            </div>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </>);\n                        })}\n                    </tbody>\n                </table>\n            </div>\n\t\t</>);\n\t}\n}\n\nexport default RaceLiveResults;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\n@observer\nclass Drawer extends Component {\n\n    render() {\n        const { appState } = this.props.stores;\n        const { darkmode } = appState;\n        const { children, onCloseClick = () => {}, classNames = 'fixed-bottom', width = '100vw' } = this.props;\n        return (\n            <div\n                class={`${classNames} ${darkmode ? 'bg-darkmode' : 'bg-lightmode'} border rounded rounded-lg pt-4 pb-3 px-4`}\n                style={`\n                    bottom: 0;\n                    left: 0;\n                    width: ${width};\n                    max-height: 80vh;\n                    min-height: 10vh;\n                    overflow: auto;\n                    z-index: 999999;\n                    border-radius: 20px 20px 0 0 !important;\n                    border-top-width: 5px !important;\n                    box-shadow: 0px 0 5px rgba(0, 0, 0, 0.8);\n                `}\n                onTouchmove={mu.captureEvents}\n                onScroll={mu.captureEvents}\n            >\n                <button\n                    class='btn btn-warning btn-sm float-right'\n                    onClick={onCloseClick}\n                >\n                    <i class='fas fa-times' />\n                </button>\n                {children}\n            </div>\n        );\n    }\n}\n\nexport default Drawer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gaugeBackground\":\"gaugeBackground__1UGxt\",\"gauge\":\"gauge__2ZDxd\",\"success\":\"success__3UQxg\",\"primary\":\"primary__3pPV6\",\"secondary\":\"secondary__-Vrk_\",\"info\":\"info__3t5zs\",\"warning\":\"warning__1jHlR\",\"danger\":\"danger__BLVC9\",\"gaugeText\":\"gaugeText__1on-w\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@withText(() => ({\n    subject: <Text id='ad.subject'>Annonseforespørsel</Text>,\n    body: <Text id='ad.body'>Hei, Jeg ønsker å vite mer om annonsering i appen The Musher.</Text>,\n}))\n\n@observer\nclass Ad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n        this.apiServer = util.getApiServer();\n    }\n\n\tasync loadAd(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adStore, workoutStore, userStore, appState } = this.props.stores;\n        const { section } = this.props;\n        const { path: url = '' } = appState;\n        const { currentTeam } = workoutStore;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        let team = {};\n        let ambitions;\n        let type;\n        let postalcode;\n        let place;\n        let country;\n        if (currentTeam) {\n            team = userStore.findTeam(currentTeam, true);\n            if (team && team.id) {\n                ambitions = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n                type = userStore.findTeamType({ type: team.type, language });\n                postalcode = team.postalcode;\n                place = team.place;\n                country = team.country;\n            }\n        }\n        // console.log({ currentTeam, team, ambitions,  type, postalcode, place, country });\n        // const { url = '' } = this.props;\n        const page = url.replace(/\\d+$/, 'detail');\n\n        // props: { \"url\": \"/\" }\n        // props: { \"url\": \"/workouts/\" }\n        // props: { \"url\": \"/workouts/4708\" }\n        // props: { \"url\": \"/dogs\" }\n        // props: { \"url\": \"/dogs/10\" }\n\n\t\tawait adStore.load({ query: { page, section }});\n        adStore.setTime();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    logClick = async () => {\n        const { adStore, userStore } = this.props.stores;\n        const { ads = [] } = adStore;\n        let id = ads.length > 0 ? ads[0].id : null;\n        const { user = {} } = userStore;\n        await adStore.logClick({ id, user: user.id });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAd();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.path !== this.props.path) {\n            this.loadAd(nextProps);\n        }\n    }\n\n    render() {\n        const { adStore, userStore, appState } = this.props.stores;\n        const { subject, body, section } = this.props;\n        const { path } = appState;\n        const { user = {} } = userStore;\n        const { ads = [], time, adViews, adClicks } = adStore;\n        if (!user || !user.id || !ads || ads.length === 0) {\n            if (path.match(/\\/(home)/i)) {\n                return <>\n                    <div class='w-100'>\n                        <div class='row'>\n                            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                                <div class='border rounded-lg p-4 my-3'>\n                                    <span class='float-right display-4 text-warning'>\n                                        <i class='far fa-smile-wink' />\n                                    </span>\n                                    <h5><Text id='ad.heading'>Vil du annonsere her?</Text></h5>\n                                    <div><Text id='ad.teaser'>Det er super enkelt :)</Text></div>\n                                    <Localizer>\n                                        <a href={`mailto:post@themusher.no?subject=${subject}: ${path}: ${section}&body=${body}`} target='_blank' rel='noreferrer'>\n                                            <i class='fas fa-paper-plane' /> <Text id='ad.linktext'>Ta kontakt med The Musher</Text>\n                                        </a>\n                                    </Localizer>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>;\n            }\n            return <></>;\n        }\n        const ad = ads[0];\n        return (\n            <>\n                <div class='w-100'>\n                    <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                            <div>\n                                <small><small class='text-muted'>\n                                    <Text id='ad.ad'>Annonse</Text>:\n                                    <img src={`${this.apiServer}/api/ads/${ad.id}/view?user=${user.id}&time=${time}`} style='width: 1; height: 1; opacity: 0.1;' />\n                                </small></small>\n                            </div>\n                            {ad.target ? <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    target={ad.target || '_blank'}\n                                    rel='noopener noreferrer'\n                                    onClick={this.logClick}\n                                    native\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>                            \n                            </> : <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    onClick={this.logClick}\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>\n                            </>}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Ad;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\n@observer\nclass HeaderCustom extends Component {\n    render() {\n        const { children, height = '65px' } = this.props;\n        return (\n            <nav\n\t\t\t\tclass={`navbar navbar-themed bg-light fixed-top py-0`}\n\t\t\t\tstyle={`height: ${height};`}\n\t\t\t>\n\n                {children}\n\n            </nav>\n        );\n    }\n}\n\nexport default HeaderCustom;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Story from './publicStory';\n\nimport TeamConnectBoxes from '../team/connect-boxes';\nimport TeamConnectConfirm from '../team/connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from '../team/fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\n\nconst initialState = {\n    loading: false,\n    limit: 10,\n    offset: 0,\n    idxConfirm: 0,\n    idxSuggestion: 1,\n    idxAd: 5,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n\t\tthis.ref = {};\n    }\n\n    async loadStoriesPublicFeed({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n        let sort;\n        // if (path.match(/\\/home-wall/)) {\n        //     sort = 'statistics.ranking';\n        // }\n\t\tawait storyStore.loadPublicFeed({ hashtag, hashtags, teamid, limit, offset, sort });\n\n        if (!offset) {\n            this.insertTopRanked();\n            // this.insertAds();\n            this.insertTeamConfirm();\n            // this.insertTeamSuggestions();\n        }\n\t}\n\n    reloadStories = async () => {\n        const { appState } = this.props.stores;\n        let { limit, offset } = this.state;\n        offset = 0;\n        this.setState({ offset });\n        await this.loadStoriesPublicFeed({ props: this.props, limit, offset })\n        appState.appContainerScrollTop();\n    }\n\n    async checkForNewStories({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.checkForNewStories({ hashtag, hashtags, teamid });\n    }\n\n    setCheckForNewStories = (props = this.props) => {\n        this.checkForNewStoriesTimer = setInterval(() => this.checkForNewStories({ props }), 60 * 1000);\n    }\n\n    clearCheckForNewStories = () => {\n        clearInterval(this.checkForNewStoriesTimer);\n    }\n\n    insertTopRanked = () => {\n        const { storyStore } = this.props.stores;\n        const { publicFeed, topRankedStories } = storyStore;\n        const topRankedRandomized = util.shuffleArray(topRankedStories);\n        const feed = [...publicFeed];\n\n        const totalInserts = 3;\n        const pinToTopDiff = 86400;\n        let startPosition = 0;\n        const now = new Date();\n        feed.forEach((e, idx) => {\n            const date = util.parseInputDate(e.date);\n            const deltaSec = Math.floor((now.getTime() - date.getTime()) / 1000);\n            if (deltaSec < pinToTopDiff) {\n                startPosition = idx + 1;\n            }\n        });\n        const endPosition = feed.length;\n\n        if (endPosition > startPosition + totalInserts) {\n            for (let i = 0, l = totalInserts; i < l; i += 1) {\n                const randomPlace = mu.randomInt(startPosition, endPosition);\n                if (util.isObject(topRankedRandomized[i])) {\n                    feed.splice(randomPlace, 0, topRankedRandomized[i]);\n                }\n            }\n            storyStore.localUpdateField('publicFeed', feed);\n        }\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    setLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadStoriesPublicFeed({ limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {});\n    }\n\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { storyStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => storyStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentDidMount() {\n        const { limit } = this.state;\n        this.loadStoriesPublicFeed({ limit, offset: 0 });\n        this.setLoadMore();\n        this.setCheckForNewStories()\n\t}\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { storyStore } = this.props.stores;\n        storyStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        // storyStore.cleanupMemory();\n        this.clearCheckForNewStories();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.hashtag !== this.props.hashtag || nextProps.path !== this.props.path) {\n            const { limit } = this.state;\n            this.loadStoriesPublicFeed({ props: nextProps, limit, offset: 0 });\n        }\n    }\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        return (<>\n            <Story\n                stores={this.props.stores}\n                story={obj}\n                hashtag={hashtag}\n                key={`story-detail-${obj.id}`}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { loading, handleIntersection, sessionid, showTeam } = this.state;\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed, publicTags, hasNewStories } = storyStore;\n        const { darkmode } = appState;\n\n        return (<>\n            {/* <div class='row bg-light pt-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative`}>\n                    <div class='bg-light d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                        {util.isArray(publicTags) && publicTags.length > 0 && publicTags.slice(0, 20).map((tag) => {\n                            const tagLinkReady = tag.tag.replace(/^#/, '');\n                            return (<>\n                                <span class='badge badge-pill badge-secondary mr-2 mb-1'>\n                                    <a href={`/stories/tag/${tagLinkReady}`} class='text-white'>\n                                        {tag.tag}\n                                    </a>\n                                </span>\n                            </>);\n                        })}\n                    </div>\n                </div>\n            </div> */}\n\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} />\n            </Overlay>}\n\n            <div class='w-100'>\n                {hasNewStories && <>\n                    <div\n                        class={`col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 d-flex justify-content-center fixed-top`}\n                        style={`margin-top: ${MARGIN_TOP};`}\n                    >\n                        <button\n                            class='btn btn-sm btn-primary rounded-pill'\n                            onClick={this.reloadStories}\n                        >\n                            New stories\n                        </button>\n                    </div>\n                </>}\n                <FastList\n                    data={publicFeed}\n                    wrapperClassNames={'row pb-1'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n                {loading && <div class='d-flex justify-content-center'>\n                    <div class='spinner-border text-primary' role='status'>\n                        <span class='sr-only'>Loading...</span>\n                    </div>\n                </div>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nimport DogScroller from '../dog/scroller';\nimport ImageScroller from '../imageScroller';\n\n@observer\nclass MusherInfoHeader extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    toggleAdminInfo = (e) => {\n        e.stopPropagation();\n        const { showAdminInfo } = this.state;\n        this.setState({\n            showAdminInfo: !showAdminInfo,\n        });\n    }\n\n    toggleInfo = (e) => {\n        e.stopPropagation();\n        const { showInfo } = this.state;\n        this.setState({\n            showInfo: !showInfo,\n        });\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const currentDog = dogs.find(e => e.uuidv4 === dogid);\n        this.setState({\n            currentDog,\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { showAdminInfo, showInfo, submenu = 'details', showDog, currentDog: dog = {} } = this.state;\n\n        const { waypoints, totalTrackLength } = raceStore;\n\n        const { contestant = {}, onMarkerClick = () => {}, children, rank } = this.props;\n        const wp = raceStore.findWaypointByBib(contestant.bib);\n\n        const { isAdmin } = userStore;\n        const musher = contestant.bib ? raceStore.getMusherByBibId(contestant.bib) : raceStore.getMusherByBibEmail(contestant.email);\n        const team = raceStore.getTeamById(musher.team);\n        const user = team.members ? team.members.find(m => m.email === musher.email) : {};\n        const raceClass = raceStore.getClassByBib(contestant.bib);\n        const totals = raceStore.getTotalsByTeamId(musher.team);\n        const image = mu.getImage({ user, team, priority: 'user' });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(musher);\n\n        const dotColor = contestant.color;\n\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        const totalDistancePercent = util.format(wp.totalDistanceOnTrack / totalTrackLength * 100, 0);\n        const { inFront, behind } = raceStore.findNearestMushers(contestant.bib);\n\n        const defaultImage = {\n            s3XXLargeLink: './assets/homerun-race-logo.png',\n        };\n        const headerImage = team && team.imageHeader && team.imageHeader.s3XXLargeLink ? team.imageHeader : defaultImage;\n\n        return (<>\n            <div class='w-100 position-absolute'\n                style={`z-index: -1; height: 18vh; top: 0px; left: 0px; background-size: cover; background-repeat: no-repeat; background-position: 50% 50%; background-color: #a0a0a0; ${headerImage ? `background-image: url(\"${headerImage.s3XXLargeLink}\");` : ''}`}\n            />\n\n            <div class='d-flex position-relative' style='margin-top: 17vh;'>\n                <div\n                    class={`position-relative text-center border rounded-circle imageRounded`}\n                    style={`margin-top: -50px; ${image ? `background-image: url(\"${image}\"); background-size: cover;` : 'background-color: #c0c0c0;'}`}\n                >\n                    {!image && <div class='text-muted' style='font-size: 35px; padding-top: 10px;'>{shortname}</div>}\n                    <div\n                        class={`rounded-pill-both px-2 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                        style={`bottom: -8px; right: 0; font-size: 1.2em; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                    >\n                        {/* {musher.bib && musher.bib !== 'n/a' && <>{musher.bib}</>} */}\n                        {rank && <>{rank}</>}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow mb-0' style='line-height: 1.2em;'>\n                    <h5 class='mb-0'>\n                        <div class='d-flex flex-nowrap'>\n                            <div\n                                class='text-white font-weight-bold pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                style={`background-color: ${mu.getRankingColor(rank)}; width: 55px;`}\n                            >\n                                {musher.bib}\n                            </div>\n                            <div>\n                                <nobr>\n                                    {musher.flag} {musher.firstname} {musher.lastname}\n                                </nobr>\n                            </div>\n                        </div>\n                    </h5>\n                    <span class='mb-0' style='margin-left: 93px;'>{musher.sportsClub || team.name || <>&nbsp;</>}</span>\n                </div>\n            </div>\n\n            <div class='d-flex justify-content-center mb-3'>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'details' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='details'\n                    >\n                        Details\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='team'\n                    >\n                        Team\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'dogs' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='dogs'\n                    >\n                        Dogs\n                    </button>\n                </div>\n            </div>\n\n            <div\n                class='w-100 overflow-auto position-relative'\n                // style='max-height: 60vh;'\n            >\n                {submenu === 'details' && <>\n                    {children}\n                </>}\n\n                {submenu === 'team' && <>\n                    {team.public > 0 ? <>\n                        <h3>{team.name}</h3>\n                        <Markdown markdown={mu.replaceImages(team.description, team.images)} markdownOpts={mu.getMarkdownOptions()} />\n                        <ImageScroller stores={this.props.stores} images={team.images} />\n\n                    </> : <>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-dog' /></div>\n                            <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                            <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                        </div>\n                    </>}\n                </>}\n\n                {submenu === 'dogs' && <>\n                    {team.public > 0 ? <>\n                        {team.dogs && <div class='w-100 container-fluid'>\n                            <div class='row pt-2'>\n                                <DogScroller stores={this.props.stores} dogs={team.dogs.map(d => d.id)} allDogs={team.dogs} onDogClick={this.onDogClick} />\n                            </div>\n                        </div>}\n                        {showDog && <>                    \n                            <div class='d-flex mb-0 mt-3 position-relative'>\n                                <div class={`text-center border rounded-circle imageRounded imageRoundedLarge text-muted pt-2`} style={dog.image ? `background-image: url(\"${dog.image.s3LargeLink}\"); background-size: cover;` : ''}>\n                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pr-2'\n                                    style={`border-right: 4px solid ${userStore.findHarness(dog.harness, 'colorNonstop')} !important; line-height: 1.2em;`}\n                                >\n                                    <h5 class='mb-1'>\n                                        {dog.shortname || dog.name} {dog.shortname && dog.shortname !== '' && <> - <span class='font-weight-lighter'>{dog.name}</span></>}\n                                        {hasBirthday && <>\n                                            <i class='fas fa-birthday-cake ml-3' />\n                                        </>}\n                                    </h5>\n                                    <div>\n                                        {daysUntilBirthday < 7 && <>\n                                            <span class='text-muted mr-2'>\n                                                <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                                            </span>\n                                        </>}                                \n                                        {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                                    </div>\n                                </div>\n                            </div>\n                            {/* <xmp>dog: {JSON.stringify(dog, null, 4)}</xmp> */}\n                        </>}\n                    </> : <>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-dog' /></div>\n                            <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                            <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                        </div>\n                    </>}\n                </>}\n\n                {isAdmin && <div style='max-height: 200px; max-width: 70vw; overflow: auto;'>\n                    <button class='btn btn-link btn-block' onClick={this.toggleAdminInfo}>\n                        Toggle admin info\n                    </button>\n                    {showAdminInfo && <>\n                        <small>\n                            <xmp>\n                                musher: {JSON.stringify(musher, null, 4)}<br />\n                                user: {JSON.stringify(user, null, 4)}<br />\n                                team: {JSON.stringify(team, null, 4)}<br />\n                                totals: {JSON.stringify(totals, null, 4)}<br />\n\n                                {/* {\n                                    \"firstDate\": \"2021-03-19 11:59\",\n                                    \"lastDate\": \"2021-03-20 17:13\",\n                                    \"firstEpoch\": 1616151540000,\n                                    \"lastEpoch\": 1616256780000,\n                                    \"now\": {\n                                        \"$numberDecimal\": \"1642675856939\"\n                                    },\n                                    \"totalTimeUsedSec\": 26524316,\n                                    \"totalWorkoutTimeUsedSec\": 130895,\n                                    \"lastDuration\": 25655,\n                                    \"team\": 84,\n                                    \"count\": 4,\n                                    \"distanceKm\": 301.5906237951766,\n                                    \"elevation\": 3610.019075719202,\n                                    \"duration\": 77343,\n                                    \"rest\": 1332,\n                                    \"speedAvg\": 8.294634979660305,\n                                    \"totalRest\": 54884,\n                                    \"loadIndex\": 1080.75,\n                                    \"totalKcalRelated\": 544.535560976128,\n                                    \"weightedTotalKcal\": 12303.171406247127,\n                                    \"flatTotalKcal\": 9424.70699359927,\n                                    \"firstGpxStartEpoch\": null,\n                                    \"lastGpxStartEpoch\": null\n                                } */}\n\n                            </xmp>\n                        </small>\n                    </>}\n                </div>}\n                <div class='d-flex position-absolute' style='right: 10px; bottom: 10px;'>\n                    {inFront.bib && <a class='text-primary mx-2' onClick={() => onMarkerClick(inFront)} style='line-height: 1.0em; font-size: 2.3em;'>\n                        <i class='fas fa-angle-left' />\n                    </a>}\n                    {behind.bib && <a class='text-primary mx-2' onClick={() => onMarkerClick(behind)} style='line-height: 1.0em; font-size: 2.3em;'>\n                        <i class='fas fa-angle-right' />\n                    </a>}\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default MusherInfoHeader;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\nimport Drawer from '../../components/drawer/';\nimport DogsEditBaseInfo from '../../components/dog/editBaseInfo';\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { userStore } = this.props.stores;\n        const { user } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        userStore.removeImage({\n            id: user.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { user, field, updateField } = this.props;\n        updateField({ id: user.id, field, value: {} });\n    }\n\n    render() {\n        // const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField } = this.props;\n        const { saved, user, type = 'text', field, title, icon, help, onInput, updateField } = this.props;\n        const value = user[field];\n        const byMd5 = e => user.image ? e.md5 !== user.image.md5 : true;\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {user.image && user.image.s3SmallLink && <div class='col-3 p-1'>\n                                <img src={user.image.s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                <button class='btn btn-sm btn-link'\n                                    onClick={this.removeMainImage}\n                                    data-name={user.image.name}\n                                ><i class='fas fa-trash' /> Del</button>\n                                <span class='badge badge-success'>Main</span>\n                            </div>}\n                            {user.images && user.images.filter(byMd5).map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Del</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={user} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Files saved={saved} object={user} field={field} updateField={updateField} />\n                    {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        return (\n            <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type='text' class={`form-control ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    value={value}\n                    data-id={user.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass DogLine extends Component {\n    render() {\n        const { dog, children, onDogClick = () => {} } = this.props;\n\n        const { userStore, raceStore, appState } = this.props.stores;\n        const { vaccineLogStatuses } = userStore;\n\n        return(\n            <div\n                class='d-flex mb-0 position-relative mb-3 dogInfo'\n                data-id={dog.id}\n            >\n                <div>\n                    <div class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`} style={dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''}>\n                        {/* {!dog.image && <i class='fas fa-dog mt-3' style='font-size: 40px;' />} */}\n                        {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 pr-2' onClick={onDogClick}>\n                    {children}\n                    <span class='float-right'>\n                        {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                    </span>\n                    <h6 class='mb-1' style='line-height: 1.0em;'>\n                        {dog.shortname || dog.name} {dog.shortname && dog.shortname !== '' && <> - <span class='font-weight-lighter'>{dog.name}</span></>}\n                    </h6>\n                    {dog.chipId ? <>\n                        <i class='fas fa-microchip text-muted' /> {dog.chipId}\n                    </> : <>\n                        <div class='alert alert-danger' role='alert'>\n                            <Text id='races.missing-chipid'>Missing chid id</Text>\n                        </div>\n                    </>}\n\n                    <div>\n                        {vaccineLogStatuses && vaccineLogStatuses.filter(e => e.chipId === dog.chipId).map((vac) => {\n                            return (\n                                <span class={`badge badge-${vac.inKarens ? 'warning' : 'success'} mr-2 mb-1`}>\n                                    {vac.vaccineAgens.name}\n                                    <span class='font-weight-lighter ml-2 d-none d-sm-block'>\n                                        <i class='fas fa-calendar-check' /> {util.isoDate(vac.vaccineAgens.durationEnd, false, false, true)}\n                                        {vac.inKarens && <>\n                                            <br />\n                                            (karens: {util.format(vac.karensDaysLeft, 0)} days left)\n                                        </>}\n                                    </span>\n                                </span>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n@observer\nclass AppRaceDetailSignup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            submenu: 'info',\n            showDrawer: false,\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    updateField = (e) => {\n        const { id, field, type, elementtype } = e.target.dataset;\n        const value = e.target.value;\n        this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype });\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, skipTimer = false }) => {\n        const { userStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { user } = userStore;\n        if (field === 'images') {\n            if (Array.isArray(user.images) && Array.isArray(value)) {\n                localObjectValue = [...user.images, ...value];\n            }\n        }\n    \n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n       \n        userStore.updateField(id, field, localObjectValue);\n        if (skipTimer) {\n            this.doUpdateField(id, field, newValue);\n        } else {\n            clearTimeout(this.updateTimer[field]);\n            this.updateTimer[field] = setTimeout(async () => {\n                this.doUpdateField(id, field, newValue);\n            }, 500);\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { userStore } = this.props.stores;\n        await userStore.saveField(id, field, value);\n    }\n\n\tsignupToRace = async () => {\n\t\tconst { raceStore, userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n        const { signup } = raceStore;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n\t\tawait raceStore.addContestant({\n\t\t\tid: raceid,\n\t\t\tclassId: signup.class,\n\t\t\tnewContestant: {\n\t\t\t\tteam: user.team,\n\t\t\t\tfirstname: user.firstname,\n\t\t\t\tlastname: user.lastname,\n\t\t\t\tsportsClub: user.sportsClub,\n\t\t\t\temail: user.email,\n\t\t\t\tcellphone: user.cellphone,\n\t\t\t\tfacebook: user.facebook,\n\t\t\t\tinstagram: user.instagram,\n\t\t\t\t ...signup\n\t\t\t}\n        });\n\t}\n\n    updateSignup = (e) => {\n        const key = e.target.id;\n        const value = e.target.value;\n        const { raceStore } = this.props.stores;\n        raceStore.updateObjectKeyValue('signup', key, value);\n    }\n\n    editSignup = (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, contestantid } = e.target.dataset;\n        raceStore.updateObjectKeyValue('signup', field, value);\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n            raceStore.localUpdateSignup(field, value);\n            if (field === 'team') {\n                await raceStore.loadTeams(value, true);\n            }\n\t\t}, 500);\n    }\n\n    clearSignupValue = async (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = 'null';\n        const { classid, contestantid } = e.target.dataset;\n        raceStore.updateObjectKeyValue('signup', field, value);\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n        raceStore.editClass({\n            id: raceid,\n            data,\n        });\n        raceStore.localUpdateSignup(field, value);\n        if (field === 'team') {\n            await raceStore.loadTeams(value, true);\n        }\n    }\n\n    toggleDrawer = () => {\n        const { showDrawer } = this.state;\n        this.setState({\n            showDrawer: !showDrawer,\n        });\n    }\n\n    onDogClick = (e) => {\n        const { id } = e.target.closest('.dogInfo').dataset;\n        console.log('onDogClick', id);\n        const { userStore, raceStore } = this.props.stores;\n        const { signup } = raceStore;\n        const dogs = userStore.findDogsByTeam(parseInt(signup.team, 10));\n        const currentDog = dogs.find(e => e.id == id);\n        this.setState({\n            showDrawer: true,\n            currentDog,\n        });\n    }\n\n    chooseSubmenu = (e) => {\n        e.stopPropagation();\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/${dog.id}/${submenu}`);\n\t}\n\n    render() {\n        const { submenu, showDrawer, currentDog } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin, saved } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n        const { signup } = raceStore;\n\n        let signupClass = {};\n        let dogs = [];\n        if (signup.class) {\n            signupClass = raceStore.getRaceClassById(signup.class);\n        }\n        if (signup.team) {\n            dogs = userStore.findDogsByTeam(parseInt(signup.team, 10));\n        }\n        const { vaccineLogStatuses } = userStore;\n\t\tconst today = new Date();\n\n        const chosenDogChipIds = mu.getAlphabet(signupClass.dogs).filter(letter => signup[`dog${letter}`]).map(letter => signup[`dog${letter}`]);\n        const byNotChosen = e => chosenDogChipIds.indexOf(e.chipId) === -1;\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='races.signup'>Påmelding</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    {today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate) ? <>\n                        <span class='font-weight-lighter'><Text id='races.signed-in-as'>Logget inn som</Text>:</span> {user.email}<br /><br />\n                        {signup.id ? <>\n                            <div class='font-weight-bold mb-4'>\n                                <i class='fas fa-check text-success' /> <Text id='races.signed-up'>Din bruker er påmeldt!</Text><br />\n                                {/* <xmp>{JSON.stringify(signup, null, 4)}</xmp> */}\n                            </div>\n\n                            {!race.liveRace && race.signuppayment && <>\n                                <div class='form-group row my-2'>\n                                    <label for='cellphone' class='col-2 col-form-label text-right font-weight-lighter'><Text id='races.signup'>Påmelding</Text></label>\n                                    <div class='col-10'>\n                                        {signup.paidSignupfee ? <div class='py-2'>\n                                            <Text id='races.paid'>Betalt</Text>: {util.formatDate(signup.paidSignupfee)}\n                                            <i class='fas fa-check text-success ml-3' />\n                                        </div> : <>\n                                            <div class='alert alert-danger mb-1' role='alert'>\n                                                <h5>\n                                                    <span class='font-weight-lighter'><Text id='races.payment-info'>Betaling påmelding</Text>:</span><br />\n                                                    <Markdown markdown={mu.replaceImages(race.signuppayment, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                    {signupClass.signupfee || race.signupfee} NOK\n                                                </h5>\n                                            </div>\n                                        </>}\n                                    </div>\n                                </div>\n                            </>}\n\n\n                            <div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='info'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-info-circle' /> <Text id='race.info'>Info</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'chiplist' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='chiplist'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-list-ol' /> <Text id='race.chiplist'>Chiplist</Text></button>\n                                    </div>\n                                    {/* <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='team'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-dog' /> <Text id='race.team'>Team</Text></button>\n                                    </div> */}\n                                </div>\n                            </div>\n\n                            {submenu === 'info' && <>\n                                <div class='form-group row my-5'>\n                                    <label for='team' class='col-3 col-form-label text-right font-weight-lighter'>\n                                        <Text id='races.team'>Team</Text>\n                                    </label>\n                                    <div class='col-9'>\n                                        <select class='form-control form-control-lg' id='team' aria-describedby='teamHelp'\n                                            data-classid={signup.class}\n                                            data-contestantid={signup.id}\n                                            onInput={this.editSignup}\n                                            value={signup.team}\n                                        >\n                                            <option value=''>-- <Text id='races.choose-team'>Velg team</Text> --</option>\n                                            {teams.map(team =>\n                                                <option value={team.id}>{team.name}</option>\n                                            )}\n                                        </select>\n                                        {signup.team ? <>\n                                            {/* <div class='alert alert-success' role='alert'>\n                                                A simple success alert—check it out!\n                                            </div> */}\n                                        </> : <>\n                                            <div class='alert alert-danger clearfix' role='alert'>\n                                                <span class='display-4 float-left mr-3'>\n                                                    <i class='fas fa-exclamation-triangle' />\n                                                </span>\n                                                <Text id='races.choose-race-team' fields={{ title: race.title }}>Please choose race team for {race.title}</Text>\n                                            </div>\n                                        </>}\n                                        {/* <details>\n                                            <summary>\n                                                <i class='fas fa-info-circle' /> <Text id='races.team-about'>About teams</Text>\n                                            </summary>\n                                            <Text id='races.team-help'>\n                                                <ol>\n                                                    <li>Create a team for your race dogs.</li>\n                                                    <li>Add the dogs you want to use for this race.</li>\n                                                    <li>Choose the team for this race.</li>\n                                                </ol>\n                                            </Text>\n                                        </details> */}\n                                    </div>\n                                </div>\n\n                                <div class='form-group row my-2'>\n                                    <label for='cellphone' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.cellphone'>Mobil</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='cellphone'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.cellphone}\n                                                placeholder={<Text id='races.cellphone-help'>Hva er mobilnummer ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                {signup.name && <div class='form-group row my-2'>\n                                    <label for='name' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.name'>Navn</Text></label>\n                                    <div class='col-9'>\n                                        {signup.name}\n                                    </div>\n                                </div>}\n                                <div class='form-group row my-2'>\n                                    <label for='firstname' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.firstname'>Fornavn</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='firstname'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.firstname}\n                                                placeholder={<Text id='races.firstname-help'>Hva er fornavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='lastname' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.lastname'>Etternavn</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='lastname'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.lastname}\n                                                placeholder={<Text id='races.lastname-help'>Hva er etternavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='sportsClub' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.sportsclub'>Klubb</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='sportsClub'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.sportsClub}\n                                                placeholder={<Text id='races.sportsClub-help'>Hvilken klubb tilhører du?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='facebook' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.facebook'>Facebook</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='facebook'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.facebook}\n                                                placeholder={<Text id='races.facebook-help'>Hva er Facebook brukernavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='instagram' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.instagram'>Instagram</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='instagram'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.instagram}\n                                                placeholder={<Text id='races.instagram-help'>Hva er Instagram brukernavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='team' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.class'>Klasse</Text></label>\n                                    <div class='col-9'>\n                                        <select class='form-control' id='class' aria-describedby='classHelp'\n                                            data-classid={signup.class}\n                                            data-contestantid={signup.id}\n                                            onInput={this.editSignup}\n                                            value={signup.class}\n                                            disabled\n                                        >\n                                            <option value=''>-- <Text id='races.choose-class'>Velg klasse</Text> --</option>\n                                            {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                <option value={currentClass.id}>\n                                                    {currentClass.title}{!race.liveRace && <>\n                                                        - {currentClass.distance} km - Påmelding: {currentClass.signupfee || race.signupfee} NOK\n                                                    </>}\n                                                </option>\n                                            </>)}\n                                        </select>\n                                    </div>\n                                </div>\n                                {race.rules && <div class='form-group row my-2'>\n                                    <label for='team' class='col-3 col-form-label text-right font-weight-lighter'>&nbsp;</label>\n                                    <div class='col-9 pl-5'>\n                                        <input type='checkbox' class='form-check-input' id='termsAndAgreement'\n                                            data-classid={signup.class}\n                                            data-contestantid={signup.id}\n                                            onInput={this.editSignup}\n                                            checked={signup.termsAndAgreement}\n                                            value={1}\n                                        />\n                                        <label class='form-check-label' for='termsAndAgreement'><Text id='races.agreement-accept'>Jeg har lest og godtar reglene for løpet.</Text></label>\n                                    </div>\n                                </div>}\n                                {race.declaration && <div class='form-group row my-4'>\n                                    <div class='col-12 text-center border-top'>\n                                        <h5><Text id='races.declaration'>Declaration</Text></h5>\n                                    </div>\n                                    <details class='col-12'>\n                                        {signup.declaration ? <>\n                                            <summary>\n                                                <Text id='races.see-declaration'>See declaration</Text> (<span class='text-muted font-weight-light'><Text id='races.declaration-signed'>Declaration signed</Text>: {util.isoDate(signup.declarationDate)}</span>)\n                                            </summary>\n                                        </> : <>\n                                            <summary>\n                                                <h5 class='btn btn-primary'><Text id='races.see-declaration'>See declaration</Text></h5>\n                                            </summary>\n                                        </>}\n\n                                        <Markdown markdown={mu.replaceImages(race.declaration, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n\n                                        {signup.declaration ? <>\n                                            <i>\n                                                <Text id='races.declaration-signed'>Declaration signed</Text>: {util.isoDate(signup.declarationDate)}\n                                            </i>\n                                        </> : <>\n                                            <div class='pl-5'>\n                                                <input type='checkbox' class='form-check-input' id='declaration'\n                                                    data-classid={signup.class}\n                                                    data-contestantid={signup.id}\n                                                    onInput={this.editSignup}\n                                                    checked={signup.declaration}\n                                                    value={1}\n                                                />\n                                                <label class='form-check-label' for='declaration'><Text id='races.declaration-accept'>I hereby sign the declaration for the race!</Text></label>\n                                            </div>\n                                        </>}\n                                    </details>\n                                </div>}\n\n                                <Input saved={saved} user={user} field='image' icon='fas fa-camera' type='image'\n                                    stores={this.props.stores}\n                                    title={<Text id='users.photos'>Bilder</Text>}\n                                    help={<Text id='users.photos-help'>Bilder av deg.</Text>}\n                                    onInput={this.updateField} updateField={this.updateFieldValue} />\n\n                            </>}\n\n                            {submenu === 'chiplist' && <>\n                                <div class='form-group row my-4'>\n                                    <div class='col-12 text-center border-top pt-3'>\n                                        <h5><Text id='races.chiplist'>Chiplist</Text></h5>\n                                    </div>\n\n                                    {signupClass && signupClass.dogs && mu.getAlphabet(signupClass.dogs, ['R1', 'R2']).map(letter => {\n                                        const chosenDog = dogs && dogs.length > 0 ? dogs.find(e => e.chipId === signup[`dog${letter}`]) : null;\n                                        return (<>\n                                            <div class='col-12 center border-top pt-3 d-flex'>\n                                                <div class='display-4' style='width: 50px;'>\n                                                    {letter}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pr-2'>\n                                                    {chosenDog ? <>\n                                                        <DogLine stores={this.props.stores} dog={chosenDog} onDogClick={this.onDogClick}>\n                                                            <button\n                                                                class='btn btn-danger float-right ml-2'\n                                                                onClick={this.clearSignupValue}\n                                                                id={`dog${letter}`}\n                                                                data-classid={signup.class}\n                                                                data-contestantid={signup.id}\n                                                            >\n                                                                <i class='fas fa-times' />\n                                                            </button>\n                                                        </DogLine>\n                                                    </> : <>                                                \n                                                        <select class='form-control p-0'\n                                                            id={`dog${letter}`}\n                                                            data-classid={signup.class}\n                                                            data-contestantid={signup.id}\n                                                            onInput={this.editSignup}\n                                                        >\n                                                            <option value=''>-- Choose dog for this position --</option>\n                                                            {dogs.filter(byNotChosen).map(dog => <>\n                                                                <option value={dog.chipId} selected={dog.chipId === signup[`dog${letter}`] ? 'selected' : ''}>\n                                                                    {dog.shortname || dog.name} - {dog.birth && <>{util.age(dog.birth, dog.deceased)}</>} {dog.gender === 'female' ? '♀️' : '♂️'}\n                                                                </option>\n                                                            </>)}\n                                                        </select>\n                                                    </>}\n                                                </div>\n                                            </div>\n                                        </>);\n                                    })}\n\n                                </div>\n                            </>}\n\n                            {submenu === 'team' && <>\n                                <div class='form-group row my-4'>\n                                    <div class='col-12 border-top pt-3'>\n                                        {dogs && dogs.length > 0 ? <>\n                                            {dogs.map(dog => <>\n                                                <DogLine stores={this.props.stores} dog={dog} />\n                                            </>)}\n                                        </> : <>\n                                            <div class='text-center text-muted'>\n                                                <div class='display-1'>\n                                                    <i class='fas fa-dog' />\n                                                </div>\n                                                <h3 class='font-weight-lighter'>\n                                                    <Text id='race.add-dogs'>Add a team to your race signup to see the dogs.</Text>\n                                                </h3>\n                                            </div>\n                                        </>}\n                                    </div>\n                                </div>\n                            </>}\n                        </> : <>\n\n                            {race.liveRace ? <>\n                                Signup is done at the race normal web pages.\n                            </> : <>\n                                <div class='form-group'>\n                                    <label for='cellphone'><Text id='races.cellphone'>Mobil</Text></label>\n                                    <input type='text' class='form-control' id='cellphone' aria-describedby='cellphoneHelp'\n                                        placeholder={user.cellphone}\n                                        onInput={this.updateSignup}\n                                        value={signup.cellphone}\n                                    />\n                                    <small id='cellphoneHelp' class='form-text text-muted'><Text id='races.cellphone-help'>'Hva er mobilnummer ditt?'</Text></small>\n                                </div>\n\n                                {signup.name && <div class='row'>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='name'><Text id='races.name'>Name</Text></label>\n                                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp'\n                                                placeholder={user.name}\n                                                onInput={this.updateSignup}\n                                                value={signup.name}\n                                            />\n                                            <small id='nameHelp' class='form-text text-muted'><Text id='races.name-help'>Hva er navnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                </div>}\n                                <div class='row'>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='firstname'><Text id='races.firstname'>Fornavn</Text></label>\n                                            <input type='text' class='form-control' id='firstname' aria-describedby='firstnameHelp'\n                                                placeholder={user.firstname}\n                                                onInput={this.updateSignup}\n                                                value={signup.firstname}\n                                            />\n                                            <small id='firstnameHelp' class='form-text text-muted'><Text id='races.firstname-help'>Hva er fornavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='lastname'><Text id='races.lastname'>Etternavn</Text></label>\n                                            <input type='text' class='form-control' id='lastname' aria-describedby='lastnameHelp'\n                                                placeholder={user.lastname}\n                                                onInput={this.updateSignup}\n                                                value={signup.lastname}\n                                            />\n                                            <small id='lastnameHelp' class='form-text text-muted'><Text id='races.lastname-help'>Hva er etternavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='form-group'>\n                                    <label for='sportsClub'><Text id='races.sportsclub'>Klubb</Text></label>\n                                    <input type='text' class='form-control' id='sportsClub' aria-describedby='sportsClubHelp'\n                                        placeholder={user.sportsClub}\n                                        onInput={this.updateSignup}\n                                        value={signup.sportsClub}\n                                    />\n                                    <small id='sportsClubHelp' class='form-text text-muted'><Text id='races.sportsClub-help'>Hvilken klubb tilhører du?</Text></small>\n                                </div>\n\n                                <div class='row'>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='facebook'><Text id='races.facebook'>Facebook</Text></label>\n                                            <input type='text' class='form-control' id='facebook' aria-describedby='facebookHelp'\n                                                placeholder={user.facebook}\n                                                onInput={this.updateSignup}\n                                                value={signup.facebook}\n                                            />\n                                            <small id='facebookHelp' class='form-text text-muted'><Text id='races.facebook-help'>Hva er Facebook brukernavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='instagram'><Text id='races.instagram'>Instagram</Text></label>\n                                            <input type='text' class='form-control' id='instagram' aria-describedby='instagramHelp'\n                                                placeholder={user.instagram}\n                                                onInput={this.updateSignup}\n                                                value={signup.instagram}\n                                            />\n                                            <small id='instagramHelp' class='form-text text-muted'><Text id='races.instagram-help'>Hva er Instagram brukernavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='form-group'>\n                                    <label for='team'><Text id='races.team'>Team</Text></label>\n                                    <select class='form-control' id='team' aria-describedby='teamHelp'\n                                        onInput={this.updateSignup}\n                                        value={signup.team}\n                                    >\n                                        <option value=''>-- <Text id='races.choose-team'>Velg team</Text> --</option>\n                                        {teams.map(team =>\n                                            <option value={team.id}>{team.name}</option>\n                                        )}\n                                    </select>\n                                    <small id='teamHelp' class='form-text text-muted'><Text id='races.choose-team-help'>Velg fra dine team</Text></small>\n                                </div>\n\n                                <div class='form-group'>\n                                    <label for='class'><Text id='races.class'>Klasse</Text></label>\n                                    <select class='form-control' id='class' aria-describedby='classHelp'\n                                        onInput={this.updateSignup}\n                                        value={signup.class}\n                                    >\n                                        <option value=''>-- <Text id='races.choose-class'>Velg klasse</Text> --</option>\n                                        {race.classes && race.classes.map(currentClass => <>\n                                            <option value={currentClass.id}>{currentClass.title} - {currentClass.distance} km - Påmelding: {currentClass.signupfee || race.signupfee} NOK</option>\n                                        </>)}\n                                    </select>\n                                    <small id='classHelp' class='form-text text-muted'><Text id='races.choose-class-help'>Velg ønsket klasse.</Text></small>\n                                </div>\n\n                                <div class='form-group form-check'>\n                                    <input type='checkbox' class='form-check-input' id='termsAndAgreement'\n                                        onInput={this.updateSignup}\n                                        checked={signup.termsAndAgreement}\n                                        value={true}\n                                    />\n                                    <label class='form-check-label' for='termsAndAgreement'><Text id='races.agreement-accept'>Jeg har lest og godtar reglene for løpet.</Text></label>\n                                </div>\n                                <button type='button' class='btn btn-primary' onClick={this.signupToRace}><Text id='races.do-signup'>Meld meg på</Text></button>\n                            </>}\n\n                        </>}\n\n                    </> : <>\n                        {today < new Date(race.signupStartDate) ? <>\n                            <h5 class='mt-4'>\n                                <i class='fas fa-exclamation-circle' /> <Text id='races.signup-not-open-yet'>Påmeldingen har ikke åpnet ennå!</Text>\n                            </h5>\n                            <p class='mt-4'>\n                                <Text id='races.signup-opening'>Påmeldingen åpner</Text>:<br />\n                                <span class='display-4'>{util.formatDate(race.signupStartDate, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}</span>\n                            </p>\n                        </> : <>\n                            <h5 class='mt-4 mb-4'>\n                                <i class='fas fa-exclamation-circle' /> <Text id='races.signup-closed'>Påmeldingen er stengt!</Text>\n\n                                {/* {JSON.stringify(signup, null, 4)} */}\n                            </h5>\n                        </>}\n                    </>}\n                </div>\n            </div>\n            {showDrawer && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawer}>\n                    <DogsEditBaseInfo\n                        stores={this.props.stores}\n                        id={currentDog.id}\n                    />\n                </Drawer>\n            </>}\n        </>);\n    }\n}\n\nexport default AppRaceDetailSignup;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\n@observer\nclass Elevation extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(meterToFeet(value), 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>ft</small></small></small></> : <>ft</>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>m</small></small></small></> : <>m</>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Elevation;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\nimport ImageScroller from '../../components/imageScroller';\n\nfunction nl2br($str) {\n\tif (typeof $str === 'string') {\n\t\treturn $str.replace(/[\\n]/g, '<br>');\n\t}\n\treturn $str;\n}\n\nfunction byBib(a, b) {\n    const aHas = typeof a.bib !== 'undefined';\n    const bHas = typeof b.bib !== 'undefined';\n    return (bHas - aHas) || (aHas === true && a.bib - b.bib) || 0;\n}\n\n@observer\nclass AppRaceDetailMushers extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayDetails: {},\n            editUserDetails: {},\n            showAdminSendMessage: {},\n            showAdminImport: {},\n            message: {},\n            inboxMessage: {},\n            submenu: 'chiplists',\n            preCheck: {},\n            raceCheck: {},\n            dogJournals: {},\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n        this.parseInputTimer = null;\n    }\n\n    toggleDisplayDetails = (e) => {\n\t\tconst id = e.target.closest('tr').dataset.id;\n\t\tconst { appState } = this.props.stores;\n\t\tconst { editUserDetails } = appState;\n\t\tif (!editUserDetails[id]) {\n\t\t\tappState.toggleDisplayDetails(id)\n\t\t}\n\t}\n\n    adminToggleEditUser = async (e) => {\n\t\te.stopPropagation();\n\t\tconst id = e.target.closest('tr').dataset.id;\n\t\tconst { appState, raceStore, adminStore } = this.props.stores;\n        const { editUserDetails } = appState;\n\n        if (!editUserDetails[id]) {\n            const musher = raceStore.getMusherById(id);\n            await adminStore.getUserByEmail(musher.email);\n            // console.log({ musher, user, teams });\n        }\n\t\tappState.toggleEditUserDetails(id)\n\t}\n\n    veterinaryToggleEditUser = (e) => {\n\t\te.stopPropagation();\n\t\tconst id = e.target.closest('tr').dataset.id;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleVeterinaryUserDetails(id, true)\n\t}\n\n    toggleAdminSendMessage = (e) => {\n\t\tconst classId = e.target.closest('button').dataset.class;\n\t\tconst { showAdminSendMessage } = this.state;\n\t\tshowAdminSendMessage[classId] = !showAdminSendMessage[classId];\n\t\tthis.setState({ showAdminSendMessage });\n\t}\n\n    toggleAdminSendInboxMessage = (e) => {\n\t\tconst classId = e.target.closest('button').dataset.class;\n\t\tconst { showAdminSendInboxMessage = {} } = this.state;\n\t\tshowAdminSendInboxMessage[classId] = !showAdminSendInboxMessage[classId];\n\t\tthis.setState({ showAdminSendInboxMessage });\n\t}\n\n    toggleAdminImport = (e) => {\n\t\tconst classId = e.target.closest('button').dataset.class;\n\t\tconst { showAdminImport } = this.state;\n\t\tshowAdminImport[classId] = !showAdminImport[classId];\n\t\tthis.setState({ showAdminImport });\n\t}\n\n    adminSignupEdit = (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, contestantid } = e.target.dataset;\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 500);\n\t}\n\n    adminSignupSetValue = (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n        const { field, value, classid, contestantid } = e.target.dataset;\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 5);\n    }\n\n\tsendEmail = async (e) => {\n        const { race = {} } = this.props;\n        const raceId = race.id;\n\t\tconst to = e.target.closest('button').dataset.to;\n\t\tconst raceClassId = e.target.closest('button').dataset.raceclassid;\n\t\tconst { appState } = this.props.stores;\n\t\tconst { message } = this.state;\n\t\tconst { subject, body } = message;\n\t\tconst emailResponse = await appState.sendEmail({\n\t\t\tto,\n\t\t\tsubject,\n\t\t\tbody,\n\t\t\traceId,\n\t\t\traceClassId,\n\t\t});\n\t\tthis.setState({ emailResponse });\n\t}\n\n\tresetEmail = () => {\n\t\tthis.setState({\n\t\t\temailResponse: null,\n\t\t\tmessage: {\n\t\t\t\tsubject: '',\n\t\t\t\tbody: '',\n\t\t\t},\n\t\t});\n\t}\n\n    sendInboxMessage = async (e) => {\n        const { raceStore } = this.props.stores;\n        const { race = {} } = this.props;\n        const raceId = race.id;\n\t\tconst raceClassId = e.target.closest('button').dataset.raceclassid;\n\t\tconst { inboxMessage } = this.state;\n\t\tconst { body } = inboxMessage;\n\t\tconst inboxMessageResponse = await raceStore.sendInboxMessage({\n\t\t\tbody,\n\t\t\traceId,\n\t\t\traceClassId,\n\t\t});\n\t\tthis.setState({ inboxMessageResponse });\n\t}\n\n    resetInboxMessage = () => {\n\t\tthis.setState({\n\t\t\tinboxMessage: {\n\t\t\t\tbody: '',\n\t\t\t},\n\t\t});\n\t}\n\n    signupToRace = async ({ signup }) => {\n\t\tconst { raceStore } = this.props.stores;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n\t\tawait raceStore.addContestant({\n\t\t\tid: raceid,\n\t\t\tclassId: signup.class,\n\t\t\tnewContestant: {\n\t\t\t\t// team: user.team,\n\t\t\t\t// firstname: user.firstname,\n\t\t\t\t// lastname: user.lastname,\n\t\t\t\t// sportsClub: user.sportsClub,\n\t\t\t\t// email: user.email,\n\t\t\t\t// cellphone: user.cellphone,\n\t\t\t\t// facebook: user.facebook,\n\t\t\t\t// instagram: user.instagram,\n\t\t\t\t ...signup\n\t\t\t}\n        });\n\t}\n\n    parseInput = async (data, classId) => {\n        clearTimeout(this.parseInputTimer);\n        this.parseInputTimer = setTimeout(() => this.doParseInput(data, classId), 500);\n    }\n\n    doParseInput = async (data, classId) => {\n        const lines = String(data).split('\\n');\n        let headers = [];\n        const jsonData = [];\n\n        // Get headers\n        const firstLine = lines[0];\n        if (firstLine.match(/\\t/)) {\n            headers = firstLine.split('\\t');\n        } else if (firstLine.match(/;/)) {\n            headers = firstLine.split(';');\n        } else {\n            headers = firstLine.split(',');\n        }\n\n        // Map data to headernames\n        for (let i = 1, l = lines.length; i < l; i += 1) {\n            const line = lines[i];\n            let values;\n            if (line.match(/\\t/)) {\n                values = line.split('\\t');\n            } else if (line.match(/;/)) {\n                values = line.split(';');\n            } else {\n                values = line.split(',');\n            }\n            const jsonObject = {};\n            values.forEach((v, idx) => {\n                let val = v;\n                if (headers[idx] === 'email') {\n                    val = v.toLowerCase();\n                }\n                jsonObject[headers[idx]] = val;\n            });\n            jsonData.push(jsonObject);\n        }\n\n        const { raceStore } = this.props.stores;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        raceStore.addMultipleContestants({ id: raceid, classId, contestants: jsonData });\n        return true;\n    }\n\n    chooseSubmenu = (e) => {\n        e.stopPropagation();\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/${dog.id}/${submenu}`);\n\t}\n\n\tfilterByClass = (e) => {\n\t\tconst selectedClassId = e.target.closest('button').dataset.id;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleSelectedClassId(selectedClassId, true);\n\t}\n\n    clearSearchForBib = () => {\n        this.setState({ searchForBib: '' });\n    }\n\n    savePreCheck = async (e) => {\n        const { id, chipid, name, shortname, team } = e.target.closest('button').dataset;\n        const { preCheck, dogJournals } = this.state;\n        const { dogJournalStore, userStore } = this.props.stores;\n\t\tconst { user = {} } = userStore;\n\n        const vetData = {\n            id: user.id,\n            firstname: user.firstname,\n            lastname: user.lastname,\n            email: user.email,\n            image: user.image,\n        };\n\n        const dogData = {\n            id,\n            chipId: chipid,\n            name,\n            shortname,\n            team,\n        };\n\n        const preCheckOject = util.getNestedValue(preCheck, id) || {};\n        const journalData = {\n            checkType: 'preCheck',\n            ...preCheckOject,\n        };\n\n        const data = [{\n            dog: { ...dogData },\n            journal: { ...journalData },\n            veterinary: { ...vetData },\n        }];\n\n        if (!dogJournals[chipid]){\n            dogJournals[chipid] = [];\n        }\n        dogJournals[chipid].push({\n            date: new Date(),\n            ...dogData,\n            ...journalData,\n            ...vetData,\n        });\n\n        await dogJournalStore.insert({ data });\n        delete preCheck[id];\n        this.setState({ preCheck });\n    }\n\n    render() {\n        const {\n            showAdminSendMessage = {}, showAdminSendInboxMessage = {}, showAdminImport = {},\n            message = {}, inboxMessage = {},\n            inboxMessageResponse, emailResponse, submenu, searchForBib,\n            preCheck = {},\n            raceCheck = {},\n            dogJournals = {},\n        } = this.state;\n\t\tconst { userStore, raceStore, appState, adminStore } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin, isVeterinary } = userStore;\n        const { language = 'en' } = user;\n        const { displayDetails, editUserDetails, veterinaryUserDetails, selectedClassIds = [] } = appState;\n\n\t\tconst { race = {} } = this.props;\n\n        const filterByClassId = (c) => {\n\t\t\tif (selectedClassIds.length > 0) {\n\t\t\t\treturn selectedClassIds.indexOf(c.id) > -1;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const filterByBib = (c) => {\n\t\t\tif (searchForBib) {\n                const regex = new RegExp(`${searchForBib.replace(/[^a-zA-Z 0-9æøåÆØÅ]/, '')}`, 'i');\n\t\t\t\treturn (regex.test(c.bib) || regex.test(c.firstname) || regex.test(c.lastname));\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const { user: selectedUser, teams: selectedUserTeams } = adminStore;\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='races.mushers'>Deltakere</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n\n                    <div class='w-100 overflow-hidden'>\n                        <div\n                            class='d-flex flex-row flex-nowrap pb-2 px-1'\n                            style='overflow: auto; scroll-snap-type: x mandatory;'\n                        >\n                            {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map((currentClass, idx) => <>\n                                <div class='col px-0 pt-2'>\n                                    <button\n                                        type='button'\n                                        class={`btn btn-block ${idx === 0 && 'rounded-pill-left'} ${idx === race.classes.length - 1 && 'rounded-pill-right'} rounded-none ${selectedClassIds.indexOf(currentClass.id) > -1 ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                        onClick={this.filterByClass}\n                                        data-id={currentClass.id}\n                                    >\n                                        {currentClass.title}\n                                    </button>\n                                </div>\n                            </>)}\n                        </div>\n                    </div>\n\n                    <div class='row mb-3'>\n                        <div class='col-6 offset-3'>\n                            <div class='input-group'>\n                                <input class='form-control form-control-lg' type='text' placeholder='Search for bib' value={searchForBib} onInput={linkstate(this, 'searchForBib')} />\n                                {searchForBib && <div class='input-group-append'>\n                                    <div class='input-group-text' onClick={this.clearSearchForBib}>x</div>\n                                </div>}\n                            </div>\n                        </div>\n                    </div>\n\n                    {race.classes && race.classes.filter(filterByClassId).sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                        {isAdmin && <span class='float-right'>\n                            Total app users: {currentClass.contestants && currentClass.contestants.filter(musher => (musher.user || musher.team)).length}\n                        </span>}\n                        <h5>{currentClass.title} {currentClass.startDate && <>\n                            : <span class='font-weight-lighter'>\n                                {util.formatDate(currentClass.startDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })} - {util.formatDate(currentClass.endDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                            </span>\n                        </>}</h5>\n\n                        {isAdmin && <>\n                            <a class='mx-2' href={`/tv/top10/${race.id}/${currentClass.id}`}>TV Top 10</a> -\n                            <a class='mx-2' href={`/tv/top5/${race.id}/${currentClass.id}`}>TV Top 5</a> -\n                            <a class='mx-2' href={`/tv/top3/${race.id}/${currentClass.id}`}>TV Top 3</a> -\n\n                            <a class='mx-2' href={`/tv/top10progress/${race.id}/${currentClass.id}`}>TV Top Progress 10</a> -\n                            <a class='mx-2' href={`/tv/top5progress/${race.id}/${currentClass.id}`}>TV Top Progress 5</a> -\n                            <a class='mx-2' href={`/tv/top3progress/${race.id}/${currentClass.id}`}>TV Top Progress 3</a> -\n\n                            <a class='mx-2' href={`/tv/team/${race.id}/1`}>TV One team</a> -\n                            <a class='mx-2' href={`/tv/tracking/${race.id}/${currentClass.id}`}>TV tracking</a> -\n                            <a class='mx-2' href={`/tv/freetext`}>TV free text</a> -\n\n                            <a class='mx-2' href={`/embed/top10/${race.id}/${currentClass.id}`}>Embed top10</a> -\n                            <a class='mx-2' href={`/embed/tracking/${race.id}/${currentClass.id}`}>Embed tracking</a> -\n                            <a class='mx-2' href={`/embed/chiplist/${race.id}/${currentClass.id}`}>Embed chiplist</a> -\n                            <a class='mx-2' href={`/embed/agreement/${race.id}/${currentClass.id}`}>Embed agreement</a> -\n                        </>}\n\n                        <div class='table-responsive'>\n                            <table class='table table-sm table-striped'>\n                                <thead>\n                                    <tr>\n                                        <th scope='col'>#</th>\n                                        <th scope='col' style='min-width: 90%;'><Text id='races.name'>Navn</Text></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {currentClass.contestants && currentClass.contestants.filter(filterByBib).sort(byBib).map((musher, idx) => {\n                                        const currentTeam = raceStore.getTeamById(musher.team);\n                                        const hasVaccines = raceStore.hasVaccines(currentTeam);\n                                        const hasMandatoryCheck = musher.mandatoryCheck;\n\n                                        return (<>\n                                            <tr onClick={this.toggleDisplayDetails} data-id={musher.id}>\n                                                <th scope='row'>\n                                                    {musher.bib ? <>\n                                                        {musher.bib}\n                                                    </> : <>\n                                                        <span class='font-weight-lighter text-muted'>{idx + 1}</span>\n                                                    </>}\n                                                </th>\n                                                <td\n                                                    class={`${displayDetails[musher.id] ? 'font-weight-bold' : ''}`}\n                                                    style={`${displayDetails[musher.id] || veterinaryUserDetails[musher.id] ? '' : 'line-height: 0.8em;'}`}\n                                                >\n                                                    {isVeterinary && <>\n                                                        {musher.team ? <>\n                                                            <button class='btn btn-primary btn-sm float-right ml-4' onClick={this.veterinaryToggleEditUser}>\n                                                                <i class='fas fa-user-md' />\n                                                            </button>\n                                                        </> : <>\n                                                            <button class='btn btn-outline-secondary btn-sm float-right ml-4 disabled' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-user-md' />\n                                                            </button>\n                                                        </>}\n                                                        {hasVaccines ? <>\n                                                            <button class='btn btn-success btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-syringe' />\n                                                            </button>\n                                                        </> : <>\n                                                            <button class='btn btn-outline-secondary btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-syringe' />\n                                                            </button>\n                                                        </>}\n                                                        {hasMandatoryCheck ? <>\n                                                            <button class='btn btn-success btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-stethoscope' />\n                                                            </button>\n                                                        </> : <>\n                                                            <button class='btn btn-outline-secondary btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-stethoscope' />\n                                                            </button>\n                                                        </>}\n                                                    </>}\n                                                    {isAdmin && <>\n                                                        <button class='btn btn-outline-warning btn-sm float-right ml-1' onClick={this.adminToggleEditUser}>\n                                                            <i class='fas fa-user-edit' />\n                                                        </button>\n                                                        {musher.paidSignupfee && <>\n                                                            <span class='float-right'>\n                                                                <i class='fas fa-check text-success' /><br />\n                                                            </span>\n                                                        </>}\n                                                        <small class='float-right'>\n                                                            {musher.raceStatus && <><span class='text-muted'>raceStatus:</span><br /> {musher.raceStatus}<br /></>}\n                                                            {musher.raceComment && <><span class='text-muted'>raceComment:</span><br /> {musher.raceComment}<br /></>}\n                                                            {musher.gpxResultsApproved && <><span class='text-muted'>gpxResultsApproved:</span><br /> {musher.gpxResultsApproved}<br /></>}\n                                                        </small>\n                                                    </>}\n                                                    {(isAdmin || isVeterinary) && race.liveRace > 0 && race.declaration && <>\n                                                        <span class='float-right text-success mr-2' style='font-size: 1.2em;'>\n                                                            {(musher.user || musher.team) && <i class='fas fa-mobile-alt ml-2' />}\n                                                            {musher.declaration && <i class='fas fa-handshake ml-2' alt={util.isoDate(musher.declarationDate)} />}\n\n                                                        </span>\n                                                    </>}\n                                                    {displayDetails[musher.id] ? <>\n                                                        {musher.flag && <span class='mr-2'>{musher.flag}</span>}\n                                                        {musher.firstname ? <>\n                                                            {musher.firstname} {musher.lastname}<br />\n                                                        </> : <>\n                                                            {musher.name}\n                                                        </>}\n                                                        <span class='text-muted'>{currentTeam.name}</span><br />\n                                                        <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                        {musher.facebook && <a class='mr-2' href={mu.asFacebookLink(musher.facebook)} native target='_blank' rel='noreferrer'><i class='fab fa-facebook' /></a>}\n                                                        {musher.instagram && <a class='mr-2' href={mu.asInstagramLink(musher.instagram)} native target='_blank' rel='noreferrer'><i class='fab fa-instagram' /></a>}<br />\n\n                                                        {isAdmin && <>\n                                                            {musher.bib && <><i class='fas fa-tshirt ml-2' /> {musher.bib}</>}\n                                                            {musher.startTime && <><i class='fas fa-clock ml-2' /> {util.isoDate(musher.startTime)}</>}\n                                                        </>}\n\n                                                        {musher.price1 && <div class='font-weight-lighter'>\n                                                            <i class='fas fa-trophy text-warning' /> {musher.price1}\n                                                            {musher.priceSent && <>\n                                                                <i class='fas fa-check text-success' />\n                                                            </>}\n                                                        </div>}\n                                                        {musher.price2 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price2}</div>}\n                                                        {musher.price3 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price3}</div>}\n\n                                                    </> : <>\n                                                        {musher.price1 && <span class='float-right text-warning' style='font-size: 1.2em;'>\n                                                            <i class='fas fa-trophy' />\n                                                            {musher.priceSent && <>\n                                                                <i class='fas fa-check text-success' />\n                                                            </>}\n                                                        </span>}\n                                                        <nobr>\n                                                            {musher.flag && <span class='mr-2'>{musher.flag}</span>}\n                                                            {musher.firstname ? <>\n                                                                {musher.firstname} {musher.lastname}<br />\n                                                            </> : <>\n                                                                {musher.name}\n                                                            </>}\n                                                            <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                        </nobr>\n                                                    </>}\n\n\n                                                    {/* <xmp>{JSON.stringify(currentTeam, null, 4)}</xmp> */}\n                                                    {isVeterinary && veterinaryUserDetails[musher.id] && <>\n                                                        <ScrollIntoView horizontal={'end'} vertical={'center'} />\n                                                        <div class='w-100 overflow-hidden' style='max-width: 100%;'>\n                                                            <div\n                                                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                                                            >\n                                                                <div class='col px-0 pt-2'>\n                                                                    <button\n                                                                        class={`btn btn-sm btn-block rounded-pill-left rounded-none ${submenu === 'chiplists' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                                                        data-menu='chiplists'\n                                                                        onClick={this.chooseSubmenu}\n                                                                    ><i class='fas fa-user-md' /> <Text id='racevet.chiplists'>Vaccines</Text></button>\n                                                                </div>\n                                                                <div class='col px-0 pt-2'>\n                                                                    <button\n                                                                        class={`btn btn-sm btn-block rounded-none ${submenu === 'precheck' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                                                        data-menu='precheck'\n                                                                        onClick={this.chooseSubmenu}\n                                                                    ><i class='fas fa-stethoscope' /> <Text id='racevet.precheck'>PreCheck</Text></button>\n                                                                </div>\n                                                                <div class='col px-0 pt-2'>\n                                                                    <button\n                                                                        class={`btn btn-sm btn-block rounded-pill-right rounded-none ${submenu === 'racecheck' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                                                        data-menu='racecheck'\n                                                                        onClick={this.chooseSubmenu}\n                                                                    ><i class='fas fa-flag-checkered' /> <Text id='racevet.racecheck'>RaceCheck</Text></button>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n\n                                                        {submenu === 'chiplists' && <>\n                                                            <h5 class='mt-4 border-bottom'>Chiplist & Vaccines</h5>\n                                                            <div class='container-fluid'>\n                                                            <div class='row'>\n                                                                {currentTeam && currentTeam.dogs ? currentTeam.dogs.map(dog => {\n                                                                    let dogVaccines;\n                                                                    if (currentTeam && currentTeam.vaccines) {\n                                                                        dogVaccines = currentTeam.vaccines.filter(v => v.chipId === dog.chipId);\n                                                                    }\n                                                                    return (<>\n                                                                        <div class='col-12 d-flex my-3'>\n                                                                            <div class='mx-0 mr-1 px-0 position-relative pt-1'>\n                                                                                <div\n                                                                                    class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`}\n                                                                                    style={`${dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''} border-width: 2px !important;`}\n                                                                                >\n                                                                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                                                                </div>\n                                                                                <small>\n                                                                                    <span class='float-left text-overflow' style={`width: 70px;`}>{dog.name}</span><br />\n                                                                                </small>\n                                                                                {(dog.birth || dog.gender) && <small>\n                                                                                    <small class='font-weight-normal float-right position-absolute text-white bg-info p-1 rounded' style='top: 0px; right: 0px; line-height: 0.8em;'>\n                                                                                        {dog.birth && <span class='mr-1 text-white'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                                                        {dog.gender && <>{dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}</>}\n                                                                                    </small>\n                                                                                </small>}\n                                                                            </div>\n                                                                            <div class='flex-grow-1 row'>\n                                                                                <div class='col-12 font-weight-bold'>\n                                                                                    <i class='fas fa-microchip text-muted' /> {dog.chipId}\n                                                                                </div>\n                                                                            {/* <xmp>{JSON.stringify(dogVaccines, null, 4)}</xmp> */}\n                                                                                {dogVaccines && dogVaccines.map((vac) => {\n                                                                                    return (\n                                                                                        <div class='col-4 px-1 overflow-hidden'>\n                                                                                            <span class={`badge badge-${vac.inKarens ? 'warning' : 'success'}`}>\n                                                                                                <span class='font-weight-lighter'>\n                                                                                                    <i class='fas fa-calendar-check' /> {util.isoDate(vac.vaccineAgens.durationEnd, false, false, true)}\n                                                                                                    {vac.inKarens && <>\n                                                                                                        <br />\n                                                                                                        (<Text id='dogs.vaccine-karens'>karens</Text>: {util.format(vac.karensDaysLeft, 0)} <Text id='dogs.vaccine-karens-days-left'>days left</Text>)\n                                                                                                    </>}\n                                                                                                </span>\n                                                                                            </span>\n\n                                                                                            <div class='text-overflow'>\n                                                                                                <small class='font-weight-light'>\n                                                                                                    {vac.vaccineAgens.name}<br />\n                                                                                                    <nobr>{vac.vaccineName}</nobr><br />\n                                                                                                    {/* {util.isoDate(vac.date, false, false, true)}<br /> */}\n                                                                                                    {/* <span class='font-weight-lighter'>\n                                                                                                        <Text id='dogs.vaccine-veterinary'>Veterinær</Text>:\n                                                                                                    </span> {vac.veterinaryFirstname} {vac.veterinaryLastname} &lt;{vac.veterinaryEmail}&gt;<br /> */}\n                                                                                                </small>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    );\n                                                                                })}\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </>);\n                                                                }) : <>\n                                                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                                                        <div class='text-center text-muted'>\n                                                                            <div class='display-1'><i class='fas fa-dog' /></div>\n                                                                            <h3><Text id='teams.no-dogs-title'>No dogs for this team!</Text></h3>\n                                                                        </div>\n                                                                    </div>\n                                                                </>}\n                                                            </div>\n                                                            </div>\n                                                        </>}\n\n                                                        {submenu === 'precheck' && <>\n                                                            <h5 class='mt-4 border-bottom'>Precheck</h5>\n                                                            <div class='row'>\n                                                                {currentTeam && currentTeam.dogs ? currentTeam.dogs.map(dog => {\n                                                                    let dogJournal;\n                                                                    if (currentTeam && currentTeam.journal) {\n                                                                        dogJournal = currentTeam.journal.filter(v => v.chipId === dog.chipId);\n                                                                    }\n                                                                    return (<>\n                                                                        <div class='col-12 d-flex my-3'>\n                                                                            <div class='mx-0 mr-1 px-0 position-relative pt-1'>\n                                                                                <div\n                                                                                    class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`}\n                                                                                    style={`${dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''} border-width: 2px !important;`}\n                                                                                >\n                                                                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                                                                </div>\n                                                                                <small>\n                                                                                    <span class='float-left text-overflow' style={`width: 70px;`}>{dog.name}</span><br />\n                                                                                </small>\n                                                                                {(dog.birth || dog.gender) && <small>\n                                                                                    <small class='font-weight-normal float-right position-absolute text-white bg-info p-1 rounded' style='top: 0px; right: 0px; line-height: 0.8em;'>\n                                                                                        {dog.birth && <span class='mr-1 text-white'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                                                        {dog.gender && <>{dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}</>}\n                                                                                    </small>\n                                                                                </small>}\n                                                                            </div>\n                                                                            <div class='flex-grow-1 row'>\n                                                                                <div class='col-12 font-weight-bold'>\n                                                                                    <i class='fas fa-microchip text-muted' /> {dog.chipId.slice(-5)}\n                                                                                </div>\n                                                                                <div class='col-12'>\n                                                                                    {dogJournal && dogJournal.length > 0 && dogJournal.map(journal => <>\n                                                                                        <div class='row border-bottom'>\n                                                                                            {/* {JSON.stringify(journal, null, 4)} */}\n                                                                                            <div class='col-12 text-muted'>\n                                                                                                <small>\n                                                                                                    <span class='float-right'>{journal.checkType && <>{journal.checkType}</>}</span>\n                                                                                                    {util.isoDate(journal.date)} by {journal.veterinaryFirstname} {journal.veterinaryLastname}\n                                                                                                </small>\n                                                                                            </div>\n                                                                                            <div class='col-12 d-flex justify-content-between'>\n                                                                                                {journal.diagnoseId > 0 && <span class='mx-1'><span class='text-muted'>ID:</span> {journal.diagnoseId}</span>}\n                                                                                                {journal.heartRate > 0 && <span class='mx-1'><span class='text-muted'>HR:</span> {journal.heartRate}</span>}\n                                                                                                {journal.weight > 0&& <span class='mx-1'><i class='fas fa-balance-scale text-muted' /> {journal.weight} <span class='text-muted'>kg</span></span>}\n                                                                                                {journal.bodyConditionScore > 0 && <span class='mx-1'><span class='text-muted'>BCS:</span> {journal.bodyConditionScore}</span>}\n                                                                                            </div>\n                                                                                            <div class='col-12'>\n                                                                                                {journal.generalFindings && <span class='mr-1'><span class='text-muted'>Other:</span> {journal.generalFindings}</span>}\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </>)}\n                                                                                    {dogJournals[dog.chipId] && dogJournals[dog.chipId].length > 0 && dogJournals[dog.chipId].map(journal => <>\n                                                                                        <div class='row border-bottom'>\n                                                                                            {/* {JSON.stringify(journal, null, 4)} */}\n                                                                                            <div class='col-12 text-muted'>\n                                                                                                <small>\n                                                                                                    <span class='float-right'>{journal.checkType && <>{journal.checkType}</>}</span>\n                                                                                                    {util.isoDate(journal.date)} by {journal.veterinaryFirstname} {journal.veterinaryLastname}\n                                                                                                </small>\n                                                                                            </div>\n                                                                                            <div class='col-12 d-flex justify-content-between'>\n                                                                                                {journal.diagnoseId > 0 && <span class='mx-1'><span class='text-muted'>ID:</span> {journal.diagnoseId}</span>}\n                                                                                                {journal.heartRate > 0 && <span class='mx-1'><span class='text-muted'>HR:</span> {journal.heartRate}</span>}\n                                                                                                {journal.weight > 0&& <span class='mx-1'><i class='fas fa-balance-scale text-muted' /> {journal.weight} <span class='text-muted'>kg</span></span>}\n                                                                                                {journal.bodyConditionScore > 0 && <span class='mx-1'><span class='text-muted'>BCS:</span> {journal.bodyConditionScore}</span>}\n                                                                                            </div>\n                                                                                            <div class='col-12'>\n                                                                                                {journal.generalFindings && <span class='mr-1'><span class='text-muted'>Other:</span> {journal.generalFindings}</span>}\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </>)}\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='diagnoseId'>Diagnostic</label>\n                                                                                        <select class=\"form-control\" id=\"diagnoseId\" onInput={linkstate(this, `preCheck.${dog.id}.diagnoseId`)} value={util.getNestedValue(preCheck, `${dog.id}.diagnoseId`)}>\n                                                                                            <option value=''>-- Please choose --</option>\n                                                                                            <option value='100'>No findings</option>\n                                                                                        </select>\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='weight'>Weight</label>\n                                                                                        <input type='number' class='form-control' id='weight' onInput={linkstate(this, `preCheck.${dog.id}.weight`)} value={util.getNestedValue(preCheck, `${dog.id}.weight`)} />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group overflow-hidden'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='heartRate'>Heart Rate</label>\n                                                                                        <input type='text' class='form-control' id='heartRate' onInput={linkstate(this, `preCheck.${dog.id}.heartRate`)} value={util.getNestedValue(preCheck, `${dog.id}.heartRate`)} />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='bodyConditionScore'>BCS</label>\n                                                                                        <input type='number' class='form-control' id='bodyConditionScore' onInput={linkstate(this, `preCheck.${dog.id}.bodyConditionScore`)} value={util.getNestedValue(preCheck, `${dog.id}.bodyConditionScore`)} />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='generalFindings'>General findings</label>\n                                                                                        <input type='text' class='form-control' id='generalFindings' onInput={linkstate(this, `preCheck.${dog.id}.generalFindings`)} value={util.getNestedValue(preCheck, `${dog.id}.generalFindings`)} />\n                                                                                    </small>\n                                                                                    <small id='generalFindingsHelp' class='form-text text-muted'>Teeth, mucus membranes, general condition, other findings.</small>\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <button\n                                                                                        class='btn btn-outline-success'\n                                                                                        onClick={this.savePreCheck}\n                                                                                        data-id={dog.id}\n                                                                                        data-chipid={dog.chipId}\n                                                                                        data-team={currentTeam.id}\n                                                                                        data-name={dog.name}\n                                                                                        data-shortname={dog.shortName}\n                                                                                    > Save Pre Check</button>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </>);\n                                                                }) : <>\n                                                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                                                        <div class='text-center text-muted'>\n                                                                            <div class='display-1'><i class='fas fa-dog' /></div>\n                                                                            <h3><Text id='teams.no-dogs-title'>No dogs for this team!</Text></h3>\n                                                                        </div>\n                                                                    </div>\n                                                                </>}\n                                                            </div>\n                                                        </>}\n\n                                                        {submenu === 'racecheck' && <>\n                                                            <h5 class='mt-4 border-bottom'>Racecheck</h5>\n                                                            <div class='row'>\n                                                                {currentTeam && currentTeam.dogs ? currentTeam.dogs.map(dog => {\n                                                                    return (<>\n                                                                        <div class='col-12 d-flex my-3'>\n                                                                            <div class='mx-0 mr-1 px-0 position-relative pt-1'>\n                                                                                <div\n                                                                                    class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`}\n                                                                                    style={`${dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''} border-width: 2px !important;`}\n                                                                                >\n                                                                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                                                                </div>\n                                                                                <small>\n                                                                                    <span class='float-left text-overflow' style={`width: 70px;`}>{dog.name}</span><br />\n                                                                                </small>\n                                                                                {(dog.birth || dog.gender) && <small>\n                                                                                    <small class='font-weight-normal float-right position-absolute text-white bg-info p-1 rounded' style='top: 0px; right: 0px; line-height: 0.8em;'>\n                                                                                        {dog.birth && <span class='mr-1 text-white'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                                                        {dog.gender && <>{dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}</>}\n                                                                                    </small>\n                                                                                </small>}\n                                                                            </div>\n                                                                            <div class='flex-grow-1 row'>\n                                                                                <div class='col-12 font-weight-bold'>\n                                                                                    <i class='fas fa-microchip text-muted' /> {dog.chipId.slice(-5)}\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='weight'>Weight</label>\n                                                                                        <input type='number' class='form-control' id='weight' />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group overflow-hidden'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='hrHeartLungs'>HR/Heart/Lungs</label>\n                                                                                        <input type='text' class='form-control' id='hrHeartLungs' />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='bcs'>BCS</label>\n                                                                                        <input type='number' class='form-control' id='bcs' />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='general'>General findings</label>\n                                                                                        <input type='text' class='form-control' id='general' />\n                                                                                    </small>\n                                                                                    <small id='generalHelp' class='form-text text-muted'>Teeth, mucus membranes, general condition, other findings.</small>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </>);\n                                                                }) : <>\n                                                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                                                        <div class='text-center text-muted'>\n                                                                            <div class='display-1'><i class='fas fa-dog' /></div>\n                                                                            <h3><Text id='teams.no-dogs-title'>No dogs for this team!</Text></h3>\n                                                                        </div>\n                                                                    </div>\n                                                                </>}\n                                                            </div>\n                                                        </>}\n                                                    </>}\n\n                                                    {(isAdmin && editUserDetails[musher.id]) && <>\n                                                        <h5>Admin edit:</h5>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label class='col-4 col-form-label text-right'>Email</label>\n                                                            <div class='col-8'>\n                                                                {musher.email}\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='bib' class='col-4 col-form-label text-right'>bib</label>\n                                                            <div class='col-8'>\n                                                                <input type='number' class='form-control' id='bib'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.bib}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='startTime' class='col-4 col-form-label text-right'>startTime</label>\n                                                            <div class='col-8'>\n                                                                <input type='datetime-local' class='form-control' id='startTime'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.startTime ? util.isoDate(musher.startTime, false, false, false) : util.isoDate(currentClass.startDate, false, false, false)}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>team</label>\n                                                            <div class='col-8'>\n                                                                {selectedUserTeams ? <>\n                                                                    <select class='form-control' id='team'\n                                                                        data-classid={currentClass.id}\n                                                                        data-contestantid={musher.id}\n                                                                        onInput={this.adminSignupEdit}\n                                                                        value={musher.team}\n                                                                    >\n                                                                        <option value=''>-- Choose race team --</option>\n                                                                        {selectedUserTeams && selectedUserTeams.map(t => <>\n                                                                            <option value={t.id}>{t.name} {t.dogs ? `(${t.dogs.length})` : ''}</option>\n                                                                        </>)}\n                                                                    </select>\n                                                                </> : <>                                                                \n                                                                    <input type='number' class='form-control' id='team'\n                                                                        data-classid={currentClass.id}\n                                                                        data-contestantid={musher.id}\n                                                                        onInput={this.adminSignupEdit}\n                                                                        value={musher.team}\n                                                                    />\n                                                                </>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='user' class='col-4 col-form-label text-right'>user</label>\n                                                            <div class='col-8'>\n                                                                <input type='number' class='form-control' id='user'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.user}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>Race status</label>\n                                                            <div class='col-8'>\n                                                                <select class='form-control' id='raceStatus'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.raceStatus}\n                                                                >\n                                                                    <option value=''>-- Choose race status --</option>\n                                                                    <option value='OK'>OK - Everything ok</option>\n                                                                    <option value='DNS'>DNS - Did Not Start</option>\n                                                                    <option value='DNF'>DNF - Did Not Finish</option>\n                                                                    <option value='DNQ'>DNQ - Did not qualify</option>\n                                                                    <option value='DQ'>DQ - Disqualified</option>\n                                                                </select>\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='raceComment' class='col-4 col-form-label text-right'>Race comment</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='raceComment'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.raceComment}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='gpxResultsApproved' class='col-4 col-form-label text-right'>GPX Results approved (date)</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='gpxResultsApproved'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.gpxResultsApproved ? util.isoDate(musher.gpxResultsApproved, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='paidSignupfee' class='col-4 col-form-label text-right'>paidSignupfee (date)</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='paidSignupfee'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.paidSignupfee ? util.isoDate(musher.paidSignupfee, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='startOrder' class='col-4 col-form-label text-right'>startOrder</label>\n                                                            <div class='col-8'>\n                                                                <input type='number' class='form-control' id='startOrder'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.startOrder}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='cellphone' class='col-4 col-form-label text-right'>Mobil</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='cellphone'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.cellphone}\n                                                                />\n                                                                {selectedUser.cellphone && <small id='cellphoneHelp' class='form-text text-muted'\n                                                                    data-field='cellphone'\n                                                                    data-value={selectedUser.cellphone}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.cellphone || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='name' class='col-4 col-form-label text-right'>Navn</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='name'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.name}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='firstname' class='col-4 col-form-label text-right'>Fornavn</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='firstname'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.firstname}\n                                                                />\n                                                                {selectedUser.firstname && <small id='firstnameHelp' class='form-text text-muted'\n                                                                    data-field='firstname'\n                                                                    data-value={selectedUser.firstname}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.firstname || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='lastname' class='col-4 col-form-label text-right'>Etternavn</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='lastname'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.lastname}\n                                                                />\n                                                                {selectedUser.lastname && <small id='lastnameHelp' class='form-text text-muted'\n                                                                    data-field='lastname'\n                                                                    data-value={selectedUser.lastname}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.lastname || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='address' class='col-4 col-form-label text-right'>Adresse</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='address'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.address}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='postalcode' class='col-4 col-form-label text-right'>Postalcode</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='postalcode'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.postalcode}\n                                                                />\n                                                                {selectedUser.postalcode && <small id='postalcodeHelp' class='form-text text-muted'\n                                                                    data-field='postalcode'\n                                                                    data-value={selectedUser.postalcode}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.postalcode || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='postalplace' class='col-4 col-form-label text-right'>Postalplace</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='postalplace'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.postalplace}\n                                                                />\n                                                                {selectedUser.postalplace && <small id='postalplaceHelp' class='form-text text-muted'\n                                                                    data-field='postalplace'\n                                                                    data-value={selectedUser.postalplace}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.postalplace || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='flag' class='col-4 col-form-label text-right'>flag (emoji)</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='flag'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.flag}\n                                                                />\n                                                                {selectedUser.flag && <small id='flagHelp' class='form-text text-muted'\n                                                                    data-field='flag'\n                                                                    data-value={selectedUser.flag}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.flag || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='countryCode' class='col-4 col-form-label text-right'>countryCode (iso)</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='countryCode'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.countryCode}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='birthdate' class='col-4 col-form-label text-right'>birthdate</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='birthdate'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.birthdate ? util.isoDate(musher.birthdate, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='sportsClub' class='col-4 col-form-label text-right'>Klubb</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='sportsClub'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.sportsClub}\n                                                                />\n                                                                {selectedUser.sportsClub && <small id='sportsClubHelp' class='form-text text-muted'\n                                                                    data-field='sportsClub'\n                                                                    data-value={selectedUser.sportsClub}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.sportsClub || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='status' class='col-4 col-form-label text-right'>Status</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='status'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.status}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='facebook' class='col-4 col-form-label text-right'>Facebook</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='facebook'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.facebook}\n                                                                />\n                                                                {selectedUser.facebook && <small id='facebookHelp' class='form-text text-muted'\n                                                                    data-field='facebook'\n                                                                    data-value={selectedUser.facebook}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.facebook || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='instagram' class='col-4 col-form-label text-right'>Instagram</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='instagram'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.instagram}\n                                                                />\n                                                                {selectedUser.instagram && <small id='instagramHelp' class='form-text text-muted'\n                                                                    data-field='instagram'\n                                                                    data-value={selectedUser.instagram}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.instagram || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        {/* <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>Team</label>\n                                                            <div class='col-8'>\n                                                                <select class='form-control' id='team' aria-describedby='teamHelp'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.team}\n                                                                >\n                                                                    <option value=''>-- Velg team --</option>\n                                                                    {teams.map(team =>\n                                                                        <option value={team.id}>{team.name}</option>\n                                                                    )}\n                                                                </select>\n                                                            </div>\n                                                        </div> */}\n                                                        <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>Klasse</label>\n                                                            <div class='col-8'>\n                                                                <select class='form-control' id='class' aria-describedby='classHelp'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.class}\n                                                                >\n                                                                    <option value=''>-- Choose race class --</option>\n                                                                    {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                                        <option value={currentClass.id}>{currentClass.title} - {currentClass.distance} km - Påmelding: {currentClass.signupfee || race.signupfee} NOK</option>\n                                                                    </>)}\n                                                                </select>\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='price1' class='col-4 col-form-label text-right'>Price 1</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='price1'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.price1}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='price2' class='col-4 col-form-label text-right'>Price 2</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='price2'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.price2}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='price3' class='col-4 col-form-label text-right'>Price 3</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='price3'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.price3}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='priceSent' class='col-4 col-form-label text-right'>Price sent</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='priceSent'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.priceSent ? util.isoDate(musher.priceSent, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-5'>\n                                                            <div class='col-8'>\n                                                                <button type='button' class='btn btn-danger float-right'\n                                                                    id='deleteUser'\n                                                                    value='1'\n                                                                    onClick={this.adminSignupEdit}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                >\n                                                                    Delete user from this class\n                                                                </button>\n                                                            </div>\n                                                        </div>\n\n                                                    </>}\n                                                </td>\n                                            </tr>\n                                        </>);\n                                    })}\n                                </tbody>\n                            </table>\n                        </div>\n\n                        {isAdmin && <>\n                            {showAdminSendMessage[currentClass.id] ? <>\n                                <div class='container'>\n                                    <div class='row'>\n                                        <div class='col-12'>\n                                            <h5>Email to all mushers in {currentClass.title}</h5>\n                                            <div class='overflow-auto p-5' style='max-height: 30vh;'>\n                                                <small>\n                                                    {currentClass.emails && currentClass.emails.map((email) => <div class='border rounded-lg p-3 mb-3'>\n                                                        <div class='row bg-light'>\n                                                            <div class='col-3 text-right'>\n                                                                Date:\n                                                            </div>\n                                                            <div class='col-9'>\n                                                                {util.formatDate(email.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                            </div>\n                                                        </div>\n                                                        <div class='row bg-light'>\n                                                            <div class='col-3 text-right'>\n                                                                To:\n                                                            </div>\n                                                            <div class='col-9'>\n                                                                {email.to.map(e => <span class='badge badge-info px-2 py-1 mr-2'>{e}</span>)}\n                                                            </div>\n                                                        </div>\n                                                        <div class='row bg-light'>\n                                                            <div class='col-3 text-right'>\n                                                                Subject:\n                                                            </div>\n                                                            <div class='col-9'>\n                                                                {email.subject}\n                                                            </div>\n                                                        </div>\n                                                        <div class='row mt-2'>\n                                                            <div class='col-3 text-right'>\n                                                                Body:\n                                                            </div>\n                                                            <div class='col-9'\n                                                                dangerouslySetInnerHTML={{ __html: nl2br(email.body) }}\n                                                            />\n                                                        </div>\n                                                    </div>)}\n                                                </small>\n                                            </div>\n\n                                            <div class='form-group row'>\n                                                <label for='subject' class='col-2 col-form-label text-right font-weight-lighter'>To</label>\n                                                <div class='col-10'>\n                                                    {currentClass.contestants && currentClass.contestants.map((musher) => <>\n                                                        <span class='badge badge-info px-2 py-1 mr-2'>{musher.firstname} {musher.lastname} ({musher.email})</span>\n                                                    </>)}\n                                                </div>\n                                            </div>\n                                            <div class='form-group row'>\n                                                <label for='subject' class='col-2 col-form-label text-right font-weight-lighter'>Subject</label>\n                                                <div class='col-10'>\n                                                    <input type='text' class='form-control' id='subject'\n                                                        onInput={linkstate(this, 'message.subject')}\n                                                        value={message.subject}\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div class='form-group row'>\n                                                <label for='body' class='col-2 col-form-label text-right font-weight-lighter'>Message</label>\n                                                <div class='col-10'>\n                                                    <textarea type='text' class='form-control' id='body'\n                                                        rows='10'\n                                                        onInput={linkstate(this, 'message.body')}\n                                                        value={message.body}\n                                                    />\n                                                </div>\n                                                <div class='col-5 contain-images'>\n                                                    {message.body && <Markdown markdown={message.body} markdownOpts={mu.getMarkdownOptions()} />}\n                                                </div>\n                                            </div>\n\n                                            {emailResponse && <>\n                                                <div class={`alert alert-${emailResponse && emailResponse.status >= 300 ? 'danger' : 'success'}`} role='alert'>\n                                                    <small>\n                                                        <xmp>{JSON.stringify(emailResponse, null, 4)}</xmp>\n                                                    </small>\n                                                </div>\n                                            </>}\n\n                                            <button class='btn btn-success float-right'\n                                                type='button'\n                                                data-to={currentClass.contestants && currentClass.contestants.map(musher => musher.email)}\n                                                data-raceclassid={currentClass.id}\n                                                onClick={this.sendEmail}\n                                            >\n                                                <i class='fas fa-paper-plane' /> Send email to all mushers\n                                            </button>\n                                            <button class='btn btn-danger float-right mr-2'\n                                                type='button'\n                                                onClick={this.resetEmail}\n                                            >\n                                                <i class='fas fa-times' /> Reset email\n                                            </button>\n\n                                        </div>\n                                        <div class='col-12 text-center'>\n                                            <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendMessage} data-class={currentClass.id}>Hide email form</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </> : <>\n                                <div class='col-12 text-center'>\n                                    <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendMessage} data-class={currentClass.id}>Send email to all in this class</button>\n                                </div>\n                                <div class='col-12 text-center'>\n                                    <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendInboxMessage} data-class={currentClass.id}>Send inbox message to all in this class</button>\n                                </div>\n                                <div class='col-12 text-center'>\n                                    <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminImport} data-class={currentClass.id}>Toggle import form</button>\n                                </div>\n                            </>}\n\n                            {showAdminSendInboxMessage[currentClass.id] ? <>\n                                <div class='container'>\n                                    <div class='row'>\n                                        <div class='col-12'>\n                                            <h5>Inbox Message to all mushers in {currentClass.title}</h5>\n                                            <div class='form-group row'>\n                                                <label for='body' class='col-2 col-form-label text-right font-weight-lighter'>Inbox message</label>\n                                                <div class='col-10'>\n                                                    <textarea type='text' class='form-control' id='body'\n                                                        rows='10'\n                                                        onInput={linkstate(this, 'inboxMessage.body')}\n                                                        value={inboxMessage.body}\n                                                    />\n                                                </div>\n                                                <div class='col-5 contain-images'>\n                                                    {inboxMessage.body && <Markdown markdown={inboxMessage.body} markdownOpts={mu.getMarkdownOptions()} />}\n                                                </div>\n                                            </div>\n\n                                            <div class='clearfix'>\n                                                <button class='btn btn-success float-right'\n                                                    type='button'\n                                                    data-raceclassid={currentClass.id}\n                                                    onClick={this.sendInboxMessage}\n                                                >\n                                                    <i class='fas fa-paper-plane' /> Send inbox message to all mushers\n                                                </button>\n                                                <button class='btn btn-danger float-right mr-2'\n                                                    type='button'\n                                                    onClick={this.resetInboxMessage}\n                                                >\n                                                    <i class='fas fa-times' /> Reset inbox message\n                                                </button>\n                                            </div>\n\n                                            {inboxMessageResponse && <>\n                                                <div class={`alert alert-${inboxMessageResponse && inboxMessageResponse.status >= 300 ? 'danger' : 'success'}`} role='alert' style='max-height: 20vh;'>\n                                                    <small>\n                                                        <xmp>{JSON.stringify(inboxMessageResponse, null, 4)}</xmp>\n                                                    </small>\n                                                </div>\n                                            </>}\n\n                                        </div>\n                                        <div class='col-12 text-center'>\n                                            <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendInboxMessage} data-class={currentClass.id}>Hide inboxmessage form</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </> : <>\n\n                            </>}\n\n                            {isAdmin && showAdminImport[currentClass.id] && <>\n                                <div class='form-group'>\n                                    <label for='importUsers'><Text id='races.paste-users'>Paste your user data here to import users</Text>:</label>\n                                    <textarea\n                                        class='form-control'\n                                        id='importUsers'\n                                        rows='20'\n                                        oninput={e => this.parseInput(e.target.value, currentClass.id)}\n                                    />\n                                </div>\n                            </>}\n\n                        </>}\n                    </>)}\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailMushers;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Speed extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kmtToMph(value), 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.mph'>mph</Text></small></small></small></> : <><Text id='workouts.mph'>mph</Text></>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.kmt'>km/t</Text></small></small></small></> : <><Text id='workouts.kmt'>km/t</Text></>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Speed;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\tconfirmed: {},\n\tdeleted: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeams() {\n        const { teamStore } = this.props.stores;\n        await teamStore.load({ query: {}, addData: ['followRequests'] });\n    }\n\n    confirmRequest = (e) => {\n        const { team, user, follow } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.confirmFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { confirmed } = this.state;\n\t\tconfirmed[`${team}-${user}`] = true;\n        this.setState({ confirmed });\n\n        if (follow) {\n            teamStore.followRequestUser(user);\n        }\n    }\n\n    deleteRequest = (e) => {\n        const { team, user } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.deleteFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { deleted } = this.state;\n\t\tdeleted[`${team}-${user}`] = true;\n        this.setState({ deleted });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n        const { deleted = {}, confirmed = {} } = this.state;\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { teams, hasFollowRequests, followRequests = [] } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!hasFollowRequests) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n            <div class='row pb-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            <div class='col-12'>\n                                <h5><Text id='teams.connect.teams-follow-requests'>Forespørsel om å følge</Text>:</h5>\n                            </div>\n                        </div>\n\t\t\t\t\t\t<div class='row'>\n                            <div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                                {util.isArray(teams) && teams.map((team) => <>\n                                    {team && util.isArray(team.followRequests) && team.followRequests.map((reqUser) => {\n                                        const image = reqUser.image && reqUser.image.s3SmallLink ? reqUser.image : null;\n                                        const isDeleted = deleted[`${team.id}-${reqUser.id}`];\n                                        const isConfirmed = confirmed[`${team.id}-${reqUser.id}`];\n                                        const publicTeam = followRequests.find(e => e.user.id === reqUser.id);\n                                        return (\n                                            <div class='mr-2 py-2 border rounded-lg' style='width: 150px;'>\n                                                <div class={`text-center border rounded-circle imageRounded imageRoundedSmall mx-auto`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                                    {!image && <div class='text-muted font-weight-lighter' style='font-size: 20px; padding-top: 5px;'>{mu.displayNameShort(reqUser)}</div>}\n                                                </div>\n                                                <small>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(reqUser)}</strong><br />\n                                                        {/* {publicTeam && publicTeam.public > 0 ? <>\n                                                            <a href={`/teams/public/${publicTeam.uuidv4}`}>{publicTeam.name}</a>\n                                                        </> : <>\n                                                            {publicTeam ? <>{publicTeam.name}</> : ''}<br />\n                                                            <span class='text-muted'>(<Text id='teams.not-public'>Not public</Text>)</span>\n                                                        </>} */}\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <Text id='teams.connect.wants-to-follow'>wants to follow your team:</Text>\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(team)}</strong>\n                                                    </div>\n                                                </small>\n                                                {(isConfirmed || isDeleted) ? <>\n                                                    <div class='text-center'>\n                                                        {isConfirmed ? <div class='text-success'>\n                                                            <Text id='teams.connect.confirmed'>Confirmed</Text> <i class='fas fa-check' />\n                                                        </div> : <div class='text-danger'>\n                                                            <Text id='teams.connect.deleted'>Deleted</Text> <i class='fas fa-trash-alt' />\n                                                        </div>}\n                                                    </div>\n                                                </> : <>                                    \n                                                    <div>\n                                                        <button class='btn btn-sm btn-block btn-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id}>\n                                                            <Text id='teams.connect.confirm'>Confirm</Text>\n                                                        </button>\n                                                        {publicTeam && publicTeam.public > 0 && <button class='btn btn-sm btn-block btn-outline-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id} data-follow={true}>\n                                                            <Text id='teams.connect.confirm-and-follow'>Confirm & follow back</Text>\n                                                        </button>}\n                                                        <div class='mt-3'>\n                                                            <small>\n                                                                <button class='btn btn-sm btn-block btn-link text-overflow' style='font-size: 1.0em;' onClick={this.deleteRequest} data-team={team.id} data-user={reqUser.id}>\n                                                                    <Text id='teams.connect.delete'>Del</Text>\n                                                                </button>\n                                                            </small>\n                                                        </div>\n                                                    </div>\n                                                </>}\n                                            </div>\n                                        );\n                                    })}\n                                </>)}\n                            </div>\n                        </div>\n                        <details class='mt-3'>\n                            <summary><small><Text id='teams.connect.how-summary'>How does this work?</Text></small></summary>\n                            <p>\n                                <Text id='teams.connect.how-text'>What can followers see when I grant them access to follow? The answer is very little. They can see main details of the workouts you share and name of the dogs. That's all. Try to follow a team and check out the workout tab.</Text>\n                            </p>\n                        </details>\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport RaceComments from '../public/race/comments';\nimport RaceAddComment from '../public/race/commentAdd';\nimport RaceText from '../public/race/raceText';\nimport Images from '../../components/form/images';\nimport LikesAndComments from '../../components/feedback/likesAndComments';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\nimport RaceResults from './results';\nimport RaceNews from './news';\nimport RaceSignup from './signup';\nimport RaceClasses from './classes';\nimport RaceMushers from './mushers';\nimport RaceUserImages from './userImages';\nimport RaceTracking from './tracking';\nimport RaceNotifications from './notifications';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst initialState = {\n\tisLoading: false,\n    showAdminSendMessage: {},\n\tnewRaceArticle: {},\n\tnewRaceUserImage: {},\n\tmessage: {\n\t\tsubject: '',\n\t\tbody: '',\n\t},\n};\n\n@observer\nclass AppRaceDetailSignup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            showAdminSendMessage: {},\n            newRaceArticle: {},\n            newRaceUserImage: {},\n            message: {\n                subject: '',\n                body: '',\n            },\n            submenu: props.submenu || 'about',\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n\tasync loadRace(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore, userStore } = props.stores;\n\t\tconst { user = {} } = userStore;\n\t\tconst { raceid } = props;\n\t\tawait raceStore.load(raceid);\n\t\tthis.setState({ isLoading: false });\n\n\t\tlet signup = {};\n\t\tconst { race } = raceStore;\n\t\tif (race.classes && user && user.email) {\n\t\t\tfor (let i = 0, l = race.classes.length; i < l; i += 1) {\n\t\t\t\tconst currentClass = race.classes[i];\n\t\t\t\tif (currentClass.contestants) {\n\t\t\t\t\tconst idx = currentClass.contestants.findIndex(e => e.email === user.email);\n\t\t\t\t\tif (idx > -1) {\n\t\t\t\t\t\tsignup = { ...currentClass.contestants[idx], class: currentClass.id };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\traceStore.updateKeyValue('signup', signup);\n        if (signup.user) {\n            await userStore.getDogs({ id: signup.user });\n        }\n\n\t\tconst allTeamIds = race.classes.filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0).map((currentClass) => {\n            return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n\t\t}).flat();\n\t\tif (allTeamIds.length > 0 && raceid) {\n\t\t\tawait raceStore.loadTeams(allTeamIds.join(','));\n\t\t}\n\t\traceStore.getAllClassesSortedBy();\n\n\t\tawait raceStore.loadPublicInteractions(raceid);\n\t}\n\n    likeRace = async () => {\n\t\tconst { raceStore } = this.props.stores;\n\t\tconst { race } = raceStore;\n\t\tconst response = await raceStore.likeRace({ id: race.id });\n\n        if (response && response.status === 200) {\n\t\t\t// this.loadRaceDetail({ race });\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst raceId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAddComment } = this.state;\n\t\tthis.setState({\n\t\t\tshowAddComment: !showAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[raceId]) {\n\t\t\t\tthis.inputRef[raceId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n        const { raceid } = this.props;\n        route(`/app-races/${raceid}/${submenu}`);\n\t}\n\n    resizeTextarea = (el) => {\n\t\tlet element = el;\n\t\tif (element.target) {\n\t\t\telement = el.target;\n\t\t}\n\t\tconst { scrollHeight } = element;\n\t\telement.style.height = `${scrollHeight}px`;\n\t}\n\n\tresizeAllTextareas = () => {\n\t\tconst textareaList = document.getElementsByTagName('textarea');\n\t\tfor(let i = 0, l = textareaList.length; i < l; i += 1){\n\t\t\tconst textarea = textareaList[i];\n\t\t\tthis.resizeTextarea(textarea);\n\t\t}\n\t}\n\n    addNavigation = (props) => {\n        // console.log({ props });\n        this.setState({ submenu: props.submenu });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadRace();\n        this.resizeAllTextareas();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.raceid !== this.props.raceid) {\n            this.loadRace(nextProps);\n        }\n        // console.log('componentWillReceiveProps', nextProps.submenu, this.props.submenu);\n        if (nextProps.submenu !== this.props.submenu) {\n            this.addNavigation(nextProps);\n        }\n\t}\n\n    back = () => {\n        route(`/`);\n    }\n\n\trender() {\n        const { submenu } = this.state;\n        const { showAdminSendMessage, message, emailResponse } = this.state;\n        const { showAddComment, newRaceArticle, newRaceUserImage } = this.state;\n\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin, isVeterinary } = userStore;\n\n        const { language = 'en' } = user;\n\n\t\tconst { raceid, subsection } = this.props;\n\t\tconst { race, signup, zoomToMarkers } = raceStore;\n        const { darkmode, displayDetails, editUserDetails } = appState;\n\n\t\tconst { likes = [], comments = [] } = race;\n\t\tconst hasLikedRace = race.likes && race.likes.findIndex(e => e.user === user.id) > -1;\n\n        const today = new Date();\n        let status = '';\n        if (today >= new Date(race.startDate) && today <= new Date(race.endDate)) {\n            status = 'race';\n        } else if (today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate)) {\n            status = 'signup';\n        }\n        const isLiveRace = race.liveRace === 1;\n        const showSignup = isLiveRace ? !!signup.email : true;\n\n        if (submenu === 'tracking') {\n            return (\n                <RaceTracking stores={this.props.stores} raceid={raceid} />\n            );\n        }\n        if (submenu === 'results') {\n            return (\n                <RaceResults stores={this.props.stores} raceid={raceid} />\n            );\n        }\n        \n        let showTracking = true;\n        if (race.countryRegexp) {\n            if (user && user.currentLocationGeocode) {\n                const regexp = new RegExp(race.countryRegexp, 'i');\n                if (regexp.test(user.currentLocationGeocode.formattedCountry)) {\n                    showTracking = false;\n                }\n            }\n        }\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link pl-0 fixed-top text-primary'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}>\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\n                <div class='row m-0'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-1 mb-2 p-0'>\n                        <div class='row d-flex align-items-center position-relative'>\n                            <h3 class='position-absolute' style='top: 3px; right: 5px;'>\n                                {status === 'signup' && !isLiveRace && <>\n                                    <span\n                                        class='badge badge-primary badge-lg border border-white ml-2'\n                                        data-menu='signup'\n                                        onClick={this.chooseSubmenu}\n                                    >\n                                        <Text id='races.signup-open'>Påmelding åpen</Text>\n                                    </span>\n                                </>}\n                                {status === 'race' && <>\n                                    <span class='badge badge-danger border border-white ml-2'><Text id='races.race-in-progress'>Løp pågår</Text></span>\n                                </>}\n                                {status === 'done' && <>\n                                    <span class='badge badge-success border border-white ml-2'><Text id='races.race-finished'>Løp avsluttet</Text></span>\n                                </>}\n                            </h3>\n                            {(race.images && race.images[0]) ? <img src={race.images[0].s3LargeLink} class='img-fluid' /> : ''}\n                        </div>\n                    </div>\n                </div>\n\n                <div class='row'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        {isAdmin && <>\n                            <a class='btn btn-primary float-right' href={`https://homerunrace.no/index#/race/${race.id}/edit`}>Edit</a>\n                        </>}\n                        <h3>{race.title}</h3>\n                        <div>\n                            {race.startDate && <><Text id='races.periode'>Periode</Text>: {util.formatDate(race.startDate, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}</>}\n                            {race.endDate && <> - {util.formatDate(race.endDate, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}</>}\n                        </div>\n                    </div>\n                </div>\n\n                <div class='row'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <div class='row'>\n                            <div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'about' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='about'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-info-circle' /> <Text id='race.about'>About</Text></button>\n                                        {submenu === 'about' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    {showSignup && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'signup' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='signup'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-user-edit' /> <Text id='race.signup'>Sign up</Text></button>\n                                        {submenu === 'signup' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {!race.resultsHide && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'results' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='results'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-list-ol' /> <Text id='race.results'>Results</Text></button>\n                                        {submenu === 'results' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {showTracking && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'tracking' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='tracking'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-map-marker-alt' /> <Text id='race.tracking'>Tracking</Text></button>\n                                        {submenu === 'tracking' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {(isAdmin || isVeterinary) && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'mushers' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='mushers'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-users' /> <Text id='races.mushers'>Mushers</Text></button>\n                                        {submenu === 'mushers' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {race.rules && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'rules' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='rules'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-gavel' /> <Text id='race.rules'>Rules</Text></button>\n                                        {submenu === 'rules' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {race.veterinaryInfo && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'veterinary' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='veterinary'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-stethoscope' /> <Text id='race.veterinary'>Veterinary info</Text></button>\n                                        {submenu === 'veterinary' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {race.checkpoints && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'checkpoints' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='checkpoints'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-map-marker-alt' /> <Text id='race.checkpoints'>Checkpoints</Text></button>\n                                        {submenu === 'checkpoints' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {race.trailDescription && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'track' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='track'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-map-signs' /> <Text id='race.track-description'>Track description</Text></button>\n                                        {submenu === 'track' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {race.program && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'program' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='program'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-list-alt' /> <Text id='race.program'>Program</Text></button>\n                                        {submenu === 'program' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {race.prices && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'prices' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='prices'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-award' /> <Text id='race.prices'>Premier</Text></button>\n                                        {submenu === 'prices' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {!isLiveRace && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'classes' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='classes'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-folder-open' /> <Text id='race.classes'>Classes</Text></button>\n                                        {submenu === 'classes' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'news' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='news'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-rss' /> <Text id='race.news'>News</Text></button>\n                                        {submenu === 'news' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'userImages' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='userImages'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-images' /> <Text id='race.user-images'>User images</Text></button>\n                                        {submenu === 'userImages' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {submenu === 'about' && <>\n                    <RaceNotifications stores={this.props.stores} race={race} />\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.about'>Om løpet</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <p class='clearfix'>\n                                <strong>\n                                    <Markdown markdown={mu.replaceImages(race.ingress, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </strong>\n                            </p>\n\n                            {status === 'signup' && <>\n                                {isLiveRace ? <>                                \n                                    <button\n                                        class='btn btn-block btn-success mb-3'\n                                        data-menu='signup'\n                                        onClick={this.chooseSubmenu}\n                                    >\n                                        <i class='fas fa-user-edit' /> {race.declaration && <><Text id='race.declaration'>Declaration</Text> &</>} <Text id='race.chiplist'>Chiplist</Text>\n                                    </button>\n                                </> : <>                                \n                                    <button\n                                        class='btn btn-block btn-success mb-3'\n                                        data-menu='signup'\n                                        onClick={this.chooseSubmenu}\n                                    >\n                                        <i class='fas fa-user-edit' /> <Text id='race.signup'>Sign up</Text>\n                                    </button>\n                                </>}\n                            </>}\n\n                            <Markdown markdown={mu.replaceImages(race.body, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            {race.tag && race.tag.split(',').map(tag => <>\n                                <span class='badge badge-pill badge-primary py-1 ml-2'>\n                                    <a class='text-white' href={`https://www.facebook.com/hashtag/${tag}`} target='_blank' rel='noreferrer' native>\n                                        <i class='fab fa-facebook' /> #{tag}\n                                    </a>\n                                </span>\n                                <span class='badge badge-pill badge-primary py-1 ml-2'>\n                                    <a class='text-white' href={`https://www.instagram.com/explore/tags/${tag}`} target='_blank' rel='noreferrer' native>\n                                        <i class='fab fa-instagram' /> #{tag}\n                                    </a>\n                                </span>\n                            </>)}\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'results' && <>\n                    <RaceNotifications stores={this.props.stores} race={race} />\n                    <RaceResults stores={this.props.stores} raceid={raceid} />\n                </>}\n                {submenu === 'tracking' && <>\n                    <RaceTracking stores={this.props.stores} raceid={raceid} />\n                </>}\n                {submenu === 'news' && <>\n                    <RaceNews stores={this.props.stores} race={race} />\n                </>}\n                {submenu === 'userImages' && <>\n                    <RaceUserImages stores={this.props.stores} race={race} />\n                </>}\n                {submenu === 'rules' && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.rules'>Regler</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <Markdown markdown={mu.replaceImages(race.rules, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'veterinary' && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.veterinary'>Veterinærinfo</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <Markdown markdown={mu.replaceImages(race.veterinaryInfo, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'checkpoints' && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.checkpoints'>Sjekkpunkter</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <Markdown markdown={mu.replaceImages(race.checkpoints, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'track' && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.track-description'>Løypebeskrivelse</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <Markdown markdown={mu.replaceImages(race.trailDescription, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'program' && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.program'>Program</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <Markdown markdown={mu.replaceImages(race.program, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'prices' && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.prices'>Premier</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <Markdown markdown={mu.replaceImages(race.prices, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'mushers' && <>\n                    <RaceMushers stores={this.props.stores} race={race} />\n                </>}\n                {submenu === 'classes' && <>\n                    <RaceClasses stores={this.props.stores} race={race} />\n                </>}\n                {submenu === 'signup' && <>\n                    <RaceSignup stores={this.props.stores} race={race} />\n                </>}\n\n                {['about'].indexOf(submenu) > -1 && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <div class=''>\n                                <LikesAndComments\n                                    stores={this.props.stores}\n                                    likes={likes}\n                                    comments={comments}\n                                    type='race'\n                                    // onTeamClick={onTeamClick}\n                                    // onUserClick={onUserClick}\n                                />\n                            </div>\n                        </div>\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-3'>\n                            <div class='row'>\n                                <div class='col-6 text-center'>\n                                    <button type='button' class={`btn btn-outline-${hasLikedRace ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedRace ? 'text-primary' : ''}`}\n                                        onClick={this.likeRace}\n                                        // disabled={hasLikedRace}\n                                    >\n                                        <i class={`${hasLikedRace ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> {hasLikedRace ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                    </button>\n                                </div>\n                                <div class='col-6 text-center'>\n                                    <button type='button' class='btn btn-outline-secondary btn-lg btn-block'\n                                        data-id={race.id}\n                                        onClick={this.toggleAddComment}\n                                    >\n                                        <i class='fas fa-comment' /> <Text id='comments.comment-add'>Comment</Text>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-3'>\n                            {showAddComment && user.email && <RaceAddComment\n                                stores={this.props.stores}\n                                race={race}\n                                // callback={this.loadRaceDetail}\n                                inputRef={c => this.inputRef[race.id] = c}\n                                inputRefObject={this.inputRef}\n                            />}\n                        </div>\n                        <div class='col-12 mt-2'>\n                            <RaceComments\n                                stores={this.props.stores}\n                                race={race}\n                                cols='12'\n                                // callback={this.loadRaceDetail}\n                            />\n                        </div>\n                    </div>\n                </>}\n            </div>\n\t\t);\n\t}\n}\n\nexport default AppRaceDetailSignup;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailClasses extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    render() {\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.classes'>Klasser</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    <div class='row'>\n                        {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                            <div class='col-12 col-sm-6 col-lg-4 mb-4'>\n                                <div class='border rounded rounded-lg p-3'>\n                                    <h5>{currentClass.title}</h5>\n\n                                    {isAdmin && <>\n                                        <a href={`/tv/top10/${race.id}/${currentClass.id}`}>TV Top 10</a><br />\n                                        <a href={`/tv/team/${race.id}/1`}>TV One team</a><br />\n                                    </>}\n\n                                    <small>\n                                        {currentClass.startDate && <div>\n                                            <span class='font-weight-lighter'><Text id='race.startdate'>Start</Text>:</span> {util.formatDate(currentClass.startDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </div>}\n                                        {currentClass.endDate && <div>\n                                            <span class='font-weight-lighter'><Text id='race.enddate'>End</Text>:</span> {util.formatDate(currentClass.endDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </div>}\n                                    </small>\n\n                                    <div><span class='font-weight-lighter'><Text id='race.distance'>Distanse</Text>:</span> {currentClass.distance} km</div>\n                                    <div><span class='font-weight-lighter'><Text id='race.signup'>Påmelding</Text>:</span> {currentClass.signupfee || race.signupfee} NOK</div>\n                                    <p class='clearfix'>\n                                        <Markdown markdown={mu.replaceImages(currentClass.ingress, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </p>\n                                    <small>\n                                        <Markdown markdown={mu.replaceImages(currentClass.body, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </small>\n                                    {currentClass.rules && <>\n                                        <h5><Text id='race.rules'>Regler</Text></h5>\n                                        <Markdown markdown={mu.replaceImages(currentClass.rules, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </>}\n                                </div>\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailClasses;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\nimport { toJS } from 'mobx';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nfunction getStateColor(state) {\n\tswitch (state) {\n\t\tcase 'running':\n\t\t\treturn 'primary';\n\t\tcase 'rest':\n\t\t\treturn 'warning';\n\t\tcase 'restTrail':\n\t\t\treturn 'danger';\n\t}\n}\n\nfunction getStateIcon(state) {\n\tswitch (state) {\n\t\tcase 'running':\n\t\t\treturn 'fas fa-running';\n\t\tcase 'rest':\n\t\t\treturn 'fas fa-male';\n\t\tcase 'restTrail':\n\t\t\treturn 'fas fa-bed';\n\t}\n}\n\n@observer\nclass States extends Component {\n    hideDetail = () => {\n        this.setState({\n\t\t\tstateDetail: {\n\t\t\t\tstate: '',\n                idx: 0,\n\t\t\t},\n\t\t});\n    }\n\n\tshowStateDetail = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\t\tconst data = e.target.closest('div').dataset;\n\t\tthis.setState({\n\t\t\tstateDetail: {\n\t\t\t\t...data,\n\t\t\t},\n\t\t});\n\t}\n\n    nextStateDetail = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { states, duration } = this.props;\n        const { stateDetail = {} } = this.state;\n        const currentIdx = parseInt(stateDetail.idx, 10);\n        const nextIdx = currentIdx + 1;\n        const nextState = states[nextIdx];\n        if (nextState) {\n            this.setState({\n                stateDetail: {\n                    idx: nextIdx,\n                    state: nextState.state,\n                    duration: nextState.duration,\n                    distance: nextState.distance,\n                    avgspeed: nextState.avgSpeed,\n                    percent: util.normalizeBetween(nextState.duration, 0, duration, 0, 100),\n                },\n            });\n        }\n    }\n\n   prevStateDetail = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { states, duration } = this.props;\n        const { stateDetail = {} } = this.state;\n        const currentIdx = parseInt(stateDetail.idx, 10);\n        const prevIdx = currentIdx - 1;\n        const prevState = states[prevIdx];\n        if (prevState) {\n            this.setState({\n                stateDetail: {\n                    idx: prevIdx,\n                    state: prevState.state,\n                    duration: prevState.duration,\n                    distance: prevState.distance,\n                    avgspeed: prevState.avgSpeed,\n                    percent: util.normalizeBetween(prevState.duration, 0, duration, 0, 100),\n                },\n            });\n        }\n    }\n\n    render() {\n        const { states, duration, height = '20px', showText = true } = this.props;\n        const { stateDetail = {} } = this.state;\n\n        return (<>\n            <div class='row'>\n                {states && <div class='col-12'>\n                    <div class='progress' style={`height: ${(stateDetail && stateDetail.idx) ? '20px' : height};`}>\n                        {states.map((state, idx) => {\n                            const value = Math.ceil(util.normalizeBetween(state.duration, 0, duration, 0, 100));\n                            let currentWidth = value;\n                            if (stateDetail && stateDetail.idx == idx) {\n                                currentWidth = value < 10 ? 10 : value;\n                            }\n                            return (<>\n                                <div\n                                    class={`progress-bar bg-${getStateColor(state.state)}`}\n                                    role='progressbar'\n                                    style={`width: ${currentWidth}%`}\n                                    aria-valuenow={value}\n                                    aria-valuemin='0'\n                                    aria-valuemax='100'\n                                    data-idx={idx}\n                                    data-state={state.state}\n                                    data-duration={state.duration}\n                                    data-distance={state.distance}\n                                    data-avgspeed={state.avgSpeed}\n                                    data-percent={util.normalizeBetween(state.duration, 0, duration, 0, 100)}\n                                    onClick={this.showStateDetail}\n                                >\n                                    {showText ? <>\n                                        <nobr>\n                                            {value > 10 && <>\n                                                {state.state === 'rest' ? <>\n                                                    {util.secToHms(state.duration, true)}\n                                                </> : <>\n                                                    {util.format(state.distance / 1000, 0)}km\n                                                </>}\n                                            </>}\n                                            {(stateDetail && stateDetail.idx == idx) ? <i class={`fas fa-hand-point-down text-${state.state === 'rest' ? 'dark' : 'warning'} mx-2`} /> : ''}\n                                        </nobr>\n                                    </> : <>\n                                        {(stateDetail && stateDetail.idx == idx) ? <i class={`fas fa-hand-point-down text-${state.state === 'rest' ? 'dark' : 'warning'} mx-2`} /> : ''}\n                                    </>}\n                                </div>\n                            </>);\n                        })}\n                    </div>\n                    {stateDetail && stateDetail.state && <>\n                        <div class='card position-relative'>\n                            <span class='position-absolute' style='top: 0px; right: 5px;'>\n                                <small class='text-muted'>\n                                    <i class={getStateIcon(stateDetail.state)} /> {util.format(stateDetail.percent, 1)}%\n                                </small>\n                            </span>\n                            <div class='card-body'>\n                                {stateDetail.state === 'rest' ? <>\n                                    <div class='col-4 text-nowrap text-overflow'>\n                                        <small class='text-muted'>\n                                            <i class='fas fa-clock ml-2' /> <Text id='workouts.duration'>Vargihet</Text>\n                                        </small>\n                                        <h6>\n                                            {util.secToHms(stateDetail.duration, true)}\n                                        </h6>\n                                    </div>\n                                </> : <>\n                                    <div class='card-text row'>                                    \n                                        <div class='col-4 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-road ml-2' /> <Text id='workouts.distance'>Distanse</Text>\n                                            </small>\n                                            <h6>\n                                                <Distance stores={this.props.stores} value={stateDetail.distance / 1000} />\n                                            </h6>\n                                        </div>\n\n                                        <div class='col-4 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-clock ml-2' /> <Text id='workouts.duration'>Vargihet</Text>\n                                            </small>\n                                            <h6>\n                                                {util.secToHms(stateDetail.duration, true)}\n                                            </h6>\n                                        </div>\n\n                                        <div class='col-4 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-tachometer-alt ml-2' /> <Text id='workouts.avgspeed'>Gj.fart</Text>\n                                            </small>\n                                            <h6>\n                                                <Speed stores={this.props.stores} value={stateDetail.avgspeed * 3.6} />\n                                            </h6>\n                                        </div>\n                                    </div>\n                                </>}\n                            </div>\n                            <div class='float-right'>\n                            \n                            <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={this.hideDetail} style='line-height: 1.0em; font-size: 2.0em;'>\n                                <i class='fas fa-times' />\n                            </button>\n\n                            {stateDetail.idx < states.length - 1 && <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={this.nextStateDetail} style='line-height: 1.0em; font-size: 2.0em;'>\n                                <i class='fas fa-angle-right' />\n                            </button>}\n                            {stateDetail.idx > 0 && <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={this.prevStateDetail} style='line-height: 1.0em; font-size: 2.0em;'>\n                                <i class='fas fa-angle-left' />\n                            </button>}\n\n                            </div>\n                        </div>\n                    </>}\n                </div>}\n            </div>\n        </>);\n    }\n}\n\nexport default States;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleViews = () => {\n        const { showViewList } = this.state;\n        const { isTeamAdmin, isAdmin } = this.props;\n        if (isTeamAdmin || isAdmin) {\n            this.setState({\n                showViewList: !showViewList,\n            });\n        }\n    }\n\n    render() {\n        const { showViewList } = this.state;\n        const { storyStore, teamStore, workoutStore } = this.props.stores;\n        const { views, object, isTeamAdmin, isAdmin,\n            type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\n        const viewUsersArrays = [];\n        Object.entries(object.statistics).forEach(([year, yearObject]) => {\n            // console.log({ year, yearObject });\n            Object.entries(yearObject).forEach(([week, weekObject]) => {\n                // console.log({ week, weekObject });\n                if (weekObject.viewUsers) {\n                    viewUsersArrays.push(weekObject.viewUsers);\n                }\n            });\n        });\n        const viewUsers = viewUsersArrays.flat().slice(0, 50);\n\n\t\treturn (<>\n            <div class='d-flex justify-content-end mb-2'>\n                <span class='ml-2 text-muted font-weight-lighter'\n                    onClick={this.toggleViews}\n                >\n                    {views} <Text id='story.views'>views</Text>\n                </span>\n            </div>\n            {showViewList && <div class='mt-3 mb-3'>\n                {viewUsers && viewUsers.map((userId) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(userId);\n                        teams = storyStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(userId);\n                        teams = teamStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(userId);\n                        teams = workoutStore.findPublicTeamByMembers(userId);\n                    }\n                    if (!user) {\n                        return '';\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-light mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                {name} <span class='font-weight-lighter'>- {publicTeam.name}</span>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                {name}\n                            </div>\n                        </>}\n                    </div>);\n                })}\n                {views > viewUsers.length && <>\n                    <small class='text-muted'>\n                        <Text id='story.limited-to'>Limited to max 50 users.</Text>\n                    </small>\n                </>}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\nimport Drawer from '../../components/drawer/';\nimport Gauge from '../../components/gauge';\nimport DogScroller from '../../components/dog/scroller';\nimport HeaderCustom from '../../components/header/custom';\n\nimport RaceLiveResults from '../../components/races/liveResults';\nimport MusherInfoHeader from '../../components/races/musherInfoHeader';\nimport RaceLiveAddResult from '../../components/races/liveAddResult';\nimport RaceLiveMusherResult from '../../components/races/liveMusherResult';\nimport RaceLiveCheckpointResult from '../../components/races/liveCheckpointResult';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tisLoading: false,\n\tcontentIsNotLoaded: true,\n\n\treloadInSec: null,\n\treloadLastEpoch: null,\n\treloadIsActive: false,\n};\n\nconst MARGIN_TOP = mu.marginTop(true, false);\nconst RELOAD_INTERVAL_IN_SEC = 60;\n\nfunction raceStatus(musher) {\n\tswitch (musher.raceStatus) {\n\t\tcase 'OK':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute rounded-lg' style='top: 10px; left: 0px;'><i class='fas fa-check text-success' /></span>\n\t\t\t</>);\n\t\tcase 'DNS':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNF':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DC':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-warning text-white text-center px-2 rounded-lg border' style='top: 5px; left: -150px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}\n\n@observer\nclass ReloadTimer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.updateTimer = {};\n    }\n\n\tinitComponent = () => {\n\t\tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t\tthis.setState({\n\t\t\treloadIsActive: true,\n\t\t\treloadLastEpoch,\n\t\t}, () => this.tickReloadTimeer());\n\t}\n\n\ttickReloadTimeer() {\n\t\tconst { reloadIsActive, reloadLastEpoch } = this.state;\n        if (reloadIsActive) {\n\t\t\tconst now = Math.floor(new Date().getTime() / 1000);\n\t\t\tconst reloadInSec = RELOAD_INTERVAL_IN_SEC - (now - reloadLastEpoch);\n\t\t\tthis.setState({ reloadInSec });\n\t\t\tclearTimeout(this.updateTimer.tick);\n\t\t\tthis.updateTimer.tick = setTimeout(() => this.tickReloadTimeer(), 1000);\n        }\n\t\treturn false;\n    }\n\n\tcomponentDidMount() {\n\t\tthis.initComponent();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\trender() {\n\t\tconst { reloadInSec } = this.state;\n\t\tconst reloadPercent = Math.floor(util.normalizeBetween(reloadInSec, 0, RELOAD_INTERVAL_IN_SEC, 0, 100))\n\n\t\treturn (<>\n\t\t\t<div class='progress fixed-top' style='height: 2px; z-index: 999999;'>\n\t\t\t\t<div class='progress-bar' role='progressbar' style={`width: ${reloadPercent}%;`} aria-valuenow={reloadPercent} aria-valuemin='0' aria-valuemax='100' />\n\t\t\t</div>\n\t\t</>);\n\t}\n}\n\n@observer\nclass AppRaceDetailResults extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showDrawer: false,\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n\tasync loadRace(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore } = props.stores;\n\t\tconst { raceid } = props;\n        await raceStore.load(raceid);\n        const { race } = raceStore;\n\n\t\tconst allTeamIds = race.classes.filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0).map((currentClass) => {\n            return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n\t\t}).flat();\n\n        if (allTeamIds.length > 0 && raceid) {\n\t\t\tawait raceStore.loadTeams(allTeamIds.join(','));\n\t\t\tawait raceStore.loadWorkoutSummary(allTeamIds.join(','), raceid);\n\t\t\traceStore.getWorkoutSummaryActiveTeams();\n\t\t}\n\t\traceStore.getAllClassesSortedBy();\n\n\t\t// Set reload timer\n\t\tclearTimeout(this.updateTimer.reload);\n\t\tthis.updateTimer.reload = setTimeout(async () => {\n\t\t\tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t\t\tthis.setState({ reloadLastEpoch });\n\t\t\tthis.loadRace();\n\t\t}, RELOAD_INTERVAL_IN_SEC * 1000);\n\n\t\tthis.setState({\n\t\t\tisLoading: false,\n\t\t\tcontentIsNotLoaded: false,\n\t\t});\n\t}\n\n\ttoggleDisplayDetails = (e) => {\n\t\tconst email = e.target.closest('tr').dataset.email;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleDisplayDetails(email)\n\t}\n\n\tadminToggleEditUser = (e) => {\n\t\te.stopPropagation();\n\t\tconst email = e.target.closest('tr').dataset.email;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleEditUserDetails(email)\n\t}\n\n\tadminSignupEdit = (e) => {\n\t\tconst { raceid } = this.props;\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, contestantid } = e.target.dataset;\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 500);\n\t}\n\n\tlockAllWorkoutsInRace = async () => {\n\t\tconst { raceid } = this.props;\n        const { raceStore } = this.props.stores;\n\t\tconst lockMessage = await raceStore.lockAllWorkoutsInRace({ id: raceid });\n\t\tthis.setState({ lockMessage });\n\t}\n\n\tfilterByClass = (e) => {\n\t\tconst selectedClassId = e.target.closest('button').dataset.id;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleSelectedClassId(selectedClassId, true);\n        this.closeDrawerMusher();\n        this.closeDrawerCheckpoint();\n\t}\n\n    toggleDrawer = () => {\n        const { showDrawer } = this.state;\n        this.setState({\n            showDrawer: !showDrawer,\n            showDrawerCheckpoint: false,\n            showDrawerMusher: false,\n        });\n    }\n\n    toggleDrawerMusher = (e) => {\n\t\tconst selectedMusherBib = e.target.closest('.musher').dataset.bib;\n        const { showDrawerMusher } = this.state;\n        this.selectMusher(selectedMusherBib);\n    }\n\n    selectMusher = (selectedMusherBib) => {\n        this.setState({\n            selectedMusherBib,\n            showDrawerMusher: true,\n            showDrawerCheckpoint: false,\n            showDrawer: false,\n        });\n    }\n\n    closeDrawerMusher = () => {\n        this.setState({\n            selectedMusherBib: '',\n            showDrawerMusher: false,\n        });\n    }\n\n    toggleDrawerCheckpoint = (e) => {\n\t\tconst selectedCheckpointId = e.target.closest('.checkpoint').dataset.id;\n        const { showDrawerCheckpoint } = this.state;\n        this.selectCheckpoint(selectedCheckpointId)\n    }\n\n    selectCheckpoint = (selectedCheckpointId) => {\n        this.setState({\n            selectedCheckpointId,\n            showDrawerCheckpoint: true,\n            showDrawerMusher: false,\n            showDrawer: false,\n        });\n    }\n\n    closeDrawerCheckpoint = () => {\n        this.setState({\n            selectedCheckpointId: '',\n            showDrawerCheckpoint: false,\n        });\n    }\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.reload);\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n    render() {\n\t\tconst { contentIsNotLoaded, lockMessage, showDrawer, reloadLastEpoch, selectedMusherBib, selectedCheckpointId, showDrawerCheckpoint, showDrawerMusher } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n        const { darkmode, displayDetails, editUserDetails, selectedClassIds = [], checkpointId } = appState;\n\n\t\tconst { race = {}, teamList, classes = [] } = raceStore;\n\t\tconst { activeTeams, waypoints, zoomToMarkers } = raceStore;\n\n\t\tconst lastAllowedChangeDate = new Date(race.endDate);\n\t\tlastAllowedChangeDate.setHours(lastAllowedChangeDate.getHours() + 2);\n\n\t\tconst filterByClassId = (c) => {\n\t\t\tif (selectedClassIds.length > 0) {\n\t\t\t\treturn selectedClassIds.indexOf(c.id) > -1;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const isLiveRace = race.liveRace === 1;\n\n        return (<>\n            <HeaderCustom height={MARGIN_TOP}>\n                <div class='d-flex justify-content-between align-items-center w-100'>\n                    <div class='d-flex align-items-center'>\n                        <span class='' style='font-size: 2.3em;'>\n                            <a href={`/app-races/${race.id}`}>\n                                <i class='fas fa-angle-left' />\n                            </a>\n                        </span>\n                        {/* <span class='ml-4 text-primary' style='font-size: 1.4em;' onClick={this.toggleResults}>\n                            <i class='fas fa-list-ol' />\n                        </span> */}\n                        <span class='ml-4 text-primary' style='font-size: 1.4em;' >\n                            <a href={`/app-races/${race.id}/tracking`}>\n                                <i class='fas fa-map-marked' />\n                            </a>\n                        </span>\n                    </div>\n                    <div>\n                        <a href={`/app-races/${race.id}`}>\n                            <span class='font-weight-normal text-white' style='font-size: 1.2em;'>{race.title}</span>\n                        </a>\n                    </div>\n                    {/* {race.liveRace > 0 ? <>\n                        <div class='d-flex align-items-center text-primary' onClick={this.toggleReplayHistory}>\n                            <span class=''>Replay</span>\n                            <span class='ml-2' style='font-size: 1.4em;'>\n                                <i class='fas fa-play' />\n                            </span>\n                        </div>\n                    </> : <> */}\n                        <div class='d-flex align-items-center'>\n                            {isAdmin && <>\n                                <button class='btn btn-lg btn-block btn-success my-3' onClick={this.toggleDrawer}>\n                                    <i class='fas fa-clock' />\n                                </button>\n                            </>}\n                        </div>\n                    {/* </>} */}\n                </div>\n\n                <div class='w-100 overflow-hidden'>\n                    <div\n                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                    >\n                        {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map((currentClass, idx) => <>\n                            <div class='col px-0 pt-0'>\n                                <button\n                                    type='button'\n                                    class={`btn btn-block ${mu.getPillClass(race.classes.length, idx)} rounded-none ${selectedClassIds.indexOf(currentClass.id) > -1 ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                    onClick={this.filterByClass}\n                                    data-id={currentClass.id}\n                                >\n                                    {currentClass.title}\n                                </button>\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n            </HeaderCustom>\n\n            {/* <div\n                class='container-fluid position-relative p-0 w-100 h-100'\n                style={`margin-top: ${MARGIN_TOP};`}\n            > */}\n            <div class='container-fluid position-relative p-0 overflow-auto bg-light' style={`margin-top: ${MARGIN_TOP}; height: calc(100vh - ${MARGIN_TOP}); z-index: 9999;`}>\n                {/* <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.results'>Results</Text></h2>\n                </div> */}\n                <div class='col-12'>\n                    <ReloadTimer stores={this.props.stores} />\n                    {isLiveRace ? <>\n\n                    </> : <>\n                        {user.email && <div class='alert alert-primary' role='alert'>\n                            {language === 'no' && <>\n                                Resultatene hentes direkte fra treningsøktene i QPaws appen.<br />\n                                <strong>For at treningsøktene skal bli registrert må øktene:</strong>\n                                <ul>\n                                    <li>Ha riktig dato som er innenfor løpsperioden.</li>\n                                    <li>Være markert som 'Konkurranse'.</li>\n                                    <li>Være registrert på teamet som er påmeldt.</li>\n                                </ul>\n                            </>}\n                            {language === 'en' && <>\n                                The results are imported directly from the workouts inside QPaws app.<br />\n                                <strong>To make sure your workouts are registered check the following:</strong>\n                                <ul>\n                                    <li>Use the correct date on your workout. Has to be inside the race period.</li>\n                                    <li>Mark the workout as 'Race'.</li>\n                                    <li>Workout has to be on the same team as you signed up with.</li>\n                                </ul>\n                            </>}\n                        </div>}\n                    </>}\n\n                    {race.resultsUrl && <div class='p-3 my-2 bg-light'>\n                        <a href={race.resultsUrl} target='_blank' rel='noreferrer' native>\n                            {race.resultsText ? race.resultsText : <><Text id='races.results-here'>Se resultater her</Text> </>} <i class='fas fa-chevron-circle-right' />\n                        </a>\n                    </div>}\n\n                    {(contentIsNotLoaded || !classes || classes.length === 0) && <div class='d-flex justify-content-center my-5 py-5'>\n                        <div class='spinner-border text-primary' role='status'>\n                            <span class='sr-only'>Loading...</span>\n                        </div>\n                    </div>}\n                </div>\n\n                <div class='col-12'>\n                    {race.classes && race.classes.filter(filterByClassId).sort((a, b) => a.distance - b.distance).map(currentClass => {\n                        return (<>\n                            <div class='mt-2 mb-5'>\n                                {race.resultDanger && <div class='alert alert-danger' role='alert'>\n                                    <div class='spinner-grow text-danger float-left' role='status'>\n                                        <span class='sr-only'>Loading...</span>\n                                    </div>\n                                    <i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n                                    <Markdown markdown={mu.replaceImages(race.resultDanger, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>}\n                                {race.resultWarning && <div class='alert alert-warning' role='alert'>\n                                    <i class='fas fa-exclamation float-left mr-4' style='font-size: 2.0em;' />\n                                    <Markdown markdown={mu.replaceImages(race.resultWarning, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>}\n                                {race.resultSuccess && <div class='alert alert-success' role='alert'>\n                                    <i class='fas fa-check float-left mr-4' style='font-size: 2.0em;' />\n                                    <Markdown markdown={mu.replaceImages(race.resultSuccess, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>}\n\n                                {/* <h5>\n                                    {currentClass.title} {currentClass.startDate && <>\n                                        : <span class='font-weight-lighter'>\n                                            {util.formatDate(currentClass.startDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })} - {util.formatDate(currentClass.endDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </span>\n                                    </>}\n                                </h5> */}\n\n\n                                {race.liveRace ? <>\n                                    <RaceLiveResults\n                                        stores={this.props.stores}\n                                        race={race}\n                                        currentClass={currentClass}\n                                        reloadLastEpoch={reloadLastEpoch}\n                                        key={`raceclass-${currentClass.id}`}\n                                        onClickMusher={this.toggleDrawerMusher}\n                                        onClickCheckpoint={this.toggleDrawerCheckpoint}\n                                        selectedCheckpointId={selectedCheckpointId}\n                                    />\n                                </> : <>\n\n                                    <span class='float-right'>\n                                        <span class='text-muted'><Text id='races.mushers'>Mushers</Text>: {currentClass.totalMushers || 0}</span>\n                                        <span class='text-muted ml-4'><Text id='races.finished-mushers'>Finished mushers</Text>: {currentClass.totalFinished || 0} </span>\n                                    </span>\n\n                                    <div class='table-responsive-md'>\n                                        <table class='table table-sm table-striped'>\n                                            <thead>\n                                                <tr>\n                                                    <th scope='col'>#</th>\n                                                    <th scope='col' style='min-width: 200px;'><Text id='races.name'>Navn</Text></th>\n                                                    {isAdmin && <>\n                                                        <th class='d-none d-lg-table-cell' scope='col'><i class='fas fa-user-shield' /> Cellphone</th>\n                                                        <th class='d-none d-lg-table-cell' scope='col'><i class='fas fa-user-shield' /> Email</th>\n                                                    </>}\n                                                    {isAdmin && <th scope='col' class='d-none d-lg-table-cell' style='min-width: 400px;'><Text id='races.stages'>Etapper</Text></th>}\n                                                    <th scope='col'><Text id='races.result'>Resultat</Text></th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {classes[currentClass.id] && classes[currentClass.id].contestants && classes[currentClass.id].contestants.map((contestant, idx) => {\n                                                    const { musher, currentTeam, currentStages, currentResults, completed, duration,\n                                                        normalizedDuration, weightedNormalizedDuration, totalKcalRelated, weightedTotalKcal,\n                                                        flatTotalKcal, percentHarder, loadIndex, raceDistance, isDone, normalizedKcal, normalizedFlatKcal,\n                                                        finishedDate, totalWorkoutTimeUsedSec,\n                                                    } = contestant;\n\n                                                    const totals = raceStore.getTotalsByTeamId(currentTeam.id);\n\n                                                    return (<>\n                                                        <tr onClick={this.toggleDisplayDetails} data-email={musher.email}>\n                                                            <th scope='row'>\n                                                                {idx + 1}\n                                                                {isAdmin && currentResults && <>\n                                                                    <br />{currentResults.isLocked ? <i class='fas fa-lock text-danger mr-2' /> : <i class='fas fa-lock-open text-success mr-2' />}\n                                                                </>}\n                                                            </th>\n                                                            <td\n                                                                class={`${displayDetails[musher.email] ? 'font-weight-bold' : ''}`}\n                                                                style={`${displayDetails[musher.email] ? '' : 'line-height: 0.8em;'}`}\n                                                            >\n                                                                {displayDetails[musher.email] ? <>\n                                                                    {musher.firstname} {musher.lastname}<br />\n                                                                    <span class='text-muted'>{currentTeam.name}</span><br />\n                                                                    <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                                    {musher.facebook && <a class='mr-2' href={mu.asFacebookLink(musher.facebook)} native target='_blank' rel='noreferrer'><i class='fab fa-facebook' /></a>}\n                                                                    {musher.instagram && <a class='mr-2' href={mu.asInstagramLink(musher.instagram)} native target='_blank' rel='noreferrer'><i class='fab fa-instagram' /></a>}\n                                                                    {musher.price1 && <div class='font-weight-lighter'>\n                                                                        <i class='fas fa-trophy text-warning' /> {musher.price1}\n                                                                        {musher.priceSent && <>\n                                                                            <i class='fas fa-check text-success' />\n                                                                        </>}\n                                                                    </div>}\n                                                                    {musher.price2 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price2}</div>}\n                                                                    {musher.price3 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price3}</div>}\n\n                                                                </> : <>\n                                                                    {musher.price1 && <span class='float-right text-warning' style='font-size: 1.2em;'>\n                                                                        <i class='fas fa-trophy' />\n                                                                        {musher.priceSent && <>\n                                                                            <i class='fas fa-check text-success' />\n                                                                        </>}\n                                                                    </span>}\n                                                                    <nobr>\n                                                                        {musher.firstname} {musher.lastname}<br />\n                                                                        <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                                    </nobr>\n                                                                </>}\n\n                                                            </td>\n\n                                                            {isAdmin && <>\n                                                                <td class='d-none d-lg-table-cell'>{musher.cellphone}</td>\n                                                                <td class='d-none d-lg-table-cell'>{musher.email}</td>\n                                                            </>}\n\n                                                            {isAdmin && <td class='d-none d-lg-table-cell'>\n                                                                {isAdmin && <>\n                                                                    <button class='btn btn-primary btn-sm float-right' onClick={this.adminToggleEditUser}><i class='fas fa-user-edit' /></button>\n                                                                </>}\n\n                                                                {(isAdmin && editUserDetails[musher.email]) && <>\n                                                                    <h5>Admin edit:</h5>\n\n                                                                    <div class='form-group row my-0'>\n                                                                        <label class='col-sm-2 col-form-label text-right'>Email</label>\n                                                                        <div class='col-sm-10'>\n                                                                            {musher.email}\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label class='col-sm-2 col-form-label text-right'>Cellphone</label>\n                                                                        <div class='col-sm-10'>\n                                                                            {musher.cellphone}\n                                                                        </div>\n                                                                    </div>\n\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='team' class='col-sm-2 col-form-label text-right'>Race status</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <select class='form-control-plaintext' id='raceStatus'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.raceStatus}\n                                                                            >\n                                                                                <option value=''>-- Choose race status --</option>\n                                                                                <option value='OK'>OK - Everything ok</option>\n                                                                                <option value='DNS'>DNS - Did Not Start</option>\n                                                                                <option value='DNF'>DNF - Did Not Finish</option>\n                                                                                <option value='DNQ'>DNQ - Did not qualify</option>\n                                                                                <option value='DQ'>DQ - Disqualified</option>\n                                                                                <option value='DC'>DC - Data changed by user</option>\n                                                                            </select>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='raceComment' class='col-sm-2 col-form-label text-right'>Race comment</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='raceComment'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.raceComment}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='gpxResultsApproved' class='col-sm-2 col-form-label text-right'>GPX Results approved (date)</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='date' class='form-control-plaintext' id='gpxResultsApproved'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.gpxResultsApproved ? util.isoDate(musher.gpxResultsApproved, false, false, true) : null}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='price1' class='col-sm-2 col-form-label text-right'>Price 1</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='price1'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.price1}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='price2' class='col-sm-2 col-form-label text-right'>Price 2</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='price2'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.price2}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='price3' class='col-sm-2 col-form-label text-right'>Price 3</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='price3'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.price3}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='priceSent' class='col-sm-2 col-form-label text-right'>Price sent</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='date' class='form-control-plaintext' id='priceSent'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.priceSent ? util.isoDate(musher.priceSent, false, false, true) : null}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n\n                                                                </>}\n\n                                                                {isAdmin && <div class='d-flex flex-wrap'>\n                                                                    {currentStages && currentStages.map((stage, idx) => {\n                                                                        const percent = stage.distanceKm / currentClass.distance * 100;\n                                                                        const width = percent > 100 ? 100 : parseInt(percent, 10);\n                                                                        const currentEpoch = Math.floor(new Date(stage.date).getTime() / 1000);\n                                                                        const inDate = new Date(0); // The 0 there is the key, which sets the date to the epoch\n                                                                        inDate.setUTCSeconds(currentEpoch + parseInt(stage.duration, 10));\n                                                                        const images = stage.images.flat();\n                                                                        if (displayDetails[musher.email]) {\n                                                                            return (<>\n                                                                                <div class='bg-light border rounded-lg  text-right position-relative mr-1 mb-1' style={`width: 350px; min-width: 320px;`}>\n                                                                                    <svg viewBox='0 0 300 100' class='position-absolute' style='width: 100%; height: 95%; bottom: 0px; left: 0px; z-index: 0;'>\n                                                                                        <path d={`${stage.svgElevation}`} style='fill: #0063FF; stroke: #0063FF; stroke-width: 2; opacity: 0.2;' />\n                                                                                    </svg>\n                                                                                    <div class='position-relative px-3'>\n                                                                                        <span class='position-absolute' style='top: 3px; left: 3px; font-size: 1.3em;'>\n                                                                                            {idx + 1}\n                                                                                        </span>\n                                                                                        <small>\n                                                                                            {isAdmin && <span class='position-absolute' style='top: 0px; right: -5px;'>\n                                                                                                {stage.isLocked ? <i class='fas fa-lock text-danger' /> : <i class='fas fa-lock-open text-success' />}\n                                                                                            </span>}\n                                                                                            <span class='float-left'>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-sign-out-alt text-muted' /> {util.formatDate(stage.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-sign-in-alt text-muted' /> {util.formatDate(inDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</nobr>\n                                                                                            </span>\n                                                                                            <span class='float-right'>\n                                                                                                {/* {restTimeText}\n                                                                                                {restTimeTrackText} */}\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(stage.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(stage.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(stage.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr><br />\n\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(stage.duration) || 'n/a'}</nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(stage.rest) || 'n/a'}</nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-running text-muted' /> {util.secToHms(stage.duration - stage.rest) || 'n/a'}</nobr><br />\n\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-dog text-muted' /> {util.format(stage.avgDogs, 0) || 'n/a'}</nobr>\n                                                                                            </span>\n                                                                                        </small>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </>);\n                                                                        }\n                                                                        return (<>\n                                                                            <div class='bg-light border rounded-lg text-right position-relative px-3 mr-1 mb-1' style={`width: 300px; min-width: 300px;`}>\n                                                                                <small>\n                                                                                    {isAdmin && <span class='position-absolute' style='top: 2px; right: -5px;'>\n                                                                                        {stage.isLocked ? <i class='fas fa-lock text-danger' /> : <i class='fas fa-lock-open text-sucess' />}\n                                                                                    </span>}\n\n                                                                                    <span class='float-left'>{idx + 1}</span>\n                                                                                    <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(stage.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                                    <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(stage.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr>\n                                                                                    <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(stage.duration) || 'n/a'}</nobr>\n                                                                                </small>\n                                                                            </div>\n                                                                        </>);\n                                                                    })}\n                                                                </div>}\n\n                                                            </td>}\n                                                            <td class='text-right position-relative pl-4'>\n                                                                {raceStatus(musher)}\n                                                                {musher.raceComment && <>\n                                                                    <div class='alert alert-warning text-left' role='alert'>\n                                                                        <i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n                                                                        <Markdown markdown={mu.replaceImages(musher.raceComment, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                                    </div>\n                                                                </>}\n                                                                {(isAdmin && currentResults.lastUpdated > lastAllowedChangeDate) && <>\n                                                                    <div class='alert alert-danger text-left d-none d-md-block' role='alert'>\n                                                                        <i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n                                                                        <i class='fas fa-user-shield' /> Last changed: {util.formatDate(currentResults.lastUpdated, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                                    </div>\n                                                                </>}\n                                                                {completed >= 99 ? <span class='position-absolute' style='top: 10px; left: 0px;'><i class='fas fa-flag-checkered text-success' /></span> : ''}\n                                                                <small>\n                                                                    {displayDetails[musher.email] ? <>\n                                                                        <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(currentResults.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                        {/* <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(currentResults.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr> */}\n                                                                        <nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(currentResults.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n                                                                        <div class='progress mb-1' style='height: 3px;'>\n                                                                            <div class={`progress-bar ${completed >= 99 ? 'bg-success' : ''}`}\n                                                                                role='progressbar'\n                                                                                style={`width: ${completed}%`}\n                                                                                aria-valuenow={`${completed}`}\n                                                                                aria-valuemin='0'\n                                                                                aria-valuemax='100'\n                                                                            />\n                                                                        </div>\n\n                                                                        {race.nonstop ? <>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(totalWorkoutTimeUsedSec) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(totals.totalRest) || 'n/a'}</nobr>\n\n                                                                            <br /><nobr><i style='width: 20px;' class='fas fa-calendar text-muted' /> {util.isoDate(totals.firstEpoch)} - <i style='width: 20px;' class='fas fa-calendar text-muted' /> {util.isoDate(finishedDate)}</nobr>\n                                                                            {isAdmin && <>\n                                                                                <br />\n                                                                                <div class='text-danger'>\n                                                                                    {totals.firstGpxStartEpoch && <>\n                                                                                        <nobr>firstGpxStartEpoch: {util.isoDate(totals.firstGpxStartEpoch)}</nobr><br />\n                                                                                    </>}\n                                                                                    {totals.lastGpxStartEpoch && <>\n                                                                                        <nobr>lastGpxStartEpoch: {util.isoDate(totals.lastGpxStartEpoch)}</nobr><br />\n                                                                                    </>}\n                                                                                </div>\n                                                                            </>}\n                                                                        </> : <>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(currentResults.duration) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(currentResults.rest) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-running text-muted' /> {util.secToHms(currentResults.duration - currentResults.rest) || 'n/a'}</nobr><br />\n                                                                            {isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized to race distance:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(normalizedDuration) || 'n/a'}</nobr><br /></>}\n                                                                            {isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(weightedNormalizedDuration) || 'n/a'}</nobr><br /></>}\n                                                                        </>}\n\n                                                                        {/* <nobr><i style='width: 20px;' class='fas fa-dog text-muted' /> {util.format(currentResults.avgDogs, 0) || 'n/a'}</nobr> */}\n                                                                    </> : <>\n                                                                        <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(currentResults.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                        {/* <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(currentResults.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr> */}\n                                                                        <nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(currentResults.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n\n                                                                        <div class='progress mb-1' style='height: 3px;'>\n                                                                            <div class={`progress-bar ${completed >= 99 ? 'bg-success' : ''}`}\n                                                                                role='progressbar'\n                                                                                style={`width: ${completed}%`}\n                                                                                aria-valuenow={`${completed}`}\n                                                                                aria-valuemin='0'\n                                                                                aria-valuemax='100'\n                                                                            />\n                                                                        </div>\n\n                                                                        {race.nonstop ? <>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(totalWorkoutTimeUsedSec) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(totals.totalRest) || 'n/a'}</nobr>\n                                                                        </> : <>\n                                                                            {isDone === 1 ? <>\n                                                                                <nobr class='font-weight-bold'><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(weightedNormalizedDuration) || 'n/a'}</nobr><br />\n                                                                            </> : <>\n                                                                                <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(currentResults.duration) || 'n/a'}</nobr><br />\n                                                                            </>}\n                                                                        </>}\n                                                                    </>}\n\n                                                                    {/* raceDistance: {raceDistance}<br /> */}\n\n                                                                    {/* duration: {util.secToHms(duration)}<br />\n                                                                    normalizedDuration: {util.secToHms(normalizedDuration)}<br />\n                                                                    weightedNormalizedDuration: {util.secToHms(weightedNormalizedDuration)}<br /> */}\n\n                                                                    {/* totalKcalRelated: {totalKcalRelated}<br />\n                                                                    weightedTotalKcal: {weightedTotalKcal}<br />\n                                                                    flatTotalKcal: {flatTotalKcal}<br />\n                                                                    percentHarder: {percentHarder}<br /> */}\n\n                                                                    {/* loadIndex: {loadIndex}<br /> */}\n                                                                </small>\n                                                            </td>\n                                                        </tr>\n                                                    </>);\n                                                })}\n                                            </tbody>\n                                        </table>\n                                    </div>\n\n                                    <div class='text-center text-muted'>\n                                        <small>\n                                            {language === 'no' && <>\n                                                OBS! Ref reglene så er det ikke lov til å endre treningsøktene som er med i konkurransen etter at løpet er ferdig.<br />\n                                                Forsøk på dette vil resultere i automatisk deplassering på listene.\n                                            </>}\n                                            {language === 'en' && <>\n                                                IMPORTANT! According to the rules: It is NOT allowed to try alter the workouts related to the competition after the race has ended.<br />\n                                                Attempts will result in automatic deplacement on the resultlists.\n                                            </>}\n                                        </small>\n                                    </div>\n\n                                    {isAdmin && <>\n                                        <button\n                                            class='btn btn-danger btn-lg float-right m-4'\n                                            onClick={this.lockAllWorkoutsInRace}\n                                        >\n                                            Lock all workouts in this race\n                                        </button>\n                                        <xmp class='m-5'>{JSON.stringify(lockMessage, null, 4)}</xmp>\n                                    </>}\n\n                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                                        <a class='btn btn-lg btn-block btn-primary' href={`https://homerunrace.no/index#/race/${race.id}/results`}>All results</a>\n                                    </div>\n                                </>}\n                            </div>\n                        </>);\n                    })}\n                </div>\n\n            </div>\n            {showDrawer && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawer}>\n                    <RaceLiveAddResult stores={this.props.stores} />\n                </Drawer>\n            </>}\n            {showDrawerCheckpoint && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.closeDrawerCheckpoint}>\n                    <RaceLiveCheckpointResult stores={this.props.stores} id={selectedCheckpointId} onClickNav={this.selectCheckpoint} />\n                </Drawer>\n            </>}\n            {showDrawerMusher && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.closeDrawerMusher}>\n                    <RaceLiveMusherResult stores={this.props.stores} bib={selectedMusherBib} onClickNav={this.selectMusher}  />\n                </Drawer>\n            </>}\n        </>);\n    }\n}\n\nexport default AppRaceDetailResults;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport style from './style.css';\n\nconst initialState = {\n    mouseData: {},\n};\n\n@observer\nclass Gauge extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.svgRef = null;\n    }\n\n    render() {\n        const {\n            radius = 50,\n            heightAdd = 0,\n            color = 'success',\n\n            showPercentText = true,\n            percent = 0,\n            prefix = '',\n\n            showCenterText= false,\n            centerText,\n            centerTextSize,\n            centerTextX,\n            centerTextY,\n\n            total = '',\n            totalY = '90%',\n            totalX = '50%',\n            totalTextAnchor = 'middle',\n                        \n            completed = '',\n            completedY = '65%',\n            completedX = '50%',\n            completedTextAnchor = 'middle',\n        } = this.props;\n        const strokeWidth = radius * 0.3;\n        const innerRadius = radius - strokeWidth / 2;\n\n        const strokeWidthGauge = radius * 0.3;\n\n        const circumference = innerRadius * 2 * Math.PI;\n        const arc = circumference * (270 / 360);\n        const dashArray = `${arc} ${circumference}`;\n        const transform = `rotate(135, ${radius}, ${radius})`;\n\n        const percentNormalized = Math.min(Math.max(percent, 0), 100);\n        const offset = arc - (percentNormalized / 100) * arc;\n\n        const textSize = centerTextSize || radius / 2.5;\n        const textSizeSmall = radius / 5;\n\n        return (\n            <>\n                <svg xmlns='http://www.w3.org/2000/svg' class={style.svg}\n                    // viewBox={`0 0 ${radius * 2} ${radius * 2}`}\n                    width={radius * 2}\n                    height={radius * 2 + heightAdd}\n                    preserveAspectRatio='none'\n                    ref={c => this.svgRef = c}\n                >\n\n                    <circle\n                        class={`${style.gaugeBackground}`}\n                        cx={radius}\n                        cy={radius}\n                        r={innerRadius}\n                        strokeWidth={strokeWidth}\n                        strokeDasharray={dashArray}\n                        strokeLinecap='round'\n                        transform={transform}\n                    />\n                    \n                    <circle\n                        class={`${style[color]} ${style.gauge}`}\n                        cx={radius}\n                        cy={radius}\n                        r={innerRadius}\n                        stroke='url(#grad)'\n                        strokeDasharray={dashArray}\n                        strokeDashoffset={offset}\n                        strokeLinecap='round'\n                        strokeWidth={strokeWidthGauge}\n                        style={{\n                            transition: 'stroke-dashoffset 0.3s',\n                        }}\n                        transform={transform}\n                    />\n                     \n                    {showPercentText && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={centerTextX || '50%'}\n                        y={centerTextY || '50%'}\n                        dominant-baseline='middle'\n                        text-anchor='middle'\n                        font-size={textSize}\n                    >{percent} {prefix}</text>}\n\n                    {showCenterText && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={centerTextX || '50%'}\n                        y={centerTextY || '50%'}\n                        dominant-baseline='middle'\n                        text-anchor='middle'\n                        font-size={textSize}\n                    >{centerText}</text>}\n\n                    {completed && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={completedX}\n                        y={completedY}\n                        dominant-baseline='middle'\n                        text-anchor={completedTextAnchor}\n                        font-size={textSizeSmall}\n                    >{completed}</text>}\n\n                    <text\n                        class={`${style.gaugeText} ${style.secondary}`}\n                        x={totalX}\n                        y={totalY}\n                        dominant-baseline='middle'\n                        text-anchor={totalTextAnchor}\n                        font-size={textSizeSmall}\n                    >{total}</text>\n\n                </svg>\n            </>\n        );\n    }\n}\n\nexport default Gauge;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\n// TODO: Do we need mobx? What is mobx doing here?  \n\n@observer\nclass FastListLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.containerRef = null;\n    }\n\n    componentWillUnmount() {\n        const { removeIntersectionObserver } = this.props;\n        if (removeIntersectionObserver) {\n            removeIntersectionObserver(this.containerRef);\n        }\n    }\n\n    componentDidMount() {\n        const { addIntersectionObserver } = this.props;\n        if (addIntersectionObserver) {\n            addIntersectionObserver(this.containerRef);\n        }\n    }\n\n    render() {\n        const {\n            wrapperClassNames = '',\n            contentClassNames = '',\n            renderContent,\n            obj = {},\n            idx,\n            dataFields,\n            dataValues,\n            sessionid,\n        } = this.props;\n\n        const dataProperties = {};\n        if (sessionid) {\n            dataProperties.sessionid = sessionid;\n        }\n        dataFields.forEach(e => dataProperties[`data-${e}`] = encodeURI(dataValues[e] || obj[e]));\n\n        return (\n            <div\n                class={`${wrapperClassNames}`}\n                ref={c => this.containerRef = c}\n                data-idx={idx}\n                {...dataProperties}\n            >\n                <div\n                    class={`${contentClassNames}`}\n                    style={`display: block;`}\n                >\n                    {renderContent({\n                        obj,\n                        idx,\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n@observer\nclass FastList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    // IntersectionObserver\n    deleteIntersectionObserver = () => {\n        this.intersectionObserver = null;\n    }\n\n    handleIntersection = (entries) => {\n        const { handleIntersection } = this.props;\n        if (typeof(handleIntersection) === 'function') {\n            // console.log('handleIntersection');\n            handleIntersection(entries);\n        }\n        // console.log({ entries });\n        // TODO: Make it possible to run defined functions for entries.\n        // mu.intersectionObserverCallback(entries);\n        entries.forEach((e) => {\n            const { isIntersecting } = e;\n            const { height = 0 } = e.target.dataset;\n            // const childHeight = e.target.childNodes[0].getBoundingClientRect().height;\n            // const targetHeight = e.target.getBoundingClientRect().height;\n            const childHeight = e.target.childNodes[0].offsetHeight;\n            const targetHeight = e.target.offsetHeight;\n            const scrollHeight = e.target.scrollHeight;\n            const currentHeight = Math.max(childHeight, targetHeight, scrollHeight);\n            // console.log({ isIntersecting, height, childHeight, targetHeight, scrollHeight, currentHeight }, e.target);\n\n            if (isIntersecting) {\n                e.target.childNodes[0].style.display=`block`;\n                // TODO: Should be set after image is loaded.\n                // const height = e.target.childNodes[0].clientHeight > e.target.clientHeight ? e.target.childNodes[0].clientHeight : e.target.clientHeight;\n                // console.log(e.target);\n                // console.log('e.target.childNodes[0].offsetHeight:', e.target.childNodes[0].offsetHeight);\n                // console.log('e.target.childNodes[0].scrollHeight:', e.target.childNodes[0].scrollHeight);\n                // console.log('e.target.childNodes[0].clientHeight:', e.target.childNodes[0].clientHeight);\n                // console.log('e.target.offsetHeight:', e.target.offsetHeight);\n                // console.log('e.target.scrollHeight:', e.target.scrollHeight);\n                // console.log('e.target.clientHeight:', e.target.clientHeight);\n                // console.log('height:', height);\n                // e.target.style.height=`${height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n            } else if (e.target.style.minHeight) {\n                // e.target.style.height = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.childNodes[0].style.display=`none`;\n            }\n        });\n    }\n\n    setupIntersectionObserver = () => {\n        if (!('IntersectionObserver' in window) ||\n            !('IntersectionObserverEntry' in window) ||\n            !('intersectionRatio' in window.IntersectionObserverEntry.prototype)) {\n            return false;\n        }\n\n        const options = {\n            root: null,\n            rootMargin: '100px',\n            threshold: 0.1,\n        };\n        this.intersectionObserver = new IntersectionObserver(this.handleIntersection, options);\n    }\n\n    addIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.observe(ref);\n        }\n    }\n    removeIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.unobserve(ref);\n        }\n    }\n\n    componentWillMount() {\n        this.setupIntersectionObserver();\n    }\n\n    componentWillUnmount() {\n        this.deleteIntersectionObserver();\n    }\n\n    render() {\n        const {\n            data = [],\n            wrapperClassNames = 'row pb-4 bg-light',\n            contentClassNames = `col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 shadow-sm`,\n            renderContent = (e) => <>Missing render function!</>,\n            dataFields = [],\n            dataValues = {},\n        } = this.props;\n        \n        return (\n            <div class='w-100'>\n                {data && data.filter(e => util.isObject(e)).map((obj, idx) => {\n                    const wrapperClasses = obj.hasOwnProperty('wrapperClassNames') ? obj.wrapperClassNames : wrapperClassNames;\n                    const contentClasses = obj.hasOwnProperty('contentClassNames') ? obj.contentClassNames : contentClassNames;\n                    return (<>\n                        <FastListLine\n                            key={`fastline-${idx}-${obj.id}`}\n                            obj={obj}\n                            idx={idx}\n                            addIntersectionObserver={this.addIntersectionObserver}\n                            removeIntersectionObserver={this.removeIntersectionObserver}\n                            wrapperClassNames={wrapperClasses}\n                            contentClassNames={contentClasses}\n                            renderContent={renderContent}\n                            dataFields={dataFields}\n                            dataValues={dataValues}\n                        />\n                    </>);\n                })}\n            </div>\n        );\n    };\n}\n\nexport default FastList;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass RaceLiveCheckpointResult extends Component {\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    toggleInfo = (e) => {\n        const { showInfo } = this.state;\n\t\tthis.setState({ showInfo: !showInfo });\n\t}\n\n    render() {\n        const { id, onClickNav = () => {} } = this.props;\n        const { submenu = 'detailsIn', showInfo } = this.state;\n\n        const { appState, raceStore, userStore } = this.props.stores;\n        const { user: currentUser = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        let selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === id) : null;\n        selectedCheckpoint = selectedCheckpoint ? selectedCheckpoint : {};\n        const { sortedContestants = [] } = raceStore;\n\n        const allResultsCp = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['timestamp', '-direction'])).filter(e => e.checkpoint === id) : null;\n\n        const lastResultsIn = allResultsCp ? allResultsCp.filter(e => e.direction === 'in') : null;\n        const lastResultsOut = allResultsCp ? allResultsCp.filter(e => e.direction === 'out') : null;\n        const lastResultsLegtimes = allResultsCp ? allResultsCp.slice().sort(fieldSorter(['legTime', 'timestamp'])).filter(e => e.direction === 'in') : null;\n\n        const lastResultsScratched = allResultsCp ? allResultsCp.filter(e => e.direction === 'scratched') : null;\n\n        const prevCp = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.sortOrder === selectedCheckpoint.sortOrder - 1) : null;\n        const nextCp = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.sortOrder === selectedCheckpoint.sortOrder + 1) : null;\n        const prevResultsOut = currentClass.results && prevCp ? currentClass.results.slice().filter(e => e.checkpoint === prevCp.id && e.direction === 'out') : null;\n        const nextResultsIn = currentClass.results && nextCp ? currentClass.results.slice().filter(e => e.checkpoint === nextCp.id && e.direction === 'in') : null;\n\n        const image = selectedCheckpoint.image;\n        const topImage = selectedCheckpoint.topImage;\n        const shortname = mu.displayNameShort(selectedCheckpoint);\n        const dotColor = ''; // mu.getRankingColor(selectedCheckpoint.sortOrder);\n\n        const defaultImage = './assets/checkpoint.png';\n        const headerImage = topImage ? topImage : defaultImage;\n\n        return (<>\n            <div class='w-100 position-absolute'\n                style={`z-index: -1; height: 18vh; top: 0px; left: 0px; background-size: cover; background-repeat: no-repeat; background-position: 50% 50%; background-color: #a0a0a0; ${headerImage ? `background-image: url(\"${headerImage}\");` : ''}`}\n            />\n\n            {nextCp && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(nextCp.id)}>\n                <i class='fas fa-angle-right' />\n            </button>}\n            {prevCp && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(prevCp.id)}>\n                <i class='fas fa-angle-left' />\n            </button>}\n\n            <div class='d-flex position-relative' style='margin-top: 16vh;'>\n                <div\n                    class={`position-relative text-center border rounded-circle imageRounded`}\n                    style={`margin-top: -50px; ${image ? `background-image: url(\"${image}\"); background-size: cover;` : 'background-color: #c0c0c0;'}`}\n                >\n                    {!image && <div class='text-muted' style='font-size: 35px; padding-top: 10px;'>{shortname}</div>}\n                    <div\n                        class={`rounded-pill-both px-2 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                        style={`bottom: -8px; right: 0; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                    >\n                        {selectedCheckpoint.sortOrder && selectedCheckpoint.sortOrder !== 'n/a' && <>{selectedCheckpoint.sortOrder}</>}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow mb-3' style='line-height: 1.2em;'>\n                    <h3 class='mb-2'>\n                        {selectedCheckpoint.name}\n                    </h3>\n                    <div>\n                        {selectedCheckpoint.cellphone && <><span class='text-muted'><i class='fas fa-phone' /></span> <a href={`tel:${selectedCheckpoint.cellphone}`}>{selectedCheckpoint.cellphone}</a></>}\n                        {selectedCheckpoint.email && <><a class='ml-3' href={`mailto:${selectedCheckpoint.email}`}><i class='fas fa-envelope' /></a></>}\n                        {selectedCheckpoint.facebook && <><a class='ml-3' href={`${mu.asFacebookLink(selectedCheckpoint.facebook)}`}><i class='fab fa-facebook' /></a></>}\n                        {selectedCheckpoint.instagram && <><a class='ml-3' href={`${mu.asInstagramLink(selectedCheckpoint.instagram)}`}><i class='fab fa-instagram' /></a></>}\n                        {selectedCheckpoint.description && <><a class='ml-3 text-primary' onCLick={this.toggleInfo}><i class='fas fa-info-circle' /></a></>}\n                    </div>\n                </div>\n            </div>\n            {showInfo && selectedCheckpoint.description && <div>\n                <Markdown markdown={mu.replaceImages(selectedCheckpoint.description, selectedCheckpoint.images)} markdownOpts={mu.getMarkdownOptions()} />\n            </div>}\n            <div class=''>\n                <div class=''>\n                    <div class='d-flex justify-content-between mt-2'>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-flag' /> Start\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                {util.format(selectedCheckpoint.totalDistance || 0, 0)} <span class='text-muted'>km</span>\n                            </div>\n                        </div>\n                        {!selectedCheckpoint.isStartLine && <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-arrow-down' /> Prev\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                <nobr>{util.format(selectedCheckpoint.distanceFromPrev || 0, 0)} <span class='text-muted'>km</span></nobr>\n                            </div>\n                        </div>}\n                        {/* <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-campground' /> CP\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                {selectedCheckpoint.name}\n                            </div>\n                        </div> */}\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-arrow-up' /> Next\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                {util.format(selectedCheckpoint.distanceToNext || 0, 0)} <span class='text-muted'>km</span>\n                            </div>\n                        </div>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-flag-checkered' /> Finish\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                <nobr>{util.format(selectedCheckpoint.distanceToFinish || 0, 0)} <span class='text-muted'>km</span></nobr>\n                            </div>\n                        </div>\n                    </div>\n                    <div class='d-flex justify-content-between mt-2'>\n                        {selectedCheckpoint.requiredRestMinutes && <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-bed' /> Mandatory rest\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                <nobr>{util.secToHms(selectedCheckpoint.requiredRestMinutes * 60, true)}</nobr>\n                                {selectedCheckpoint.timeEqualization && <>\n                                    <span class='text-muted ml-2'>+</span> <i class='fas fa-user-clock' /> Time Equalization\n                                </>}\n                            </div>\n                        </div>}\n                    </div>\n                </div>\n            </div>\n\n\n            {selectedCheckpoint.hideResults ? <></> : <>\n                <div class='d-flex justify-content-center mb-3'>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'detailsIn' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='detailsIn'\n                        >\n                            Details in\n                        </button>\n                    </div>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-none ${submenu === 'detailsOut' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='detailsOut'\n                        >\n                            Detail out\n                        </button>\n                    </div>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'legTimes' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='legTimes'\n                        >\n                            Leg times\n                        </button>\n                    </div>\n                </div>\n\n                <div\n                    class='w-100 overflow-auto position-relative'\n                    style='max-height: 60vh;'\n                >\n                    {/* {\n                        \"position\": [],\n                        \"id\": \"2e8f57cb-4bc0-4f5f-b41c-783944be9b8a\",\n                        \"bib\": 30,\n                        \"checkpoint\": \"e1f8e66f-1629-4ea6-b155-fa8fb3b377ab\",\n                        \"direction\": \"out\",\n                        \"dogs\": 10,\n                        \"timestamp\": \"2019-03-12T05:50:00.000Z\"\n                    }, */}\n\n                    <div class='table-responsive-lg'>\n                        <table class='table table-striped table-sm'>\n                            {submenu === 'detailsIn' && <>\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Musher</th>\n                                        <th>Time in</th>\n                                        <th>Time out</th>\n                                        <th>Time used</th>\n                                        <th>Avg speed</th>\n                                        <th>Dogs in</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                {lastResultsIn && lastResultsIn.map((res, idx) => {\n                                    const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(res.bib, 10)) : null;\n                                    const resOut = lastResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resIn = lastResultsIn.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resScratched = lastResultsScratched.find(e => e.bib === parseInt(res.bib, 10));\n                                    const prevResOut = prevResultsOut && prevResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    let timeused;\n                                    let restTime;\n                                    let avgSpeed = 0;\n                                    if (prevResOut && res) {\n                                        timeused = mu.deltaSec(prevResOut.timestamp, res.timestamp);\n                                        avgSpeed = selectedCheckpoint.distanceFromPrev / (timeused / 3600);\n                                    }\n                                    if (resIn && resOut && resIn.timestamp && resOut.timestamp) {\n                                        restTime = mu.deltaSec(resIn.timestamp, resOut.timestamp);\n                                    }\n                                    return (<>\n                                        <tr>\n                                            <td class='text-center'>{idx + 1}</td>\n                                            <td>\n                                                <div class='d-flex flex-nowrap'>\n                                                    <div\n                                                        class='text-white font-weight-bolder pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                                        style={`background-color: ${mu.getRankingColor(idx + 1)}; width: 45px;`}\n                                                    >\n                                                        {res.bib}\n                                                    </div>\n                                                    <div>\n                                                        <nobr>\n                                                            {selectedMusher.flag} {selectedMusher.lastname}\n                                                        </nobr>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resIn.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {resOut && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resOut.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                                {resScratched && <>\n                                                    <nobr class='text-danger'>\n                                                        <i class='fas fa-times' />\n                                                        {mu.formatDate(resScratched.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.secToHms(timeused, true)}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>{res.dogs}</td>\n                                        </tr>\n                                        {/* <tr>\n                                            <td colspan='8'>\n                                                <xmp>{JSON.stringify(prevCp, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(prevResOut, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(selectedMusher, null, 4)}</xmp>\n                                            </td>\n                                        </tr> */}\n                                    </>);\n                                })}\n                                </tbody>\n                            </>}\n                            {submenu === 'detailsOut' && <>\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Musher</th>\n                                        <th>Time in</th>\n                                        <th>Time out</th>\n                                        <th>Time used</th>\n                                        <th>Rest in cp</th>\n                                        <th>Avg speed</th>\n                                        <th>Dogs out</th>\n                                        <th>Next CP</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                {lastResultsOut && lastResultsOut.map((res, idx) => {\n                                    let selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(res.bib, 10)) : null;\n                                    selectedMusher = selectedMusher ? selectedMusher : {};\n                                    const resIn = lastResultsIn.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resOut = lastResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resScratched = lastResultsScratched.find(e => e.bib === parseInt(res.bib, 10));\n                                    const prevResOut = prevResultsOut && prevResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    const nextResIn = nextResultsIn && nextResultsIn.find(e => e.bib === parseInt(res.bib, 10));\n                                    let timeused;\n                                    let restTime;\n                                    let avgSpeed = 0;\n                                    if (prevResOut && res) {\n                                        timeused = mu.deltaSec(prevResOut.timestamp, res.timestamp);\n                                        avgSpeed = selectedCheckpoint.distanceFromPrev / (timeused / 3600);\n                                    }\n                                    if (resIn && resOut && resIn.timestamp && resOut.timestamp) {\n                                        restTime = mu.deltaSec(resIn.timestamp, resOut.timestamp);\n                                    }\n\n                                    let estTimeInNextCp;\n                                    let estTimeToNext = selectedCheckpoint.estTimeToCpMinutes || 0;\n                                    if (estTimeToNext && selectedMusher.cpSortOrder === selectedCheckpoint.sortOrder) {\n                                        estTimeInNextCp = mu.addDeltaSec(resOut.timestamp, estTimeToNext * 60);\n                                    }\n\n                                    return (<>\n                                        <tr>\n                                            <td class='text-center'>{idx + 1}</td>\n                                            <td>\n                                                <div class='d-flex flex-nowrap'>\n                                                    <div\n                                                        class='text-white font-weight-bolder pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                                        style={`background-color: ${mu.getRankingColor(idx + 1)}; width: 45px;`}\n                                                    >\n                                                        {res.bib}\n                                                    </div>\n                                                    <div>\n                                                        <nobr>\n                                                            {selectedMusher.flag} {selectedMusher.lastname}\n                                                        </nobr>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resIn.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {resOut && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resOut.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                                {resScratched && <>\n                                                    <nobr class='text-danger'>\n                                                        <i class='fas fa-times' />\n                                                        {mu.formatDate(resScratched.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.secToHms(timeused, true)}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && restTime && <>\n                                                    <nobr>\n                                                        {util.secToHms(restTime, true)}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {resOut.dogs}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isFinishLine && nextResIn ? <>\n                                                    <nobr>\n                                                        {mu.formatDate(nextResIn.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </> : <>\n                                                    {estTimeInNextCp && <>\n                                                        <nobr class='text-muted'>\n                                                            {mu.formatDate(estTimeInNextCp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                        </nobr>\n                                                    </>}\n                                                </>}\n                                            </td>                                    \n                                        </tr>\n                                        {/* <tr>\n                                            <td colspan='8'>\n                                                <xmp>{JSON.stringify(prevCp, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(prevResOut, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(selectedMusher, null, 4)}</xmp>\n                                            </td>\n                                        </tr> */}\n                                    </>);\n                                })}\n                                </tbody>\n                            </>}\n                            {submenu === 'legTimes' && <>\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Musher</th>\n                                        <th>Time in</th>\n                                        <th>Time out</th>\n                                        <th>Time used</th>\n                                        <th>Avg speed</th>\n                                        <th>Dogs in</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                {lastResultsLegtimes && lastResultsLegtimes.map((res, idx) => {\n                                    const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(res.bib, 10)) : null;\n                                    const resIn = lastResultsIn.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resOut = lastResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resScratched = lastResultsScratched.find(e => e.bib === parseInt(res.bib, 10));\n                                    const prevResOut = prevResultsOut && prevResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    let timeused;\n                                    let avgSpeed = 0;\n                                    if (prevResOut && res) {\n                                        timeused = mu.deltaSec(prevResOut.timestamp, res.timestamp);\n                                        avgSpeed = selectedCheckpoint.distanceFromPrev / (timeused / 3600);\n                                    }\n                                    return (<>\n                                        <tr>\n                                            <td class='text-center'>{idx + 1}</td>\n                                            <td>\n                                                <div class='d-flex flex-nowrap'>\n                                                    <div\n                                                        class='text-white font-weight-bolder pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                                        style={`background-color: ${mu.getRankingColor(idx + 1)}; width: 45px;`}\n                                                    >\n                                                        {res.bib}\n                                                    </div>\n                                                    <div>\n                                                        <nobr>\n                                                            {selectedMusher.flag} {selectedMusher.lastname}\n                                                        </nobr>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resIn.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {resOut && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resOut.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                                {resScratched && <>\n                                                    <nobr class='text-danger'>\n                                                        <i class='fas fa-times' />\n                                                        {mu.formatDate(resScratched.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.secToHms(timeused, true)}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>{res.dogs}</td>\n                                        </tr>\n                                        {/* <tr>\n                                            <td colspan='8'>\n                                                <xmp>{JSON.stringify(prevCp, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(prevResOut, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(selectedMusher, null, 4)}</xmp>\n                                            </td>\n                                        </tr> */}\n                                    </>);\n                                })}\n                                </tbody>\n                            </>}\n                        </table>\n                    </div>\n                </div>\n            \n            </>}\n\n\n\n            {/* <h3>RaceLiveCheckpointResult</h3> */}\n            {/* <h5>{id} {selectedCheckpoint.name}</h5> */}\n            {/* <xmp>{JSON.stringify(selectedCheckpoint, null, 4)}</xmp> */}\n            {/* <xmp>{JSON.stringify(selectedCheckpoint, null, 4)}</xmp> */}\n            {/* <xmp>{JSON.stringify(lastResultsIn, null, 4)}</xmp> */}\n        </>);\n    }\n}\n\nexport default RaceLiveCheckpointResult;\n","import { h, Component } from 'preact';\nimport { useEffect } from 'preact/hooks';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport Trackmap from '../../components/public/trackmap';\nimport Gauge from '../../components/gauge';\n\nimport DogScroller from '../../components/dog/scroller';\nimport ImageScroller from '../imageScroller';\n\nimport Overlay from '../../components/overlay/';\nimport Drawer from '../../components/drawer/';\nimport HeaderCustom from '../../components/header/custom';\nimport Loading from '../../components/loading/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\nimport RaceLiveCheckpointResult from '../../components/races/liveCheckpointResult';\nimport LineGraph from '../../components/lineGraph';\nimport States from '../../components/states';\nimport PublicTeam from '../team/public';\n\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true, false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nfunction PageTitle(title, classes = '', style = '') {\n    useEffect(() => {\n        document.title = `Homerun Race: ${title}`;\n    }, [title]);\n    return <span class={classes} style={style}>{title}</span>;\n}\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\nconst initialState = {\n    isLoading: false,\n    email: '',\n    submenu: 'ads',\n    jwtToken: util.getJwtToken(),\n\n    reloadInSec: null,\n    reloadIsActive: false,\n\n    leaderboardMode: 'mushers',\n    filterByraceClass: '',\n    showLeaderBoard: true,\n    showNews: true,\n};\n\nconst RELOAD_INTERVAL_IN_SEC = 60;\nconst REPLAY_SPEED = 1;\n\n@observer\nclass ReloadTimer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    initComponent = () => {\n        this.setState({\n            reloadIsActive: true,\n        }, () => this.tickReloadTimeer());\n    }\n\n    tickReloadTimeer = () => {\n        const { reloadLastEpoch } = this.props;\n        const { reloadIsActive } = this.state;\n        if (reloadIsActive) {\n            const now = Math.floor(new Date().getTime() / 1000);\n            const reloadInSec = RELOAD_INTERVAL_IN_SEC - (now - reloadLastEpoch);\n            this.setState({ reloadInSec });\n            clearTimeout(this.updateTimer.tick);\n            this.updateTimer.tick = setTimeout(() => this.tickReloadTimeer(), 1000);\n        }\n        return false;\n    }\n\n    componentDidMount() {\n        this.initComponent();\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.updateTimer.tick);\n    }\n\n    render() {\n        const { reloadInSec } = this.state;\n        const { radius = 13, fontSize = 11, classNames = '' } = this.props;\n        const reloadPercent = Math.floor(util.normalizeBetween(reloadInSec, 0, RELOAD_INTERVAL_IN_SEC, 0, 100))\n\n        return (<>\n            <span class={classNames}>\n                <Gauge key={`gauge-reload-page`}\n                    color='primary'\n                    radius={radius}\n                    showPercentText={false}\n                    percent={reloadPercent}\n                    showCenterText={true}\n                    centerText={reloadInSec}\n                    centerTextSize={fontSize}\n                    centerTextY={'55%'}\n                />\n            </span>\n        </>);\n    }\n}\n\n@observer\nclass Results extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { submenu = 'details' } = this.state;\n        const { isAdmin } = userStore;\n\n        const { waypoints } = raceStore;\n        const { raceClass = {}, race = {}, onMarkerClick = () => {} } = this.props;\n\n        return (<>\n            <div class='d-flex justify-content-center align-items-center mb-2'>\n                <span style='font-size: 1.3em;'>{race.title} - {raceClass.title}</span>\n            </div>\n\n            <div\n                class='w-100 overflow-auto'\n                style='max-height: 60vh;'\n            >\n                {!waypoints || waypoints.length === 0 && <>\n                    <div class='text-center text-muted'>\n                        <div class='display-1'><i class='fas fa-dog' /></div>\n                        <div class='w-100'>\n                            <h3><Text id='races.no-teams-found'>No teams found!</Text></h3>\n                            <Text id='races.loading-teams'>Loading teams...</Text>\n                        </div>\n                        <div class='spinner-border text-primary' style='width: 3rem; height: 3rem;' role='status'>\n                            <span class='sr-only'>Loading...</span>\n                        </div>\n                    </div>\n                </>}\n\n                <table class='table table-sm table-striped'>\n                    {waypoints && waypoints.map((musher, idx) => {\n                        const restPercent = util.format(musher.restTime / musher.raceTime * 100, 0);\n                        const shortname = mu.displayNameShort(musher);\n\n                        return (<>\n                            <tr onClick={() => onMarkerClick(musher)}>\n                                <td style='width: 15px;' class='text-center'>{musher.rank}</td>\n                                <td>\n                                    <div class='d-flex justify-content-between align-items-start w-100'>\n                                        {/* <div\n                                            class='rounded-circle imageRounded imageRoundedSmallIcon float-left text-center'\n                                            style={`\n                                                background-image: url(\"${musher.image}\");\n                                                background-size: cover;\n                                                border: 1px ${mu.getRankingColor(musher.rank || idx + 1)} solid;\n                                                width: 30px !important;\n                                                height: 30px;\n                                                padding-top: 3px;\n                                            `}\n                                        >\n                                            {musher.image ? '' : shortname}\n                                        </div> */}\n                                        <div class='flex-grow-1'>\n                                            <div class='float-right ml-2'>\n                                                <div class='text-center'>\n                                                    <Gauge key={`gauge-reload-page`}\n                                                        color={restPercent < 40 ? (restPercent < 30 ? 'danger' : 'warning') : 'success'}\n                                                        radius={30}\n                                                        showPercentText={false}\n                                                        percent={restPercent}\n                                                        showCenterText={true}\n                                                        centerText={`${restPercent}%`}\n                                                        centerTextSize={15}\n                                                        centerTextY={'55%'}\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div class='float-right'>\n                                                {musher.finishTime < 9999999999 ? <>\n                                                    <i class='fas fa-flag-checkered text-success' />\n                                                </> : <>\n                                                    {musher.currentState === 'rest' ? <>\n                                                        <i class='fas fa-bed text-warning' />\n                                                    </> : <>\n                                                        <i class='fas fa-running text-primary' />\n                                                    </>}\n                                                </>}\n                                            </div>\n\n                                            <span class='text-white rounded-pill-left px-2 mr-2'\n                                                style={`background-color: ${mu.getRankingColor(musher.rank || idx + 1)};`}\n                                            >\n                                                {musher.bib}\n                                            </span>\n\n                                            {musher.flag}  {musher.title}\n                                            <div>\n                                                <small>\n                                                    {musher.finishTime < 9999999999 ? <>\n                                                        {musher.diffToFirstFinishTime > 0 ? <>\n                                                            <span class='text-muted'><i class='fas fa-arrow-up' /></span> {util.secToHms(musher.diffToFirstFinishTime)}\n                                                        </> : <>\n                                                            <span class='text-muted'><i class='fas fa-flag-checkered' /></span> {util.formatDate(util.parseInputDate(musher.finishTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                        </>}\n                                                        <nobr>\n                                                            <i class='fas fa-running text-muted' /> {util.secToHms(musher.raceTime)}\n                                                        </nobr>\n                                                        <nobr>\n                                                            <i class='fas fa-bed ml-2 text-muted' /> {util.format(musher.restTime / musher.raceTime * 100, 0)}%\n                                                        </nobr>\n                                                    </> : <>\n                                                        {/* <span class='text-muted'><i class='fas fa-compass' /></span> {mu.windDirection(musher.bearing)} */}\n                                                        {/* {util.format(musher.totalDistanceOnTrack, 1)} km */}\n                                                        <nobr>\n                                                            <span class='text-muted'><i class='fas fa-flag-checkered' /></span> {util.format(musher.distanceToFinish, 1)} km\n                                                        </nobr>\n                                                        {musher.distanceToFinish !== musher.distanceToFirst && musher.distanceToFirst > 0 && <>\n                                                            <nobr>\n                                                                <span class='text-muted font-weight-light ml-2'>1st:</span> {util.format(musher.distanceToFirst, 1)} km\n                                                            </nobr>\n                                                        </>}\n                                                        {musher.distanceToFinish !== musher.distanceToForward && musher.distanceToForward > 0 && <>\n                                                            <nobr>\n                                                                <span class='text-muted ml-2'><i class='fas fa-arrow-up' /></span> {util.format(musher.distanceToForward, 1)} km\n                                                            </nobr>\n                                                        </>}\n                                                        {musher.distanceToBehind > 0 && <>\n                                                            <nobr>\n                                                                <span class='text-muted ml-2'><i class='fas fa-arrow-down' /></span> {util.format(musher.distanceToBehind, 1)} km\n                                                            </nobr>\n                                                        </>}\n                                                        <br />\n                                                        <nobr>\n                                                            <span class='text-muted'><i class='fas fa-tachometer-alt' /></span> {util.format((musher.currentAvgSpeed ? musher.currentAvgSpeed * 3.6 : musher.speed) || 0, 1)} km/h\n                                                        </nobr>\n                                                        <nobr>\n                                                            <i class='fas fa-running ml-2 text-muted' /> {util.secToHms(musher.raceTime)}\n                                                        </nobr>\n                                                        <nobr>\n                                                            <i class='fas fa-bed ml-2 text-muted' /> {util.format(musher.restTime / musher.raceTime * 100, 0)}%\n                                                        </nobr>\n                                                    </>}\n\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class='mt-1'>\n                                        <States stores={this.props.stores} states={musher.states} duration={musher.raceTime} key={`state-${musher.bib}`} height={'6px'} showText={false} />\n                                    </div>\n                                </td>\n                            </tr>\n                        </>);\n                    })}\n                </table>\n\n                {/* waypoints: {JSON.stringify(waypoints.slice(0, 5), null, 4)}<br /> */}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass MusherInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    toggleAdminInfo = (e) => {\n        e.stopPropagation();\n        const { showAdminInfo } = this.state;\n        this.setState({\n            showAdminInfo: !showAdminInfo,\n        });\n    }\n\n    toggleInfo = (e) => {\n        e.stopPropagation();\n        const { showInfo } = this.state;\n        this.setState({\n            showInfo: !showInfo,\n        });\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const currentDog = dogs.find(e => e.uuidv4 === dogid);\n        this.setState({\n            currentDog,\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { showAdminInfo, showInfo, submenu = 'details', showDog, currentDog: dog = {} } = this.state;\n\n        const { waypoints, totalTrackLength } = raceStore;\n\n        const { wpData = {}, onMarkerClick = () => {} } = this.props;\n        const wp = raceStore.findWaypointByBib(wpData.bib);\n\n        const { isAdmin } = userStore;\n        const { user: currentUser = {} } = userStore;\n\n        const musher = wpData.bib ? raceStore.getMusherByBibId(wpData.bib) : raceStore.getMusherByBibEmail(wpData.email);\n        const team = raceStore.getTeamById(musher.team);\n        const user = team.members ? team.members.find(m => m.email === musher.email) : {};\n        const raceClass = raceStore.getClassByBib(wpData.bib);\n        const totals = raceStore.getTotalsByTeamId(musher.team);\n        const image = mu.getImage({ user, team, priority: 'user' });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(musher);\n\n        const dotColor = mu.getRankingColor(wp.rank);\n\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        const totalDistancePercent = util.format(wp.totalDistanceOnTrack / totalTrackLength * 100, 0);\n        const { inFront, behind } = raceStore.findNearestMushers(wpData.bib);\n\n        const restPercent = util.format(wp.restTime / wp.raceTime * 100, 0);\n        const runPercent = 100 - restPercent;\n\n        const defaultImage = {\n            s3XXLargeLink: './assets/homerun-race-logo.png',\n        };\n        const headerImage = team && team.imageHeader && team.imageHeader.s3XXLargeLink ? team.imageHeader : defaultImage;\n\n        const locale = 'en-GB';\n        const xTicks = [];\n        const dataLeft = [];\n        const legendLeft = [];\n        const unitLeft = [];\n        if (wp && wp.speeds && wp.speeds.length > 0) {\n            const xTicksRange = util.range(wp.speeds[0].timestamp, wp.speeds[wp.speeds.length - 1].timestamp, 600);\n            const partSize = Math.ceil(xTicksRange.length / 5);\n            const parts = Math.floor(xTicksRange.length / partSize);\n            // if (showDebug) {\n                // console.log({ xTicksRange, parts, partSize });\n            // }\n            for (let i = 0, l = xTicksRange.length; i < l; i += partSize) {\n                xTicks.push(\n                    mu.formatDate(util.parseInputDate(xTicksRange[i]), { locale, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })\n                );\n            }\n            xTicks.push(\n                mu.formatDate(util.parseInputDate(xTicksRange[xTicksRange.length - 1]), { locale, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })\n            );\n            // const smoothed = mu.smoothArray(elevations, 5);\n            const data = wp.speeds.map((speed) => ({\n                x: speed.timestamp,\n                y: speed.speed * 3.6,\n            }));\n            dataLeft.push(data);\n            legendLeft.push('Avg speed');\n            unitLeft.push('km/t');\n\n        }\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n        // console.log({ xTicks });\n\n        return (<>\n            {behind.bib && <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={() => onMarkerClick(behind)} style='line-height: 1.0em; font-size: 2.0em;'>\n                <i class='fas fa-angle-right' />\n            </button>}\n            {inFront.bib && <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={() => onMarkerClick(inFront)} style='line-height: 1.0em; font-size: 2.0em;'>\n                <i class='fas fa-angle-left' />\n            </button>}\n\n            <div class='d-flex justify-content-center align-items-center mb-2'>\n                <span style='font-size: 1.3em; height: 16vh;'>&nbsp;</span>\n            </div>\n            <div\n                class='w-100 overflow-auto'\n                style='max-height: 55vh;'\n            >\n\n                <div class='w-100 position-absolute'\n                    style={`z-index: -1; height: 18vh; top: 0px; left: 0px; background-size: cover; background-repeat: no-repeat; background-position: 50% 50%; background-color: #a0a0a0; ${headerImage ? `background-image: url(\"${headerImage.s3XXLargeLink}\");` : ''}`}\n                />\n\n                <div class='d-flex position-relative'>\n                    <div\n                        class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                        style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                    >\n                        {!image && <div class='text-muted' style='font-size: 25px; padding-top: 5px;'>{shortname}</div>}\n                        <div\n                            class={`rounded-pill-both px-2 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                            style={`bottom: -20px; right: 0; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                        >\n                            {musher.bib && musher.bib !== 'n/a' && <>{musher.bib}</>}\n                        </div>\n                    </div>\n                    <div class='flex-grow-1 pl-3 text-overflow mb-3' style='line-height: 1.8em;'>\n                        <div class='float-right' style='font-size: 1.2em;'>\n                            {wp.finishTime < 9999999999 ? <>\n                                <i class='fas fa-flag-checkered text-success' />\n                            </> : <>\n                                {wp.currentState === 'rest' ? <>\n                                    <i class='fas fa-bed text-warning' />\n                                </> : <>\n                                    <i class='fas fa-running text-primary' />\n                                </>}\n                            </>}\n                        </div>\n                        {/* {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                            <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                        </span>} */}\n\n                        <h3 class='mb-0'>\n                            {musher.flag} {musher.firstname} {musher.lastname}\n                        </h3>\n                        <h6 class='mb-0'>{musher.sportsClub || <>&nbsp;</>}</h6>\n                    </div>\n                </div>\n\n                <div class='d-flex justify-content-center mb-3'>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'details' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='details'\n                        >\n                            Details\n                        </button>\n                    </div>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='team'\n                        >\n                            Team\n                        </button>\n                    </div>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'dogs' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='dogs'\n                        >\n                            Dogs\n                        </button>\n                    </div>\n                </div>\n\n                <div\n                    class='w-100 overflow-auto position-relative'\n                >\n                    {submenu === 'details' && <>\n                        <div class='d-flex justify-content-between'>\n                            <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                                <div>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-list' /> Ranking\n                                    </small>\n                                </div>\n                                <div class='text-center' style='font-size: 2.0em;'>\n                                    {wp.rank}\n                                </div>\n                            </div>\n                            {wp.finishTime < 9999999999 ? <>\n                                {wp.diffToFirstFinishTime > 0 ? <>\n                                    <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                                        <div>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-clock' /> Diff to 1st\n                                            </small>\n                                        </div>\n                                        <div class='text-center' style='font-size: 2.0em;'>\n                                            {util.secToHms(wp.diffToFirstFinishTime)}\n                                        </div>\n                                    </div>\n                                </> : <>\n                                    <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                                        <div>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-clock' /> Start time\n                                            </small>\n                                        </div>\n                                        <div class='text-center' style='font-size: 1.5em;'>\n                                            {util.formatDate(util.parseInputDate(musher.startTime || raceClass.startDate || wp.startTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </div>\n                                    </div>\n                                    <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                                        <div>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-clock' /> Finish time\n                                            </small>\n                                        </div>\n                                        <div class='text-center' style='font-size: 1.5em;'>\n                                            {util.formatDate(util.parseInputDate(wp.finishTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </div>\n                                    </div>\n                                </>}\n                            </> : <>\n                                <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                                    <div>\n                                        <small class='text-muted'>\n                                            <i class='fas fa-tachometer-alt' /> Current speed\n                                        </small>\n                                    </div>\n                                    <div class='text-center' style='font-size: 2.0em;'>\n                                        {util.format(wp.speed || 0, 1)} <span class='text-muted' style='font-size: 0.5em;'>km/h</span>\n                                    </div>\n                                </div>\n                                <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                                    <div>\n                                        <small class='text-muted'>\n                                            <i class='fas fa-compass' /> Bearing\n                                        </small>\n                                    </div>\n                                    <div class='text-center' style='font-size: 2.0em;'>\n                                        {mu.windDirection(wp.bearing)}\n                                    </div>\n                                </div>\n                            </>}\n                        </div>\n\n                        <div class='d-flex justify-content-between mt-2'>\n                            <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                                <div>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-road' /> Total distance\n                                    </small>\n                                </div>\n                                <div class='text-center mt-2'>\n                                    <Gauge key={`gauge-reload-page`}\n                                        color='primary'\n                                        radius={40}\n                                        showPercentText={false}\n                                        percent={totalDistancePercent}\n                                        showCenterText={true}\n                                        centerText={`${totalDistancePercent}%`}\n                                        centerTextSize={18}\n                                        centerTextY={'55%'}\n                                    />\n                                </div>\n                                <div class='text-center'>\n                                    <small>\n                                        {util.format(wp.totalDistanceOnTrack, 1)} / {util.format(totalTrackLength, 1)} <span class='text-muted'>km</span><br />\n                                        <i class='fas fa-clock ml-2 text-muted' /> {util.secToHms(wp.raceTime)}\n                                    </small>\n\n                                </div>\n                            </div>\n                            <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                                <div>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-bed' /> Rest\n                                    </small>\n                                </div>\n                                <div class='text-center mt-2'>\n                                    <Gauge key={`gauge-reload-page`}\n                                        color={restPercent < 40 ? (restPercent < 30 ? 'danger' : 'warning') : 'success'}\n                                        radius={40}\n                                        showPercentText={false}\n                                        percent={restPercent}\n                                        showCenterText={true}\n                                        centerText={`${restPercent}%`}\n                                        centerTextSize={18}\n                                        centerTextY={'55%'}\n                                    />\n                                </div>\n                                <div class='text-center'>\n                                    <small>\n                                        {restPercent} <span class='text-muted'>%</span><br />\n                                        <i class='fas fa-clock ml-2 text-muted' /> {util.secToHms(wp.restTime)}\n                                    </small>\n                                </div>\n                            </div>\n                            {/* <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                                <div>\n                                    <small class='text-muted'>\n                                        Current speed\n                                    </small>\n                                </div>\n                                <div class='text-center' style='font-size: 2.0em;'>\n                                    {util.format(wp.speed || 0, 1)} <span class='text-muted' style='font-size: 0.5em;'>km/h</span>\n                                </div>\n                            </div> */}\n                        </div>\n\n                        <div class='d-flex justify-content-between mt-2'>\n                            <div class='flex-fill bg-light rounded-lg p-3 align-middle w-100'>\n                                <States stores={this.props.stores} states={wp.states} duration={wp.raceTime} key={`state-${wp.bib}`} />\n                            </div>\n                        </div>\n\n                        {wp.finishTime < 9999999999 ? <>\n                            {wp.diffToFirstFinishTime > 0 ? <>\n                                <div class='d-flex justify-content-between mt-2'>\n                                    <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                                        <div>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-clock' /> Start time\n                                            </small>\n                                        </div>\n                                        <div class='text-center' style='font-size: 1.5em;'>\n                                            {util.formatDate(util.parseInputDate(musher.startTime || raceClass.startDate || wp.startTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </div>\n                                    </div>\n                                    <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                                        <div>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-clock' /> Finish time\n                                            </small>\n                                        </div>\n                                        <div class='text-center' style='font-size: 1.5em;'>\n                                            {util.formatDate(util.parseInputDate(wp.finishTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </div>\n                                    </div>\n                                </div>\n                            </> : <></>}\n                        </> : <>\n                            <div class='d-flex justify-content-between mt-2'>\n                                <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                                    <div>\n                                        <small class='text-muted'>\n                                            <i class='fas fa-arrow-down' /> Behind\n                                        </small>\n                                    </div>\n                                    <div class='text-center'>\n                                        {util.format(wp.distanceToBehind, 1)} <span class='text-muted'>km</span>\n                                    </div>\n                                </div>\n                                <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                                    <div>\n                                        <small class='text-muted'>\n                                            Team\n                                        </small>\n                                    </div>\n                                    <div class='text-center'>\n                                        <i class='fas fa-dog' />\n                                    </div>\n                                </div>\n                                <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                                    <div>\n                                        <small class='text-muted'>\n                                            <i class='fas fa-arrow-up' /> In front\n                                        </small>\n                                    </div>\n                                    <div class='text-center'>\n                                        {util.format(wp.distanceToForward, 1)} <span class='text-muted'>km</span>\n                                    </div>\n                                </div>\n                                <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                                    <div>\n                                        <small class='text-muted'>\n                                            <i class='fas fa-arrow-up' /> To first\n                                        </small>\n                                    </div>\n                                    <div class='text-center'>\n                                        {util.format(wp.distanceToFirst, 1)} <span class='text-muted'>km</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='d-flex justify-content-between mt-2'>\n                                <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                                    <div>\n                                        <small class='text-muted'>\n                                            <i class='fas fa-flag-checkered' /> Finish\n                                        </small>\n                                    </div>\n                                    <div class='text-center' style='font-size: 2.0em;'>\n                                        {util.format(wp.distanceToFinish, 1)} <span class='text-muted' style='font-size: 0.5em;'>km</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </>}\n\n                        <div class='d-flex justify-content-between mt-2'>\n                            <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                                <div>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-clock' /> Racetime\n                                    </small>\n                                </div>\n                                <div class='text-center' style='font-size: 2.0em;'>\n                                    {util.secToHms(wp.raceTime)}\n                                </div>\n                            </div>\n                            <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                                <div>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-bed' /> Resttime\n                                    </small>\n                                </div>\n                                <div class='text-center' style='font-size: 2.0em;'>\n                                    {util.secToHms(wp.restTime)}\n                                </div>\n                            </div>\n                        </div>\n\n\n                        <div class='d-flex justify-content-between mt-2'>\n                            <div class='flex-fill bg-light rounded-lg p-3 align-middle w-100'>\n                                <div>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-tachometer-alt' /> Speed plot\n                                    </small>\n                                </div>\n                                <div class='w-100 mt-2 overflow-auto'>\n                                    <LineGraph\n                                        stores={this.props.stores}\n                                        width={1000}\n                                        height={200}\n                                        showXTicks={1}\n                                        // xTicksVal={val => `${val}`}\n                                        xTicks={xTicks}\n                                        paddingTop={30}\n                                        paddingLeft={50}\n                                        yTicksLeftWidth={'50px'}\n                                        lineFromXzero={true}\n                                        lineFromXmax={true}\n                                        // xTicksLink={'/workouts/week/'}\n\n                                        // yMaxLeft={25}\n                                        dataLeft={dataLeft}\n                                        legendLeft={legendLeft}\n                                        dataFillLeft={[1]}\n                                        // yMaxLeft={30}\n                                        // yMinLeft={0}\n                                        showYTicksLeft={1}\n                                        yTicksLeftPostfix={' km/t'}\n                                        unitLeft={unitLeft}\n                                        avgWindowLeft={[0, 0]}\n                                        smoothLeft={[0, 0]}\n\n                                        // dataRight={dataRight}\n                                        // legendRight={legendRight}\n                                        // // dataRight={[graphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev]}\n                                        // // legendRight={[`${seasonStart} ${ascend}`, `${seasonStart - 1} ${ascend}`]}\n                                        // showYTicksRight={dataRight.length > 0 ? 1 : 0}\n                                        // yTicksRightPostfix={'km/t'}\n                                        // unitRight={unitRight}\n                                        // avgWindowRight={[0, 0, 0]}\n                                        // smoothRight={[1, 1, 1]}\n\n                                        // marker={week}\n                                    />\n                                    {/* {JSON.stringify(wp.speeds, null, 4)} */}\n                                </div>\n                            </div>\n                        </div>\n\n\n                        {/* distanceToFinish: {JSON.stringify(wp.distanceToFinish, null, 4)}<br />\n                        distanceToFirst: {JSON.stringify(wp.distanceToFirst, null, 4)}<br />\n                        distanceToForward: {JSON.stringify(wp.distanceToForward, null, 4)}<br />\n                        distanceToBehind: {JSON.stringify(wp.distanceToBehind, null, 4)}<br />\n                        speed: {JSON.stringify(wp.speed, null, 4)}<br />\n                        bearing: {JSON.stringify(wp.bearing, null, 4)}<br />\n                        finishTime: {util.isoDate(wp.finishTime)}<br /> */}\n\n                        {/*\n                            \"lat\": 62.53911889158189,\n                            \"lng\": 11.38222829438746,\n                            \"icon\": null,\n                            \"image\": \"https://themusher.app/220x/the-musher-90bc4d13-1204-49db-9a09-9e4d84775b00.jpeg\",\n                            \"bib\": 3,\n                            \"rank\": 1,\n                            \"flag\": \"🇳🇴\",\n                            \"title\": \"Wærner\",\n                            \"body\": \"-0,0 km/t, -0,0 km\",\n                            \"color\": \"#FA0007\",\n                            \"totalDistanceOnTrack\": 619.146473819473,\n                            \"bearing\": 0,\n                            \"finishTime\": 1644169451\n                        */}\n\n\n                        {totals && totals.distanceKm && <>\n                            <div class='table-responsive-lg'>\n                                <table class='table table-borderless'>\n                                    <tbody>\n                                        <tr>\n                                            <td style='width: 5%;'><i class='fas fa-dog' /></td>\n                                            <td style='width: 60%'><Text id='races.dogs'>Dogs</Text></td>\n                                            <td style='width: 5%;'>&nbsp;</td>\n                                            <td class='text-right' style='width: 30%;'>{team.dogs.length}</td>\n                                        </tr>\n                                        <tr>\n                                            <td><i class='fas fa-road' /></td>\n                                            <td><Text id='races.distance'>Distance</Text></td>\n                                            <td>&nbsp;</td>\n                                            <td class='text-right'><nobr>{totals.distanceKm ? `${util.format(totals.distanceKm, 1)} km` : 'n/a'}</nobr></td>\n                                        </tr>\n                                        <tr>\n                                            <td><i class='fas fa-mountain' /></td>\n                                            <td><Text id='races.ascend'>Ascending</Text></td>\n                                            <td>&nbsp;</td>\n                                            <td class='text-right'><nobr>{totals.elevation ? `${util.format(totals.elevation, 0)} m` : 'n/a'}</nobr></td>\n                                        </tr>\n                                        <tr>\n                                            <td><i class='fas fa-stopwatch' /></td>\n                                            <td><Text id='races.race-time'>Racetime</Text></td>\n                                            <td><i class='fas fa-clock' /></td>\n                                            <td class='text-right'><nobr>{util.secToHms(totals.duration) || 'n/a'}</nobr></td>\n                                        </tr>\n                                        <tr>\n                                            <td><i class='fas fa-bed' /></td>\n                                            <td><Text id='races.rest-time'>Rest</Text></td>\n                                            <td><i class='fas fa-clock' /></td>\n                                            <td class='text-right'><nobr>{util.secToHms(totals.rest) || 'n/a'}</nobr></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </>}\n                    </>}\n                    {submenu === 'team' && <>\n                        {team.public > 0 ? <>\n                            <h3>{team.name}</h3>\n                            <Markdown markdown={mu.replaceImages(team.description, team.images)} markdownOpts={mu.getMarkdownOptions()} />\n                            <ImageScroller stores={this.props.stores} images={team.images} />\n                        </> : <>\n                            <div class='text-center text-muted'>\n                                <div class='display-1'><i class='fas fa-dog' /></div>\n                                <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                                <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                            </div>\n                        </>}\n                    </>}\n                    {submenu === 'dogs' && <>\n                        {team.public > 0 ? <>\n                            {team.dogs && <div class='w-100 container-fluid'>\n                                <div class='row pt-2'>\n                                    <DogScroller stores={this.props.stores} dogs={team.dogs.map(d => d.id)} allDogs={team.dogs} onDogClick={this.onDogClick} />\n                                </div>\n                            </div>}\n                            {showDog && <>\n                                <div class='d-flex mb-0 mt-3 position-relative'>\n                                    <div class={`text-center border rounded-circle imageRounded imageRoundedLarge text-muted pt-2`} style={dog.image ? `background-image: url(\"${dog.image.s3LargeLink}\"); background-size: cover;` : ''}>\n                                        {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                    </div>\n                                    <div class='flex-grow-1 pl-3 pr-2'\n                                        style={`border-right: 4px solid ${userStore.findHarness(dog.harness, 'colorNonstop')} !important; line-height: 1.2em;`}\n                                    >\n                                        <h5 class='mb-1'>\n                                            {dog.shortname || dog.name} {dog.shortname && dog.shortname !== '' && <> - <span class='font-weight-lighter'>{dog.name}</span></>}\n                                            {hasBirthday && <>\n                                                <i class='fas fa-birthday-cake ml-3' />\n                                            </>}\n                                        </h5>\n                                        <div>\n                                            {daysUntilBirthday < 7 && <>\n                                                <span class='text-muted mr-2'>\n                                                    <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                                                </span>\n                                            </>}\n                                            {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                            {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                                        </div>\n                                    </div>\n                                </div>\n                                {/* <xmp>dog: {JSON.stringify(dog, null, 4)}</xmp> */}\n                            </>}\n                        </> : <>\n                            <div class='text-center text-muted'>\n                                <div class='display-1'><i class='fas fa-dog' /></div>\n                                <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                                <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                            </div>\n                        </>}\n                    </>}\n\n                    {isAdmin && <div style='max-height: 200px; max-width: 70vw; overflow: auto;'>\n                        <button class='btn btn-link btn-block' onClick={this.toggleAdminInfo}>\n                            Toggle admin info\n                        </button>\n                        {showAdminInfo && <>\n                            <small>\n                                <xmp>\n                                    musher: {JSON.stringify(musher, null, 4)}<br />\n                                    user: {JSON.stringify(user, null, 4)}<br />\n                                    team: {JSON.stringify(team, null, 4)}<br />\n                                    totals: {JSON.stringify(totals, null, 4)}<br />\n\n                                    {/* {\n                                        \"firstDate\": \"2021-03-19 11:59\",\n                                        \"lastDate\": \"2021-03-20 17:13\",\n                                        \"firstEpoch\": 1616151540000,\n                                        \"lastEpoch\": 1616256780000,\n                                        \"now\": {\n                                            \"$numberDecimal\": \"1642675856939\"\n                                        },\n                                        \"totalTimeUsedSec\": 26524316,\n                                        \"totalWorkoutTimeUsedSec\": 130895,\n                                        \"lastDuration\": 25655,\n                                        \"team\": 84,\n                                        \"count\": 4,\n                                        \"distanceKm\": 301.5906237951766,\n                                        \"elevation\": 3610.019075719202,\n                                        \"duration\": 77343,\n                                        \"rest\": 1332,\n                                        \"speedAvg\": 8.294634979660305,\n                                        \"totalRest\": 54884,\n                                        \"loadIndex\": 1080.75,\n                                        \"totalKcalRelated\": 544.535560976128,\n                                        \"weightedTotalKcal\": 12303.171406247127,\n                                        \"flatTotalKcal\": 9424.70699359927,\n                                        \"firstGpxStartEpoch\": null,\n                                        \"lastGpxStartEpoch\": null\n                                    } */}\n\n                                </xmp>\n                            </small>\n                        </>}\n                    </div>}\n                </div>\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass TrackingMap extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            reloadLastEpoch: Math.floor(new Date().getTime() / 1000),\n            historyPointIndex: 0,\n            timerRunning: true,\n            replayHistory: false,\n            replaySpeed: REPLAY_SPEED,\n        };\n        this.updateTimer = {};\n    }\n\n    handleHistoryPointIndex = (e) => {\n        const historyIdx = parseInt(e.target.value, 10);\n        clearTimeout(this.updateTimer.reload);\n\n        // console.log({ historyIdx });\n        this.setState({\n            historyPointIndex: historyIdx,\n            timerRunning: false,\n        }, () => {\n            const { historyPointIndex } = this.state;\n            const { raceStore } = this.props.stores;\n            raceStore.updateWaypointPosition(Math.abs(historyPointIndex));\n        });\n    }\n\n    playHistory = () => {\n        clearTimeout(this.updateTimer.reload);\n        const { historyPointIndex, replaySpeed } = this.state;\n        const { raceStore } = this.props.stores;\n        const raceTrackerPointTimestamp = raceStore.getRaceTrackerTimestamp(historyPointIndex + 1);\n        // console.log('playHistory', { historyPointIndex });\n        const state = {\n            historyPointIndex: historyPointIndex + 1,\n            timerRunning: false,\n            playingHistory: true,\n        };\n        if (raceTrackerPointTimestamp) {\n            state.raceTrackerPointTimestamp = raceTrackerPointTimestamp\n        }\n        this.setState({\n            ...state,\n        }, () => {\n            raceStore.updateWaypointPosition(Math.abs(historyPointIndex + 1));\n        });\n\n        // Set replay timer\n        clearTimeout(this.updateTimer.history);\n        this.updateTimer.history = setTimeout(() => {\n            this.playHistory();\n        }, replaySpeed * 1000);\n    }\n\n    pauseHistory = () => {\n        clearTimeout(this.updateTimer.history);\n        this.setState({\n            playingHistory: false,\n        });\n    }\n\n    loadLiveRaceResults = async (props = this.props, { teamIds, focusOnMushers, bibs, classid }) => {\n        const { raceStore, userStore } = props.stores;\n        const { race } = raceStore;\n        const { historyPointIndex, replayHistory, timerRunning } = this.state;\n        const { showDrawerReplay } = this.props;\n        const classInfo = raceStore.getClassById(classid) || {};\n        const { isAdmin } = userStore;\n\n        await raceStore.getRaceTrackerData(race.raceTrackerRace, {\n            history: (replayHistory || showDrawerReplay),\n            bibs,\n            classid,\n            startDate: classInfo.startDate,\n            endDate: classInfo.endDate,\n            isAdmin,\n        });\n        raceStore.getRaceTrackerActiveTeams(teamIds, focusOnMushers, bibs, historyPointIndex);\n\n        // Set reload timer\n        if (timerRunning) {\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(() => {\n                console.log('loadLiveRaceResults.reloading...');\n                const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n                this.setState({ reloadLastEpoch });\n                // this.loadRace(props);\n                this.loadLiveRaceResults(this.props, { teamIds, focusOnMushers, bibs, classid });\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        }\n    }\n\n    loadRaceResults = async (props = this.props, teamIds, focusOnMushers) => {\n        const { raceStore } = props.stores;\n        const { raceid } = props;\n        const { timerRunning } = this.state;\n\n        await raceStore.loadWorkoutSummary(teamIds, raceid);\n        raceStore.getWorkoutSummaryActiveTeams(teamIds, focusOnMushers);\n\n        if (timerRunning) {\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(() => {\n                const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n                this.setState({ reloadLastEpoch });\n                // this.loadRace(props);\n                this.loadRaceResults(this.props, teamIds, focusOnMushers);\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        }\n    }\n\n    loadRace = async (props = this.props) => {\n        try {\n            this.setState({ isLoading: true });\n            const { raceStore, appState } = props.stores;\n            const { raceid, classid } = props;\n            await raceStore.load(raceid);\n            const { race } = raceStore;\n            const { focusOnMushers } = appState;\n\n            const { selectedClassIds = [] } = appState;\n            const selectedClassId = classid || selectedClassIds[0];\n\n            if (classid) {\n                appState.toggleSelectedClassId(classid, true);\n            }\n            const allTeamIds = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n                })\n                .flat();\n\n            const bibs = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            if (allTeamIds.length > 0) {\n                await raceStore.loadTeams(allTeamIds.join(','));\n            }\n            if (race.liveRace > 0) {\n                await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId });\n            } else {\n                await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n            }\n            raceStore.getAllClassesSortedBy();\n\n            this.setState({ isLoading: false });\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n    }\n\n    setLeaderboardMode = (e) => {\n        const leaderboardMode = e.target.parentElement.dataset.mode || e.target.dataset.mode;\n        this.setState({ leaderboardMode })\n    }\n\n    chooseRaceClass = (e) => {\n        const filterByraceClass = e.target.value;\n        this.setState({ filterByraceClass })\n    }\n\n    toggleShowLeaderBoard = (hide) => {\n        const { showLeaderBoard } = this.state;\n        if (hide === true) {\n            this.setState({ showLeaderBoard: false });\n        } else {\n            this.setState({ showLeaderBoard: !showLeaderBoard });\n        }\n    }\n\n    toggleShowNews = (hide) => {\n        const { showNews } = this.state;\n        if (hide === true) {\n            this.setState({ showNews: false });\n        } else {\n            this.setState({ showNews: !showNews });\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.updateTimer.reload);\n        clearTimeout(this.updateTimer.history);\n        clearTimeout(this.updateTimer.tick);\n    }\n\n    componentDidMount() {\n        this.loadRace();\n        try {\n            const { width, height } = getWindowDimensions();\n            if (width < 800) {\n                this.toggleShowLeaderBoard(true);\n                this.toggleShowNews(true);\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.classid !== nextProps.classid || this.props.showDrawerReplay !== nextProps.showDrawerReplay) {\n\t\t    this.loadRace(nextProps);\n        }\n\t}\n\n    closeAllDrawers = () => {\n        this.setState({\n            showResults: false,\n            showDrawerCheckpoint: false,\n            showDrawerMusher: false,\n        });\n    }\n\n    onMarkerClick = (wpData) => {\n        this.closeAllDrawers();\n        this.setState({\n            showDrawerMusher: true,\n            wpData,\n        });\n    }\n\n    onCpMarkerClick = (cpData) => {\n        if (!cpData || !cpData.id) {\n            return null;\n        }\n        this.closeAllDrawers();\n        this.setState({\n            selectedCheckpointId: cpData.id,\n            showDrawerCheckpoint: true,\n            cpData,\n        });\n    }\n\n    toggleDrawerMusher = () => {\n        const { showDrawerMusher } = this.state;\n        this.setState({\n            showDrawerMusher: !showDrawerMusher,\n        });\n    }\n\n    toggleDrawerCheckpoint = () => {\n        const { showDrawerCheckpoint } = this.state;\n        this.setState({\n            showDrawerCheckpoint: !showDrawerCheckpoint,\n        });\n    }\n\n    toggleResults = () => {\n        const { showResults } = this.state;\n        this.closeAllDrawers();\n        this.setState({            \n            showResults: !showResults,\n        });\n    }\n\n    selectCheckpoint = (selectedCheckpointId) => {\n        this.closeAllDrawers();\n        this.setState({\n            selectedCheckpointId,\n            showDrawerCheckpoint: true,\n            showDrawerMusher: false,\n            showDrawer: false,\n        });\n    }\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n\n    // /Overlay functions\n\n    setReplaySpeed = (e) => {\n        const speed = e.target.closest('button').dataset.speed;\n        this.setState({\n            replaySpeed: parseFloat(speed),\n        });\n    }\n\n\tfilterByClass = async (e) => {\n        try {\n            const selectedClassId = e.target.closest('button').dataset.id;\n\n            const { showDrawerReplay } = this.props;\n            const { replayHistory } = this.state;\n            if (replayHistory || showDrawerReplay) {\n                this.toggleReplayHistory();\n            }\n\n            const { appState, raceStore } = this.props.stores;\n            raceStore.cleanupMemoryClass();\n            appState.toggleSelectedClassId(selectedClassId, true);\n\n            const { race } = raceStore;\n            const { focusOnMushers } = appState;\n\n            const allTeamIds = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n                })\n                .flat();\n\n            const bibs = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            this.setState({\n                allTeamIds,\n                bibs,\n            });\n\n            if (allTeamIds.length > 0) {\n                await raceStore.loadTeams(allTeamIds.join(','));\n            }\n            if (race.liveRace > 0) {\n                await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId });\n\n            } else {\n                await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n            }\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n    toggleFocusOnMusher = (e) => {\n        try {\n            const musherId = e.target.parentElement.dataset.musherid || e.target.dataset.musherid;\n            const { appState, raceStore } = this.props.stores;\n            appState.toggleFocusOnMusher(musherId);\n\n            const { focusOnMushers = [], selectedClassIds = [] } = appState;\n            const classid = selectedClassIds[0]\n\n            const { race } = raceStore;\n            const bibs = race.classes\n                .filter(currentClass => currentClass.id === classid)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            if (race.liveRace > 0) {\n                raceStore.getRaceTrackerActiveTeams(null, focusOnMushers, bibs);\n            } else {\n                raceStore.getWorkoutSummaryActiveTeams(null, focusOnMushers, bibs);\n            }\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n    toggleBib = () => {\n        try {\n            const { bib } = this.state;\n            const { appState, raceStore } = this.props.stores;\n            const musher = raceStore.getMusherByBibId(bib);\n            appState.toggleFocusOnMusher(musher.id);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n    }\n\n    checkForEnter = (e) => {\n        if (e.key === 'Enter') {\n            this.toggleBib();\n        }\n    }\n\n    toggleReplayHistory = () => {\n        const { replayHistory } = this.state;\n        clearTimeout(this.updateTimer.reload);\n        this.setState({\n            showDrawer: false,\n            historyPointIndex: 0,\n            replayHistory: !replayHistory,\n            timerRunning: replayHistory,\n        }, async () => {\n            await this.loadRace();\n            const { historyPointIndex } = this.state;\n            const { raceStore } = this.props.stores;\n            const { maxPoints } = raceStore;\n            if (replayHistory) {\n                console.log('toggleReplayHistory: setting to maxPoints', maxPoints);\n                raceStore.updateWaypointPosition(Math.abs(maxPoints - 1));\n            } else {\n                console.log('toggleReplayHistory: setting to first points');\n                for (let i = 0, l = 10; i < l; i += 1) {\n                    raceStore.updateWaypointPosition(Math.abs(historyPointIndex + i));\n                }\n            }\n        });\n    }\n\n    toggleLines = () => {\n        const { showLines } = this.state;\n        this.setState({\n            showLines: !showLines,\n        });\n    }\n\n    render() {\n        const { historyPointIndex, timerRunning, playingHistory, replaySpeed, raceTrackerPointTimestamp, showLines,\n            allTeamIds, bibs,\n        } = this.state;\n        const { userStore, raceStore, appState } = this.props.stores;\n        const { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n        const { raceid, path, showHeader = true, drawerClassNames, drawerWidth, showDrawerReplay } = this.props;\n        const { focusOnMushers = [], infoOnMushers = [], selectedClassIds = [] } = appState;\n\n        const filterByClassId = (c) => {\n\t\t\tif (selectedClassIds.length > 0) {\n\t\t\t\treturn selectedClassIds.indexOf(c.id) > -1;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const { leaderboardMode, filterByraceClass, showLeaderBoard, showNews, reloadLastEpoch,\n            showDrawerMusher, showDrawerCheckpoint,\n            wpData = {},\n            cpData = {},\n            showResults,\n            showTeam, showDog,\n            submenu, replayHistory,\n            selectedCheckpointId,\n        } = this.state;\n\n        const { activeTeams, teamList, waypoints, geoJSONs, waypoints2, waypoints3, zoomToMarkers, classes, race, racetrackerData, maxPoints } = raceStore;\n\n        const musher = wpData.bib ? raceStore.getMusherByBibId(wpData.bib) : raceStore.getMusherByBibEmail(wpData.email);\n        const team = raceStore.getTeamById(musher.team);\n        const selectedClass = raceStore.getClassById(selectedClassIds[0]) || {};\n\n        let wpCheckpoints = [];\n        if (selectedClass.waypoints && selectedClass.waypoints.length > 0) {\n            wpCheckpoints = selectedClass.waypoints;\n        } else if (selectedClass.checkpoints && selectedClass.checkpoints.length > 0) {\n            wpCheckpoints = selectedClass.checkpoints\n                .slice()\n                .sort(fieldSorter(['sortOrder']))\n                .filter(cp => cp.position && cp.position[0])\n                .map(cp => ({\n                    id: cp.id,\n                    title: cp.name,\n                    lat: cp.position[0],\n                    lng: cp.position[1],\n                }));\n        }\n\n        let showTracking = true;\n        if (race.countryRegexp) {\n            if (user && user.currentLocationGeocode) {\n                const regexp = new RegExp(race.countryRegexp, 'i');\n                if (regexp.test(user.currentLocationGeocode.formattedCountry)) {\n                    showTracking = false;\n                }\n            }\n        }\n\n        return (<>\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} hideTeam={this.hideTeam} />\n            </Overlay>}\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={team.dogs} />\n            </Overlay>}\n\n\n            {showHeader && <HeaderCustom height={MARGIN_TOP}>\n                <div class='d-flex justify-content-between align-items-center w-100'>\n                    <div class='d-flex align-items-center'>\n                        <span class='' style='font-size: 2.3em;'>\n                            <a href={`/app-races/${race.id}`}>\n                                <i class='fas fa-angle-left' />\n                            </a>\n                        </span>\n                        <span class='ml-4 text-primary' style='font-size: 1.4em;' onClick={this.toggleResults}>\n                            <i class='fas fa-list-ol' />\n                        </span>\n                        <span class='ml-4 text-primary' style='font-size: 1.4em;' >\n                            {!race.resultsHide && <a href={`/app-races/${race.id}/results`}>\n                                <i class='fas fa-stopwatch' />\n                            </a>}\n                        </span>\n                    </div>\n                    <div>\n                        <span class='font-weight-normal text-white' style='font-size: 1.2em;'>{race.title}</span>\n                    </div>\n                    {race.liveRace > 0 ? <>\n                        <div class='d-flex align-items-center text-primary' onClick={this.toggleReplayHistory}>\n                            <span class=''>Replay</span>\n                            <span class='ml-2' style='font-size: 1.4em;'>\n                                <i class='fas fa-play' />\n                            </span>\n                        </div>\n                    </> : <>\n                        <div class='d-flex align-items-center'>\n                            &nbsp;\n                        </div>\n                    </>}\n                </div>\n\n                <div class='w-100 overflow-hidden'>\n                    <div\n                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                    >\n                        {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map((currentClass, idx) => <>\n                            <div class='col px-0 pt-0'>\n                                <button\n                                    type='button'\n                                    class={`btn btn-block ${mu.getPillClass(race.classes.length, idx)} rounded-none ${selectedClassIds.indexOf(currentClass.id) > -1 ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                    onClick={this.filterByClass}\n                                    data-id={currentClass.id}\n                                >\n                                    {currentClass.title}\n                                </button>\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n            </HeaderCustom>}\n\n            {!showTracking ? <>\n                <div\n                    class='container-fluid position-relative p-0 w-100 h-100'\n                    style={`margin-top: ${showHeader ? MARGIN_TOP : 0};`}\n                >\n                    <div class='text-center text-muted'>\n                        <div class='display-1'><i class='fas fa-hand-paper' /></div>\n                        <h3>Not allowed to view tracking</h3>\n                        {race.countryRegexpMessage}\n                    </div>\n                </div>\n            </> : <>\n                <div\n                    class='container-fluid position-relative p-0 w-100 h-100'\n                    style={`margin-top: ${showHeader ? MARGIN_TOP : 0};`}\n                >\n                    {race.id ? <>\n                        <Trackmap\n                            marginTop={MARGIN_TOP}\n                            stores={this.props.stores}\n                            raceid={raceid}\n                            waypoints={waypoints}\n                            geoJSONs={showLines ? geoJSONs : null}\n                            // waypoints2={waypoints2}\n                            // waypoints3={waypoints3}\n                            waypoints2={wpCheckpoints}\n\n                            zoomToMarkers={zoomToMarkers}\n                            fullscreenMap={true}\n                            onMarkerClick={this.onMarkerClick}\n                            onMarker2Click={this.onCpMarkerClick}\n                            showHeatmap={race.liveRace < 1}\n                            allTeamIds={allTeamIds}\n                            showTracks={race.liveRace >= 1}\n                            selectedClassIds={selectedClassIds}\n                            showDistanceMarkers={false}\n                            groupWaypoints={false}\n                            focusOnMushers={focusOnMushers}\n                            // key={`trackmap-${selectedClassIds.join('-')}`}\n                            // key={`heatmap-${racetrackerData.map(e => e.bib).join('-')}`}\n                            // mapid={`heatmap-${racetrackerData.map(e => e.bib).join('-')}`}\n                        />\n                    </> : <>\n                        <Loading stores={this.props.stores} />\n                    </>}\n\n\n                    {timerRunning && <div class='position-absolute' style='top: 125px; left: 5px; z-index: 9999; width: 30px; height: 30px;'>\n                        <ReloadTimer stores={this.props.stores} classNames='float-right ml-2' reloadLastEpoch={reloadLastEpoch} />\n                    </div>}\n\n                        {focusOnMushers && focusOnMushers.length > 0 && <>\n                            <div\n                                class='row mb-2'\n                                style='\n                                    background-color: #1C1F4C;\n                                    background-image: url(\"https://themusher.app/assets/tv-single-background.jpg\");\n                                    background-size: cover !important;\n                                    background-position: 0 0;\n                                    border-radius: 10px;\n                                '\n                            >\n                                <div class='col-12 text-white' style='font-size: 1.3em;'>\n                                    {focusOnMushers && focusOnMushers.map(musherId => {\n                                        const musher = raceStore.getMusherById(musherId);\n                                        return <>\n                                            <div>\n                                                <nobr>\n                                                    <span class='mr-2' onClick={this.toggleFocusOnMusher} data-musherid={musher.id}>{focusOnMushers.indexOf(musher.id) > -1 ? <i class='fas fa-times text-warning' /> : <i class='far fa-star' />}</span>\n                                                    <span class='text-right' style='width: 50px; display: inline-block;'>{musher.bib}</span> {musher.flag} {musher.firstname} {musher.lastname}<br />\n                                                    {/* <small class='text-muted'>{musher.sportsClub}</small><br /> */}\n                                                </nobr>\n                                            </div>\n                                        </>\n                                    })}\n                                </div>\n                            </div>\n                        </>}\n\n                        {/* <div class={`row`}>\n                            <div class='col-12 form-inline align-top d-flex justify-content-center'>\n                                <div class='form-group'>\n                                    <input\n                                        class='form-control form-control-lg text-dark border-primary'\n                                        style='background-color: inherit;'\n                                        type='text'\n                                        onInput={linkstate(this, 'bib')}\n                                        onKeyDown={this.checkForEnter}\n                                    />\n                                    <button\n                                        type='button'\n                                        class='ml-2 btn btn-lg btn-primary'\n                                        onClick={this.toggleBib}\n                                    >Search for Bib</button>\n                                </div>\n                            </div>\n                        </div> */}\n\n                    {(showDrawerReplay || replayHistory) && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleReplayHistory} classNames={drawerClassNames} width={drawerWidth}>\n\n                            {maxPoints > 0 ? <>\n                                <div class='d-flex justify-content-center mx-3'>\n                                    {playingHistory ? <>\n                                        <div class='pl-1'>\n                                            <button class='btn btn-warning' onClick={this.pauseHistory}><i class='fas fa-pause' /></button>\n                                        </div>\n                                    </> : <>\n                                        <div class='pl-1'>\n                                            <button class='btn btn-success' onClick={this.playHistory}><i class='fas fa-play' /></button>\n                                        </div>\n                                    </>}\n                                    <div class='pl-2 pt-2 flex-grow-1'>\n                                        <input type='range' class='custom-range w-100' min={0} max={maxPoints} value={historyPointIndex} onInput={this.handleHistoryPointIndex} />\n                                    </div>\n                                </div>\n                                <div class='d-flex justify-content-center'>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-pill-left rounded-none ${replaySpeed === 1 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={1}\n                                        >\n                                            60x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-none ${replaySpeed === 0.5 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.5}\n                                        >\n                                            120x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-none ${replaySpeed === 0.25 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.25}\n                                        >\n                                            240x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-pill-right rounded-none ${replaySpeed === 0.12 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.12}\n                                        >\n                                            480x\n                                        </button>\n                                    </div>\n                                </div>\n                                <div class='d-flex justify-content-center'>\n                                    <div class='flex-grow-1 pt-0 font-weight-bolder text-white text-center' style='font-size: 1.1em;'>\n                                        {raceTrackerPointTimestamp && <>\n                                            {util.formatDate(util.parseInputDate(raceTrackerPointTimestamp), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </>}\n                                        {isAdmin && <>\n                                            / {historyPointIndex}\n                                        </>}\n                                    </div>\n                                    {isAdmin && <>\n                                        <button class='btn btn-danger mt-2 mr-4 rounded-pill-both rounded-none' onClick={this.toggleLines}>\n                                            <i class='fas fa-wave-square' /> Show lines\n                                        </button>\n                                    </>}\n                                </div>\n                            </> : <>\n                                <div class='spinner-border text-primary' role='status'>\n                                    <span class='sr-only'>Loading...</span>\n                                </div>\n                            </>}\n                        </Drawer>\n                    </>}\n\n                    {showResults && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleResults} classNames={drawerClassNames} width={drawerWidth}>\n                            <Results\n                                stores={this.props.stores}\n                                raceClass={selectedClass}\n                                race={race}\n                                onMarkerClick={this.onMarkerClick}\n                            />\n                        </Drawer>\n                    </>}\n\n                    {showDrawerMusher && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawerMusher} classNames={drawerClassNames} width={drawerWidth}>\n                            <MusherInfo\n                                stores={this.props.stores}\n                                wpData={wpData}\n                                onMarkerClick={this.onMarkerClick}\n                                onTeamClick={this.onTeamClick}\n                                onUserClick={this.onUserClick}\n                                onDogClick={this.onDogClick}\n                            />\n                        </Drawer>\n                    </>}\n\n                    {showDrawerCheckpoint && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawerCheckpoint}>\n                            <RaceLiveCheckpointResult stores={this.props.stores} id={selectedCheckpointId} onClickNav={this.selectCheckpoint} />\n                        </Drawer>\n                    </>}\n\n                </div>\n            </>}\n        </>);\n    }\n}\n\nexport default TrackingMap;\n"],"sourceRoot":""}