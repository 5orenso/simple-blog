{"version":3,"sources":["webpack:///../src/index.js","webpack:///../node_modules/dlv/index.js","webpack:///./routes/profile/index.js","webpack:///./routes/profile/style.css"],"names":["component","key","eventPath","let","path","split","cache","__lsc","e","t","target","this","state","obj","v","def","p","length","undefined","delve","nodeName","type","match","checked","value","i","setState","Profile","observer","props","stores","appState","latlng","time","Date","now","count","waypoint","icons","list","render","user","waypointStore","insertStatus","class","style","profile","JSON","stringify","for","id","placeholder","oninput","linkstate","title","map","icon","name","onChange","src","lat","lng","rows","onClick","insert","role","Component","module","exports"],"mappings":"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","file":"route-profile.chunk.8d787.js","sourcesContent":["import delve from 'dlv';\n\n/** Create an Event handler function that sets a given state property.\n *\t@param {Component} component\tThe component whose state should be updated\n *\t@param {string} key\t\t\t\tA dot-notated key path to update in the component's state\n *\t@param {string} eventPath\t\tA dot-notated key path to the value that should be retrieved from the Event or component\n *\t@returns {function} linkedStateHandler\n */\nexport default function linkState(component, key, eventPath) {\n\tlet path = key.split('.'),\n\t\tcache = component.__lsc || (component.__lsc = {});\n\n\treturn cache[key+eventPath] || (cache[key+eventPath] = function(e) {\n\t\tlet t = e && e.target || this,\n\t\t\tstate = {},\n\t\t\tobj = state,\n\t\t\tv = typeof eventPath==='string' ? delve(e, eventPath) : t.nodeName ? (t.type.match(/^che|rad/) ? t.checked : t.value) : e,\n\t\t\ti = 0;\n\t\tfor ( ; i<path.length-1; i++) {\n\t\t\tobj = obj[path[i]] || (obj[path[i]] = !i && component.state[path[i]] || {});\n\t\t}\n\t\tobj[path[i]] = v;\n\t\tcomponent.setState(state);\n\t});\n}\n","export default function dlv(obj, key, def, p) {\n\tp = 0;\n\tkey = key.split ? key.split('.') : key;\n\twhile (obj && p<key.length) obj = obj[key[p++]];\n\treturn obj===undefined ? def : obj;\n}","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\n\nimport linkstate from 'linkstate';\n\nimport icons from '../../lib/icons';\n\nimport style from './style';\n\n@observer\nclass Profile extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconst { appState } = this.props.stores;\n\t\tconst { latlng = {} } = appState;\n\n\t\tthis.state = {\n\t\t\ttime: Date.now(),\n\t\t\tcount: 10,\n\t\t\twaypoint: {\n\t\t\t\t...latlng,\n\t\t\t},\n\t\t\ticons: icons.list(),\n\t\t};\n\t}\n\n\t// Note: `user` comes from the URL, courtesy of our router\n\trender({ user }) {\n\t\tconst { appState, waypointStore } = this.props.stores;\n\t\tconst { insertStatus } = waypointStore;\n\t\tconst { latlng } = appState;\n\t\tconst { waypoint, icons } = this.state;\n\n\t\treturn (\n\t\t\t<div class={style.profile}>\n\t\t\t\t<h1>Profile: {user}</h1>\n\t\t\t\t<xmp>{JSON.stringify(latlng)}</xmp>\n\n\t\t\t\t<div class='form-group'>\n\t\t\t\t\t<label for='titleInput'>Title</label>\n\t\t\t\t\t<input type='text' class='form-control' \n\t\t\t\t\t\tid='titleInput'\n\t\t\t\t\t\tplaceholder='Enter waypoint title...'\n\t\t\t\t\t\toninput={linkstate(this, 'waypoint.title')}\n\t\t\t\t\t\tvalue={waypoint.title}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div style='max-height: 200px; overflow-y: auto;'>\n\t\t\t\t\t{icons && icons.map(icon => <div class='custom-control custom-radio'>\n\t\t\t\t\t\t<input type='radio' id={`markerIcon${icon}`} name='markerIcon'\n\t\t\t\t\t\t\tclass='custom-control-input'\n\t\t\t\t\t\t\tvalue={icon}\n\t\t\t\t\t\t\tchecked={waypoint.icon === icon}\n\t\t\t\t\t\t\tonChange={linkstate(this, 'waypoint.icon', 'target.value')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label class='custom-control-label' for={`markerIcon${icon}`}>\n\t\t\t\t\t\t\t<img src={`./assets/svg/${icon}.svg`} style='max-height: 20px;' /> {icon}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>)}\n\t\t\t\t</div>\n\t\t\t\t<div class='form-group'>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col'>\n\t\t\t\t\t\t\t<label for='latInput'>Lat</label>\n\t\t\t\t\t\t\t<input type='text' class='form-control'\n\t\t\t\t\t\t\t\tid='latInput'\n\t\t\t\t\t\t\t\tplaceholder='Enter waypoint latitude...'\n\t\t\t\t\t\t\t\toninput={linkstate(this, 'waypoint.lat')}\n\t\t\t\t\t\t\t\tvalue={waypoint.lat}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col'>\n\t\t\t\t\t\t\t<label for='lngInput'>Lng</label>\n\t\t\t\t\t\t\t<input type='text' class='form-control'\n\t\t\t\t\t\t\t\tid='lngInput'\n\t\t\t\t\t\t\t\tplaceholder='Enter waypoint longitude...'\n\t\t\t\t\t\t\t\toninput={linkstate(this, 'waypoint.lng')}\n\t\t\t\t\t\t\t\tvalue={waypoint.lng}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class='form-group'>\n\t\t\t\t\t<label for='descriptionInput'>Description</label>\n\t\t\t\t\t<textarea class='form-control' id='descriptionInput' rows='3' />\n\t\t\t\t</div>\n\t\t\t\t<button type='button' class='btn btn-primary'\n\t\t\t\t\tonClick={() => waypointStore.insert(waypoint)}\n\t\t\t\t>Save waypoint</button>\n\n\t\t\t\t{insertStatus && <div class='alert alert-success' role='alert'>\n\t\t\t\t\tWaypoint has been saved...\n\t\t\t\t</div>}\n\n\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<xmp>{JSON.stringify(waypoint)}</xmp>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Profile;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile__t2Dqz\"};"],"sourceRoot":""}