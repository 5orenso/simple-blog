{"version":3,"sources":["webpack:///./components/lineGraph/style.css","webpack:///./components/lineGraph/index.js"],"names":["module","exports","getTicks","count","min","max","reverse","prefix","postfix","loop","Array","from","keys","range","Math","ceil","floor","map","d","parseInt","transformXTick","tick","fn","util","isFunction","match","msDiff","replace","now","epoch","isoDate","transformYTick","normalizeRange","val","newMin","newMax","round5","x","roundDown","sign","abs","findMinY","values","data","arr","isArray","isNumber","y","findMaxY","controlPoint","current","previous","next","pointA","pointB","lengthX","lengthY","o","length","sqrt","pow","angle","atan2","PI","cos","sin","bezierCommand","point","i","a","cpsX","cpsY","lineCommand","svgPath","points","command","opts","dPostfix","maxX","firstPoint","height","lastPoint","lineFromXmax","width","lineFromXzero","reduce","acc","makePaths","idx","yMin","yMax","xMin","xMax","yRangeMin","yRangeMax","offsetY","maxMinFixed","smooth","avgWindow","dataMap","minY","maxY","minX","realHeight","fnX","dataVal","round","isDefined","xVal","fnY","yVal","dataArray","p","filter","e","finalDataArray","windowSize","getter","setter","value","get","result","leftOffeset","to","sum","j","smoothValues","l","ySmooth","dOriginal","makePath","undefined","avgWindowLeft","avgWindowRight","smoothLeft","smoothRight","initialState","mouseData","LineChart","observer","props","mouseMove","stores","getCoordsWithPadding","layerX","layerY","appState","setMousePosition","state","svgRef","this","PADDING_TOP","paddingTop","PADDING_BOTTOM","paddingBottom","showXTicks","svgHeight","clientHeight","paddingLeft","showYTicksLeft","clientWidth","getMouseCoordX","xPos","getCoordX","getTextBoxX","mousePos","align","subtractPadding","pos","getMouseData","key","opt","autoLimit","padding","isObject","dataMapCurrent","Object","rest","resto","componentDidMount","showValueLeftLine","showValueRightLine","addEventListener","componentWillUnmount","removeEventListener","render","tickCount","showYTicksRight","xTicks","xTicksVal","yTicksLeft","yTicksLeftVal","yTicksLeftPrefix","yTicksLeftPostfix","yTicksRight","yTicksRightVal","yTicksRightPrefix","yTicksRightPostfix","yMaxLeft","yMaxRight","yMinRight","rangeMinLeft","rangeMaxLeft","rangeMinRight","rangeMaxRight","dataLeft","dataRight","legendLeft","legendRight","unitLeft","unitRight","hoverValLeft","hoverValRight","marker","markers","darkmode","PADDING_LEFT","common","MIN_Y_LEFT","yMinLeft","MAX_Y_LEFT","MIN_Y_RIGHT","MAX_Y_RIGHT","MIN_X","concat","MAX_X","findMaxX","pathLeft","pathRight","TOTAL_GRAPHS_LEFT","TOTAL_GRAPHS_RIGHT","TOTAL_GRAPHS","X_TICKS","Y_TICKS_LEFT","Y_TICKS_RIGHT","markerX","class","style","lineChart","xmlns","svg","viewBox","preserveAspectRatio","ref","c","path","fill-rule","x1","x2","y1","y2","mouseLine","legend","font-size","pathText","m","mX","rx","ry","mouseHoverBox","mouseHoverDarkmode","mouseHover","hoverVal","dy","text-anchor","left","v","data-value","top","bottom","Component"],"mappings":"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","file":"route-demand~route-home~route-parkmanagement~route-prices~route-production~route-strategy~route-wear~d92bda0e.chunk.c5b06.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"lineChart\":\"lineChart__1V7gu\",\"svg\":\"svg__2VZNe\",\"pathText\":\"pathText__2RfbE\",\"pathOriginal\":\"pathOriginal__9eH9i\",\"pathLeft0\":\"pathLeft0__3tOjN\",\"pathLeft1\":\"pathLeft1__3XeI-\",\"pathLeft2\":\"pathLeft2__Jskj_\",\"pathLeft3\":\"pathLeft3__vtNwg\",\"pathLeft4\":\"pathLeft4__ZfOXV\",\"pathLeft5\":\"pathLeft5__1V5kT\",\"pathLeft6\":\"pathLeft6__3g2rw\",\"pathLeft7\":\"pathLeft7__2aVhq\",\"pathLeft8\":\"pathLeft8__3LkIB\",\"pathLeft9\":\"pathLeft9__1eWVE\",\"pathRight0\":\"pathRight0__3sPo3\",\"pathRight1\":\"pathRight1__16EJJ\",\"pathRight2\":\"pathRight2__1giMc\",\"pathRight3\":\"pathRight3__yhWxI\",\"pathRight4\":\"pathRight4__3M2kd\",\"pathRight5\":\"pathRight5__1IsUE\",\"x-axis\":\"x-axis__1601s\",\"y-axis-left\":\"y-axis-left__3tpCF\",\"y-axis-right\":\"y-axis-right__3gWmK\",\"marker\":\"marker__2peOe\",\"markers\":\"markers__2lso3\",\"mouseHover\":\"mouseHover__2B4N6\",\"mouseHoverDarkmode\":\"mouseHoverDarkmode__3VPOP\",\"mouseHoverBox\":\"mouseHoverBox__3fJuY\",\"mouseLine\":\"mouseLine__1cdau\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport style from './style.css';\n\nconst TEXT_BOX_PADDING_X = 10;\nconst TEXT_PADDING_X = 20;\n\nfunction getTicks(count, min, max, reverse = false, prefix = '', postfix = '') {\n    let loop = Array.from(Array(count).keys());\n    if (reverse) {\n        loop = loop.reverse();\n    }\n    const range = Math.ceil(max) - Math.floor(min);\n    if (prefix === '' && postfix === '') {\n        return loop.map(d => parseInt((range / (count - 1) * d), 10) + Math.floor(min));\n    }\n    return loop.map(d => `${prefix}${parseInt((range / (count - 1) * d), 10) + Math.floor(min)}${postfix}`);\n}\n\nfunction transformXTick(tick, fn) {\n    if (util.isFunction(fn)) {\n        return fn(tick);\n    }\n    if (typeof tick === 'string') {\n        if (tick.match(/\\d+h/)) {\n            const msDiff = tick.replace(/h/g, '') * 3600 * 1000;\n            const now = util.epoch();\n            const then = now - msDiff;\n            return util.isoDate(then);\n        }\n    }\n    return tick;\n}\n\nfunction transformYTick(tick, fn) {\n    if (util.isFunction(fn)) {\n        return fn(tick);\n    }\n    return tick;\n}\n\nfunction normalizeRange(val, min, max, newMin, newMax) {\n    return newMin + (val - min) * (newMax - newMin) / (max - min);\n}\n\nfunction round5(x, roundDown = false) {\n    let sign = 1;\n    if (x < 0) {\n        sign = -1;\n    }\n    if (roundDown && sign === 1) {\n        return Math.floor(Math.abs(x) / 5) * 5 * sign;\n    }\n    return Math.ceil(Math.abs(x) / 5) * 5 * sign;\n}\n\nfunction findMinX({ data, min }) {\n    const values = data.map((arr) => {\n        if (util.isArray(arr)) {\n            if (util.isNumber(min)) {\n                return Math.min(min, ...arr.map(d => d.x));\n            }\n            return Math.min(...arr.map(d => d.x));\n        }\n    });\n    return Math.min(...values);\n}\n\nfunction findMaxX({ data, max }) {\n    const values = data.map((arr) => {\n        if (util.isArray(arr)) {\n            if (util.isNumber(max)) {\n                return Math.max(max, ...arr.map(d => d.x));\n            }\n            return Math.max(...arr.map(d => d.x));\n        }\n    });\n    return Math.max(...values);\n}\n\nfunction findMinY({ data, min }) {\n    const values = data.map((arr) => {\n        if (util.isArray(arr)) {\n            if (util.isNumber(min)) {\n                return Math.min(min, ...arr.map(d => d.y));\n            }\n            return Math.min(...arr.map(d => d.y));\n        }\n    });\n    return Math.min(...values);\n}\n\nfunction findMaxY({ data, max }) {\n    const values = data.map((arr) => {\n        // console.log(arr);\n        if (util.isArray(arr)) {\n            if (util.isNumber(max)) {\n                return Math.max(max, ...arr.map(d => d.y));\n            }\n            return Math.max(...arr.map(d => d.y));\n        }\n    });\n    return Math.max(...values);\n}\n\nfunction smoothValues(arr, windowSize = 2, getter = (value) => value, setter) {\n    const get = getter\n    const result = []\n    for (let i = 0; i < arr.length; i += 1) {\n        const leftOffeset = i - windowSize\n        const from = leftOffeset >= 0 ? leftOffeset : 0\n        const to = i + windowSize + 1\n        let count = 0\n        let sum = 0\n        for (let j = from; j < to && j < arr.length; j += 1) {\n            sum += get(arr[j])\n            count += 1\n        }\n        result[i] = setter ? setter(arr[i], sum / count) : sum / count\n    }\n    return result\n}\n\n\n// Properties of a line \n// I:  - pointA (array) [x,y]: coordinates\n//     - pointB (array) [x,y]: coordinates\n// O:  - (object) { length: l, angle: a }: properties of the line\nfunction lineProperties(pointA, pointB) {\n    const lengthX = pointB[0] - pointA[0];\n    const lengthY = pointB[1] - pointA[1];\n    return {\n        length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n        angle: Math.atan2(lengthY, lengthX),\n    };\n}\n\n// Position of a control point \n// I:  - current (array) [x, y]: current point coordinates\n//     - previous (array) [x, y]: previous point coordinates\n//     - next (array) [x, y]: next point coordinates\n//     - reverse (boolean, optional): sets the direction\n// O:  - (array) [x,y]: a tuple of coordinates\nfunction controlPoint(current, previous, next, reverse) {\n    // When 'current' is the first or last point of the array\n    // 'previous' or 'next' don't exist.\n    // Replace with 'current'\n    const p = previous || current;\n    const n = next || current;\n    \n    // The smoothing ratio\n    const smoothing = 0.2;\n    \n    // Properties of the opposed-line\n    const o = lineProperties(p, n);\n    \n    // If is end-control-point, add PI to the angle to go backward\n    const angle = o.angle + (reverse ? Math.PI : 0);\n    const length = o.length * smoothing;\n    \n    // The control point position is relative to the current point\n    const x = current[0] + Math.cos(angle) * length;\n    const y = current[1] + Math.sin(angle) * length;\n    return [x, y]\n}\n\n// Create the bezier curve command \n// I:  - point (array) [x,y]: current point coordinates\n//     - i (integer): index of 'point' in the array 'a'\n//     - a (array): complete array of points coordinates\n// O:  - (string) 'C x2,y2 x1,y1 x,y': SVG cubic bezier C command\nfunction bezierCommand(point, i, a) {\n    // start control point\n    const [cpsX, cpsY] = controlPoint(a[i - 1], a[i - 2], point)  // end control point\n    const [cpeX, cpeY] = controlPoint(point, a[i - 1], a[i + 1], true);\n    return `C ${cpsX},${cpsY} ${cpeX},${cpeY} ${point[0]},${point[1]}`\n}\n\n// Svg path line command\n// I:  - point (array) [x, y]: coordinates\n// O:  - (string) 'L x,y': svg line command\nfunction lineCommand(point) {\n    if (point[1] === null) {\n        return `M ${point[0]} ${point[1]}`;\n    }\n    return `L ${point[0]} ${point[1]}`;\n}\n\n// Render the svg <path> element \n// I:  - points (array): points coordinates\n//     - command (function)\n//       I:  - point (array) [x,y]: current point coordinates\n//           - i (integer): index of 'point' in the array 'a'\n//           - a (array): complete array of points coordinates\n//       O:  - (string) a svg path command\n// O:  - (string): a Svg <path> element\nfunction svgPath(points, command, opts = {}) {\n    // build the d attributes by looping over the points\n    const maxX = Math.max(...points.map(d => d[0]));\n    const minX = Math.min(...points.map(d => d[0]));\n    const firstPoint = points[0] || [[0, opts.height]];\n    const lastPoint = points[points.length - 1] || [[maxX, opts.height]];\n\n    let dPrefix;\n    if (opts.lineFromXzero) {\n        dPrefix = `M ${0},${opts.height} L ${firstPoint[0] - 20},${opts.height - 1}`;\n    } else {\n        dPrefix = `M ${firstPoint[0]},${firstPoint[1]} L ${firstPoint[0]},${firstPoint[1]}`;\n    }\n    let dPostfix;\n    if (opts.lineFromXmax) {\n        dPostfix = `L ${lastPoint[0] + 10},${opts.height} L ${opts.width},${opts.height - 1}`;\n    } else {\n        dPostfix = `L ${lastPoint[0]},${lastPoint[1]} L ${lastPoint[0]},${lastPoint[1]}`;\n    }\n\n    const d = points.reduce((acc, point, i, a) => i === 0\n        // if first point\n        ? `L ${point[0]},${point[1]}`\n        // else\n        : `${acc} ${command(point, i, a)}`\n    , '');\n    \n    return `${dPrefix} ${d} ${dPostfix}`;\n}\n\nfunction makePaths(opts) {\n    return opts.data.map((d, idx) => makePath({\n        ...opts,\n        data: d,\n        yRangeMin: util.isArray(opts.yRangeMin) ? opts.yRangeMin[idx] : undefined,\n        yRangeMax: util.isArray(opts.yRangeMax) ? opts.yRangeMax[idx] : undefined,\n        avgWindow: util.isArray(opts.avgWindowLeft) ? opts.avgWindowLeft[idx] : (util.isArray(opts.avgWindowRight) ? opts.avgWindowRight[idx] : undefined),\n        smooth: util.isArray(opts.smoothLeft) ? opts.smoothLeft[idx] : (util.isArray(opts.smoothRight) ? opts.smoothRight[idx] : undefined),\n    }));\n}\n\nfunction makePath({ data, yMin, yMax, xMin, xMax, width, height, yRangeMin, yRangeMax, offsetY = 0, maxMinFixed = false, smooth = false, avgWindow = 0 }) {\n    const dataMap = {};\n    if (data && data.length) {\n        const maxX = xMax || Math.max(...data.map(d => d.x));\n        const minX = xMin || Math.min(...data.map(d => d.x));\n\n        let minY;\n        let maxY;\n        if (maxMinFixed) {\n            minY = util.isNumber(yMin) ? yMin : findMinY({ data });\n        } else {\n            minY = util.isNumber(yMin) ? findMinY({ data, min: yMin }) : findMinY({ data });\n            minY = round5(minY, true);\n        }\n        if (maxMinFixed) {\n            maxY = util.isNumber(yMax) ? yMax : findMaxY({ data });\n        } else {\n            maxY = util.isNumber(yMax) ? findMaxY({ data, max: yMax }) : findMaxY({ data });\n            maxY = round5(maxY);\n        }\n\n        const realHeight = height;\n        const fnX = (val, idx) => {\n            if (val === -1) {\n                return -1;\n            }\n\n            const dataVal = normalizeRange(val, minX, maxX, minX, maxX);\n            const x = Math.round(normalizeRange(dataVal, minX, maxX, 0, width));\n            // const x = Math.round(val / maxX * width);\n            if (util.isDefined(idx)) {\n                if (!dataMap[idx]) {\n                    dataMap[idx] = {};\n                }\n                dataMap[idx].x = x;\n                dataMap[idx].xVal = val;\n            }\n            return x;\n        }\n\n        const fnY = (val, idx) => {\n            if (val === -1) {\n                return height;\n            }\n            let dataVal = val;\n            if (util.isNumber(yRangeMin) && util.isNumber(yRangeMax)) {\n                dataVal = normalizeRange(dataVal, minY, maxY, yRangeMin, yRangeMax);\n                return realHeight - normalizeRange(dataVal, yRangeMin, yRangeMax, 0, height - offsetY);\n            }\n            if (dataVal === null) {\n                return null;\n            }\n            dataVal = normalizeRange(dataVal, minY, maxY, minY, maxY);\n            const y = Math.round(realHeight - normalizeRange(dataVal, minY, maxY, 0, height - offsetY));\n            if (util.isDefined(idx)) {\n                if (!dataMap[idx]) { dataMap[idx] = {}; }\n                dataMap[idx].y = y;\n                dataMap[idx].yVal = dataVal;\n            }\n            return y;\n        };\n\n        const dataArray = data.map((p, idx) => [fnX(p.x, idx + 1), fnY(p.y, idx + 1)]).filter(e => e[1] !== null);\n        const finalDataArray = avgWindow > 0 ? smoothValues(dataArray, avgWindow, (e) => e[1], (e, val) => [e[0], val]) : dataArray;\n        for (let i = 0, l = finalDataArray.length; i < l; i += 1) {\n            if (util.isDefined(dataMap[i])) {\n                dataMap[i + 1].ySmooth = finalDataArray[i][1];\n            }\n        }\n\n        const d = svgPath(finalDataArray, smooth ? bezierCommand : lineCommand, { height, width });\n        const dOriginal = svgPath(dataArray, lineCommand, { height });\n        return { d, maxX, maxY, minY, dOriginal, dataMap };\n    }\n    return {};\n}\n\nconst initialState = {\n    mouseData: {},\n};\n\n@observer\nclass LineChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.svgRef = null;\n    }\n\n    mouseMove = (e) => {\n        if (this.props.stores) {\n            const { x, y } = this.getCoordsWithPadding(e.layerX, e.layerY);\n            const { appState } = this.props.stores;\n            appState.setMousePosition([x, y]);\n        }\n    };\n\n    getCoordsWithPadding(xVal, yVal) {\n        if (!this.svgRef) {\n            return {};\n        }\n\n        const {\n            width = 600,\n            height = 200,\n            paddingLeft,\n            // paddingRight,\n            paddingTop,\n            paddingBottom,\n            showYTicksLeft,\n            // showYTicksRight,\n            showXTicks,\n        } = this.props;\n\n        const PADDING_LEFT = paddingLeft || (showYTicksLeft ? 35 : 0);\n        const PADDING_RIGHT = 0; //paddingRight || (showYTicksRight ? 35 : 0);\n        const PADDING_TOP = paddingTop;\n        const PADDING_BOTTOM = paddingBottom || (showXTicks ? 20 : 0);\n        // console.log({ PADDING_LEFT, PADDING_RIGHT, PADDING_TOP, PADDING_BOTTOM });\n\n        const svgWidth = this.svgRef.clientWidth;\n        const svgHeight = this.svgRef.clientHeight;\n\n        const x = parseInt(normalizeRange(xVal, PADDING_LEFT, svgWidth, PADDING_RIGHT, width), 10);\n        const y = parseInt(normalizeRange(yVal, PADDING_TOP, svgHeight, PADDING_BOTTOM, height), 10);\n\n        return { x, y };\n    }\n\n    getMouseCoordX(maxX, xPos) {\n        const { width = 600 } = this.props;\n        return parseInt(normalizeRange(xPos, 0, width, 0, maxX), 10) + 1;\n    }\n\n    getCoordX(minX, maxX, x) {\n        const { width = 600 } = this.props;\n        return normalizeRange(x, minX, maxX, 0, width);\n    }\n\n    getTextBoxX(mousePos, align, subtractPadding = 0) {\n        const RIGHT_TEXT_OFFSET = 150;\n        const LEFT_SIDE_OF_MOUSE_LINE = 180;\n        const { width = 600 } = this.props;\n\n        const pos = (mousePos / width * 100) > 75 ? mousePos - LEFT_SIDE_OF_MOUSE_LINE : mousePos;\n        if (align === 'right') {\n            return pos + TEXT_PADDING_X - subtractPadding + RIGHT_TEXT_OFFSET;\n        }\n        return pos + TEXT_PADDING_X - subtractPadding;\n    }\n\n    getMouseData(minX, maxX, dataMap, xPos, key, opt = { autoLimit: false, padding: 0 }) {\n        const { width = 600 } = this.props;\n        const x = parseInt(normalizeRange(xPos, 0, width, minX, maxX), 10) + 1;\n        if (!util.isObject(dataMap)) {\n            return null;\n        }\n        // Find closest value to current mouse position.\n        const dataMapArr = Object.values(dataMap);\n        const dataMapCurrent = dataMapArr.reduce(({ xVal, ...resto }, { xVal: a, ...rest }) =>\n            Math.abs(x - a) < Math.abs(x - xVal) ? { xVal: a, ...rest } : { xVal, ...resto }\n        );\n\n\n        if (util.isObject(dataMapCurrent)) {\n            if (!key) {\n                return dataMapCurrent;\n            }\n            // if (opt.autoLimit && key === 'y') {\n            //     const val = dataMapCurrent.yVal;\n            //     if (val > height / 2) {\n            //         return val - 70 - opt.padding;\n            //     }\n            //     return val + 20 - opt.padding;\n            // }\n            // if (opt.autoLimit && key === 'x') {\n            //     const val = dataMapCurrent.x;\n            //     if (val > width / 2) {\n            //         // console.log(`autoLimit=${autoLimit}, key=${key}, val=${val}, width=${width}`)\n            //         return val - 160 - opt.padding;\n            //     }\n            //     return val + 20 - opt.padding;\n            // }\n            const val = dataMapCurrent[key];\n            return val;\n        }\n    }\n\n    componentDidMount() {\n        const { showValueLeftLine, showValueRightLine } = this.props;\n        if(showValueLeftLine || showValueRightLine) {\n            this.svgRef.addEventListener('mousemove', this.mouseMove);\n        }\n        // onMouseMove={this.mouseMove}\n    }\n\n    componentWillUnmount() {\n        const { showValueLeftLine, showValueRightLine } = this.props;\n        if(showValueLeftLine || showValueRightLine) {\n            this.svgRef.removeEventListener('mousemove', this.mouseMove);\n        }\n    }\n\n    render() {\n        const {\n            width = 600,         // Width of svg.\n            height = 200,        // Height of svg.\n            offsetY = 0,         // Data plot offset y axis.\n            paddingLeft = 0,     // Make room for yTicksLeft.\n            paddingRight = 0,    // Make room for yTicksRight.\n            paddingTop = 0,      // Make room for legends.\n            paddingBottom = 0,   // Make room for xTicks.\n            tickCount = 6,       // Number of ticks to show\n\n            showXTicks,          // Show X ticks.\n            showYTicksLeft,      // Show Y ticks left.\n            showYTicksRight,     // Show Y ticks right.\n\n            xTicks,              // xTicks array to use instead of values. JSON.stringified and backslash escaped.\n            xTicksVal,           // Function used to show x ticks\n\n            yTicksLeft,          // yTicks array to use instead of values. JSON.stringified and backslash escaped.\n            yTicksLeftVal,       // Function used to show y ticks\n            yTicksLeftPrefix,\n            yTicksLeftPostfix,\n\n            yTicksRight,         // yTicks array to use instead of values. JSON.stringified and backslash escaped.\n            yTicksRightVal,      // Function used to show y ticks\n            yTicksRightPrefix,\n            yTicksRightPostfix,\n\n            xMin,\n            xMax,\n\n            yMaxLeft,            // Y max value to use for yTicks\n            yMinLeft,            // Y min value to use for yTicks\n\n            yMaxRight,           // Y max value to use for yTicks\n            yMinRight,           // Y min value to use for yTicks\n\n            rangeMinLeft = [],\n            rangeMaxLeft = [],\n\n            rangeMinRight = [],\n            rangeMaxRight = [],\n\n            dataLeft = [],\n            dataRight = [],\n\n            legendLeft = [],\n            legendRight = [],\n\n            unitLeft = [],\n            unitRight = [],\n\n            avgWindowLeft =[],\n            avgWindowRight =[],\n\n            smoothLeft =[],\n            smoothRight =[],\n\n            hoverValLeft = [],   // Function used to show value for hover.\n            hoverValRight = [],  // Function used to show value for hover.\n\n            showValueLeftLine = true,\n            showValueRightLine = true,\n\n            marker,\n            markers = [],\n        } = this.props;\n        const { appState = {} } = this.props.stores || {};\n        const { mousePos = [], darkmode } = appState;\n\n        const PADDING_LEFT = paddingLeft || (showYTicksLeft ? 35 : 0);\n        const PADDING_RIGHT = paddingRight || (showYTicksRight ? 35 : 0);\n        const PADDING_TOP = paddingTop;\n        const PADDING_BOTTOM = paddingBottom || (showXTicks ? 20 : 0);\n        // console.log({ PADDING_LEFT, PADDING_RIGHT, PADDING_TOP, PADDING_BOTTOM });\n\n        const common = {\n            width,\n            height,\n            offsetY,\n        };\n\n        // console.table(xTicks);\n        // console.table(yTicks);\n        const MIN_Y_LEFT = round5(findMinY({ data: dataLeft, min: yMinLeft }), true);\n        const MAX_Y_LEFT = round5(findMaxY({ data: dataLeft, max: yMaxLeft }), false);\n\n        const MIN_Y_RIGHT = round5(findMinY({ data: dataRight, min: yMinRight }), true);\n        const MAX_Y_RIGHT = round5(findMaxY({ data: dataRight, max: yMaxRight }), false);\n\n        const MIN_X = findMinX({ data: dataLeft.concat(dataRight), min: xMin });\n        const MAX_X = findMaxX({ data: dataLeft.concat(dataRight), max: xMax });\n        // console.log({ MIN_Y_LEFT, MAX_Y_LEFT, MIN_Y_RIGHT, MAX_Y_RIGHT, MIN_X, MAX_X });\n\n        const pathLeft = makePaths({\n            ...common,\n            data: dataLeft,\n            xMin: MIN_X,\n            xMax: MAX_X,\n            yMin: MIN_Y_LEFT,\n            yMax: MAX_Y_LEFT,\n            yRangeMin: rangeMinLeft,\n            yRangeMax: rangeMaxLeft,\n            maxMinFixed: true,\n            smoothLeft,\n            avgWindowLeft,\n            offsetY: PADDING_TOP,\n        });\n\n        const pathRight = makePaths({\n            ...common,\n            data: dataRight,\n            xMin: MIN_X,\n            xMax: MAX_X,\n            yMin: MIN_Y_RIGHT,\n            yMax: MAX_Y_RIGHT,\n            yRangeMin: rangeMinRight,\n            yRangeMax: rangeMaxRight,\n            maxMinFixed: true,\n            smoothRight,\n            avgWindowRight,\n            offsetY: PADDING_TOP,\n        });\n        // console.log(pathLeft);\n\n        const TOTAL_GRAPHS_LEFT = pathLeft.length;\n        const TOTAL_GRAPHS_RIGHT = pathRight.length;\n        const TOTAL_GRAPHS = TOTAL_GRAPHS_LEFT + TOTAL_GRAPHS_RIGHT;\n        const X_TICKS = xTicks || getTicks(tickCount, MIN_X, MAX_X);\n        const Y_TICKS_LEFT = yTicksLeft || getTicks(tickCount, MIN_Y_LEFT, MAX_Y_LEFT, true, yTicksLeftPrefix, yTicksLeftPostfix);\n        const Y_TICKS_RIGHT = yTicksRight || getTicks(tickCount, MIN_Y_RIGHT, MAX_Y_RIGHT, true, yTicksRightPrefix, yTicksRightPostfix);\n        const markerX = this.getCoordX(MIN_X, MAX_X, marker);\n\n        return (\n            <div class={style.lineChart} style={`height: ${height}px; overflow: hidden;`}>\n                <svg xmlns='http://www.w3.org/2000/svg' class={style.svg} viewBox={`0 0 ${width} ${height}`}\n                    preserveAspectRatio='none'\n                    style={`padding-left: ${PADDING_LEFT}px; padding-bottom: ${PADDING_BOTTOM}px; width: calc(100%); max-height: 100%;`}\n                    ref={c => this.svgRef = c}\n                >\n                    {pathLeft && pathLeft.reverse().map((path, idx) => {\n                        const mouseData = this.getMouseData(MIN_X, MAX_X, path.dataMap, mousePos[0]);\n                        return (\n                            <>\n                                <path d={path.d} class={style[TOTAL_GRAPHS_LEFT > 9 ? 'pathOriginal' : `pathLeft${TOTAL_GRAPHS_LEFT - idx - 1}`]} fill-rule='evenodd' />\n                                {showValueLeftLine && mousePos && mousePos.length > 0 && path.dataMap \n                                    && mouseData && mouseData.yVal\n                                    && <line\n                                        x1={this.getCoordX(MIN_X, MAX_X, MIN_X)}\n                                        x2={mouseData.x}\n                                        y1={mouseData.ySmooth}\n                                        y2={mouseData.ySmooth}\n                                        class={`${style.mouseLine} ${style[`pathLeft${TOTAL_GRAPHS_LEFT - idx - 1}`]}`} />}\n                            </>\n                        );\n                    })}\n                    {pathRight && pathRight.reverse().map((path, idx) => {\n                        const mouseData = this.getMouseData(MIN_X, MAX_X, path.dataMap, mousePos[0]);\n                        return (\n                            <>\n                                <path d={path.d} class={style[TOTAL_GRAPHS_LEFT > 9 ? 'pathOriginal' : `pathRight${TOTAL_GRAPHS_RIGHT - idx - 1}`]} />\n                                {showValueRightLine && mousePos && mousePos.length > 0 && path.dataMap \n                                    && mouseData && mouseData.yVal\n                                    && <line\n                                        x1={this.getCoordX(MIN_X, MAX_X, MAX_X)}\n                                        x2={mouseData.x}\n                                        y1={mouseData.ySmooth}\n                                        y2={mouseData.ySmooth}\n                                        class={`${style.mouseLine} ${style[`pathRight${TOTAL_GRAPHS_RIGHT - idx - 1}`]}`} />}\n                            </>\n                        );\n                    })}\n\n                    {/* {dCold && dCold.map(o => <line x1={o[0].x} y1={o[0].y} x2={o[1].x} y2={o[1].y} class={style.pathCold} />)};\n                    {dWarm && dWarm.map(o => <line x1={o[0].x} y1={o[0].y} x2={o[1].x} y2={o[1].y} class={style.pathWarm} />)}; */}\n\n                    {legendLeft && legendLeft.map((legend, idx) => (\n                        <>\n                            <line x1='10' y1={5 + 10 * idx} x2='30' y2={5 + 10 * idx} class={style[`pathLeft${idx}`]} />\n                            <text x='35' y={10 + 10 * idx} font-size='10px' class={style.pathText}>{legend}</text>\n                        </>\n                    ))}\n                    {legendRight && legendRight.map((legend, idx) => (\n                        <>\n                            <line x1={width - 150} y1={5 + 10 * idx} x2={width - 130} y2={5 + 10 * idx} class={style[`pathRight${idx}`]} />\n                            <text x={width - 125} y={10 + 10 * idx} font-size='10px' class={style.pathText}>{legend}</text>\n                        </>\n                    ))} \n\n                    {mousePos && mousePos.length > 0 && <line x1={mousePos[0]} y1={height} x2={mousePos[0]} y2='0' class={style.mouseLine} />}\n                    {markerX && <line x1={markerX} y1={height} x2={markerX} y2='0' class={style.marker} />}\n\n                    {markers && markers.map(m => {\n                        const mX = this.getCoordX(MIN_X, MAX_X, m);\n                        return (\n                            <line x1={mX} y1={height} x2={mX} y2='0' class={style.markers} />\n                        );\n                    })}\n\n                    {(showValueLeftLine || showValueRightLine) && pathLeft && mousePos && mousePos.length > 0 && <rect \n                        x={this.getTextBoxX(mousePos[0], '', TEXT_BOX_PADDING_X)}\n                        y={height / 2}\n                        width='165' height={TOTAL_GRAPHS * 15 + 25} rx='5' ry='5' class={style.mouseHoverBox}\n                    />}\n                    {(showValueLeftLine || showValueRightLine) && mousePos && mousePos.length > 0 \n                        && <text \n                            x={this.getTextBoxX(mousePos[0])}\n                            y={height / 2}\n                            font-size='11px'\n                            class={darkmode ? style.mouseHoverDarkmode : style.mouseHover}\n                            style='border: #ff0000 solid 2px;'\n                        >\n                            {showValueLeftLine && pathLeft && pathLeft.reverse().map((path, idx) => {\n                                const hoverVal = util.isArray(hoverValLeft) && util.isFunction(hoverValLeft[idx]) ? hoverValLeft[idx] : (val) => val;\n                                const mouseData = this.getMouseData(MIN_X, MAX_X, path.dataMap, mousePos[0]);\n                                return (\n                                    <>\n                                        {mouseData && idx === 0 && <tspan\n                                            x={this.getTextBoxX(mousePos[0])}\n                                            dy='1.2em'\n                                        >\n                                            {transformXTick(mouseData.xVal, xTicksVal)}\n                                        </tspan>}\n                                        {path.d && path.dataMap && util.isNumber(mouseData.yVal) && \n                                        <tspan\n                                            // x={this.getMouseData(MIN_X, MAX_X, path.dataMap, mousePos[0], 'x', { autoLimit: true, padding: 0, maxX: MAX_X })}\n                                            // x={this.getCoordX(MIN_X, MAX_X, mouseData.xVal)}\n                                            x={this.getTextBoxX(mousePos[0])}\n                                            dy='1.2em'\n                                            text-anchor='start'\n                                        >\n                                            <tspan class={style[`pathLeft${idx}`]}>--</tspan> {legendLeft[idx]}: {hoverVal(mouseData.yVal)} {unitLeft[idx]}\n                                        </tspan>}\n                                    </>\n                                );\n                            })}\n                            {showValueRightLine && pathRight && pathRight.reverse().map((path, idx) => {\n                                const hoverVal = util.isArray(hoverValRight) && util.isFunction(hoverValRight[idx]) ? hoverValRight[idx] : (val) => val;\n                                const mouseData = this.getMouseData(MIN_X, MAX_X, path.dataMap, mousePos[0]);\n                                return (\n                                    <>\n                                        {path.d && path.dataMap && util.isNumber(mouseData.yVal) && \n                                        <tspan\n                                            x={this.getTextBoxX(mousePos[0], 'right')}\n                                            dy='1.2em'\n                                            text-anchor='end'\n                                        >\n                                             {legendRight[idx]}: {hoverVal(mouseData.yVal)} {unitRight[idx]} <tspan class={style[`pathRight${idx}`]}>--</tspan>\n                                        </tspan>}\n                                    </>\n                                );\n                            })}\n                        </text>}\n                </svg>\n                {showXTicks && (\n                    <div class={style['x-axis']}\n                        style={{\n                            left: `${PADDING_LEFT}px`,\n                            width: `calc(100% - ${PADDING_LEFT}px)`,\n                        }}\n                    >\n                        {X_TICKS.map(v => <div data-value={transformXTick(v, xTicksVal)} />)}\n                    </div>\n                )}\n                {showYTicksLeft && (\n                    <div\n                        class={style['y-axis-left']}\n                        style={{\n                            top: `${PADDING_TOP}px`,\n                            bottom: `${PADDING_BOTTOM}px`,\n                        }}\n                    >\n                        {Y_TICKS_LEFT.map(v => <div data-value={transformYTick(v, yTicksLeftVal)} />)}\n                    </div>\n                )}\n                {showYTicksRight && (\n                    <div\n                        class={style['y-axis-right']}\n                        style={{\n                            top: `${PADDING_TOP}px`,\n                            bottom: `${PADDING_BOTTOM}px`,\n                        }}\n                    >\n                        {Y_TICKS_RIGHT.map(v => <div data-value={transformYTick(v, yTicksRightVal)} />)}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default LineChart;\n"],"sourceRoot":""}