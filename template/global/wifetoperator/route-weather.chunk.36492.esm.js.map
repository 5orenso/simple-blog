{"version":3,"sources":["webpack:///./routes/weather/index.js"],"names":["initialState","Weather","observer","Component","constructor","props","super","setWindpark","e","windmillStore","this","stores","setCurrentWindparkName","target","dataset","windpark","loadAll","state","weatherAiStore","weatherYrStore","currentWindparkName","xMin","wutil","getDateDiffTime","xMax","now","getEpoch","markerDays","timeRangeDays","setState","loadYrData","loadOpenData","forcastYrData","getWindSpeeds","generateData","currentWindpark","updateQueryFilter","name","altitude","position","lat","lon","load","weatherOpenStore","componentDidMount","render","appState","darkmode","windparks","windspeeds","windspeedsOpen","forcastsFiltered","weatherAiData","class","style","map","wp","onClick","data-windpark","width","height","showXTicks","xTicksVal","val","util","isoDate","paddingTop","dataLeft","legendLeft","yMaxLeft","yMinLeft","showYTicksLeft","yTicksLeft","unitLeft","avgWindowLeft","smoothLeft","marker","markers","center","zoom","waypoints","windmills"],"mappings":"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","file":"route-weather.chunk.36492.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\nimport wutil from '../../lib/wifet-util';\nimport LineGraph from '../../components/lineGraph';\nimport Map from '../../components/map';\n\nconst initialState = {};\n\n@observer\nclass Weather extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { windmillStore, weatherAiStore, weatherYrStore } = this.props.stores;\n\t\tconst { currentWindparkName } = windmillStore;\n\n\t\tconst xMin = wutil.getDateDiffTime(-4);\n\t\tconst xMax = wutil.getDateDiffTime(10);\n\t\tconst now = wutil.getEpoch();\n\t\tconst markerDays = wutil.timeRangeDays(-4, 11);\n\t\tthis.setState({ now, xMin, xMax, markerDays });\n\n\t\tawait this.loadYrData();\n\t\tawait this.loadOpenData();\n\t\tconst forcastYrData = weatherYrStore.getWindSpeeds(currentWindparkName);\n\n\t\tweatherAiStore.generateData(forcastYrData);\n\t}\n\n\tasync loadYrData() {\n\t\tconst { weatherYrStore, windmillStore } = this.props.stores;\n\t\tconst { currentWindpark } = windmillStore;\n\n\t\tweatherYrStore.updateQueryFilter({\n\t\t\tname: currentWindpark.name,\n\t\t\taltitude: currentWindpark.position.altitude,\n\t\t\tlat: currentWindpark.position.lat,\n\t\t\tlon: currentWindpark.position.lon,\n\t\t});\n\t\treturn await weatherYrStore.load();\n\t}\n\n\tasync loadOpenData() {\n\t\tconst { weatherOpenStore, windmillStore } = this.props.stores;\n\t\tconst { currentWindpark } = windmillStore;\n\n\t\tweatherOpenStore.updateQueryFilter({\n\t\t\tname: currentWindpark.name,\n\t\t\tlat: currentWindpark.position.lat,\n\t\t\tlon: currentWindpark.position.lon,\n\t\t});\n\t\treturn await weatherOpenStore.load();\n\t}\n\n\tsetWindpark = (e) => {\n\t\tconst { windmillStore } = this.props.stores;\n\t\tconst windpark = e.target.dataset.windpark;\n\t\twindmillStore.setCurrentWindparkName(windpark);\n\t\tthis.loadAll();\n\t}\n\n\tcomponentDidMount() {\n\t\t// console.log('componentDidMount');\n\t\tthis.loadAll();\n\t}\n\n\trender() {\n\t\tconst { now, xMin, xMax, markerDays } = this.state;\n\t\tconst { appState, weatherYrStore, weatherOpenStore, weatherAiStore, windmillStore } = this.props.stores;\n\t\tconst { darkmode } = appState;\n\t\tconst { windparks, currentWindparkName, currentWindpark } = windmillStore;\n\t\tconst windspeeds = weatherYrStore.getWindSpeeds(currentWindparkName);\n\t\tconst windspeedsOpen = weatherOpenStore.getWindSpeeds(currentWindparkName);\n\t\tconst { forcastsFiltered: weatherAiData } = weatherAiStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid mt-5 pt-2' style='margin-bottom: 200px;'>\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-4'>\n\t\t\t\t\t\t<h1><i class='fas fa-cloud-sun-rain' /> Weather</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8 pt-2'>\n\t\t\t\t\t\t<ul class='nav nav-pills float-right'>\n\t\t\t\t\t\t{windparks && windparks.map(wp => (\n\t\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-link nav-link ${wp.name === currentWindparkName ? 'active' : ''}`}\n\t\t\t\t\t\t\t\t\tonClick={this.setWindpark}\n\t\t\t\t\t\t\t\t\tdata-windpark={wp.name}\n\t\t\t\t\t\t\t\t>{wp.name}</button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t<LineGraph\n\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\twidth={1200}\n\t\t\t\t\t\t\theight={500}\n\t\t\t\t\t\t\tshowXTicks={1}\n\t\t\t\t\t\t\txTicksVal={val => util.isoDate(val)}\n\t\t\t\t\t\t\txMin={xMin}\n\t\t\t\t\t\t\txMax={xMax}\n\t\t\t\t\t\t\tpaddingTop={30}\n\n\t\t\t\t\t\t\t// dataLeft={[windspeeds, aiData, forcastStormData, forcastYrData]}\n\t\t\t\t\t\t\tdataLeft={[windspeeds, windspeedsOpen, weatherAiData]}\n\t\t\t\t\t\t\tlegendLeft={['Wind forcast Yr', 'Wind OpenWeather', 'Wind AI prediction']}\n\t\t\t\t\t\t\tyMaxLeft={30}\n\t\t\t\t\t\t\tyMinLeft={0}\n\t\t\t\t\t\t\tshowYTicksLeft={1}\n\t\t\t\t\t\t\tyTicksLeft={['30 m/s', '25 m/s', '20 m/s', '15 m/s', '10 m/s', '5 m/s', '0 m/s']}\n\t\t\t\t\t\t\tunitLeft={['m/s', 'm/s']}\n\t\t\t\t\t\t\tavgWindowLeft={[0, 0, 4]}\n\t\t\t\t\t\t\tsmoothLeft={[1, 1, 1]}\n\n\t\t\t\t\t\t\tmarker={now}\n\t\t\t\t\t\t\tmarkers={markerDays}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class='row pt-4'>\n\t\t\t\t\t<div class='col-12' style='height: 45vh;'>\n\t\t\t\t\t\t<Map stores={this.props.stores}\n\t\t\t\t\t\t\tdarkmode={darkmode}\n\t\t\t\t\t\t\tcenter={[currentWindpark.position.lat, currentWindpark.position.lon]}\n\t\t\t\t\t\t\tzoom={currentWindpark.zoom - 2}\n\t\t\t\t\t\t\twaypoints={currentWindpark.windmills}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{/* <xmp>{forcasts.length}</xmp>\n\t\t\t\t<xmp>{JSON.stringify(windspeeds, null, 4)}</xmp>\n\t\t\t\t<xmp>{JSON.stringify(forcasts, null, 4)}</xmp> */}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Weather;\n"],"sourceRoot":""}