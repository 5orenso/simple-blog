{"version":3,"sources":["webpack:///./routes/strategy/index.js"],"names":["initialState","Strategy","observer","Component","constructor","props","super","setWindpark","e","windmillStore","this","stores","setCurrentWindparkName","target","dataset","windpark","loadAll","setWindparkStrategy","name","strategy","setWindparkProfit","toggleWindparkProfit","setWindparkLifetimeControl","value","state","generateData","now","Math","floor","Date","getTime","markerDays","wutil","timeRangeDays","setState","componentDidMount","render","wears","wearData","windparks","currentWindparkName","currentWindpark","windparkCapacity","windparkMaxCapacity","windparkCapacityPercent","class","style","util","format","map","wp","onClick","data-windpark","type","data-name","data-strategy","for","lifetimeControl","id","min","max","step","onInput","profit","disabled","width","height","showXTicks","xTicksVal","val","isoDate","paddingTop","dataLeft","legendLeft","yMaxLeft","yMinLeft","showYTicksLeft","yTicksLeftPostfix","unitLeft","hoverValLeft","avgWindowLeft","smoothLeft","showValueLeftLine","showValueRightLine","marker","markers"],"mappings":"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","file":"route-strategy.chunk.3af4a.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\nimport wutil from '../../lib/wifet-util';\nimport LineGraph from '../../components/lineGraph';\n\nconst initialState = {};\n\n@observer\nclass Strategy extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { windmillStore } = this.props.stores;\n\t\twindmillStore.generateData();\n\n\t\tconst now = Math.floor(new Date().getTime() / 1000);\n\t\tconst markerDays = wutil.timeRangeDays(-4, 11);\n\t\tthis.setState({ now, markerDays });\n\t}\n\n\tsetWindpark = (e) => {\n\t\tconst { windmillStore } = this.props.stores;\n\t\tconst windpark = e.target.dataset.windpark;\n\t\twindmillStore.setCurrentWindparkName(windpark);\n\t\tthis.loadAll();\n\t}\n\n\tsetWindparkStrategy = (e) => {\n\t\tconst { windmillStore } = this.props.stores;\n\t\tconst name = e.target.dataset.name;\n\t\tconst strategy = e.target.dataset.strategy;\n\t\twindmillStore.setWindparkStrategy(name, strategy);\n\t\tthis.loadAll();\n\t}\n\n\tsetWindparkProfit = (e) => {\n\t\tconst { windmillStore } = this.props.stores;\n\t\tconst name = e.target.dataset.name;\n\t\twindmillStore.toggleWindparkProfit(name);\n\t\t// this.loadAll();\n\t}\n\n\tsetWindparkLifetimeControl = (e) => {\n\t\tconst { windmillStore } = this.props.stores;\n\t\tconst name = e.target.dataset.name;\n\t\tconst lifetimeControl = e.target.value;\n\t\twindmillStore.setWindparkLifetimeControl(name, lifetimeControl);\n\t\tthis.loadAll();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n\trender() {\n\t\tconst { now, markerDays } = this.state;\n\t\tconst { windmillStore } = this.props.stores;\n\t\tconst { wears: wearData } = windmillStore;\n\n\t\tconst { windparks, currentWindparkName, currentWindpark, windparkCapacity, windparkMaxCapacity } = windmillStore;\n\t\tconst windparkCapacityPercent = windparkCapacity / windparkMaxCapacity * 100\n\n\t\treturn (\n\t\t\t<div class='container-fluid mt-5 pt-2' style='margin-bottom: 200px;'>\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-4'>\n\t\t\t\t\t\t<h1><i class='fas fa-chess-knight' />Farm Economy Strategy Controller - {currentWindparkName}</h1>\n\t\t\t\t\t\t<span class='text-muted'>Capacity at</span> {util.format(windparkCapacityPercent, 1)}%\n\t\t\t\t\t\t<span class='text-muted'>, {windparkCapacity}/{windparkMaxCapacity} Mw</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8 pt-2'>\n\t\t\t\t\t\t<ul class='nav nav-pills float-right'>\n\t\t\t\t\t\t{windparks && windparks.map(wp => (\n\t\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-link nav-link ${wp.name === currentWindparkName ? 'active' : ''}`}\n\t\t\t\t\t\t\t\t\tonClick={this.setWindpark}\n\t\t\t\t\t\t\t\t\tdata-windpark={wp.name}\n\t\t\t\t\t\t\t\t>{wp.name}</button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 mt-4'>\n\n\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col-3'>\n\t\t\t\t\t\t\t\t<button type='button' class={`btn btn-${currentWindpark.strategy === 'default' ? '' : 'outline-'}primary`}\n\t\t\t\t\t\t\t\t\tdata-name={currentWindparkName}\n\t\t\t\t\t\t\t\t\tdata-strategy='default'\n\t\t\t\t\t\t\t\t\tonClick={this.setWindparkStrategy}\n\t\t\t\t\t\t\t\t>Default</button>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<p class='mt-4'>\n\t\t\t\t\t\t\t\t\tRun turbines in default mode\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-3'>\n\t\t\t\t\t\t\t\t<button type='button' class={`btn btn-${currentWindpark.strategy === 'lifetimeControl' ? '' : 'outline-'}success`}\n\t\t\t\t\t\t\t\t\tdata-name={currentWindparkName}\n\t\t\t\t\t\t\t\t\tdata-strategy='lifetimeControl'\n\t\t\t\t\t\t\t\t\tonClick={this.setWindparkStrategy}\n\t\t\t\t\t\t\t\t>Lifetime control</button>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<div class='form-group'>\n\t\t\t\t\t\t\t\t\t\t<label for='lifetimeControl'>Years ({currentWindpark.lifetimeControl})</label>\n\t\t\t\t\t\t\t\t\t\t<input type='range' class='form-control-range' id='lifetimeControl'\n\t\t\t\t\t\t\t\t\t\t\tmin='-10' max='10' step='1'\n\t\t\t\t\t\t\t\t\t\t\tdata-name={currentWindparkName}\n\t\t\t\t\t\t\t\t\t\t\tvalue={currentWindpark.lifetimeControl}\n\t\t\t\t\t\t\t\t\t\t\tonInput={this.setWindparkLifetimeControl}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<p class='mt-4'>\n\t\t\t\t\t\t\t\t\t\tControl the turbines so they are all equally and fully worn out at planned end of life:\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t<li>Individual turbine down rating if capable</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>Individual turbine up-rating / boost if capable</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>Wake steering / turbine yaw</li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-3'>\n\t\t\t\t\t\t\t\t<button type='button' class={`btn btn-${currentWindpark.profit ? '' : 'outline-'}warning`}\n\t\t\t\t\t\t\t\t\tdisabled={currentWindpark.strategy === 'max'}\n\t\t\t\t\t\t\t\t\tdata-name={currentWindparkName}\n\t\t\t\t\t\t\t\t\tonClick={this.setWindparkProfit}\n\t\t\t\t\t\t\t\t>Profitability optimization</button>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<p class='mt-4'>\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t<li>Maximize lifetime profitability according to economic formula of choice.</li>\n\t\t\t\t\t\t\t\t\t\t<li>Takes into account both dynamic electricity prices and  individual turbine wear.</li>\n\t\t\t\t\t\t\t\t\t\t<li>“overload” turbines when prices are high and save worn turbines when prices are low.</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-3'>\n\t\t\t\t\t\t\t\t<button type='button' class={`btn btn-${currentWindpark.strategy === 'max' ? '' : 'outline-'}danger`}\n\t\t\t\t\t\t\t\t\tdata-name={currentWindparkName}\n\t\t\t\t\t\t\t\t\tdata-strategy='max'\n\t\t\t\t\t\t\t\t\tonClick={this.setWindparkStrategy}\n\t\t\t\t\t\t\t\t>Max income </button>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<p class='mt-4'>\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t(Disables the ones to the left)\n\t\t\t\t\t\t\t\t\t\t<li>Will enable boost on all boost-enables turbines and maximize electricity production</li>\n\t\t\t\t\t\t\t\t\t\t<li>“I need as much income as fast as possible” mode</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 mt-4'>\n\t\t\t\t\t\t<LineGraph\n\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\twidth={1200}\n\t\t\t\t\t\t\theight={500}\n\t\t\t\t\t\t\tshowXTicks={1}\n\t\t\t\t\t\t\txTicksVal={val => util.isoDate(val)}\n\t\t\t\t\t\t\tpaddingTop={30}\n\n\t\t\t\t\t\t\tdataLeft={[...wearData]}\n\t\t\t\t\t\t\tlegendLeft={['Wear']}\n\t\t\t\t\t\t\tyMaxLeft={35}\n\t\t\t\t\t\t\tyMinLeft={5}\n\t\t\t\t\t\t\tshowYTicksLeft={1}\n\t\t\t\t\t\t\tyTicksLeftPostfix={'år'}\n\t\t\t\t\t\t\tunitLeft={['år',]}\n\t\t\t\t\t\t\thoverValLeft={[\n\t\t\t\t\t\t\t\tval => util.format(val, 0),\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t// yTicksLeftVal={val => `${util.format((val / 10), 0, ',', ' ', true)}%`}\n\t\t\t\t\t\t\tavgWindowLeft={[1, 1]}\n\t\t\t\t\t\t\tsmoothLeft={[1, 1]}\n\t\t\t\t\t\t\tshowValueLeftLine={false}\n\t\t\t\t\t\t\tshowValueRightLine={false}\n\n\t\t\t\t\t\t\tmarker={now}\n\t\t\t\t\t\t\tmarkers={markerDays}\n\t\t\t\t\t\t/>\n\n{/* <xmp>{JSON.stringify(wearData, null, 4)}</xmp> */}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Strategy;\n"],"sourceRoot":""}