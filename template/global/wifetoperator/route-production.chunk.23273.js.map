{"version":3,"sources":["webpack:///./routes/production/index.js"],"names":["initialState","Production","observer","props","setWindpark","e","stores","windmillStore","setCurrentWindparkName","target","dataset","windpark","loadAll","state","xMin","xMax","now","forcastYrData","weatherYrStore","this","productionStore","priceStore","currentWindparkName","wutil","getDateDiffTime","Math","floor","Date","getTime","setState","loadYrData","getWindSpeeds","generateData","prices","i","l","updateQueryFilter","name","park","windparks","altitude","position","lat","lon","load","Promise","all","yrPromises","length","componentDidMount","render","darkmode","appState","currentWindpark","productionData","productionBoostData","productionLongLifeData","class","map","wp","onClick","data-windpark","width","height","showXTicks","xTicksVal","val","util","isoDate","paddingTop","dataLeft","legendLeft","yMaxLeft","yMinLeft","showYTicksLeft","yTicks","unitLeft","avgWindowLeft","dataRight","legendRight","yMaxRight","yMinRight","showYTicksRight","yTicksPostfixRight","unitRight","marker","style","center","zoom","waypoints","windmills","Component"],"mappings":"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","file":"route-production.chunk.23273.js","sourcesContent":["import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\nimport wutil from '../../lib/wifet-util';\nimport LineGraph from '../../components/lineGraph';\nimport Map from '../../components/map';\n\nconst initialState = {};\n\n@observer\nclass Production extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { windmillStore, weatherYrStore, productionStore, priceStore } = this.props.stores;\n\t\tconst { currentWindparkName } = windmillStore;\n\n\t\tconst xMin = wutil.getDateDiffTime(-4);\n\t\tconst xMax = wutil.getDateDiffTime(10);\n\t\tconst now = Math.floor(new Date().getTime() / 1000);\n\t\tthis.setState({ now, xMin, xMax });\n\n\t\tawait this.loadYrData();\n\t\tconst forcastYrData = weatherYrStore.getWindSpeeds(currentWindparkName);\n\t\tpriceStore.generateData();\n\n\t\tconst { prices } = priceStore;\n\t\tproductionStore.generateData(forcastYrData, prices);\n\t}\n\n\tasync loadYrData() {\n\t\tconst { weatherYrStore, windmillStore } = this.props.stores;\n\t\tconst { windparks } = windmillStore;\n\n\t\tconst yrPromises = [];\n\t\tfor (let i = 0, l = windparks.length; i < l; i += 1) {\n\t\t\tconst park = windparks[i];\n\t\t\tweatherYrStore.updateQueryFilter({\n\t\t\t\tname: park.name,\n\t\t\t\taltitude: park.position.altitude,\n\t\t\t\tlat: park.position.lat,\n\t\t\t\tlon: park.position.lon,\n\t\t\t});\n\t\t\tawait weatherYrStore.load();\n\t\t}\n\t\treturn await Promise.all(yrPromises);\n\t}\n\n\tsetWindpark = (e) => {\n\t\tconst { windmillStore } = this.props.stores;\n\t\tconst windpark = e.target.dataset.windpark;\n\t\twindmillStore.setCurrentWindparkName(windpark);\n\t\tthis.loadAll();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n\trender() {\n\t\tconst { now, xMin, xMax } = this.state;\n\t\tconst { appState, windmillStore, productionStore, weatherYrStore } = this.props.stores;\n        const { darkmode } = appState;\n\t\tconst { windparks, currentWindparkName, currentWindpark } = windmillStore;\n\t\tconst { productionData, productionBoostData, productionLongLifeData } = productionStore;\n\t\tconst forcastYrData = weatherYrStore.getWindSpeeds(currentWindparkName);\n\n\t\treturn (\n\t\t\t<div class='container-fluid mt-5 pt-2'>\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-4'>\n\t\t\t\t\t\t<h1><i class='fas fa-chart-bar' /> Production</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8 pt-2'>\n\t\t\t\t\t\t<ul class='nav nav-pills float-right'>\n\t\t\t\t\t\t{windparks && windparks.map(wp => (\n\t\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-link nav-link ${wp.name === currentWindparkName ? 'active' : ''}`}\n\t\t\t\t\t\t\t\t\tonClick={this.setWindpark}\n\t\t\t\t\t\t\t\t\tdata-windpark={wp.name}\n\t\t\t\t\t\t\t\t>{wp.name}</button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t<LineGraph\n\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\twidth={1200}\n\t\t\t\t\t\t\theight={400}\n\t\t\t\t\t\t\tshowXTicks={1}\n\t\t\t\t\t\t\txTicksVal={val => util.isoDate(val)}\n\t\t\t\t\t\t\txMin={xMin}\n\t\t\t\t\t\t\txMax={xMax}\n\t\t\t\t\t\t\tpaddingTop={30}\n\n\t\t\t\t\t\t\tdataLeft={[productionData, productionBoostData, productionLongLifeData]}\n\t\t\t\t\t\t\tlegendLeft={['Normal production', 'Boost 10%', 'Long life -5%']}\n\t\t\t\t\t\t\tyMaxLeft={500}\n\t\t\t\t\t\t\tyMinLeft={0}\n\t\t\t\t\t\t\tshowYTicksLeft={1}\n\t\t\t\t\t\t\tyTicks={['500Mw', '400Mw', '300Mw', '200Mw', '100Mw', '0Mw']}\n\t\t\t\t\t\t\tunitLeft={['Mw', 'Mw', 'Mw']}\n\t\t\t\t\t\t\tavgWindowLeft={[8, 8, 8]}\n\n\t\t\t\t\t\t\tdataRight={[forcastYrData]}\n\t\t\t\t\t\t\tlegendRight={['Wind forcast Yr']}\n\t\t\t\t\t\t\tyMaxRight={30}\n\t\t\t\t\t\t\tyMinRight={0}\n\t\t\t\t\t\t\tshowYTicksRight={1}\n\t\t\t\t\t\t\tyTicksPostfixRight='m/s'\n\t\t\t\t\t\t\tunitRight={['m/s', 'm/s']}\n\n\t\t\t\t\t\t\tmarker={now}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class='row pt-4'>\n\t\t\t\t\t<div class='col-12' style='height: 50vh;'>\n\t\t\t\t\t\t<Map stores={this.props.stores}\n\t\t\t\t\t\t\tdarkmode={darkmode}\n\t\t\t\t\t\t\tcenter={[currentWindpark.position.lat, currentWindpark.position.lon]}\n\t\t\t\t\t\t\tzoom={currentWindpark.zoom}\n\t\t\t\t\t\t\twaypoints={currentWindpark.windmills}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Production;\n"],"sourceRoot":""}