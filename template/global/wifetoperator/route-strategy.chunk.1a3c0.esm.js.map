{"version":3,"sources":["webpack:///./routes/strategy/index.js"],"names":["initialState","Strategy","observer","Component","constructor","props","super","setWindpark","e","windmillStore","this","stores","setCurrentWindparkName","target","dataset","windpark","loadAll","state","weatherYrStore","productionStore","priceStore","demandStore","currentWindparkName","xMin","wutil","getDateDiffTime","xMax","now","Math","floor","Date","getTime","setState","loadYrData","forcastYrData","getWindSpeeds","generateData","prices","currentWindpark","updateQueryFilter","name","altitude","position","lat","lon","load","componentDidMount","render","productionData","productionBoostData","productionLongLifeData","demands","demandData","demandAi","windparks","class","map","wp","onClick","data-windpark","width","height","showXTicks","xTicksVal","val","util","isoDate","paddingTop","dataLeft","legendLeft","yMaxLeft","yMinLeft","showYTicksLeft","yTicksLeft","unitLeft","dataRight","legendRight","yMaxRight","yMinRight","showYTicksRight","yTicksRight","unitRight","avgWindowRight","marker"],"mappings":"2fAOA,MAAMA,EAAe,G,IAGfC,EADLC,Y,EAAD,cACuBC,YACnBC,YAAYC,GACRC,MAAMD,GADS,KAuCtBE,YAAeC,IACd,MAAM,cAAEC,GAAkBC,KAAKL,MAAMM,OAErCF,EAAcG,uBADGJ,EAAEK,OAAOC,QAAQC,UAElCL,KAAKM,WAzCCN,KAAKO,M,+VAAL,IACOjB,GAId,gBACC,MAAM,cAAES,EAAF,eAAiBS,EAAjB,gBAAiCC,EAAjC,WAAkDC,EAAlD,YAA8DC,GAAgBX,KAAKL,MAAMM,QACzF,oBAAEW,GAAwBb,EAE1Bc,EAAOC,IAAMC,iBAAiB,GAC9BC,EAAOF,IAAMC,gBAAgB,IAC7BE,EAAMC,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KAC9CrB,KAAKsB,SAAS,CAAEL,MAAKJ,OAAMG,eAErBhB,KAAKuB,aACX,MAAMC,EAAgBhB,EAAeiB,cAAcb,GACnDF,EAAWgB,eAEX,MAAM,OAAEC,GAAWjB,EACnBD,EAAgBiB,aAAaF,EAAeG,GAE5ChB,EAAYe,eAGb,mBACC,MAAM,eAAElB,EAAF,cAAkBT,GAAkBC,KAAKL,MAAMM,QAC/C,gBAAE2B,GAAoB7B,EAQ5B,OANAS,EAAeqB,kBAAkB,CAChCC,KAAMF,EAAgBE,KACtBC,SAAUH,EAAgBI,SAASD,SACnCE,IAAKL,EAAgBI,SAASC,IAC9BC,IAAKN,EAAgBI,SAASE,YAElB1B,EAAe2B,OAU7BC,oBACCpC,KAAKM,UAGN+B,SACC,MAAM,IAAEpB,EAAF,KAAOJ,EAAP,KAAaG,GAAShB,KAAKO,OAC3B,cAAER,EAAF,gBAAiBU,EAAjB,YAAkCE,GAAgBX,KAAKL,MAAMM,QAC7D,eAAEqC,EAAF,oBAAkBC,EAAlB,uBAAuCC,GAA2B/B,GAChEgC,QAASC,EAAX,SAAuBC,GAAahC,GACpC,UAAEiC,EAAF,oBAAahC,GAAwBb,EAE3C,OACC,mBAAK8C,MAAM,6BACV,mBAAKA,MAAM,OACV,mBAAKA,MAAM,SACV,sBAAI,iBAAGA,MAAM,wBAAb,cAED,mBAAKA,MAAM,cACV,kBAAIA,MAAM,6BACTD,GAAaA,EAAUE,IAAIC,GAC3B,kBAAIF,MAAM,YACT,sBACCA,MAAQ,0BAAwBE,EAAGjB,OAASlB,EAAsB,SAAW,IAC7EoC,QAAShD,KAAKH,YACdoD,gBAAeF,EAAGjB,MACjBiB,EAAGjB,UAKR,mBAAKe,MAAM,UACV,YAAC,IAAD,CACC5C,OAAQD,KAAKL,MAAMM,OACnBiD,MAAO,KACPC,OAAQ,IACRC,WAAY,EACZC,UAAWC,GAAOC,IAAKC,QAAQF,GAC/BzC,KAAMA,EACNG,KAAMA,EACNyC,WAAY,GAEZC,SAAU,CAAChB,EAAYC,GACvBgB,WAAY,CAAC,SAAU,wBACvBC,SAAU,IACVC,SAAU,EACVC,eAAgB,EAChBC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,OACzCC,SAAU,CAAC,KAAM,MAEjBC,UAAW,CAAC3B,EAAgBC,EAAqBC,GACjD0B,YAAa,CAAC,oBAAqB,YAAa,iBAChDC,UAAW,IACXC,UAAW,EACXC,gBAAiB,EACjBC,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,OAC1CC,UAAW,CAAC,MACZC,eAAgB,CAAC,EAAG,EAAG,GAEvBC,OAAQxD,W,EASA1B","file":"route-strategy.chunk.1a3c0.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\nimport wutil from '../../lib/wifet-util';\nimport LineGraph from '../../components/lineGraph';\n\nconst initialState = {};\n\n@observer\nclass Strategy extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { windmillStore, weatherYrStore, productionStore, priceStore, demandStore } = this.props.stores;\n\t\tconst { currentWindparkName } = windmillStore;\n\n\t\tconst xMin = wutil.getDateDiffTime(-4);\n\t\tconst xMax = wutil.getDateDiffTime(10);\n\t\tconst now = Math.floor(new Date().getTime() / 1000);\n\t\tthis.setState({ now, xMin, xMax });\n\n\t\tawait this.loadYrData();\n\t\tconst forcastYrData = weatherYrStore.getWindSpeeds(currentWindparkName);\n\t\tpriceStore.generateData();\n\n\t\tconst { prices } = priceStore;\n\t\tproductionStore.generateData(forcastYrData, prices);\n\n\t\tdemandStore.generateData();\n\t}\n\n\tasync loadYrData() {\n\t\tconst { weatherYrStore, windmillStore } = this.props.stores;\n\t\tconst { currentWindpark } = windmillStore;\n\n\t\tweatherYrStore.updateQueryFilter({\n\t\t\tname: currentWindpark.name,\n\t\t\taltitude: currentWindpark.position.altitude,\n\t\t\tlat: currentWindpark.position.lat,\n\t\t\tlon: currentWindpark.position.lon,\n\t\t});\n\t\treturn await weatherYrStore.load();\n\t}\n\n\tsetWindpark = (e) => {\n\t\tconst { windmillStore } = this.props.stores;\n\t\tconst windpark = e.target.dataset.windpark;\n\t\twindmillStore.setCurrentWindparkName(windpark);\n\t\tthis.loadAll();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n\trender() {\n\t\tconst { now, xMin, xMax } = this.state;\n\t\tconst { windmillStore, productionStore, demandStore } = this.props.stores;\n\t\tconst { productionData, productionBoostData, productionLongLifeData } = productionStore;\n\t\tconst { demands: demandData, demandAi } = demandStore;\n\t\tconst { windparks, currentWindparkName } = windmillStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid mt-5 pt-2'>\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-4'>\n\t\t\t\t\t\t<h1><i class='fas fa-chess-knight' /> Strategy</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8 pt-2'>\n\t\t\t\t\t\t<ul class='nav nav-pills float-right'>\n\t\t\t\t\t\t{windparks && windparks.map(wp => (\n\t\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-link nav-link ${wp.name === currentWindparkName ? 'active' : ''}`}\n\t\t\t\t\t\t\t\t\tonClick={this.setWindpark}\n\t\t\t\t\t\t\t\t\tdata-windpark={wp.name}\n\t\t\t\t\t\t\t\t>{wp.name}</button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t<LineGraph\n\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\twidth={1200}\n\t\t\t\t\t\t\theight={500}\n\t\t\t\t\t\t\tshowXTicks={1}\n\t\t\t\t\t\t\txTicksVal={val => util.isoDate(val)}\n\t\t\t\t\t\t\txMin={xMin}\n\t\t\t\t\t\t\txMax={xMax}\n\t\t\t\t\t\t\tpaddingTop={30}\n\n\t\t\t\t\t\t\tdataLeft={[demandData, demandAi]}\n\t\t\t\t\t\t\tlegendLeft={['Demand', 'Demand AI prediction']}\n\t\t\t\t\t\t\tyMaxLeft={4000}\n\t\t\t\t\t\t\tyMinLeft={0}\n\t\t\t\t\t\t\tshowYTicksLeft={1}\n\t\t\t\t\t\t\tyTicksLeft={['4TW', '3TW', '2TW', '1TW', '0TW']}\n\t\t\t\t\t\t\tunitLeft={['Mw', 'Mw']}\n\n\t\t\t\t\t\t\tdataRight={[productionData, productionBoostData, productionLongLifeData]}\n\t\t\t\t\t\t\tlegendRight={['Normal production', 'Boost 10%', 'Long life -5%']}\n\t\t\t\t\t\t\tyMaxRight={4000}\n\t\t\t\t\t\t\tyMinRight={0}\n\t\t\t\t\t\t\tshowYTicksRight={1}\n\t\t\t\t\t\t\tyTicksRight={['4TW', '3TW', '2TW', '1TW', '0TW']}\n\t\t\t\t\t\t\tunitRight={['Mw']}\n\t\t\t\t\t\t\tavgWindowRight={[8, 8, 8]}\n\n\t\t\t\t\t\t\tmarker={now}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Strategy;\n"],"sourceRoot":""}