{"version":3,"sources":["webpack:///./routes/demand/index.js"],"names":["initialState","Demand","observer","props","setWindpark","e","stores","windmillStore","setCurrentWindparkName","target","dataset","windpark","loadAll","state","forcastYrData","now","markerDays","priceStore","this","productionStore","weatherYrStore","currentWindparkName","windparkCapacity","demandStore","generateData","loadYrData","loadOpenData","getWindSpeeds","prices","Math","floor","Date","getTime","wutil","timeRangeDays","setState","updateQueryFilter","name","currentWindpark","altitude","position","lat","lon","load","weatherOpenStore","componentDidMount","render","demandData","demands","aiData","demandAiFiltered","windparks","windparkMaxCapacity","productionData","productionBoostData","productionBoostDataFiltered","productionLongLifeData","productionLongLifeDataFiltered","class","style","map","wp","onClick","data-windpark","width","height","showXTicks","xTicksVal","val","util","isoDate","paddingTop","dataLeft","legendLeft","yMinLeft","showYTicksLeft","yTicksLeftVal","format","unitLeft","avgWindowLeft","smoothLeft","dataRight","legendRight","yMinRight","showYTicksRight","yTicksRightPostfix","unitRight","avgWindowRight","smoothRight","marker","markers","Component"],"mappings":"4fAOMA,EAAe,GAGfC,EADLC,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAkDPC,YAAc,SAACC,GACY,EAAKF,MAAMG,OAA7BC,cAEMC,uBADGH,EAAEI,OAAOC,QAAQC,UAElC,EAAKC,WArDC,EAAKC,M,+VAAL,IACOb,GAHQ,E,0HAOhBY,QAAN,8DAQOE,EAMAC,EACAC,EATN,OALqBC,GADtB,EACqFC,KAAKf,MAAMG,QAA1EW,WAAYE,EADlC,EACkCA,gBAAiBC,EADnD,EACmDA,eAC1CC,GAD0Dd,EADnE,EACmEA,eAC1Dc,oBAAqBC,EAAqBf,EAArBe,iBAF9B,EACSC,YAGIC,eAEZ,gBAAMN,KAAKO,cAAX,KAAuB,eACvB,uBAAMP,KAAKQ,gBAAX,KAAyB,sBACnBZ,EAAgBM,EAAeO,cAAcN,GACnDJ,EAAWO,eAGXL,EAAgBK,aAAaV,EADVG,EAAXW,OAC4CN,GAE9CP,EAAMc,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KACxChB,EAAaiB,IAAMC,eAAe,EAAG,IAC3ChB,KAAKiB,SAAS,CAAEpB,MAAKC,eATI,yCADF,sCANxB,a,EAmBMS,WAAN,sDAUQ,OATCL,GADT,EAC2CF,KAAKf,MAAMG,QAA7Cc,gBAGOgB,kBAAkB,CAChCC,MAHOC,EAFT,EACyB/B,cAChB+B,iBAGeD,KACtBE,SAAUD,EAAgBE,SAASD,SACnCE,IAAKH,EAAgBE,SAASC,IAC9BC,IAAKJ,EAAgBE,SAASE,MAExB,gBAAMtB,EAAeuB,QAArB,KAA2B,MAVnC,a,EAaMjB,aAAN,sDASQ,OARCkB,GADT,EAC6C1B,KAAKf,MAAMG,QAA/CsC,kBAGSR,kBAAkB,CAClCC,MAHOC,EAFT,EAC2B/B,cAClB+B,iBAGeD,KACtBI,IAAKH,EAAgBE,SAASC,IAC9BC,IAAKJ,EAAgBE,SAASE,MAExB,gBAAME,EAAiBD,QAAvB,KAA6B,MATrC,a,EAmBAE,kBAAA,WACC3B,KAAKN,W,EAGNkC,OAAA,WAAS,aACoB5B,KAAKL,MAAzBE,EADA,EACAA,IAAKC,EADL,EACKA,WADL,EAEgDE,KAAKf,MAAMG,OAA3DiB,EAFA,EAEAA,YAAahB,EAFb,EAEaA,cAAeY,EAF5B,EAE4BA,gBACnB4B,EAAyCxB,EAAlDyB,QAAuCC,EAAW1B,EAA7B2B,iBACrBC,EAAwD5C,EAAxD4C,UAAW9B,EAA6Cd,EAA7Cc,oBAAqB+B,EAAwB7C,EAAxB6C,oBAEhCC,EAA6HlC,EAA7HkC,eAA6CC,EAAgFnC,EAA7GoC,4BAAkFC,EAA2BrC,EAA3DsC,+BAE1E,OACC,mBAAKC,MAAM,4BAA4BC,MAAM,yBAC5C,mBAAKD,MAAM,OACV,mBAAKA,MAAM,SACV,sBAAI,iBAAGA,MAAM,4BAAb,YAED,mBAAKA,MAAM,cACV,kBAAIA,MAAM,6BACTP,GAAaA,EAAUS,KAAI,SAAAC,GAAE,OAC7B,kBAAIH,MAAM,YACT,sBACCA,MAAK,0BAA2BG,EAAGxB,OAAShB,EAAsB,SAAW,IAC7EyC,QAAS,EAAK1D,YACd2D,gBAAeF,EAAGxB,MACjBwB,EAAGxB,YAKR,mBAAKqB,MAAM,UAAX,wBACsBN,EAAoB,uBACzC,YAAC,IAAD,CACC9C,OAAQY,KAAKf,MAAMG,OACnB0D,MAAO,KACPC,OAAQ,IACRC,WAAY,EACZC,UAAW,SAAAC,GAAG,OAAIC,IAAKC,QAAQF,IAC/BG,WAAY,GAEZC,SAAU,CAACzB,EAAYE,GACvBwB,WAAY,CAAC,SAAU,iBAEvBC,SAAU,EACVC,eAAgB,EAGhBC,cAAe,SAACR,GAAD,OAAYC,IAAKQ,OAAOT,EAAM,IAAM,GAApC,MACfU,SAAU,CAAC,KAAM,MACjBC,cAAe,CAAC,EAAG,GACnBC,WAAY,CAAC,EAAG,GAEhBC,UAAW,CAAC5B,EAAgBC,EAAqBE,GACjD0B,YAAa,CAAC,oBAAqB,YAAa,iBAEhDC,UAAW,EACXC,gBAAiB,EAEjBC,mBAAoB,KACpBC,UAAW,CAAC,MACZC,eAAgB,CAAC,EAAG,EAAG,GACvBC,YAAa,CAAC,EAAG,EAAG,GAEpBC,OAAQ1E,EACR2E,QAAS1E,Q,GA5HK2E,e,EAqIN1F","file":"route-demand.chunk.f2352.js","sourcesContent":["import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\nimport wutil from '../../lib/wifet-util';\nimport LineGraph from '../../components/lineGraph';\n\nconst initialState = {};\n\n@observer\nclass Demand extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { demandStore, priceStore, productionStore, weatherYrStore, windmillStore } = this.props.stores;\n\t\tconst { currentWindparkName, windparkCapacity } = windmillStore;\n\n\t\tdemandStore.generateData();\n\n\t\tawait this.loadYrData();\n\t\tawait this.loadOpenData();\n\t\tconst forcastYrData = weatherYrStore.getWindSpeeds(currentWindparkName);\n\t\tpriceStore.generateData();\n\n\t\tconst { prices } = priceStore;\n\t\tproductionStore.generateData(forcastYrData, prices, windparkCapacity);\n\n\t\tconst now = Math.floor(new Date().getTime() / 1000);\n\t\tconst markerDays = wutil.timeRangeDays(-4, 11);\n\t\tthis.setState({ now, markerDays });\n\t}\n\n\tasync loadYrData() {\n\t\tconst { weatherYrStore, windmillStore } = this.props.stores;\n\t\tconst { currentWindpark } = windmillStore;\n\n\t\tweatherYrStore.updateQueryFilter({\n\t\t\tname: currentWindpark.name,\n\t\t\taltitude: currentWindpark.position.altitude,\n\t\t\tlat: currentWindpark.position.lat,\n\t\t\tlon: currentWindpark.position.lon,\n\t\t});\n\t\treturn await weatherYrStore.load();\n\t}\n\n\tasync loadOpenData() {\n\t\tconst { weatherOpenStore, windmillStore } = this.props.stores;\n\t\tconst { currentWindpark } = windmillStore;\n\n\t\tweatherOpenStore.updateQueryFilter({\n\t\t\tname: currentWindpark.name,\n\t\t\tlat: currentWindpark.position.lat,\n\t\t\tlon: currentWindpark.position.lon,\n\t\t});\n\t\treturn await weatherOpenStore.load();\n\t}\n\n\tsetWindpark = (e) => {\n\t\tconst { windmillStore } = this.props.stores;\n\t\tconst windpark = e.target.dataset.windpark;\n\t\twindmillStore.setCurrentWindparkName(windpark);\n\t\tthis.loadAll();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n\trender() {\n\t\tconst { now, markerDays } = this.state;\n\t\tconst { demandStore, windmillStore, productionStore } = this.props.stores;\n\t\tconst { demands: demandData, demandAiFiltered: aiData } = demandStore;\n\t\tconst { windparks, currentWindparkName, windparkMaxCapacity } = windmillStore;\n\n\t\tconst { productionData, productionBoostDataFiltered: productionBoostData, productionLongLifeDataFiltered: productionLongLifeData } = productionStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid mt-5 pt-2' style='margin-bottom: 200px;'>\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-4'>\n\t\t\t\t\t\t<h1><i class='fas fa-hand-holding-usd' /> Demand</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8 pt-2'>\n\t\t\t\t\t\t<ul class='nav nav-pills float-right'>\n\t\t\t\t\t\t{windparks && windparks.map(wp => (\n\t\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-link nav-link ${wp.name === currentWindparkName ? 'active' : ''}`}\n\t\t\t\t\t\t\t\t\tonClick={this.setWindpark}\n\t\t\t\t\t\t\t\t\tdata-windpark={wp.name}\n\t\t\t\t\t\t\t\t>{wp.name}</button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\twindparkMaxCapacity: {windparkMaxCapacity}<br />\n\t\t\t\t\t\t<LineGraph\n\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\twidth={1200}\n\t\t\t\t\t\t\theight={500}\n\t\t\t\t\t\t\tshowXTicks={1}\n\t\t\t\t\t\t\txTicksVal={val => util.isoDate(val)}\n\t\t\t\t\t\t\tpaddingTop={30}\n\n\t\t\t\t\t\t\tdataLeft={[demandData, aiData]}\n\t\t\t\t\t\t\tlegendLeft={['Demand', 'AI prediction']}\n\t\t\t\t\t\t\t// yMaxLeft={4000}\n\t\t\t\t\t\t\tyMinLeft={0}\n\t\t\t\t\t\t\tshowYTicksLeft={1}\n\t\t\t\t\t\t\t// yTicksLeft={['4TW', '3TW', '2TW', '1TW', '0TW']}\n\t\t\t\t\t\t\t// yTicksLeftPostfix={'GW'}\n\t\t\t\t\t\t\tyTicksLeftVal={(val) => `${util.format(val / 1000, 1)}GW`}\n\t\t\t\t\t\t\tunitLeft={['MW', 'MW']}\n\t\t\t\t\t\t\tavgWindowLeft={[4, 3]}\n\t\t\t\t\t\t\tsmoothLeft={[1, 1]}\n\n\t\t\t\t\t\t\tdataRight={[productionData, productionBoostData, productionLongLifeData]}\n\t\t\t\t\t\t\tlegendRight={['Normal production', 'Boost 10%', 'Long life -5%']}\n\t\t\t\t\t\t\t// yMaxRight={4000}\n\t\t\t\t\t\t\tyMinRight={0}\n\t\t\t\t\t\t\tshowYTicksRight={1}\n\t\t\t\t\t\t\t// yTicksRight={['4TW', '3TW', '2TW', '1TW', '0TW']}\n\t\t\t\t\t\t\tyTicksRightPostfix={'MW'}\n\t\t\t\t\t\t\tunitRight={['MW']}\n\t\t\t\t\t\t\tavgWindowRight={[1, 1, 1]}\n\t\t\t\t\t\t\tsmoothRight={[1, 1, 1]}\n\n\t\t\t\t\t\t\tmarker={now}\n\t\t\t\t\t\t\tmarkers={markerDays}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Demand;\n"],"sourceRoot":""}