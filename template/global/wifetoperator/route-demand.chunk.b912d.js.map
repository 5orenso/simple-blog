{"version":3,"sources":["webpack:///./routes/demand/index.js"],"names":["initialState","Demand","observer","props","setWindpark","e","stores","windmillStore","setCurrentWindparkName","target","dataset","windpark","loadAll","state","this","demandStore","generateData","now","Math","floor","Date","getTime","markerDays","wutil","timeRangeDays","setState","componentDidMount","render","demandData","demands","aiData","demandAiFiltered","windparks","currentWindparkName","class","style","map","wp","name","onClick","data-windpark","width","height","showXTicks","xTicksVal","val","util","isoDate","paddingTop","dataLeft","legendLeft","yMaxLeft","yMinLeft","showYTicksLeft","yTicksLeft","unitLeft","avgWindowLeft","smoothLeft","marker","markers","Component"],"mappings":"4fAOMA,EAAe,GAGfC,EADLC,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAePC,YAAc,SAACC,GACY,EAAKF,MAAMG,OAA7BC,cAEMC,uBADGH,EAAEI,OAAOC,QAAQC,UAElC,EAAKC,WAlBC,EAAKC,M,+VAAL,IACOb,GAHQ,E,0HAOhBY,QAAN,0CACyBE,KAAKX,MAAMG,OAA3BS,YACIC,eAEZ,IAAMC,EAAMC,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KACxCC,EAAaC,IAAMC,eAAe,EAAG,IAL5C,OAMCV,KAAKW,SAAS,CAAER,MAAKK,eANtB,kB,EAgBAI,kBAAA,WACCZ,KAAKF,W,EAGNe,OAAA,WAAS,aACoBb,KAAKD,MAAzBI,EADA,EACAA,IAAKK,EADL,EACKA,WADL,EAE+BR,KAAKX,MAAMG,OAA1CS,EAFA,EAEAA,YAAaR,EAFb,EAEaA,cACJqB,EAAyCb,EAAlDc,QAAuCC,EAAWf,EAA7BgB,iBACrBC,EAAmCzB,EAAnCyB,UAAWC,EAAwB1B,EAAxB0B,oBAEnB,OACC,mBAAKC,MAAM,4BAA4BC,MAAM,yBAC5C,mBAAKD,MAAM,OACV,mBAAKA,MAAM,SACV,sBAAI,iBAAGA,MAAM,4BAAb,YAED,mBAAKA,MAAM,cACV,kBAAIA,MAAM,6BACTF,GAAaA,EAAUI,KAAI,SAAAC,GAAE,OAC7B,kBAAIH,MAAM,YACT,sBACCA,MAAK,0BAA2BG,EAAGC,OAASL,EAAsB,SAAW,IAC7EM,QAAS,EAAKnC,YACdoC,gBAAeH,EAAGC,MACjBD,EAAGC,YAKR,mBAAKJ,MAAM,UACV,YAAC,IAAD,CACC5B,OAAQQ,KAAKX,MAAMG,OACnBmC,MAAO,KACPC,OAAQ,IACRC,WAAY,EACZC,UAAW,SAAAC,GAAG,OAAIC,IAAKC,QAAQF,IAC/BG,WAAY,GAEZC,SAAU,CAACrB,EAAYE,GACvBoB,WAAY,CAAC,SAAU,iBACvBC,SAAU,IACVC,SAAU,EACVC,eAAgB,EAChBC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,OACzCC,SAAU,CAAC,KAAM,MACjBC,cAAe,CAAC,EAAG,GACnBC,WAAY,CAAC,EAAG,GAEhBC,OAAQzC,EACR0C,QAASrC,Q,GAzEKsC,e,EAkFN3D","file":"route-demand.chunk.b912d.js","sourcesContent":["import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\nimport wutil from '../../lib/wifet-util';\nimport LineGraph from '../../components/lineGraph';\n\nconst initialState = {};\n\n@observer\nclass Demand extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { demandStore } = this.props.stores;\n\t\tdemandStore.generateData();\n\n\t\tconst now = Math.floor(new Date().getTime() / 1000);\n\t\tconst markerDays = wutil.timeRangeDays(-4, 11);\n\t\tthis.setState({ now, markerDays });\n\t}\n\n\tsetWindpark = (e) => {\n\t\tconst { windmillStore } = this.props.stores;\n\t\tconst windpark = e.target.dataset.windpark;\n\t\twindmillStore.setCurrentWindparkName(windpark);\n\t\tthis.loadAll();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n\trender() {\n\t\tconst { now, markerDays } = this.state;\n\t\tconst { demandStore, windmillStore } = this.props.stores;\n\t\tconst { demands: demandData, demandAiFiltered: aiData } = demandStore;\n\t\tconst { windparks, currentWindparkName } = windmillStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid mt-5 pt-2' style='margin-bottom: 200px;'>\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-4'>\n\t\t\t\t\t\t<h1><i class='fas fa-hand-holding-usd' /> Demand</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8 pt-2'>\n\t\t\t\t\t\t<ul class='nav nav-pills float-right'>\n\t\t\t\t\t\t{windparks && windparks.map(wp => (\n\t\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-link nav-link ${wp.name === currentWindparkName ? 'active' : ''}`}\n\t\t\t\t\t\t\t\t\tonClick={this.setWindpark}\n\t\t\t\t\t\t\t\t\tdata-windpark={wp.name}\n\t\t\t\t\t\t\t\t>{wp.name}</button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t<LineGraph\n\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\twidth={1200}\n\t\t\t\t\t\t\theight={500}\n\t\t\t\t\t\t\tshowXTicks={1}\n\t\t\t\t\t\t\txTicksVal={val => util.isoDate(val)}\n\t\t\t\t\t\t\tpaddingTop={30}\n\n\t\t\t\t\t\t\tdataLeft={[demandData, aiData]}\n\t\t\t\t\t\t\tlegendLeft={['Demand', 'AI prediction']}\n\t\t\t\t\t\t\tyMaxLeft={4000}\n\t\t\t\t\t\t\tyMinLeft={0}\n\t\t\t\t\t\t\tshowYTicksLeft={1}\n\t\t\t\t\t\t\tyTicksLeft={['4TW', '3TW', '2TW', '1TW', '0TW']}\n\t\t\t\t\t\t\tunitLeft={['Mw', 'Mw']}\n\t\t\t\t\t\t\tavgWindowLeft={[4, 3]}\n\t\t\t\t\t\t\tsmoothLeft={[1, 1]}\n\n\t\t\t\t\t\t\tmarker={now}\n\t\t\t\t\t\t\tmarkers={markerDays}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Demand;\n"],"sourceRoot":""}