{"version":3,"sources":["webpack:///./routes/start.js","webpack:///./components/live/index.js","webpack:///../node_modules/marked/lib/marked.esm.js","webpack:///../node_modules/preact-markup/src/to-vdom.js","webpack:///../node_modules/preact-markup/src/markup-to-vdom.js","webpack:///../node_modules/preact-markup/src/parse-markup.js","webpack:///../node_modules/preact-markup/src/index.js","webpack:///../node_modules/preact-markdown/index.js"],"names":["pad","number","r","String","length","concat","Start","observer","_class","_Component","props","_this","_defineProperty","_assertThisInitialized","_super","call","setState","showMenu","state","mainContainer","scrollIntoView","behavior","block","inline","_asyncToGenerator","arguments","undefined","_this$props$stores","stores","articleStore","articleId","loadArticle","tickTimer","_this$props","date","article","raceDate","countdownto","difference","timeLeft","Date","getFullYear","d","Math","floor","h","m","s","timerComponents","Object","keys","forEach","interval","isDay","isSec","push","class","raceTime","clearTimeout","updateTimer","setTimeout","RELOAD_INTERVAL_IN_SEC","sessionid","getTime","_inherits","_createSuper","key","value","this","loadAll","nextProps","page","artid","_this$props2","_this$state","_this$props$stores2","title","tickerTitle","titleUrl","tickerTitleUrl","Fragment","style","href","native","util","formatDate","id","Live","_extends","Component","appState","isAdmin","isExpert","category","categoryTicker","loadArtlist","loadUnpublished","limit","_this$contentContaine","viewerWidth","contentContainer","offsetWidth","windowWidth","window","innerWidth","e","ele","cursor","userSelect","removeProperty","left","scrollLeft","top","scrollTop","x","clientX","y","clientY","hasMoved","document","addEventListener","mouseMoveHandler","mouseUpHandler","dx","dy","scrollSnapType","removeEventListener","url","target","closest","dataset","console","log","location","height","maxHeight","getWidth","_this2","artlistLive","onMouseDown","mouseDownHandler","ref","c","map","art","dateDiff","published","inFuture","seconds","isToday","hours","isThisYear","years","months","isLast24Hours","onClick","onClickArticle","formatDistance","locale","hour","minute","day","month","year","getDefaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","hooks","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","escape","html","encode","escapeTest","test","replace","escapeReplace","getEscapeReplacement","escapeTestNoEncode","escapeReplaceNoEncode","unescape","unescapeTest","_","n","toLowerCase","charAt","fromCharCode","parseInt","substring","edit","regex","opt","source","obj","name","val","caret","getRegex","RegExp","cleanUrl","base","prot","decodeURIComponent","nonWordAndColonTest","indexOf","originIndependentUrl","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","splitCells","tableRow","count","cells","match","offset","str","escaped","curr","split","i","trim","shift","pop","splice","invert","l","suffLen","currChar","slice","repeatString","pattern","result","outputLink","cap","link","raw","lexer","text","inLink","token","type","tokens","inlineTokens","ch","out","charCodeAt","random","toString","parseMarkdown","parser","src","callback","origOpt","_objectSpread","throwError","message","msg","Promise","resolve","reject","onError","marked","defaults","Error","prototype","warn","checkSanitizeDeprecation","options","preprocess","done","err","postprocess","pending","lang","code","then","all","catch","Lexer","lex","Parser","parse","escapeReplacements","noopTest","exec","Tokenizer","_createClass","rules","newline","codeBlockStyle","fences","matchIndentToCode","indentToCode","node","matchIndentInNode","_slicedToArray","join","indentCodeCompensation","_escapes","heading","trimmed","depth","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","t","repeat","trimLeft","search","nextBulletRegex","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","spacers","filter","hasMultipleLineBreaks","some","pre","def","tag","table","item","header","align","rows","j","k","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","b","level","findClosingBracket","linkLen","links","reflink","nolink","maskedSrc","prevChar","emStrong","lDelim","nextChar","punctuation","rDelim","rLength","lLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","prevCapZero","_backpedal","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","create","inlineQueue","next","lastToken","cutSrc","lastParagraphClipped","leading","tabs","_loop","extTokenizer","space","startBlock","tempStart","startIndex","Infinity","tempSrc","getStartIndex","errMsg","error","_ret","keepPrevChar","includes","lastIndexOf","_loop2","codespan","startInline","inlineText","_ret2","get","Renderer","infostring","quote","slugger","slug","body","content","flags","TextRenderer","Slugger","seen","originalSlug","isDryRun","occurenceAccumulator","hasOwnProperty","serialize","getNextSafeSlug","dryrun","textRenderer","l2","l3","cell","itemBody","checkbox","ret","renderers","parseInline","tablecell","tablerow","unshift","listitem","image","Hooks","markdown","Set","setOptions","use","childTokens","_len","args","Array","_key","pack","opts","ext","prevRenderer","_len2","_key2","apply","_loop3","prop","_len3","_key3","_loop4","_prop","prevTokenizer","_len4","_key4","_loop5","_prop2","prevHook","passThroughHooks","has","arg","_len5","_key5","values","_step","_iterator","_createForOfIteratorHelper","_loop6","_step2","_iterator2","f","_step3","_iterator3","_step4","_iterator4","lexInline","nodeType","o","textContent","nodeValue","a","p","nodeName","allowScripts","u","allowEvents","Function","attributes","childNodes","visitor","reduce","toUpperCase","__proto__","constructor","setReviver","shouldComponentUpdate","wrap","markup","setComponents","render","components","v","reviver","w","C","g","DOMParser","parseFromString","implementation","createHTMLDocument","createElement","cssText","setAttribute","appendChild","contentWindow","open","write","close","getElementsByTagName","firstChild","removeChild","lastChild","children","_typeof","preact","require","Markup","default","module","exports","markupOpts","markedOpts","markdownOpts"],"mappings":"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","file":"route-start.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport Live from '../components/live/';\n\nfunction scrollTo(element, top = 0, left = 0) {\n    // element.scrollTop = to;\n    element.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start',\n        inline: 'start',\n    });\n    // element.scrollTo({\n    //     top,\n    //     left,\n    //     behavior: 'smooth'\n    // });\n}\n\nconst  RELOAD_INTERVAL_IN_SEC = 1;\n\nfunction pad(number) {\n    let r = String(number);\n    if (r.length === 1) {\n        r = `0${r}`;\n    }\n    return r;\n}\n\nfunction getDateParts({ showDateOnly, showSeconds, showTimezone, showClockOnly }) {\n    const now = new Date();\n    const mm = now.getMonth() + 1;\n    const dd = now.getDate();\n    const yy = now.getFullYear();\n    const hh = now.getHours();\n    const mi = now.getMinutes();\n    const ss = now.getSeconds();\n    const tzo = -now.getTimezoneOffset();\n    const dif = tzo >= 0 ? '+' : '-';\n\n    let ret = `${pad(yy)}-${pad(mm)}-${pad(dd)}`;\n    if (showClockOnly) {\n        ret = '';\n    }\n    if (!showDateOnly) {\n        ret += ` ${pad(hh)}:${pad(mi)}`;\n        if (showSeconds) {\n            ret += `:${pad(ss)}`;\n        }\n        if (showTimezone) {\n            ret += `${dif}${tzo}`;\n        }\n    }\n    return ret;\n}\n\nfunction calculateTimeLeft({ countdownto }) {\n    let year = new Date().getFullYear();\n    const difference = +new Date(`${countdownto}`) - +new Date();\n    let timeLeft = {};\n\n    if (difference > 0) {\n        timeLeft = {\n            d: Math.floor(difference / (1000 * 60 * 60 * 24)),\n            h: Math.floor((difference / (1000 * 60 * 60)) % 24),\n            m: pad(Math.floor((difference / 1000 / 60) % 60)),\n            s: pad(Math.floor((difference / 1000) % 60)),\n        };\n    } else {\n        timeLeft = {\n            d: 0,\n            h: 0,\n            m: 0,\n            s: 0,\n        };\n    }\n    return timeLeft;\n}\n\n@observer\nclass Start extends Component {\n  \tconstructor(props) {\n        super(props);\n        this.state = {\n            sessionid: new Date().getTime(),\n        };\n        this.mainContainer = null;\n        this.updateTimer = null;\n    }\n\n    toggleMenu = () => {\n        const { showMenu } = this.state;\n        this.setState({\n            showMenu: !showMenu,\n        });\n    }\n\n    scrollToMainContainer = (view) => {\n        // console.log('scrollToMainContainer', view, this.mainContainer);\n        if (this.mainContainer) {\n            scrollTo(this.mainContainer);\n        }\n    }\n\n    loadAll = async (props = this.props) => {\n        const { appState, articleStore } = this.props.stores;\n        // appState.setMainViewCallback(this.scrollToMainContainer);\n        const { page, articleId } = props;\n        // if (showWebcam && showWebcam !== 'false') {\n        //     appState.setMainView(page || 'webcam');\n        // } else {\n        if (articleId) {\n            await articleStore.loadArticle(articleId);\n        }\n        this.tickTimer();\n    }\n\n    tickTimer = () => {\n        const { articleStore } = this.props.stores;\n        const { article } = articleStore; \n        const { articleId, raceDate } = this.props;\n        const date = articleId ? article['ticker-raceDate'] : raceDate;\n        \n        if (!date) {\n            return null;\n        }        \n        const timeLeft = calculateTimeLeft({ countdownto: date });\n        // const timeNow = getDateParts({ showDateOnly, showSeconds, showTimezone, showClockOnly });\n        const timerComponents = [];\n        Object.keys(timeLeft).forEach((interval) => {\n            if (timerComponents.length === 0 && !timeLeft[interval]) {\n                return;\n            }\n            const isDay = interval === 'd';\n            const isSec = interval === 's';\n            timerComponents.push(<span>\n                {timeLeft[interval]}<span class={`text-muted font-weight-lighter ${isDay ? 'mr-1' : ''}`}>{isDay ? 'd' : (isSec ? '' : ':')}</span>{\" \"}\n            </span>);\n        });\n        \n        this.setState({\n            raceTime: timeLeft,\n            timerComponents,\n        });\n\n        clearTimeout(this.updateTimer);\n        this.updateTimer = setTimeout(() => {\n            this.tickTimer();\n        }, RELOAD_INTERVAL_IN_SEC * 1000);\n    }\n\n    componentWillMount() {\n        this.loadAll();\n    }\n\n    componentDidMount() {\n\n        // document.addEventListener('visibilitychange', () => {\n        //     if (document.visibilityState === 'visible') {\n        //         // page is visible\n        //     } else {\n        //         // page is hidden\n        //     }\n        // });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.page !== this.props.page || nextProps.artid !== this.props.artid) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.updateTimer);\n    }\n\n    render() {\n        const {\n            tickerTitle,\n            tickerTitleUrl,\n            raceDate,\n            showCountDown,\n            articleId,\n        } = this.props;\n        const { raceTime, timerComponents } = this.state;\n        const { appState, articleStore } = this.props.stores;\n        const { article } = articleStore; \n        const { mainView, subView, currentEmail, isAdmin, isExpert, isDevelopment, path } = appState;\n\n        const title = articleId ? article['ticker-tickerTitle'] : tickerTitle;\n        const titleUrl = articleId ? article['ticker-tickerTitleUrl'] : tickerTitleUrl;\n        const countDown = articleId ? article['ticker-showCountDown'] : showCountDown;\n        const date = articleId ? article['ticker-raceDate'] : raceDate;\n\n        return (<>\n            <div \n                class='d-flex flex-row flex-nowrap position-relative w-100'\n                style={`\n                    height: 60px;\n                    font-size: 15px;\n                `}\n            >\n                {title && <div \n                    class='position-absolute d-flex justify-content-center align-items-center border-right'\n                    style={`\n                        top: 0; \n                        left: 0; \n                        width: 60px; \n                        height: 60px;\n                        box-shadow: 2px 0 5px -2px #888;\n                        font-size: 18px;\n                    `}\n                >\n                    {titleUrl ? <>\n                        <a href={titleUrl} class='text-dark' native>\n                            {title}                    \n                        </a>\n                    </> : <>\n                        {title}                \n                    </>}\n                </div>}\n\n                {date && <div \n                    class='position-absolute d-flex flex-column justify-content-center align-items-center border-left'\n                    style={`\n                        top: 0; \n                        right: 0; \n                        width: 140px; \n                        height: 60px;\n                        box-shadow: 0px 2px 5px -2px #888;\n                    `}\n                >\n                    <div>\n                        {util.formatDate(date)}\n                    </div>\n                    <small>\n                        <div class='d-flex flex-row flex-nowrap'>\n                            {timerComponents}\n                        </div>\n                    </small>\n                </div>}\n\n                <div \n                    class='w-100 overflow-hidden d-flex flex-row flex-nowrap' \n                    style='padding-left: 60px; padding-right: 140px;'\n                >\n                    {articleId ? <>\n                        {article.id ? <>\n                            <Live stores={this.props.stores} {...this.props} />            \n                        </> : <>\n                            Loading...\n                        </>}\n                    </>: <>\n                        <Live stores={this.props.stores} {...this.props} />\n                    </>}\n                </div>\n                 \n            </div>\n        </>);\n    }\n}\n\nexport default Start;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\n\nfunction scrollTo(element, top = 0, left = 0) {\n    // element.scrollTop = to;\n    element.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start',\n        inline: 'start',\n    });\n}\n\nconst RELOAD_INTERVAL_IN_SEC = 60;\nconst TOTAL_ARTICLES = 30;\n\n@observer\nclass Live extends Component {\n  \tconstructor(props) {\n        super(props);\n        this.state = {\n            height: 150,\n            maxHeight: 150,\n            left: 0,\n            top: 0,\n            x: 0,\n            y: 0,\n        };\n        this.updateTimer;\n        this.contentContainer = null;\n    }\n\n    loadAll = async (props = this.props) => {\n        const { categoryTicker, articleId } = props;\n        const { articleStore, appState } = this.props.stores;\n        const { isAdmin, isExpert } = appState;\n\n        const { article } = articleStore;\n        const category = articleId ? article['ticker-categoryTicker'] : categoryTicker;\n\n        await articleStore.loadArtlist({\n            isAdmin,\n            isExpert,\n            loadUnpublished: undefined,\n            limit: TOTAL_ARTICLES,\n            category,\n            key: 'live',\n        });\n\n        clearTimeout(this.updateTimer);\n        this.updateTimer = setTimeout(() => {\n            this.loadAll();\n        }, RELOAD_INTERVAL_IN_SEC * 1000);        \n    }\n\n    getWidth = () => {\n        this.setState({\n            // viewerWidth: this.contentContainer?.offsetWidth > 1024 ? 1024 : this.contentContainer?.offsetWidth,\n            viewerWidth: this.contentContainer?.offsetWidth,\n            windowWidth: window.innerWidth,\n        });\n        // window.addEventListener('resize', (e) => {\n        //     this.getWidth();\n        // });\n    }\n\n    mouseDownHandler = (e) => {\n        const ele = this.contentContainer;\n        ele.style.cursor = 'grabbing';\n        ele.style.userSelect = 'none';\n        ele.style.removeProperty('scroll-snap-type');\n        this.setState({\n            // The current scroll\n            left: ele.scrollLeft,\n            top: ele.scrollTop,\n            // Get the current mouse position\n            x: e.clientX,\n            y: e.clientY,\n            hasMoved: false,\n        });\n        // console.log('mouseDownHandler', e.clientX, e.clientY);\n        document.addEventListener('mousemove', this.mouseMoveHandler);\n        document.addEventListener('mouseup', this.mouseUpHandler);\n    }\n\n    mouseMoveHandler = (e) => {\n        const { left, top, x, y } = this.state;\n        // How far the mouse has been moved\n        const dx = e.clientX - x;\n        const dy = e.clientY - y;\n    \n        \n        // Scroll the element\n        this.setState({\n            left: left - dx,\n            top: top - dy,\n            x: e.clientX,\n            y: e.clientY,\n            hasMoved: true,\n        }, () => {            \n            // Scroll the element\n            const ele = this.contentContainer;\n            ele.scrollTop = top - dy;\n            ele.scrollLeft = left - dx;\n        });\n    }\n\n    mouseUpHandler = () => {\n        // document.removeEventListener('mousemove', mouseMoveHandler);\n        // document.removeEventListener('mouseup', mouseUpHandler);\n        const ele = this.contentContainer;\n        ele.style.cursor = 'grab';\n        ele.style.removeProperty('user-select');\n        ele.style.scrollSnapType = 'x mandatory';\n        document.removeEventListener('mousemove', this.mouseMoveHandler);\n        document.removeEventListener('mouseup', this.mouseUpHandler);        \n    }\n\n    onClickArticle = (e) => {\n        const { hasMoved } = this.state;\n        const { url } = e.target.closest('.article-card').dataset;\n        console.log('onClickArticle', { url, hasMoved });\n        if (!hasMoved) {\n            window.location = url;\n        }\n    }        \n\n    componentDidMount() {\n        this.loadAll();\n        this.getWidth();\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.updateTimer);\n    }\n\n    componentWillReceiveProps(nextProps) {       \n    }\n\n    render() {\n        const {\n            height,\n            newArticle,\n            viewerWidth,\n            windowWidth,\n        } = this.state;\n        const { articleStore, appState } = this.props.stores;\n        const { artlistLive } = articleStore;\n\n        return (<>            \n            <div \n                class='overflow-auto d-flex flex-row flex-nowrap no-scrollbar align-items-center'\n                style={`\n                    scroll-snap-type: x mandatory;\n                    cursor: grab;\n                `}\n                onMouseDown={this.mouseDownHandler}\n                ref={c => this.contentContainer = c}\n            >\n                {artlistLive.map(art => {\n                    const dateDiff = util.dateDiff(art.published, new Date());\n                    const inFuture = dateDiff.seconds < 0;\n                    const inThePast = dateDiff.seconds > 0;\n                    const isToday = dateDiff.hours <= 6 && !inFuture;\n                    const isThisWeek = dateDiff.days < 7;\n                    const isThisYear = dateDiff.years >= 0 && dateDiff.months <= 6;\n                    const isLast24Hours = dateDiff.hours <= 24 && !inFuture; \n                    return (<>\n                        <div\n                            class='col-6 col-md-4 col-lg-3 col-xl-2 d-flex flex-column postion-relative article-card'\n                            style={`\n                                display: block;\n                                width: 200px;\n                                scroll-snap-align: start;\n                                flex-wrap: wrap;\n                                border-right: 1px solid #ddd;\n                            `}\n                            data-url={art.url}\n                            onClick={this.onClickArticle}\n                        >\n                            <div class='d-block-inline text-truncate w-100'>\n                                {art.title}\n                            </div>\n                            <small>\n                                {isLast24Hours ? <>\n                                    {util.formatDistance(art.published, new Date(), { locale: 'no-NB' })} ago<br />\n                                </> : <>\n                                    {isThisYear ? <>\n                                        {isToday ? util.formatDate(art.published, {\n                                            locale: 'nb',\n                                            hour: '2-digit',\n                                            minute: '2-digit',\n                                        }, true) : util.formatDate(art.published, {\n                                            locale: 'nb',\n                                            hour: '2-digit',\n                                            minute: '2-digit',\n                                            day: 'numeric',\n                                            month: 'short',\n                                        }, true)}\n                                    </> : <>\n                                        {util.formatDate(art.published, {\n                                            locale: 'nb',\n                                            hour: '2-digit',\n                                            minute: '2-digit',\n                                            day: 'numeric',\n                                            month: 'short',\n                                            year: 'numeric',\n                                        }, true)}\n                                    </>}\n                                </>} <span class='ml-1 font-weight-light'>{art.category}</span>\n                            \n                            </small>\n                        </div>\n                    </>);\n                })}\n            </div>\n        </>);\n    }\n}\n\nexport default Live;\n","/**\n * marked v4.3.0 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    hooks: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n      const top = this.lexer.state.top;\n      this.lexer.state.top = true;\n      const tokens = this.lexer.blockTokens(text);\n      this.lexer.state.top = top;\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens,\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n              itemContents += '\\n' + nextLine.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.search(/[^ ]/) >= 4) { // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n\n              itemContents += '\\n' + nextLine;\n            }\n\n            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLine.slice(indent);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (i = 0; i < l; i++) {\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = { ...block };\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = {\n  ...block.normal,\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n};\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = {\n  ...block.normal,\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n};\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = { ...inline };\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = {\n  ...inline.normal,\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n};\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = {\n  ...inline.normal,\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = {\n  ...inline.gfm,\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n};\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\nclass Hooks {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  static passThroughHooks = new Set([\n    'preprocess',\n    'postprocess'\n  ]);\n\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown) {\n    return markdown;\n  }\n\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html) {\n    return html;\n  }\n}\n\nfunction onError(silent, async, callback) {\n  return (e) => {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n    if (silent) {\n      const msg = '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n      if (async) {\n        return Promise.resolve(msg);\n      }\n      if (callback) {\n        callback(null, msg);\n        return;\n      }\n      return msg;\n    }\n\n    if (async) {\n      return Promise.reject(e);\n    }\n    if (callback) {\n      callback(e);\n      return;\n    }\n    throw e;\n  };\n}\n\nfunction parseMarkdown(lexer, parser) {\n  return (src, opt, callback) => {\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    const origOpt = { ...opt };\n    opt = { ...marked.defaults, ...origOpt };\n    const throwError = onError(opt.silent, opt.async, callback);\n\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      return throwError(new Error('marked(): input parameter is undefined or null'));\n    }\n    if (typeof src !== 'string') {\n      return throwError(new Error('marked(): input parameter is of type '\n        + Object.prototype.toString.call(src) + ', string expected'));\n    }\n\n    checkSanitizeDeprecation(opt);\n\n    if (opt.hooks) {\n      opt.hooks.options = opt;\n    }\n\n    if (callback) {\n      const highlight = opt.highlight;\n      let tokens;\n\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        tokens = lexer(src, opt);\n      } catch (e) {\n        return throwError(e);\n      }\n\n      const done = function(err) {\n        let out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n            out = parser(tokens, opt);\n            if (opt.hooks) {\n              out = opt.hooks.postprocess(out);\n            }\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n\n        return err\n          ? throwError(err)\n          : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n\n      if (!tokens.length) return done();\n\n      let pending = 0;\n      marked.walkTokens(tokens, function(token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(() => {\n            highlight(token.text, token.lang, function(err, code) {\n              if (err) {\n                return done(err);\n              }\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    if (opt.async) {\n      return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n        .then(src => lexer(src, opt))\n        .then(tokens => opt.walkTokens ? Promise.all(marked.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n        .then(tokens => parser(tokens, opt))\n        .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n        .catch(throwError);\n    }\n\n    try {\n      if (opt.hooks) {\n        src = opt.hooks.preprocess(src);\n      }\n      const tokens = lexer(src, opt);\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n      let html = parser(tokens, opt);\n      if (opt.hooks) {\n        html = opt.hooks.postprocess(html);\n      }\n      return html;\n    } catch (e) {\n      return throwError(e);\n    }\n  };\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  return parseMarkdown(Lexer.lex, Parser.parse)(src, opt, callback);\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  marked.defaults = { ...marked.defaults, ...opt };\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n\n  args.forEach((pack) => {\n    // copy options to new object\n    const opts = { ...pack };\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async || false;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse Hooks extensions --== //\n    if (pack.hooks) {\n      const hooks = marked.defaults.hooks || new Hooks();\n      for (const prop in pack.hooks) {\n        const prevHook = hooks[prop];\n        if (Hooks.passThroughHooks.has(prop)) {\n          hooks[prop] = (arg) => {\n            if (marked.defaults.async) {\n              return Promise.resolve(pack.hooks[prop].call(hooks, arg)).then(ret => {\n                return prevHook.call(hooks, ret);\n              });\n            }\n\n            const ret = pack.hooks[prop].call(hooks, arg);\n            return prevHook.call(hooks, ret);\n          };\n        } else {\n          hooks[prop] = (...args) => {\n            let ret = pack.hooks[prop].apply(hooks, args);\n            if (ret === false) {\n              ret = prevHook.apply(hooks, args);\n            }\n            return ret;\n          };\n        }\n      }\n      opts.hooks = hooks;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = parseMarkdown(Lexer.lexInline, Parser.parseInline);\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.Hooks = Hooks;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Hooks, Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","\nconst EMPTY_OBJ = {};\n\n// deeply convert an XML DOM to VDOM\nexport default function toVdom(node, visitor, h, options) {\n\twalk.visitor = visitor;\n\twalk.h = h;\n\twalk.options = options || EMPTY_OBJ;\n\treturn walk(node);\n}\n\nfunction walk(n, index, arr) {\n\tif (n.nodeType===3) {\n\t\tlet text = 'textContent' in n ? n.textContent : n.nodeValue || '';\n\n\t\tif (walk.options.trim!==false) {\n\t\t\tlet isFirstOrLast = index===0 || index===arr.length-1;\n\n\t\t\t// trim strings but don't entirely collapse whitespace\n\t\t\tif (text.match(/^[\\s\\n]+$/g) && walk.options.trim!=='all') {\n\t\t\t\ttext = ' ';\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttext = text.replace(/(^[\\s\\n]+|[\\s\\n]+$)/g, walk.options.trim==='all' || isFirstOrLast ? '' : ' ');\n\t\t\t}\n\t\t\t// skip leading/trailing whitespace\n\t\t\t// if (!text || text===' ' && arr.length>1 && (index===0 || index===arr.length-1)) return null;\n\t\t\tif ((!text || text===' ') && arr.length>1 && isFirstOrLast) return null;\n\t\t\t// if (!text && arr.length>1 && (index===0 || index===arr.length-1)) return null;\n\t\t\t// if (!text || text===' ') return null;\n\t\t}\n\t\treturn text;\n\t}\n\tif (n.nodeType!==1) return null;\n\tlet nodeName = String(n.nodeName).toLowerCase();\n\n\t// Do not allow script tags unless explicitly specified\n\tif (nodeName==='script' && !walk.options.allowScripts) return null;\n\n\tlet out = walk.h(\n\t\tnodeName,\n\t\tgetProps(n.attributes),\n\t\twalkChildren(n.childNodes)\n\t);\n\tif (walk.visitor) walk.visitor(out);\n\treturn out;\n}\n\nfunction getProps(attrs) {\n\tlet len = attrs && attrs.length;\n\tif (!len) return null;\n\tlet props = {};\n\tfor (let i=0; i<len; i++) {\n\t\tlet { name, value } = attrs[i];\n\t\tif (name.substring(0,2)==='on' && walk.options.allowEvents){\n\t\t\tvalue  = new Function(value); // eslint-disable-line no-new-func\n\t\t}\n\t\tprops[name] = value;\n\t}\n\treturn props;\n}\n\nfunction walkChildren(children) {\n\tlet c = children && Array.prototype.map.call(children, walk).filter(exists);\n\treturn c && c.length ? c : null;\n}\n\nlet exists = x => x;\n","import parseMarkup from './parse-markup';\nimport toVdom from './to-vdom';\n\nconst EMPTY_OBJ = {};\n\n/** Convert markup into a virtual DOM.\n*\t@param {String} markup\t\tHTML or XML markup (indicate via `type`)\n*\t@param {String} [type=xml]\tA type to use when parsing `markup`. Either `xml` or `html`.\n*\t@param {Function} reviver\tThe JSX/hyperscript reviver (`h` function) to use. For example, Preact's `h` or `ReactDOM.createElement`.\n*\t@param {Object} [map]\t\tOptional map of custom element names to Components or variant element names.\n */\nexport default function markupToVdom(markup, type, reviver, map, options) {\n\tlet dom = parseMarkup(markup, type);\n\n\tif (dom && dom.error) {\n\t\tthrow new Error(dom.error);\n\t}\n\n\tlet body = dom && dom.body || dom;\n\tvisitor.map = map || EMPTY_OBJ;\n\tlet vdom = body && toVdom(body, visitor, reviver, options);\n\tvisitor.map = null;\n\n\n\treturn vdom && vdom.props && vdom.props.children || null;\n}\n\nfunction toCamelCase(name) {\n\treturn name.replace(/-(.)/g, (match, letter) =>letter.toUpperCase());\n}\n\nfunction visitor(node) {\n\tlet name = (node.type || '').toLowerCase(),\n\t\tmap = visitor.map;\n\n\t// eslint-disable-next-line no-prototype-builtins\n\tif (map && map.hasOwnProperty(name)){\n\t\tnode.type = map[name];\n\t\tnode.props = Object.keys(node.props || {}).reduce((attrs,attrName)=>{\n\t\t\tattrs[toCamelCase(attrName)] = node.props[attrName];\n\t\t\treturn attrs;\n\t\t},{});\n\t} else {\n\t\tnode.type =  name.replace(/[^a-z0-9-]/i,'');\n\t}\n\n}\n","let parserDoc;\n\n/** Parse markup into a DOM using the given mimetype.\n *\t@param {String} markup\n */\nexport default function parseMarkup(markup, type) {\n\tlet doc,\n\t\tmime = type==='html' ? 'text/html' : 'application/xml',\n\t\tparserError, wrappedMarkup, tag;\n\n\t// wrap with an element so we can find it after parsing, and to support multiple root nodes\n\tif (type==='html') {\n\t\ttag = 'body';\n\t\twrappedMarkup = '<!DOCTYPE html>\\n<html><body>'+markup+'</body></html>';\n\t}\n\telse {\n\t\ttag = 'xml';\n\t\twrappedMarkup = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<xml>'+markup+'</xml>';\n\t}\n\n\t// if available (browser support varies), using DOMPaser in HTML mode is much faster, safer and cleaner than injecting HTML into an iframe.\n\ttry {\n\t\tdoc = new DOMParser().parseFromString(wrappedMarkup, mime);\n\t} catch (err) {\n\t\tparserError = err;\n\t}\n\n\t// fall back to using an iframe to parse HTML (not applicable for XML, since DOMParser() for XML works in IE9+):\n\tif (!doc && type==='html') {\n\t\tdoc = parserDoc || (parserDoc = buildParserFrame());\n\t\tdoc.open();\n\t\tdoc.write(wrappedMarkup);\n\t\tdoc.close();\n\t}\n\n\tif (!doc) return;\n\n\t// retrieve our wrapper node\n\tlet out = doc.getElementsByTagName(tag)[0],\n\t\tfc = out.firstChild;\n\n\tif (markup && !fc) {\n\t\tout.error = 'Document parse failed.';\n\t}\n\n\t// pluck out parser errors\n\tif (fc && String(fc.nodeName).toLowerCase()==='parsererror') {\n\t\t// remove post/preamble to get just the error message as text\n\t\tfc.removeChild(fc.firstChild);\n\t\tfc.removeChild(fc.lastChild);\n\t\tout.error = (fc.textContent || fc.nodeValue || parserError || 'Unknown error');\n\t\t// remove the error from the DOM leaving things nice and tidy\n\t\tout.removeChild(fc);\n\t}\n\n\treturn out;\n}\n\n/** A shared frame is used for the fallback HTML parser, built on-demand. */\nfunction buildParserFrame() {\n\tif (document.implementation && document.implementation.createHTMLDocument) {\n\t\treturn document.implementation.createHTMLDocument('');\n\t}\n\tlet frame = document.createElement('iframe');\n\tframe.style.cssText = 'position:absolute; left:0; top:-999em; width:1px; height:1px; overflow:hidden;';\n\tframe.setAttribute('sandbox', 'allow-forms');\n\tdocument.body.appendChild(frame);\n\treturn frame.contentWindow.document;\n}\n","import { h as defaultReviver, Component } from 'preact';\nimport markupToVdom from './markup-to-vdom';\n\nlet customReviver;\n\nexport default class Markup extends Component {\n\tstatic setReviver(h) {\n\t\tcustomReviver = h;\n\t}\n\n\tshouldComponentUpdate({ wrap, type, markup }) {\n\t\tlet p = this.props;\n\t\treturn wrap!==p.wrap || type!==p.type || markup!==p.markup;\n\t}\n\n\tsetComponents(components) {\n\t\tthis.map = {};\n\t\tif (components) {\n\t\t\tfor (let i in components) {\n\t\t\t\t// eslint-disable-next-line no-prototype-builtins\n\t\t\t\tif (components.hasOwnProperty(i)) {\n\t\t\t\t\tlet name = i.replace(/([A-Z]+)([A-Z][a-z0-9])|([a-z0-9]+)([A-Z])/g, '$1$3-$2$4').toLowerCase();\n\t\t\t\t\tthis.map[name] = components[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\trender({ wrap=true, type, markup, components, reviver, onError, 'allow-scripts':allowScripts, 'allow-events':allowEvents, trim, ...props }) {\n\t\tlet h = reviver || this.reviver || this.constructor.prototype.reviver || customReviver || defaultReviver,\n\t\t\tvdom;\n\n\t\tthis.setComponents(components);\n\n\t\tlet options = {\n\t\t\tallowScripts,\n\t\t\tallowEvents,\n\t\t\ttrim\n\t\t};\n\n\t\ttry {\n\t\t\tvdom = markupToVdom(markup, type, h, this.map, options);\n\t\t} catch (error) {\n\t\t\tif (onError) {\n\t\t\t\tonError({ error });\n\t\t\t}\n\t\t\telse if (typeof console!=='undefined' && console.error) {\n\t\t\t\tconsole.error(`preact-markup: ${error}`);\n\t\t\t}\n\t\t}\n\n\t\tif (wrap===false) return vdom || null;\n\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tlet c = props.hasOwnProperty('className') ? 'className' : 'class',\n\t\t\tcl = props[c];\n\t\tif (!cl) props[c] = 'markup';\n\t\telse if (cl.splice) cl.splice(0, 0, 'markup');\n\t\telse if (typeof cl==='string') props[c] += ' markup';\n\t\telse if (typeof cl==='object') cl.markup = true;\n\n\t\treturn h('div', props, vdom || null);\n\t}\n}\n","const preact = require('preact');\nconst Markup = require('preact-markup').default;\nconst { marked } = require('marked');\n\nmodule.exports = Markdown;\n\nfunction Markdown(props, opts) {\n  opts = opts || {};\n  const h = opts.h || preact.h;\n  let markdown;\n  if (typeof props === 'string') {\n    markdown = props;\n    props = {};\n  } else if (props && typeof props.markdown === 'string') {\n    markdown = props.markdown;\n  } else {\n    throw new Error('Invalid arguments. Markdown requires either a `<String>` or object: `{markdown: <String>}`');\n  }\n\n  const markupOpts = props.markupOpts || opts.markupOpts || {};\n  const markedOpts = props.markedOpts || opts.markedOpts || props.markdownOpts || opts.markdownOpts || {};\n  if (props.markdownOpts || opts.markdownOpts) console.warn('DEPRECATED: `.markdownOpts` Use `.markedOpts`');\n\n  return h(Markup, Object.assign({\n    markup: marked(markdown, markedOpts),\n    trim: false,\n    type: 'html',\n  }, markupOpts));\n}\n"],"sourceRoot":""}