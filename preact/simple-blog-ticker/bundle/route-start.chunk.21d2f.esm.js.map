{"version":3,"sources":["webpack:///./routes/start.js","webpack:///./components/live/index.js","webpack:///../node_modules/marked/lib/marked.esm.js","webpack:///../node_modules/preact-markup/src/to-vdom.js","webpack:///../node_modules/preact-markup/src/markup-to-vdom.js","webpack:///../node_modules/preact-markup/src/parse-markup.js","webpack:///../node_modules/preact-markup/src/index.js","webpack:///../node_modules/preact-markdown/index.js"],"names":["Start","observer","_class","Component","constructor","props","super","_defineProperty","showMenu","this","state","setState","view","mainContainer","scrollIntoView","behavior","block","inline","appState","stores","page","showWebcam","mainView","setSubView","setMainView","raceDate","timeLeft","countdownto","Date","getFullYear","difference","d","Math","floor","h","m","s","calculateTimeLeft","timerComponents","Object","keys","forEach","interval","length","isDay","isSec","push","class","raceTime","clearTimeout","updateTimer","setTimeout","tickTimer","RELOAD_INTERVAL_IN_SEC","sessionid","getTime","componentDidMount","loadAll","componentWillReceiveProps","nextProps","artid","componentWillUnmount","render","tickerTitle","tickerTitleUrl","Fragment","style","href","native","util","formatDate","Live","_extends","_this","async","categoryTicker","articleStore","isAdmin","isExpert","loadArtlist","loadUnpublished","undefined","limit","category","key","_this$contentContaine","viewerWidth","contentContainer","offsetWidth","windowWidth","window","innerWidth","e","ele","cursor","userSelect","removeProperty","left","scrollLeft","top","scrollTop","x","clientX","y","clientY","hasMoved","document","addEventListener","mouseMoveHandler","mouseUpHandler","dx","dy","scrollSnapType","removeEventListener","url","target","closest","dataset","console","log","location","height","maxHeight","getWidth","artlistLive","onMouseDown","mouseDownHandler","ref","c","map","art","dateDiff","published","inFuture","seconds","isToday","hours","isThisYear","years","months","isLast24Hours","onClick","onClickArticle","title","formatDistance","locale","hour","minute","day","month","year","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","hooks","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","escape","html","encode","escapeTest","test","replace","escapeReplace","getEscapeReplacement","escapeTestNoEncode","escapeReplaceNoEncode","unescape","unescapeTest","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","edit","regex","opt","source","obj","name","val","caret","getRegex","RegExp","cleanUrl","base","prot","decodeURIComponent","nonWordAndColonTest","indexOf","originIndependentUrl","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","splitCells","tableRow","count","cells","match","offset","str","escaped","curr","split","i","trim","shift","pop","splice","invert","l","suffLen","currChar","slice","repeatString","pattern","result","outputLink","cap","link","raw","lexer","text","inLink","token","type","tokens","inlineTokens","ch","out","charCodeAt","random","toString","parseMarkdown","parser","src","callback","origOpt","_objectSpread","throwError","message","msg","Promise","resolve","reject","onError","marked","defaults","Error","prototype","call","warn","checkSanitizeDeprecation","options","preprocess","done","err","postprocess","pending","lang","code","then","all","catch","Lexer","lex","Parser","parse","escapeReplacements","noopTest","exec","Tokenizer","space","rules","newline","codeBlockStyle","fences","matchIndentToCode","indentToCode","node","matchIndentInNode","indentInNode","join","indentCodeCompensation","_escapes","heading","trimmed","depth","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","t","repeat","trimLeft","search","nextBulletRegex","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","spacers","filter","hasMultipleLineBreaks","some","pre","def","tag","table","item","header","align","rows","j","k","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","b","level","findClosingBracket","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","create","inlineQueue","static","next","lastToken","cutSrc","lastParagraphClipped","leading","tabs","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","error","keepPrevChar","includes","lastIndexOf","startInline","Renderer","infostring","quote","slugger","slug","body","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","value","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","hasOwnProperty","dryrun","textRenderer","parseInline","l2","l3","cell","itemBody","ret","renderers","unshift","Hooks","markdown","Set","setOptions","use","args","childTokens","pack","opts","ext","prevRenderer","apply","prop","prevTokenizer","prevHook","passThroughHooks","has","arg","values","concat","lexInline","r","nodeType","o","textContent","nodeValue","a","p","nodeName","allowScripts","u","allowEvents","Function","attributes","childNodes","Array","visitor","reduce","toUpperCase","arguments","__proto__","setReviver","shouldComponentUpdate","wrap","markup","setComponents","components","v","reviver","f","w","C","g","DOMParser","parseFromString","implementation","createHTMLDocument","createElement","cssText","setAttribute","appendChild","contentWindow","open","write","close","getElementsByTagName","firstChild","removeChild","lastChild","children","preact","require","Markup","default","module","exports","markupOpts","markedOpts","markdownOpts"],"mappings":"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","file":"route-start.chunk.21d2f.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport Live from '../components/live/';\n\nfunction scrollTo(element, top = 0, left = 0) {\n    // element.scrollTop = to;\n    element.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start',\n        inline: 'start',\n    });\n    // element.scrollTo({\n    //     top,\n    //     left,\n    //     behavior: 'smooth'\n    // });\n}\n\nconst  RELOAD_INTERVAL_IN_SEC = 1;\n\nfunction getDateParts({ showDateOnly, showSeconds, showTimezone, showClockOnly }) {\n    const now = new Date();\n    const mm = now.getMonth() + 1;\n    const dd = now.getDate();\n    const yy = now.getFullYear();\n    const hh = now.getHours();\n    const mi = now.getMinutes();\n    const ss = now.getSeconds();\n    const tzo = -now.getTimezoneOffset();\n    const dif = tzo >= 0 ? '+' : '-';\n\n    let ret = `${pad(yy)}-${pad(mm)}-${pad(dd)}`;\n    if (showClockOnly) {\n        ret = '';\n    }\n    if (!showDateOnly) {\n        ret += ` ${pad(hh)}:${pad(mi)}`;\n        if (showSeconds) {\n            ret += `:${pad(ss)}`;\n        }\n        if (showTimezone) {\n            ret += `${dif}${tzo}`;\n        }\n    }\n    return ret;\n}\n\nfunction calculateTimeLeft({ countdownto }) {\n    let year = new Date().getFullYear();\n    const difference = +new Date(`${countdownto}`) - +new Date();\n    let timeLeft = {};\n\n    if (difference > 0) {\n        timeLeft = {\n            d: Math.floor(difference / (1000 * 60 * 60 * 24)),\n            h: Math.floor((difference / (1000 * 60 * 60)) % 24),\n            m: Math.floor((difference / 1000 / 60) % 60),\n            s: Math.floor((difference / 1000) % 60),\n        };\n    } else {\n        timeLeft = {\n            d: 0,\n            h: 0,\n            m: 0,\n            s: 0,\n        };\n    }\n    return timeLeft;\n}\n\n@observer\nclass Start extends Component {\n  \tconstructor(props) {\n        super(props);\n        this.state = {\n            sessionid: new Date().getTime(),\n        };\n        this.mainContainer = null;\n        this.updateTimer = null;\n    }\n\n    toggleMenu = () => {\n        const { showMenu } = this.state;\n        this.setState({\n            showMenu: !showMenu,\n        });\n    }\n\n    scrollToMainContainer = (view) => {\n        // console.log('scrollToMainContainer', view, this.mainContainer);\n        if (this.mainContainer) {\n            scrollTo(this.mainContainer);\n        }\n    }\n\n    loadAll = (props = this.props) => {\n        const { appState } = this.props.stores;\n        // appState.setMainViewCallback(this.scrollToMainContainer);\n        const { page, artid, showWebcam = true } = props;\n        // if (showWebcam && showWebcam !== 'false') {\n        //     appState.setMainView(page || 'webcam');\n        // } else {\n        const { mainView } = appState;\n        if (mainView !== page) {\n            appState.setSubView(null);\n        }\n        appState.setMainView(page || 'webtv');\n        // }\n    }\n\n    tickTimer = () => {\n        const { raceDate } = this.props;\n        if (!raceDate) {\n            return null;\n        }        \n        const timeLeft = calculateTimeLeft({ countdownto: raceDate });\n        // const timeNow = getDateParts({ showDateOnly, showSeconds, showTimezone, showClockOnly });\n        \n        const timerComponents = [];\n        Object.keys(timeLeft).forEach((interval) => {\n            if (timerComponents.length === 0 && !timeLeft[interval]) {\n                return;\n            }\n            const isDay = interval === 'd';\n            const isSec = interval === 's';\n            timerComponents.push(<span>\n                {timeLeft[interval]}<span class={`text-muted font-weight-lighter ${isDay ? 'mr-1' : ''}`}>{isDay ? 'd' : (isSec ? '' : ':')}</span>{\" \"}\n            </span>);\n        });\n        \n        this.setState({\n            raceTime: timeLeft,\n            timerComponents,\n        });\n\n        clearTimeout(this.updateTimer);\n        this.updateTimer = setTimeout(() => {\n            this.tickTimer();\n        }, RELOAD_INTERVAL_IN_SEC * 1000);\n    }\n\n    componentDidMount() {\n        this.loadAll();\n        this.tickTimer();\n\n        // document.addEventListener('visibilitychange', () => {\n        //     if (document.visibilityState === 'visible') {\n        //         // page is visible\n        //     } else {\n        //         // page is hidden\n        //     }\n        // });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.page !== this.props.page || nextProps.artid !== this.props.artid) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.updateTimer);\n    }\n\n    render() {\n        const {\n            tickerTitle,\n            tickerTitleUrl,\n            raceDate,\n            showCountDown,\n        } = this.props;\n        const { raceTime, timerComponents } = this.state;\n        const { appState } = this.props.stores;\n        const { mainView, subView, currentEmail, isAdmin, isExpert, isDevelopment, path } = appState;\n        return (<>\n            <div \n                class='d-flex flex-row flex-nowrap position-relative w-100'\n                style={`\n                    height: 60px;\n                    font-size: 15px;\n                `}\n            >\n                {tickerTitle && <div \n                    class='position-absolute d-flex justify-content-center align-items-center border-right'\n                    style={`\n                        top: 0; \n                        left: 0; \n                        width: 60px; \n                        height: 60px;\n                        box-shadow: 2px 0 5px -2px #888;\n                        font-size: 18px;\n                    `}\n                >\n                    {tickerTitleUrl ? <>\n                        <a href={tickerTitleUrl} class='text-dark' native>\n                            {tickerTitle}                    \n                        </a>\n                    </> : <>\n                        {tickerTitle}                \n                    </>}\n                </div>}\n\n                {raceDate && <div \n                    class='position-absolute d-flex flex-column justify-content-center align-items-center border-left'\n                    style={`\n                        top: 0; \n                        right: 0; \n                        width: 140px; \n                        height: 60px;\n                        box-shadow: 0px 2px 5px -2px #888;\n                    `}\n                >\n                    <div>\n                        {util.formatDate(raceDate)}\n                    </div>\n                    <small>\n                        <div class='d-flex flex-row flex-nowrap'>\n                            {timerComponents}\n                        </div>\n                    </small>\n                </div>}\n\n                <div \n                    class='w-100 overflow-hidden d-flex flex-row flex-nowrap' \n                    style='padding-left: 60px; padding-right: 140px;'\n                >\n                    <Live stores={this.props.stores} {...this.props} />\n                </div>\n                 \n            </div>\n        </>);\n    }\n}\n\nexport default Start;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\n\nfunction scrollTo(element, top = 0, left = 0) {\n    // element.scrollTop = to;\n    element.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start',\n        inline: 'start',\n    });\n}\n\nconst RELOAD_INTERVAL_IN_SEC = 60;\nconst TOTAL_ARTICLES = 30;\n\n@observer\nclass Live extends Component {\n  \tconstructor(props) {\n        super(props);\n        this.state = {\n            height: 150,\n            maxHeight: 150,\n            left: 0,\n            top: 0,\n            x: 0,\n            y: 0,\n        };\n        this.updateTimer;\n        this.contentContainer = null;\n    }\n\n    loadAll = async (props = this.props) => {\n        const { categoryTicker } = props;\n        const { articleStore, appState } = this.props.stores;\n        const { isAdmin, isExpert } = appState;\n        await articleStore.loadArtlist({\n            isAdmin,\n            isExpert,\n            loadUnpublished: undefined,\n            limit: TOTAL_ARTICLES,\n            category: categoryTicker,\n            key: 'live',\n        });\n\n        clearTimeout(this.updateTimer);\n        this.updateTimer = setTimeout(() => {\n            this.loadAll();\n        }, RELOAD_INTERVAL_IN_SEC * 1000);        \n    }\n\n    getWidth = () => {\n        this.setState({\n            // viewerWidth: this.contentContainer?.offsetWidth > 1024 ? 1024 : this.contentContainer?.offsetWidth,\n            viewerWidth: this.contentContainer?.offsetWidth,\n            windowWidth: window.innerWidth,\n        });\n        // window.addEventListener('resize', (e) => {\n        //     this.getWidth();\n        // });\n    }\n\n    mouseDownHandler = (e) => {\n        const ele = this.contentContainer;\n        ele.style.cursor = 'grabbing';\n        ele.style.userSelect = 'none';\n        ele.style.removeProperty('scroll-snap-type');\n        this.setState({\n            // The current scroll\n            left: ele.scrollLeft,\n            top: ele.scrollTop,\n            // Get the current mouse position\n            x: e.clientX,\n            y: e.clientY,\n            hasMoved: false,\n        });\n        // console.log('mouseDownHandler', e.clientX, e.clientY);\n        document.addEventListener('mousemove', this.mouseMoveHandler);\n        document.addEventListener('mouseup', this.mouseUpHandler);\n    }\n\n    mouseMoveHandler = (e) => {\n        const { left, top, x, y } = this.state;\n        // How far the mouse has been moved\n        const dx = e.clientX - x;\n        const dy = e.clientY - y;\n    \n        \n        // Scroll the element\n        this.setState({\n            left: left - dx,\n            top: top - dy,\n            x: e.clientX,\n            y: e.clientY,\n            hasMoved: true,\n        }, () => {            \n            // Scroll the element\n            const ele = this.contentContainer;\n            ele.scrollTop = top - dy;\n            ele.scrollLeft = left - dx;\n        });\n    }\n\n    mouseUpHandler = () => {\n        // document.removeEventListener('mousemove', mouseMoveHandler);\n        // document.removeEventListener('mouseup', mouseUpHandler);\n        const ele = this.contentContainer;\n        ele.style.cursor = 'grab';\n        ele.style.removeProperty('user-select');\n        ele.style.scrollSnapType = 'x mandatory';\n        document.removeEventListener('mousemove', this.mouseMoveHandler);\n        document.removeEventListener('mouseup', this.mouseUpHandler);        \n    }\n\n    onClickArticle = (e) => {\n        const { hasMoved } = this.state;\n        const { url } = e.target.closest('.article-card').dataset;\n        console.log('onClickArticle', { url, hasMoved });\n        if (!hasMoved) {\n            window.location = url;\n        }\n    }        \n\n    componentDidMount() {\n        this.loadAll();\n        this.getWidth();\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.updateTimer);\n    }\n\n    componentWillReceiveProps(nextProps) {       \n    }\n\n    render() {\n        const {\n            height,\n            newArticle,\n            viewerWidth,\n            windowWidth,\n        } = this.state;\n        const { articleStore, appState } = this.props.stores;\n        const { artlistLive } = articleStore;\n\n        return (<>            \n            <div \n                class='overflow-auto d-flex flex-row flex-nowrap no-scrollbar align-items-center'\n                style={`\n                    scroll-snap-type: x mandatory;\n                    cursor: grab;\n                `}\n                onMouseDown={this.mouseDownHandler}\n                ref={c => this.contentContainer = c}\n            >\n                {artlistLive.map(art => {\n                    const dateDiff = util.dateDiff(art.published, new Date());\n                    const inFuture = dateDiff.seconds < 0;\n                    const inThePast = dateDiff.seconds > 0;\n                    const isToday = dateDiff.hours <= 6 && !inFuture;\n                    const isThisWeek = dateDiff.days < 7;\n                    const isThisYear = dateDiff.years >= 0 && dateDiff.months <= 6;\n                    const isLast24Hours = dateDiff.hours <= 24 && !inFuture; \n                    return (<>\n                        <div\n                            class='col-6 col-md-4 col-lg-3 col-xl-2 d-flex flex-column postion-relative article-card'\n                            style={`\n                                display: block;\n                                width: 200px;\n                                scroll-snap-align: start;\n                                flex-wrap: wrap;\n                                border-right: 1px solid #ddd;\n                            `}\n                            data-url={art.url}\n                            onClick={this.onClickArticle}\n                        >\n                            <div class='d-block-inline text-truncate w-100'>\n                                {art.title}\n                            </div>\n                            <small>\n                                {isLast24Hours ? <>\n                                    {util.formatDistance(art.published, new Date(), { locale: 'no-NB' })} ago<br />\n                                </> : <>\n                                    {isThisYear ? <>\n                                        {isToday ? util.formatDate(art.published, {\n                                            locale: 'nb',\n                                            hour: '2-digit',\n                                            minute: '2-digit',\n                                        }, true) : util.formatDate(art.published, {\n                                            locale: 'nb',\n                                            hour: '2-digit',\n                                            minute: '2-digit',\n                                            day: 'numeric',\n                                            month: 'short',\n                                        }, true)}\n                                    </> : <>\n                                        {util.formatDate(art.published, {\n                                            locale: 'nb',\n                                            hour: '2-digit',\n                                            minute: '2-digit',\n                                            day: 'numeric',\n                                            month: 'short',\n                                            year: 'numeric',\n                                        }, true)}\n                                    </>}\n                                </>} <span class='ml-1 font-weight-light'>{art.category}</span>\n                            \n                            </small>\n                        </div>\n                    </>);\n                })}\n            </div>\n        </>);\n    }\n}\n\nexport default Live;\n","/**\n * marked v4.3.0 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    hooks: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n      const top = this.lexer.state.top;\n      this.lexer.state.top = true;\n      const tokens = this.lexer.blockTokens(text);\n      this.lexer.state.top = top;\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens,\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n              itemContents += '\\n' + nextLine.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.search(/[^ ]/) >= 4) { // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n\n              itemContents += '\\n' + nextLine;\n            }\n\n            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLine.slice(indent);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (i = 0; i < l; i++) {\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = { ...block };\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = {\n  ...block.normal,\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n};\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = {\n  ...block.normal,\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n};\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = { ...inline };\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = {\n  ...inline.normal,\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n};\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = {\n  ...inline.normal,\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = {\n  ...inline.gfm,\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n};\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\nclass Hooks {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  static passThroughHooks = new Set([\n    'preprocess',\n    'postprocess'\n  ]);\n\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown) {\n    return markdown;\n  }\n\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html) {\n    return html;\n  }\n}\n\nfunction onError(silent, async, callback) {\n  return (e) => {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n    if (silent) {\n      const msg = '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n      if (async) {\n        return Promise.resolve(msg);\n      }\n      if (callback) {\n        callback(null, msg);\n        return;\n      }\n      return msg;\n    }\n\n    if (async) {\n      return Promise.reject(e);\n    }\n    if (callback) {\n      callback(e);\n      return;\n    }\n    throw e;\n  };\n}\n\nfunction parseMarkdown(lexer, parser) {\n  return (src, opt, callback) => {\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    const origOpt = { ...opt };\n    opt = { ...marked.defaults, ...origOpt };\n    const throwError = onError(opt.silent, opt.async, callback);\n\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      return throwError(new Error('marked(): input parameter is undefined or null'));\n    }\n    if (typeof src !== 'string') {\n      return throwError(new Error('marked(): input parameter is of type '\n        + Object.prototype.toString.call(src) + ', string expected'));\n    }\n\n    checkSanitizeDeprecation(opt);\n\n    if (opt.hooks) {\n      opt.hooks.options = opt;\n    }\n\n    if (callback) {\n      const highlight = opt.highlight;\n      let tokens;\n\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        tokens = lexer(src, opt);\n      } catch (e) {\n        return throwError(e);\n      }\n\n      const done = function(err) {\n        let out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n            out = parser(tokens, opt);\n            if (opt.hooks) {\n              out = opt.hooks.postprocess(out);\n            }\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n\n        return err\n          ? throwError(err)\n          : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n\n      if (!tokens.length) return done();\n\n      let pending = 0;\n      marked.walkTokens(tokens, function(token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(() => {\n            highlight(token.text, token.lang, function(err, code) {\n              if (err) {\n                return done(err);\n              }\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    if (opt.async) {\n      return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n        .then(src => lexer(src, opt))\n        .then(tokens => opt.walkTokens ? Promise.all(marked.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n        .then(tokens => parser(tokens, opt))\n        .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n        .catch(throwError);\n    }\n\n    try {\n      if (opt.hooks) {\n        src = opt.hooks.preprocess(src);\n      }\n      const tokens = lexer(src, opt);\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n      let html = parser(tokens, opt);\n      if (opt.hooks) {\n        html = opt.hooks.postprocess(html);\n      }\n      return html;\n    } catch (e) {\n      return throwError(e);\n    }\n  };\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  return parseMarkdown(Lexer.lex, Parser.parse)(src, opt, callback);\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  marked.defaults = { ...marked.defaults, ...opt };\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n\n  args.forEach((pack) => {\n    // copy options to new object\n    const opts = { ...pack };\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async || false;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse Hooks extensions --== //\n    if (pack.hooks) {\n      const hooks = marked.defaults.hooks || new Hooks();\n      for (const prop in pack.hooks) {\n        const prevHook = hooks[prop];\n        if (Hooks.passThroughHooks.has(prop)) {\n          hooks[prop] = (arg) => {\n            if (marked.defaults.async) {\n              return Promise.resolve(pack.hooks[prop].call(hooks, arg)).then(ret => {\n                return prevHook.call(hooks, ret);\n              });\n            }\n\n            const ret = pack.hooks[prop].call(hooks, arg);\n            return prevHook.call(hooks, ret);\n          };\n        } else {\n          hooks[prop] = (...args) => {\n            let ret = pack.hooks[prop].apply(hooks, args);\n            if (ret === false) {\n              ret = prevHook.apply(hooks, args);\n            }\n            return ret;\n          };\n        }\n      }\n      opts.hooks = hooks;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = parseMarkdown(Lexer.lexInline, Parser.parseInline);\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.Hooks = Hooks;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Hooks, Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","\nconst EMPTY_OBJ = {};\n\n// deeply convert an XML DOM to VDOM\nexport default function toVdom(node, visitor, h, options) {\n\twalk.visitor = visitor;\n\twalk.h = h;\n\twalk.options = options || EMPTY_OBJ;\n\treturn walk(node);\n}\n\nfunction walk(n, index, arr) {\n\tif (n.nodeType===3) {\n\t\tlet text = 'textContent' in n ? n.textContent : n.nodeValue || '';\n\n\t\tif (walk.options.trim!==false) {\n\t\t\tlet isFirstOrLast = index===0 || index===arr.length-1;\n\n\t\t\t// trim strings but don't entirely collapse whitespace\n\t\t\tif (text.match(/^[\\s\\n]+$/g) && walk.options.trim!=='all') {\n\t\t\t\ttext = ' ';\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttext = text.replace(/(^[\\s\\n]+|[\\s\\n]+$)/g, walk.options.trim==='all' || isFirstOrLast ? '' : ' ');\n\t\t\t}\n\t\t\t// skip leading/trailing whitespace\n\t\t\t// if (!text || text===' ' && arr.length>1 && (index===0 || index===arr.length-1)) return null;\n\t\t\tif ((!text || text===' ') && arr.length>1 && isFirstOrLast) return null;\n\t\t\t// if (!text && arr.length>1 && (index===0 || index===arr.length-1)) return null;\n\t\t\t// if (!text || text===' ') return null;\n\t\t}\n\t\treturn text;\n\t}\n\tif (n.nodeType!==1) return null;\n\tlet nodeName = String(n.nodeName).toLowerCase();\n\n\t// Do not allow script tags unless explicitly specified\n\tif (nodeName==='script' && !walk.options.allowScripts) return null;\n\n\tlet out = walk.h(\n\t\tnodeName,\n\t\tgetProps(n.attributes),\n\t\twalkChildren(n.childNodes)\n\t);\n\tif (walk.visitor) walk.visitor(out);\n\treturn out;\n}\n\nfunction getProps(attrs) {\n\tlet len = attrs && attrs.length;\n\tif (!len) return null;\n\tlet props = {};\n\tfor (let i=0; i<len; i++) {\n\t\tlet { name, value } = attrs[i];\n\t\tif (name.substring(0,2)==='on' && walk.options.allowEvents){\n\t\t\tvalue  = new Function(value); // eslint-disable-line no-new-func\n\t\t}\n\t\tprops[name] = value;\n\t}\n\treturn props;\n}\n\nfunction walkChildren(children) {\n\tlet c = children && Array.prototype.map.call(children, walk).filter(exists);\n\treturn c && c.length ? c : null;\n}\n\nlet exists = x => x;\n","import parseMarkup from './parse-markup';\nimport toVdom from './to-vdom';\n\nconst EMPTY_OBJ = {};\n\n/** Convert markup into a virtual DOM.\n*\t@param {String} markup\t\tHTML or XML markup (indicate via `type`)\n*\t@param {String} [type=xml]\tA type to use when parsing `markup`. Either `xml` or `html`.\n*\t@param {Function} reviver\tThe JSX/hyperscript reviver (`h` function) to use. For example, Preact's `h` or `ReactDOM.createElement`.\n*\t@param {Object} [map]\t\tOptional map of custom element names to Components or variant element names.\n */\nexport default function markupToVdom(markup, type, reviver, map, options) {\n\tlet dom = parseMarkup(markup, type);\n\n\tif (dom && dom.error) {\n\t\tthrow new Error(dom.error);\n\t}\n\n\tlet body = dom && dom.body || dom;\n\tvisitor.map = map || EMPTY_OBJ;\n\tlet vdom = body && toVdom(body, visitor, reviver, options);\n\tvisitor.map = null;\n\n\n\treturn vdom && vdom.props && vdom.props.children || null;\n}\n\nfunction toCamelCase(name) {\n\treturn name.replace(/-(.)/g, (match, letter) =>letter.toUpperCase());\n}\n\nfunction visitor(node) {\n\tlet name = (node.type || '').toLowerCase(),\n\t\tmap = visitor.map;\n\n\t// eslint-disable-next-line no-prototype-builtins\n\tif (map && map.hasOwnProperty(name)){\n\t\tnode.type = map[name];\n\t\tnode.props = Object.keys(node.props || {}).reduce((attrs,attrName)=>{\n\t\t\tattrs[toCamelCase(attrName)] = node.props[attrName];\n\t\t\treturn attrs;\n\t\t},{});\n\t} else {\n\t\tnode.type =  name.replace(/[^a-z0-9-]/i,'');\n\t}\n\n}\n","let parserDoc;\n\n/** Parse markup into a DOM using the given mimetype.\n *\t@param {String} markup\n */\nexport default function parseMarkup(markup, type) {\n\tlet doc,\n\t\tmime = type==='html' ? 'text/html' : 'application/xml',\n\t\tparserError, wrappedMarkup, tag;\n\n\t// wrap with an element so we can find it after parsing, and to support multiple root nodes\n\tif (type==='html') {\n\t\ttag = 'body';\n\t\twrappedMarkup = '<!DOCTYPE html>\\n<html><body>'+markup+'</body></html>';\n\t}\n\telse {\n\t\ttag = 'xml';\n\t\twrappedMarkup = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<xml>'+markup+'</xml>';\n\t}\n\n\t// if available (browser support varies), using DOMPaser in HTML mode is much faster, safer and cleaner than injecting HTML into an iframe.\n\ttry {\n\t\tdoc = new DOMParser().parseFromString(wrappedMarkup, mime);\n\t} catch (err) {\n\t\tparserError = err;\n\t}\n\n\t// fall back to using an iframe to parse HTML (not applicable for XML, since DOMParser() for XML works in IE9+):\n\tif (!doc && type==='html') {\n\t\tdoc = parserDoc || (parserDoc = buildParserFrame());\n\t\tdoc.open();\n\t\tdoc.write(wrappedMarkup);\n\t\tdoc.close();\n\t}\n\n\tif (!doc) return;\n\n\t// retrieve our wrapper node\n\tlet out = doc.getElementsByTagName(tag)[0],\n\t\tfc = out.firstChild;\n\n\tif (markup && !fc) {\n\t\tout.error = 'Document parse failed.';\n\t}\n\n\t// pluck out parser errors\n\tif (fc && String(fc.nodeName).toLowerCase()==='parsererror') {\n\t\t// remove post/preamble to get just the error message as text\n\t\tfc.removeChild(fc.firstChild);\n\t\tfc.removeChild(fc.lastChild);\n\t\tout.error = (fc.textContent || fc.nodeValue || parserError || 'Unknown error');\n\t\t// remove the error from the DOM leaving things nice and tidy\n\t\tout.removeChild(fc);\n\t}\n\n\treturn out;\n}\n\n/** A shared frame is used for the fallback HTML parser, built on-demand. */\nfunction buildParserFrame() {\n\tif (document.implementation && document.implementation.createHTMLDocument) {\n\t\treturn document.implementation.createHTMLDocument('');\n\t}\n\tlet frame = document.createElement('iframe');\n\tframe.style.cssText = 'position:absolute; left:0; top:-999em; width:1px; height:1px; overflow:hidden;';\n\tframe.setAttribute('sandbox', 'allow-forms');\n\tdocument.body.appendChild(frame);\n\treturn frame.contentWindow.document;\n}\n","import { h as defaultReviver, Component } from 'preact';\nimport markupToVdom from './markup-to-vdom';\n\nlet customReviver;\n\nexport default class Markup extends Component {\n\tstatic setReviver(h) {\n\t\tcustomReviver = h;\n\t}\n\n\tshouldComponentUpdate({ wrap, type, markup }) {\n\t\tlet p = this.props;\n\t\treturn wrap!==p.wrap || type!==p.type || markup!==p.markup;\n\t}\n\n\tsetComponents(components) {\n\t\tthis.map = {};\n\t\tif (components) {\n\t\t\tfor (let i in components) {\n\t\t\t\t// eslint-disable-next-line no-prototype-builtins\n\t\t\t\tif (components.hasOwnProperty(i)) {\n\t\t\t\t\tlet name = i.replace(/([A-Z]+)([A-Z][a-z0-9])|([a-z0-9]+)([A-Z])/g, '$1$3-$2$4').toLowerCase();\n\t\t\t\t\tthis.map[name] = components[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\trender({ wrap=true, type, markup, components, reviver, onError, 'allow-scripts':allowScripts, 'allow-events':allowEvents, trim, ...props }) {\n\t\tlet h = reviver || this.reviver || this.constructor.prototype.reviver || customReviver || defaultReviver,\n\t\t\tvdom;\n\n\t\tthis.setComponents(components);\n\n\t\tlet options = {\n\t\t\tallowScripts,\n\t\t\tallowEvents,\n\t\t\ttrim\n\t\t};\n\n\t\ttry {\n\t\t\tvdom = markupToVdom(markup, type, h, this.map, options);\n\t\t} catch (error) {\n\t\t\tif (onError) {\n\t\t\t\tonError({ error });\n\t\t\t}\n\t\t\telse if (typeof console!=='undefined' && console.error) {\n\t\t\t\tconsole.error(`preact-markup: ${error}`);\n\t\t\t}\n\t\t}\n\n\t\tif (wrap===false) return vdom || null;\n\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tlet c = props.hasOwnProperty('className') ? 'className' : 'class',\n\t\t\tcl = props[c];\n\t\tif (!cl) props[c] = 'markup';\n\t\telse if (cl.splice) cl.splice(0, 0, 'markup');\n\t\telse if (typeof cl==='string') props[c] += ' markup';\n\t\telse if (typeof cl==='object') cl.markup = true;\n\n\t\treturn h('div', props, vdom || null);\n\t}\n}\n","const preact = require('preact');\nconst Markup = require('preact-markup').default;\nconst { marked } = require('marked');\n\nmodule.exports = Markdown;\n\nfunction Markdown(props, opts) {\n  opts = opts || {};\n  const h = opts.h || preact.h;\n  let markdown;\n  if (typeof props === 'string') {\n    markdown = props;\n    props = {};\n  } else if (props && typeof props.markdown === 'string') {\n    markdown = props.markdown;\n  } else {\n    throw new Error('Invalid arguments. Markdown requires either a `<String>` or object: `{markdown: <String>}`');\n  }\n\n  const markupOpts = props.markupOpts || opts.markupOpts || {};\n  const markedOpts = props.markedOpts || opts.markedOpts || props.markdownOpts || opts.markdownOpts || {};\n  if (props.markdownOpts || opts.markdownOpts) console.warn('DEPRECATED: `.markdownOpts` Use `.markedOpts`');\n\n  return h(Markup, Object.assign({\n    markup: marked(markdown, markedOpts),\n    trim: false,\n    type: 'html',\n  }, markupOpts));\n}\n"],"sourceRoot":""}